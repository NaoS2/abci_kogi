空行をプリントする	print()
空行を出力する	print()
改行する	print()
文字列をプリントする	print(value)
変数をプリントする	print(value)
二つの文字列を順にプリントする	print(value, value2)
2つの数値を順にプリントする	print(value, value2)
三つの文字列を順にプリントする	print(value, value2, value3)
三つの値を順にプリントする	print(value, value2, value3)
＜オプション＞改行の代わりに文字列を用いる	end = s
＜オプション＞改行しない	end = ''
＜オプション＞改行なし	end = ''
改行なしに文字列をプリントする	print(value, end='')
改行せずに文字列をプリントする	print(value, end='')
改行なしに変数をプリントする	print(value, end='')
文字列の出力を改行なしに行う	print(value, end='')
改行なしに二つの文字列をプリントする	print(value, value2, end='')
改行なしに2つのリストをプリントする	print(value, value2, end='')
改行せず二つの実行結果をプリントする	print(value, value2, end='')
リストを展開してプリントする	print(*aList)
タプルを展開してプリントする	print(*aTuple)
タプルの要素だけプリントする	print(*aTuple)
＜オプション＞セパレータをカンマにする	sep = ','
＜オプション＞カンマをセパレータで使う	sep = ','
＜オプション＞カンマをセパレータで用いる	sep = ','
＜オプション＞カンマを区切りで使う	sep = ','
＜オプション＞セパレータをタブにする	sep = '\t'
＜オプション＞分割記号をタブにする	sep = '\t'
＜オプション＞タブをセパレータで使う	sep = '\t'
＜オプション＞タブを区切りで用いる	sep = '\t'
＜オプション＞タブを分割記号で使用する	sep = '\t'
＜オプション＞セパレータをコロンにする	sep = ':'
＜オプション＞コロンをセパレータで使う	sep = ':'
＜オプション＞コロンを区切りで使用する	sep = ':'
＜オプション＞セパレータをスラッシュにする	sep = '/'
＜オプション＞スラッシュをセパレータで使う	sep = '/'
＜オプション＞セパレータを改行にする	sep = '\n'
＜オプション＞改行をセパレータで使う	sep = '\n'
＜オプション＞改行を区切りで使う	sep = '\n'
＜オプション＞セパレータを文字列にする	sep = s
＜オプション＞文字列をセパレータで使う	sep = s
＜オプション＞セパレータを使わない	sep = ''
二つの文字列をカンマで区切ってプリントする	print(value, value2, sep=',')
カンマで区切って二つの文字列をプリントする	print(value, value2, sep=',')
２つの文字列をカンマで区切ってプリントする	print(value, value2, sep=',')
二つの文字列をタブで区切ってプリントする	print(value, value2, sep='\t')
二つの文字列をタブで区切って表示する	print(value, value2, sep='\t')
2つの文字列をタブで区切ってプリントする	print(value, value2, sep='\t')
二つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
2つの実行結果をコロンで区切ってプリントする	print(value, value2, sep=':')
二つの文字列をスラッシュで区切ってプリントする	print(value, value2, sep='/')
二つのリストをスラッシュで区切って表示する	print(value, value2, sep='/')
二つの文字列を改行で区切ってプリントする	print(value, value2, sep='\n')
二つのリストを改行で区切って出力する	print(value, value2, sep='\n')
改行で区切って二つの変数をプリントする	print(value, value2, sep='\n')
二つの文字列を文字列で区切ってプリントする	print(value, value2, sep=s)
二つの変数を文字列で区切ってプリントする	print(value, value2, sep=s)
２つのリストを文字列で区切って出力する	print(value, value2, sep=s)
ハローワールドとプリントする	print('Hello World')
こんにちは世界とプリントする	print('Hello World')
試しに何か動かす	print('Hello World')
最初のプログラムを書く	print('Hello World')
文字列を黒色でプリントする	print(f'\033[30m{value}\033[0m')
黒色で文字列をプリントする	print(f'\033[30m{value}\033[0m')
文字列を赤色でプリントする	print(f'\033[31m{value}\033[0m')
値を赤色で出力する	print(f'\033[31m{value}\033[0m')
文字列を緑色でプリントする	print(f'\033[32m{value}\033[0m')
文字列を黄色でプリントする	print(f'\033[33m{value}\033[0m')
変数を黄色でプリントする	print(f'\033[33m{value}\033[0m')
文字列を青色でプリントする	print(f'\033[34m{value}\033[0m')
実行結果を青色でプリントする	print(f'\033[34m{value}\033[0m')
文字列をマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
リストをマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
文字列をマゼンタで出力する	print(f'\033[35m{value}\033[0m')
文字列をシアンでプリントする	print(f'\033[36m{value}\033[0m')
文字列をシアンで表示する	print(f'\033[36m{value}\033[0m')
リストを水色でプリントする	print(f'\033[36m{value}\033[0m')
文字列を白色でプリントする	print(f'\033[37m{value}\033[0m')
変数を白色で表示する	print(f'\033[37m{value}\033[0m')
文字列を太字でプリントする	print(f'\033[1m{value}\033[0m')
文字列を太文字でプリントする	print(f'\033[1m{value}\033[0m')
値を太字でプリントする	print(f'\033[1m{value}\033[0m')
文字列を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
変数を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
変数を下線付きで表示する	print(f'\033[4m{value}\033[0m')
文字列を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
変数を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
文字列を黒色にする	f'\033[30m{value}\033[0m'
リストを黒色にする	f'\033[30m{value}\033[0m'
文字列を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
文字列を赤色でプリントできる文字列にする	f'\033[31m{value}\033[0m'
変数を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
文字列を赤色にする	f'\033[31m{value}\033[0m'
数値を赤色にする	f'\033[31m{value}\033[0m'
文字列を緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
リストを緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
文字列を緑色にする	f'\033[32m{value}\033[0m'
文字列を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
変数を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
文字列を黄色にする	f'\033[33m{value}\033[0m'
文字列を黄色化する	f'\033[33m{value}\033[0m'
文字列を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
数値を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
文字列を青色にする	f'\033[34m{value}\033[0m'
文字列をマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
実行結果をマゼンタで表示できる文字列にする	f'\033[35m{value}\033[0m'
実行結果をマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
文字列をマゼンタにする	f'\033[35m{value}\033[0m'
リストをマゼンタにする	f'\033[35m{value}\033[0m'
文字列をシアンでプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
実行結果をシアンでプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
文字列をシアンでプリントできる文字列にする	f'\033[36m{value}\033[0m'
文字列をシアンにする	f'\033[36m{value}\033[0m'
変数を水色にする	f'\033[36m{value}\033[0m'
文字列を白色でプリントできる文字列に変換する	f'\033[37m{value}\033[0m'
文字列を白色にする	f'\033[37m{value}\033[0m'
文字列を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
実行結果を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
文字列を太字にする	f'\033[1m{value}\033[0m'
実行結果を太字にする	f'\033[1m{value}\033[0m'
文字列を下線付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
文字列を下線付きにする	f'\033[4m{value}\033[0m'
xの小数点以下'1'桁までをプリントする	print(':.1f'.format(x))
xの小数点以下'2'桁までをプリントする	print(':.2f'.format(x))
xの小数点以下'3'桁までをプリントする	print(':.3f'.format(x))
xの小数点以下'4'桁までをプリントする	print(':.4f'.format(x))
xの小数点以下'5'桁までをプリントする	print(':.5f'.format(x))
xの小数点以下'5'桁まで出力する	print(':.5f'.format(x))
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
xの小数点以下'3'桁までの文字列に変換する	':.3f'.format(x)
xの小数点以下'4'桁までの文字列に変換する	':.4f'.format(x)
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
標準入力から1行読み取る	input()
ユーザから入力される	input()
ユーザの入力を整数として受け取る	int(input())
ユーザが整数を入力する	int(input())
ユーザから入力される	int(input())
変数を定義する	x = n
変数をスワップする	x, y = y, x
リストの要素をスワップする	aList[i], aList[j] = aList[j], aList[i]
二つの変数を同じ値にする	x = y = n
二つの変数をそれぞれ定義する	x, y = i, j
x,y,zをそれぞれn,n2,n3とする	x, y, z = n, n2, n3
x,y,zにそれぞれn,n2,n3を代入する	x, y, z = n, n2, n3
x,y,zをそれぞれn,n2,n3に設定する	x, y, z = n, n2, n3
xの絶対値	abs(x)
xの絶対値を算出する	abs(x)
xを論理値に変換する	bool(x)
xが真か調べる	bool(x)
x,yの複素数	complex(x, y)
xとyの商と余りを同時に求める	divmod(x, y)
xとyの商と余りを同時に算出する	divmod(x, y)
xを浮動小数点数に変換する	float(x)
xを整数に変換する	int(x)
xを印字できる文字列にする	ascii(x)
xの印字可能な文字列	ascii(x)
xのハッシュ値	hash(x)
二変数の最大値	max(x, y)
二変数の最小値	min(x, y)
２変数の最小値を計算する	min(x, y)
二変数の最も小さい値	min(x, y)
三変数の最大値	max(x, y, z)
3数の最大値	max(x, y, z)
三変数の最小値	min(x, y, z)
3変数の最小値	min(x, y, z)
３数の最小値	min(x, y, z)
xを浮動小数点数型に変換する	float(x)
xを整数に変換する	int(x)
xを文字列に変換する	str(x)
nかつn2	n and n2
nまたはn2	n or n2
nではない	not n
nを否定する	not n
真	True
偽	False
nullに等しい値	None
nullに等しい識別子	None
未定値	None
コレクションを使う	import collections
空の両端キュー	collections.deque()
空の双方向キュー	collections.deque()
空のキューを作成する	collections.deque()
イテラブルから両端キューを作る	collections.deque(iterable)
両端キューをシーケンスから作る	collections.deque(iterable)
リストから両端キューを作成する	collections.deque(iterable)
イテラブルを両端キューに変換する	collections.deque(iterable)
リストを双方向キューに変換する	collections.deque(iterable)
両端キューの長さを制限する	collections.deque(maxlen=n)
最大長を指定して、両端キュー	collections.deque(maxlen=n)
最大長を指定して、双方向キュー	collections.deque(maxlen=n)
最大長のある双方向キュー	collections.deque(maxlen=n)
最大長nの両端キューを作る	collections.deque(maxlen=n)
イテラブルの長さを制限する	collections.deque(iterable, maxlen=n)
列の長さを制限する	collections.deque(iterable, maxlen=n)
最大長nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
最大長nの双方向キューをリストから準備する	collections.deque(iterable, maxlen=n)
イテラブルから最大長nの両端キューを作る	collections.deque(iterable, maxlen=n)
両端キューの先頭に要素を追加する	deq.appendleft(element)
要素を両端キューの左に追加する	deq.appendleft(element)
双方向キューの先頭に要素を追加する	deq.appendleft(element)
両端キューに要素をエンキューする	deq.appendleft(element)
値をスタックにエンキューする	deq.appendleft(element)
キューに要素をエンキューする	deq.appendleft(element)
両端キューの末尾に要素を追加する	deq.append(element)
要素を両端キューの末尾に追加する	deq.append(element)
両端キューに要素をプッシュする	deq.append(element)
両端キューに値を積む	deq.append(element)
要素をキューに積む	deq.append(element)
両端キューの先頭にイテラブルの各要素を追加する	deq.extendleft(iterable)
両端キューの左にイテラブルの各要素を追加する	deq.extendleft(iterable)
両端キューの先頭にリストの各要素を追加する	deq.extendleft(iterable)
両端キューの末尾にイテラブルの各要素を追加する	deq.extend(iterable)
イテラブルの各値を両端キューの末尾に追加する	deq.extend(iterable)
イテラブルの値を両端キューの末尾につけ加える	deq.extend(iterable)
両端キューのn番目に要素を挿入する	deq.insert(n, element)
双方向キューのn番目に要素を挿入する	deq.insert(n, element)
データを両端キューのn番目に挿入する	deq.insert(n, element)
両端キューの先頭から要素を取り除く	deq.popleft()
両端キューの先頭から値を取り除く	deq.popleft()
両端キューをデキューする	deq.popleft()
双方向キューをdequeue	deq.popleft()
両端キューの末尾から要素を取り除く	deq.pop()
要素を双方向キューの最後から取り除く	deq.pop()
双方向キューの末尾からデータを取り除く	deq.pop()
両端キューをポップする	deq.pop()
両端キューから最初の要素を取り除く	deq.remove(element)
双方向キューから最初の要素を取り除く	deq.remove(element)
両端キューから数値を取り除く	deq.remove(element)
両端キューを空にする	deq.clear()
双方向キューを空にする	deq.clear()
キューを空にする	deq.clear()
両端キューの要素を右にn個分ローテンションする	deq.rotate(n)
双方向キューの順序を右にn個分ローテンションする	deq.rotate(n)
両端キューの順序を右にn個分輪番で回す	deq.rotate(n)
両端キューの要素を左にn個分ローテンションする	deq.rotate(-n)
両端キューの順序を左にn個分回転させる	deq.rotate(-n)
両端キューの最大長	deq.maxlen
キューの最大長	deq.maxlen
双方向キューの最大長	deq.maxlen
両端キューの大きさ	len(deq)
キューの大きさを求める	len(deq)
双方向キューの要素数	len(deq)
両端キューが空か調べる	len(deq) == 0
双方向キューが空か調べる	len(deq) == 0
双方向キューは空	len(deq) == 0
両端キューが空でないか調べる	len(deq) != 0
双方向キューが空でないかどうか調べる	len(deq) != 0
両端キューの中に要素が含まれてるか調べる	element in deq
両端キューの中に要素がある	element in deq
キューの中に文字列が含まれてるか調べる	element in deq
両端キューの先頭	deq[0]
双方向キューの左側	deq[0]
両端キューの末尾	deq[-1]
キューの末尾	deq[-1]
スタックの最後の要素を使う	deq[-1]
両端キューのn番目	deq[n]
スタックのn番目	deq[n]
両端キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
双方向キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
双方向キューから指定された範囲を取り出す	collections.deque(itertools.islice(deq, start, end))
両端キューのstart〜endの部分要素	collections.deque(itertools.islice(deq, start, end))
両端キューのstart〜endの要素	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart〜endの要素	collections.deque(itertools.islice(deq, start, end))
両端キューのstart番目からend番目の部分要素	collections.deque(itertools.islice(deq, start, end))
キューのstart番目からendの部分要素	collections.deque(itertools.islice(deq, start, end))
キューのstart番目からend番目までの要素	collections.deque(itertools.islice(deq, start, end))
両端キュー中の要素のインデックス	deq.index(element)
両端キュー中の値の位置	deq.index(element)
両端キュー中の値のインデックスを使う	deq.index(element)
両端キュー中の要素の数を数える	deq.count(element)
キュー中の要素の数をカウントする	deq.count(element)
双方向キュー中の要素の出現数を数える	deq.count(element)
両端キューの要素をインプレースに反転する	deq.reverse()
両端キューの値を反転する	deq.reverse()
逆順の両端キュー	reversed(deq)
両端キューをリストに変換する	list(deq)
デックをリストに変換する	list(deq)
キューをリストにする	list(deq)
両端キューをタプルに変換する	tuple(deq)
空のカウンタ	collections.Counter()
カウンタ	collections.Counter()
イテラブルからカウンタを作る	collections.Counter(iterable)
カウンタをイテラブルから作る	collections.Counter(iterable)
リストから新しいカウンタを作る	collections.Counter(iterable)
イテラブルをカウンタに変換する	collections.Counter(iterable)
辞書からカウンタを作る	collections.Counter(aDict)
辞書をカウンタに変換する	collections.Counter(aDict)
タプルをカウンタにする	collections.Counter(aDict)
カウンタのそれぞれの項目を、そのカウントだけ列挙する	aCounter.elements()
カウンタのそれぞれの項目を回数だけ列挙する	aCounter.elements()
カウンタのそれぞれの要素を、その回数だけ列挙する	aCounter.elements()
カウンタを高頻出方から列挙する	aCounter.most_common()
カウンタを高頻出な方から列挙する	aCounter.most_common()
カウンタを多い順に列挙する	aCounter.most_common()
カウンタを多い順番にリストとして得る	aCounter.most_common()
カウンタを少ない順に列挙する	aCounter.most_common()[::-1]
少ない順にカウンタをリストとして得る	aCounter.most_common()[::-1]
少ない順にカウンタを列挙する	aCounter.most_common()[::-1]
カウンタを低頻出方から列挙する	aCounter.most_common()[::-1]
カウンタの上位を列挙する	aCounter.most_common(k)
カウンタの上位をリストとして得る	aCounter.most_common(k)
カウンタのKトップを列挙する	aCounter.most_common(k)
カウンタの下位を列挙する	aCounter.most_common()[:-n-1:-1]
カウンタのボトムをリストとして得る	aCounter.most_common()[:-n-1:-1]
カウンタの最頻出な項目	aCounter.most_common()[0]
カウンタの最も頻出な要素	aCounter.most_common()[0]
カウンタから最頻出な項目の件数	aCounter.most_common()[1]
カウンタから最頻出な文字列の件数を求める	aCounter.most_common()[1]
カウンタをイテラブルで更新する	aCounter.update(iterable)
カウンタを列で更新する	aCounter.update(iterable)
リストでカウンタを更新する	aCounter.update(iterable)
イテラブルをカウントして、カウンタを更新する	aCounter.update(iterable)
シーケンスをカウントしてカウンタを更新する	aCounter.update(iterable)
カウンタを辞書で更新する	aCounter.update(aDict)
タプルを用いてカウンタを更新する	aCounter.update(aDict)
カウンタからイテラブルをカウントして引く	aCounter.subtract(iterable)
列をカウントしてカウンタから引く	aCounter.subtract(iterable)
カウンタから辞書を引く	aCounter.subtract(aDict)
カウンタの項目を増やす	aCounter[element] += 1
カウンタの要素を一つ増やす	aCounter[element] += 1
カウンタの項目のカウント	aCounter[element]
カウンタの項目の出現回数を見る	aCounter[element]
カウンタの項目の出現回数を使う	aCounter[element]
カウンタの全数	aCounter.total()
カウンタの項目一覧	aCounter.keys()
カウンタの項目を列挙する	aCounter.keys()
カウンタの項目数	len(aCounter)
カウンタをリセットする	aCounter.clear()
カウンタのユニークな項目を列挙する	list(aCounter)
カウンタのユニークな項目をリストとして得る	list(aCounter)
カウンタをリストに変換する	list(aCounter)
カウンタを集合に変換する	set(aCounter)
カウンタを辞書に変換する	dict(aCounter)
カウンタのキーとカウントを列挙する	aCounter.items()
ペアリストpairsからカウンタを作る	collections.Counter(dict(pairs))
カウンタからゼロカウントを取り除く	+aCounter
カウンタからゼロカウントを削除する	+aCounter
カウンタの正の数のみ残す	+aCounter
カウンタ同士で積集合	aCounter & aCounter2
カウンタの積集合	aCounter & aCounter2
カウンタ間で共通部分	aCounter & aCounter2
二つのカウンタの共通する要素	aCounter & aCounter2
二つのカウンタの共通するデータ	aCounter & aCounter2
カウンタ同士で積集合演算する	aCounter & aCounter2
カウンタ同士で共通部分演算する	aCounter & aCounter2
カウンタ同士でユニオン	aCounter | aCounter2
カウンタ同士で∪	aCounter | aCounter2
カウンタのユニオンを算出する	aCounter | aCounter2
二つのカウンタのいずれかに含まれる要素	aCounter | aCounter2
二つのカウンタのいずれかに含まれる値を求める	aCounter | aCounter2
カウンタ同士でユニオン演算する	aCounter | aCounter2
名前付きタプルを定義する	C = collections.namedtuple('クラス名', プロパティ名)
クラスが名前付きタプルか調べる	issubclass(C, tuple)
名前付きタプルをパラメータからインスタンス化する	C._make(パラメータ)
オブジェクトが名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプル型か確認する	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
が名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
名前付きタプルを辞書に変換する	aNamedTupleObject._asdict()
空のチェーンマップ	collections.ChainMap()
空の階層化マップ	collections.ChainMap()
辞書をチェーンマップに変換する	collections.ChainMap(aDict)
タプルを階層化マップに変換する	collections.ChainMap(aDict)
マッピングをチェーンマップに変換する	collections.ChainMap(aDict)
辞書を階層化する	collections.ChainMap(aDict)
マッピングをネスト化する	collections.ChainMap(aDict)
タプルを階層化する	collections.ChainMap(aDict)
二つの辞書をチェーンする	collections.ChainMap(aDict, aDict2)
２つの辞書をチェーンする	collections.ChainMap(aDict, aDict2)
二つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
日付を使う	import datetime
時間を使う	import time
時間を使用する	import time
UNIX時刻を用いる	import time
本日の日付時刻	datetime.datetime.now()
本日の日付時刻を求める	datetime.datetime.now()
year年の日付時刻	datetime.datetime(year=year, month=1, day=1)
year年を日付時刻に変換する	datetime.datetime(year=year, month=1, day=1)
year年day月の日付時刻	datetime.datetime(year=year, month=month, day=1)
year年day月を日付時刻に変換する	datetime.datetime(year=year, month=month, day=1)
year年month月day日の日付時刻	datetime.datetime(year=year, month=month, day=day)
year年month月day日を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day)
year年month月day日hour時の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時minute分の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
datetimeをインスタンス化する	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時刻から日付時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
日付と時間から日付時刻を用意する	datetime.datetime(年, 月, 日, 時, 分, 秒)
エポック秒を日付時刻に変換する	datetime.datetime.fromtimestamp(timestamp)
エポック秒をタイムスタンプに変換する	datetime.datetime.fromtimestamp(timestamp)
ISO書式の文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO書式の文字列をタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO8601形式の文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列をISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からISO書式でタイムスタンプにする	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列をISO書式でタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からformatのパターンで日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
formatパターンの文字列を日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
formatパターンの文字列をタイムスタンプに変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
本日の日付時刻	datetime.datetime.today()
本日の日付時刻を見る	datetime.datetime.today()
本日の日付時刻を使う	datetime.datetime.today()
日付時刻データをエポック秒に変換する	aDatetime.timestamp()
日付時刻データをエポック秒にする	aDatetime.timestamp()
日付時刻データを浮動小数点数に変換する	aDatetime.timestamp()
日付時刻データを数値に変換する	aDatetime.timestamp()
日付時刻データのタイムゾーン	aDatetime.timetz()
日付時刻データの日付	aDatetime.date()
日付時刻データの時刻	aDatetime.time()
日付時刻データの時間	aDatetime.time()
日付時刻データの時刻を使う	aDatetime.time()
year年の日付	datetime.date(year=year, month=1, day=1)
year年を日付に変換する	datetime.date(year=year, month=1, day=1)
year年month月の日付	datetime.date(year=year, month=month, day=1)
year年month月を日付に変換する	datetime.date(year=year, month=month, day=1)
year年month月day日の日付	datetime.date(year=year, month=month, day=day)
year年month月day日を日付に変換する	datetime.date(year=year, month=month, day=day)
本日の日付	datetime.date.today()
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
昨日の日付を使う	datetime.date.today() - datetime.timedelta(days=1)
日付時刻データの年数	aDatetime.year
日付時刻データが何年か知る	aDatetime.year
日付データの年数	aDate.year
日付データが何年か知る	aDate.year
本日の年数	datetime.datetime.today().year
本日が何年か知る	datetime.datetime.today().year
日付時刻データの月数	aDatetime.month
タイムスタンプデータの月数	aDatetime.month
日付時刻データが何月か知る	aDatetime.month
タイムスタンプデータは何月か知る	aDatetime.month
日付データの月数	aDate.month
日付データが何月か知る	aDate.month
本日の月数	datetime.datetime.today().month
本日が何月か知る	datetime.datetime.today().month
日付時刻データの日数	aDatetime.day
タイムスタンプデータの日数	aDatetime.day
日付時刻データが何日か知る	aDatetime.day
日付データの日数	aDate.day
日付データが何日か知る	aDate.day
本日の日数	datetime.datetime.today().day
本日の日を使う	datetime.datetime.today().day
本日が何日か知る	datetime.datetime.today().day
日付時刻データの曜日を整数で使う	aDatetime.weekday()
日付時刻データの曜日を見る	aDatetime.weekday()
日付時刻データが何曜日か知る	aDatetime.weekday()
日付データの曜日を整数で使う	aDate.weekday()
日付データが何曜日か知る	aDate.weekday()
本日の曜日を整数で使う	datetime.datetime.today().weekday()
本日の曜日を使う	datetime.datetime.today().weekday()
本日が何曜日か知る	datetime.datetime.today().weekday()
日付時刻データが月曜日か調べる	aDatetime.weekday() == 0
日付時刻データが月曜日かどうか	aDatetime.weekday() == 0
日付データが月曜日か調べる	aDate.weekday() == 0
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
本日が月曜日か	datetime.datetime.today().weekday() == 0
日付時刻データが火曜日か調べる	aDatetime.weekday() == 1
タイムスタンプデータが火曜日かどうか	aDatetime.weekday() == 1
タイムスタンプデータが火曜日か調べる	aDatetime.weekday() == 1
日付データが火曜日か調べる	aDate.weekday() == 1
日付データが火曜日か	aDate.weekday() == 1
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
本日が火曜日かテストする	datetime.datetime.today().weekday() == 1
現在が火曜日か調べる	datetime.datetime.today().weekday() == 1
日付時刻データが水曜日か調べる	aDatetime.weekday() == 2
日付データが水曜日か調べる	aDate.weekday() == 2
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
本日が水曜日か	datetime.datetime.today().weekday() == 2
日付時刻データが木曜日か調べる	aDatetime.weekday() == 3
日付データが木曜日か調べる	aDate.weekday() == 3
日付データが木曜日	aDate.weekday() == 3
本日が木曜日か調べる	datetime.datetime.today().weekday() == 3
現在が木曜日か調べる	datetime.datetime.today().weekday() == 3
今日が木曜日	datetime.datetime.today().weekday() == 3
日付時刻データが金曜日か調べる	aDatetime.weekday() == 4
日付時刻データが金曜日	aDatetime.weekday() == 4
日付データが金曜日か調べる	aDate.weekday() == 4
日付データが金曜日	aDate.weekday() == 4
本日が金曜日か調べる	datetime.datetime.today().weekday() == 4
今日が金曜日か	datetime.datetime.today().weekday() == 4
本日が金曜日かどうか	datetime.datetime.today().weekday() == 4
日付時刻データが土曜日か調べる	aDatetime.weekday() == 5
日付データが土曜日か調べる	aDate.weekday() == 5
日付データが土曜日かどうか確認する	aDate.weekday() == 5
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
本日が土曜日	datetime.datetime.today().weekday() == 5
日付時刻データが日曜日か調べる	aDatetime.weekday() == 6
日付時刻データが日曜日かどうか	aDatetime.weekday() == 6
日付時刻データが日曜日かテストする	aDatetime.weekday() == 6
日付データが日曜日か調べる	aDate.weekday() == 6
日付データが日曜日かどうか確認する	aDate.weekday() == 6
日付データが日曜日かどうか調べる	aDate.weekday() == 6
本日が日曜日か調べる	datetime.datetime.today().weekday() == 6
今日が日曜日か	datetime.datetime.today().weekday() == 6
日付時刻データをタプルに変換する	aDatetime.timetuple()
日付データをタプルに変換する	aDate.timetuple()
本日をタプルに変換する	datetime.datetime.today().timetuple()
現在をタプルに変換する	datetime.datetime.today().timetuple()
日付時刻データをISO形式の文字列に変換する	aDatetime.isoformat()
日付時刻データをISO形式の文字列にする	aDatetime.isoformat()
日付データをISO形式の文字列に変換する	aDate.isoformat()
日付データをISO書式の文字列に変換する	aDate.isoformat()
本日をISO形式の文字列に変換する	datetime.datetime.today().isoformat()
本日をISO書式の文字列にする	datetime.datetime.today().isoformat()
本日をISO形式の文字列にする	datetime.datetime.today().isoformat()
日付時刻データを文字列でフォーマットして文字列に変換する	"aDatetime.strftime(""%d/%m/%y"")"
タイムスタンプデータを文字列でフォーマットして文字列に変換する	"aDatetime.strftime(""%d/%m/%y"")"
文字列でフォーマットして日付時刻データを文字列に変換する	"aDatetime.strftime(""%d/%m/%y"")"
日付時刻データを文字列でフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
タイムスタンプデータを文字列としてフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
日付データを文字列でフォーマットして文字列に変換する	"aDate.strftime(""%d/%m/%y"")"
日付データを文字列でフォーマットする	"aDate.strftime(""%d/%m/%y"")"
日付データを文字列を使ってフォーマットする	"aDate.strftime(""%d/%m/%y"")"
本日を文字列でフォーマットして文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列でフォーマットして文字列にする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
今日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列としてフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
日付時刻データの時間数	aDatetime.hour
タイムスタンプデータの時間数	aDatetime.hour
日付時刻データが何時か知る	aDatetime.hour
現在の時間数	datetime.date.today().hour
現在の時間	datetime.date.today().hour
現在の時刻	datetime.date.today().hour
現在が何時か知る	datetime.date.today().hour
日付時刻データの分数	aDatetime.minute
日付時刻データが何分か知る	aDatetime.minute
日付時刻データは何分か知る	aDatetime.minute
現在の分数	datetime.date.today().minute
現在の分数を使う	datetime.date.today().minute
現在が何分か知る	datetime.date.today().minute
日付時刻データの秒数	aDatetime.second
日付時刻データが何秒か知る	aDatetime.second
現在の秒数	datetime.date.today().second
現在が何秒か知る	datetime.date.today().second
現在のミリ秒	int(time.time() * 1000)
現在のタイムスタンプ	int(time.time())
日付時刻データををn週間後に進める	aDatetime + datetime.timedelta(weeks=n)
日付時刻データにn週間分、加算する	aDatetime + datetime.timedelta(weeks=n)
日付データををn週間後に進める	aDate + datetime.timedelta(weeks=n)
日付データにn週間分、加算する	aDate + datetime.timedelta(weeks=n)
日付データにn週間を加算する	aDate + datetime.timedelta(weeks=n)
日付時刻データをn週間前に戻す	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分、減算する	aDatetime - datetime.timedelta(weeks=n)
タイムスタンプデータからn週間を減らす	aDatetime - datetime.timedelta(weeks=n)
日付データをn週間前に戻す	aDate - datetime.timedelta(weeks=n)
日付データからn週間分、減算する	aDate - datetime.timedelta(weeks=n)
日付時刻データををn日後に進める	aDatetime + datetime.timedelta(days=n)
日付時刻データにn日分、加算する	aDatetime + datetime.timedelta(days=n)
日付時刻データにn日を加算する	aDatetime + datetime.timedelta(days=n)
タイムスタンプデータにn日分加える	aDatetime + datetime.timedelta(days=n)
日付データををn日後に進める	aDate + datetime.timedelta(days=n)
日付データにn日分、加算する	aDate + datetime.timedelta(days=n)
日付データにn日分加算する	aDate + datetime.timedelta(days=n)
日付データにn日を加算する	aDate + datetime.timedelta(days=n)
日付時刻データをn日前に戻す	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータをn日前に戻す	aDatetime - datetime.timedelta(days=n)
日付時刻データからn日分、減算する	aDatetime - datetime.timedelta(days=n)
日付時刻データからn日分、減らす	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータからn日分、減算する	aDatetime - datetime.timedelta(days=n)
日付データをn日前に戻す	aDate - datetime.timedelta(days=n)
日付データからn日分、減算する	aDate - datetime.timedelta(days=n)
日付時刻データををn時間後に進める	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間分、加算する	aDatetime + datetime.timedelta(hours=n)
日付データををn時間後に進める	aDate + datetime.timedelta(hours=n)
日付データにn時間分、加算する	aDate + datetime.timedelta(hours=n)
日付データにn時間を加算する	aDate + datetime.timedelta(hours=n)
日付時刻データをn時間前に戻す	aDatetime - datetime.timedelta(hours=n)
日付時刻データからn時間分、減算する	aDatetime - datetime.timedelta(hours=n)
タイムスタンプデータからn時間分減算する	aDatetime - datetime.timedelta(hours=n)
日付データをn時間前に戻す	aDate - datetime.timedelta(hours=n)
日付データからn時間分、減算する	aDate - datetime.timedelta(hours=n)
日付データからn時間分減らす	aDate - datetime.timedelta(hours=n)
日付時刻データををn分後に進める	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分分、加算する	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分分、加える	aDatetime + datetime.timedelta(minutes=n)
日付データををn分後に進める	aDate + datetime.timedelta(minutes=n)
日付データにn分分、加算する	aDate + datetime.timedelta(minutes=n)
日付時刻データをn分前に戻す	aDatetime - datetime.timedelta(minutes=n)
日付時刻データからn分、減算する	aDatetime - datetime.timedelta(minutes=n)
タイムスタンプデータからn分、減らす	aDatetime - datetime.timedelta(minutes=n)
日付データをn分前に戻す	aDate - datetime.timedelta(minutes=n)
日付データからn分、減算する	aDate - datetime.timedelta(minutes=n)
日付時刻データををn秒後に進める	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分、加算する	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒を加算する	aDatetime + datetime.timedelta(seconds=n)
日付データををn秒後に進める	aDate + datetime.timedelta(seconds=n)
日付データにn秒分、加算する	aDate + datetime.timedelta(seconds=n)
日付データにn秒分、加える	aDate + datetime.timedelta(seconds=n)
日付時刻データをn秒前に戻す	aDatetime - datetime.timedelta(seconds=n)
日付時刻データからn秒分、減算する	aDatetime - datetime.timedelta(seconds=n)
日付時刻データからn秒を引く	aDatetime - datetime.timedelta(seconds=n)
日付データをn秒前に戻す	aDate - datetime.timedelta(seconds=n)
日付データからn秒分、減算する	aDate - datetime.timedelta(seconds=n)
日付時刻データが日付時刻データより前か調べる	aDatetime < aDatetime2
日付時刻データが日付時刻データより前かどうか調べる	aDatetime < aDatetime2
タイムスタンプデータが日付時刻データより前か	aDatetime < aDatetime2
日付データが日付データより前か調べる	aDate < aDate2
日付データが日付データより前かどうか調べる	aDate < aDate2
日付データが日付データより前かどうか	aDate < aDate2
日付時刻データが日付時刻データより後ろか調べる	aDatetime > aDatetime2
タイムスタンプデータが日付時刻データより後ろ	aDatetime > aDatetime2
日付時刻データは日付時刻データよりあと	aDatetime > aDatetime2
日付データが日付データより後ろか調べる	aDate > aDate2
日付データは日付データよりあと	aDate > aDate2
日付時刻データが日付時刻データと同時か調べる	aDatetime == aDatetime2
日付時刻データが日付時刻データと同時	aDatetime == aDatetime2
タイムスタンプデータが日付時刻データと同時か調べる	aDatetime == aDatetime2
日付データが日付データと同時か調べる	aDate == aDate2
日付データが日付データと同時かどうか	aDate == aDate2
日付データは日付データと同時かどうか調べる	aDate == aDate2
日付時刻データと日付時刻データの時間差	aDatetime - aDatetime2
日付データと日付データの時間差	aDate - aDate2
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差を秒で求める	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()
日付データと日付データの時間差を秒数で計算する	(aDate - aDate2).total_seconds()
日付データと日付データの時間差が何秒か知る	(aDate - aDate2).total_seconds()
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
タイムスタンプデータと日付時刻データの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データとタイムスタンプデータの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()//60
日付データと日付データの時間差が何分か知る	(aDate - aDate2).total_seconds()//60
空の辞書	{}
変数名をキーとして、辞書	dict(name=element)
辞書のキーの値	aDict[key]
マッピングの項目名の値	aDict[key]
辞書の項目名の値	aDict[key]
辞書のキーを列挙する	list(aDict)
マッピングの項目名を列挙する	list(aDict)
マッピングのキーを列挙する	list(aDict)
辞書のキー一覧	list(aDict)
辞書の項目名一覧	list(aDict)
辞書の項目数	len(aDict)
マッピングの項目数	len(aDict)
辞書の項目数を見る	len(aDict)
辞書の全項目をクリアする	aDict.clear()
辞書をクリアする	aDict.clear()
タプルの全値をクリアする	aDict.clear()
辞書をコピーする	aDict.copy()
辞書を複製する	aDict.copy()
マッピングを浅く複製する	aDict.copy()
辞書の浅いコピーを作る	aDict.copy()
辞書のコピーを作る	aDict.copy()
タプルのコピーを作成する	aDict.copy()
辞書からキーの値	aDict.get(key)
辞書から項目名の値	aDict.get(key)
マップから項目名の値	aDict.get(key)
辞書のキーに対応した値	aDict.get(key)
辞書からキーの値をエラーなく得る	aDict.get(key, None)
辞書からキーの値をエラーなく参照する	aDict.get(key, None)
辞書からキーの値か、もしくは要素を得る	aDict.get(key, element)
辞書から項目名の値かもしくは要素を得る	aDict.get(key, element)
マップからキーの値か、もしくは要素を参照する	aDict.get(key, element)
キーが辞書に存在するか調べる	key in aDict
キーがタプルに存在するかどうか	key in aDict
項目名がタプルに存在する	key in aDict
キーが辞書上で定義済みか調べる	key in aDict
辞書上で項目名が定義済みか	key in aDict
キーが辞書に存在するか調べる	key not in aDict
キーがタプルに存在するか調べる	key not in aDict
キーがマッピングに存在するかどうか	key not in aDict
キーが辞書上で未定義か調べる	key not in aDict
項目名がマッピング上で未定義	key not in aDict
キーがマップ上で未定義かどうか確認する	key not in aDict
辞書のキーとその値を列挙する	aDict.items()
マッピングの項目名とその項目を列挙する	aDict.items()
タプルのキーとその項目を列挙する	aDict.items()
辞書のキーとその値をペアとして取り出す	aDict.items()
辞書のキーを列挙する	aDict.keys()
辞書の項目名を列挙する	aDict.keys()
マッピングのキーを列挙する	aDict.keys()
辞書のキーの一覧	aDict.keys()
マッピングの項目名の一覧	aDict.keys()
辞書の項目名の一覧	aDict.keys()
辞書の値を列挙する	aDict.values()
辞書の値の一覧	aDict.values()
マッピングのの一覧	aDict.values()
要素が辞書の値として含まれているか調べる	element in aDict.values()
要素がマップの値として含まれているか調べる	element in aDict.values()
要素がマップの値として含まれているか判定する	element in aDict.values()
要素が辞書の値に含まれていないか調べる	element not in aDict.values()
辞書の値に要素が含まれていないかどうか	element not in aDict.values()
辞書の値に要素は含まれていないか調べる	element not in aDict.values()
辞書のキーを要素に設定する	aDict[key] = element
タプルのキーを要素にする	aDict[key] = element
辞書に要素をキーとして加える	aDict[key] = element
タプルに要素をキーとして加える	aDict[key] = element
マッピングに要素を項目名として加える	aDict[key] = element
キーが辞書に存在しないとき、要素を追加する	aDict.setdefault(key, element)
項目名が辞書に存在しないとき要素を追加する	aDict.setdefault(key, element)
キーがマップにない時要素を追加する	aDict.setdefault(key, element)
辞書に辞書の項目を更新する	aDict.update(aDict2)
マップに辞書の項目を更新する	aDict.update(aDict2)
辞書に別のマッピングの項目を更新する	aDict.update(aDict2)
辞書にキーワード引数で更新する	aDict.update(**kwargs)
辞書にキーワード引数として更新する	aDict.update(**kwargs)
ふたつの辞書を合体する	aDict | aDict2
ふたつのマップを結合する	aDict | aDict2
辞書からキーで指定された項目をポップする	aDict.pop(key)
マップからキーで指定された項目をポップする	aDict.pop(key)
項目名で指定された項目を辞書からポップする	aDict.pop(key)
辞書から最後の項目をポップする	aDict.popitem()
マッピングから最後のエントリを取り出す	aDict.popitem()
タプルから最後の項目をポップする	aDict.popitem()
辞書のキーと値を入れ替える	{v: k for k, v in aDict.items()}
マッピングのキーと値を入れ替える	{v: k for k, v in aDict.items()}
二つのリストから辞書	dict(zip(aList, aList2))
辞書を浅くコピーする	dict(aDict)
タプルを浅くコピーする	dict(aDict)
辞書のコピー	dict(aDict)
マッピングのコピーを作る	dict(aDict)
辞書の内部もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
マッピングの値もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
osモジュールをインポートする	import os
ファイルパスのセパレータ記号	os.sep
ファイルパスの区切り記号	os.sep
現在の作業ディレクトリ	os.getcwd()
ワーキングディレクトリを見る	os.getcwd()
現在の作業ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
filepathにディレクトリを設定する	os.chdir(os.dirname(filepath))
UNIXコマンドtextを実行する	os.system(text)
ファイルのファイル名	os.path.basename(filepath)
ファイルのファイル名を見る	os.path.basename(filepath)
ファイルからファイル名を使う	os.path.basename(filepath)
ファイルから拡張子付きのファイル名を使う	os.path.basename(filepath)
ファイルの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルパスの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を見る	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を取り出す	os.path.splitext(os.path.basename(filepath))[0]
ファイルの拡張子	os.path.splitext(filepath)[1].lstrip('.')
ファイルの拡張子をtextに変更する	os.path.splitext(filepath)[0] + text
ファイルのディレクトリ名	os.path.dirname(filepath)
ファイルのディレクトリ名を使う	os.path.dirname(filepath)
ファイルからディレクトリ名を使う	os.path.dirname(filepath)
ファイルからフォルダ名を見る	os.path.dirname(filepath)
ファイルの絶対パス	os.path.abspath(filepath)
ファイルパスの絶対ファイルパスを見る	os.path.abspath(filepath)
ファイルを絶対パスに変換する	os.path.abspath(filepath)
ファイルをディレクトリ名とファイル名に分割する	os.path.split(filepath)
ファイルをベース名と拡張子に分割する	os.path.splitext(filepath)
ファイルとfilenameを結合する	os.path.join(filepath, filename)
ファイルが存在するか調べる	os.path.exists(filepath)
ファイルが存在するかどうか	os.path.exists(filepath)
ファイルが存在する	os.path.exists(filepath)
ファイルが存在しないか調べる	not os.path.exists(filepath)
ファイルが存在しない	not os.path.exists(filepath)
ファイルが存在しないか確認する	not os.path.exists(filepath)
ファイルのファイルサイズ	os.path.get_size(filepath)
スクリプトファイルの絶対パス	os.path.abspath(__file__)
スクリプトファイルの絶対パスを使う	os.path.abspath(__file__)
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのディレクトリ名を使う	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのフォルダ名を使う	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルと同じディレクトリのファイルのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
スクリプトファイルと同じフォルダのファイルのパスを求める	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
ファイルをオープンする]	open(filepath)
ファイルからの入力ストリームを使う	open(filepath)
ファイルからの読み込みストリームを使う	open(filepath)
ファイルパスからの入力ストリームを使う	open(filepath)
ファイルからストリームを読み込み、fileとする	file = open(filepath)
ファイルパスからストリームを読み込みfileとする	file = open(filepath)
ファイルからストリームをオープンして]、fileとする	file = open(filepath)
ファイルを読み込みモードでオープンする]	open(filepath, mode='r')
ファイルを読み込み用に開く]	open(filepath, mode='r')
ファイルを読み込みできるようにオープンする]	open(filepath, mode='r')
ファイルを読み込みできるように開く]	open(filepath, mode='r')
読み込みできるようにファイルをオープンする]	open(filepath, mode='r')
ファイルをオープンして]、読み込みストリームを使う	open(filepath, mode='r')
ファイルをバイナリモードでオープンする]	open(filepath, mode='rb')
ファイルパスをバイナリモードで開く]	open(filepath, mode='rb')
ファイルをバイナリできるようにオープンする]	open(filepath, mode='rb')
ファイルパスをバイナリできるようにオープンする]	open(filepath, mode='rb')
ファイルをオープンして]、バイナリストリームを使う	open(filepath, mode='rb')
ファイルを開いて]、バイナリストリームを見る	open(filepath, mode='rb')
ファイルを書き込みモードでオープンする]	open(filepath, mode='w')
ファイルを書き込み用にオープンする]	open(filepath, mode='w')
書き込みモードでファイルをオープンする]	open(filepath, mode='w')
ファイルを書き込みできるようにオープンする]	open(filepath, mode='w')
ファイルを書き込みできるように開く]	open(filepath, mode='w')
ファイルをオープンして]、書き込みストリームを使う	open(filepath, mode='w')
ファイルパスをオープンして]、書き込みストリームを見る	open(filepath, mode='w')
ファイルをオープンして]、書き込みストリームを求める	open(filepath, mode='w')
ファイルをバイナリ書き込みモードでオープンする]	open(filepath, mode='wb')
ファイルをバイナリ書き込みできるようにオープンする]	open(filepath, mode='wb')
ファイルパスをバイナリ書き込みできるように開く]	open(filepath, mode='wb')
ファイルをオープンして]、バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルをオープンして]、バイナリ書き込みストリームを見る	open(filepath, mode='wb')
ファイルをオープンして]バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルを追加モードでオープンする]	open(filepath, mode='a')
追加用にファイルパスを開く]	open(filepath, mode='a')
追加モードを用いてファイルを開く]	open(filepath, mode='a')
ファイルを追加できるようにオープンする]	open(filepath, mode='a')
ファイルをオープンして]、追加ストリームを使う	open(filepath, mode='a')
ファイルパスを開いて]追加ストリームを使う	open(filepath, mode='a')
ファイルを開いて]、追加ストリームを見る	open(filepath, mode='a')
ファイルを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
ファイルパスを読み込み用に開いて]、fとする	f = open(filepath, mode='r')
ファイルを読み込みモードを用いてオープンして]、fとする	f = open(filepath, mode='r')
ファイルから読み込みストリームをオープンして]、fとする	f = open(filepath, mode='r')
ファイルパスから読み込みストリームを開き]、fとする	f = open(filepath, mode='r')
ファイルから読み込みストリームを開き]、fとする	f = open(filepath, mode='r')
ファイルをバイナリモードでオープンして]、fとする	f = open(filepath, mode='rb')
ファイルをバイナリ用に開いて]、fとする	f = open(filepath, mode='rb')
バイナリモードとしてファイルをオープンして]fとする	f = open(filepath, mode='rb')
ファイルからバイナリストリームをオープンして]、fとする	f = open(filepath, mode='rb')
ファイルを書き込みモードでオープンして]、fとする	f = open(filepath, mode='w')
ファイルを書き込みモードでオープンして]fとする	f = open(filepath, mode='w')
ファイルを書き込み用にオープンして]、fとする	f = open(filepath, mode='w')
ファイルから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
ファイルから書き込みストリームを開き]、fとする	f = open(filepath, mode='w')
ファイルパスから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
ファイルをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
ファイルをバイナリ書き込みモードを用いてオープンして]、fとする	f = open(filepath, mode='wb')
ファイルパスをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
ファイルからバイナリ書き込みストリームをオープンして]、fとする	f = open(filepath, mode='wb')
ファイルを追加モードでオープンして]、fとする	f = open(filepath, mode='a')
ファイルパスを追加モードでオープンして]、fとする	f = open(filepath, mode='a')
ファイルパスを追加モードで開いて]fとする	f = open(filepath, mode='a')
ファイルから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
＜オプション＞読み込みモードに設定する	mode = 'r'
＜オプション＞読み込みモードを使う	mode = 'r'
＜オプション＞バイナリモードに設定する	mode = 'rb'
＜オプション＞バイナリモードに変更する	mode = 'rb'
＜オプション＞バイナリモードを使う	mode = 'rb'
＜オプション＞バイナリモードを用いる	mode = 'rb'
＜オプション＞書き込みモードに設定する	mode = 'w'
＜オプション＞書き込みモードにする	mode = 'w'
＜オプション＞書き込みモードを使う	mode = 'w'
＜オプション＞バイナリ書き込みモードに設定する	mode = 'wb'
＜オプション＞バイナリ書き込みモードに変更する	mode = 'wb'
＜オプション＞バイナリ書き込みモードを使う	mode = 'wb'
＜オプション＞追加モードに設定する	mode = 'a'
＜オプション＞追加モードを使う	mode = 'a'
ファイルをUTF8でオープンする]	open(filepath, encoding='utf-8')
ファイルをUTF8を用いて開く]	open(filepath, encoding='utf-8')
ファイルをUTF8として開く]	open(filepath, encoding='utf-8')
ファイルをSJISでオープンする]	open(filepath, encoding='shift_jis')
ファイルをSJISとしてオープンする]	open(filepath, encoding='shift_jis')
ファイルをSJISを用いて開く]	open(filepath, encoding='shift_jis')
ファイルをEUCでオープンする]	open(filepath, encoding='euc_jp')
ファイルパスをEUCでオープンする]	open(filepath, encoding='euc_jp')
ファイルをBOM付きでオープンする]	open(filepath, encoding='utf_8_sig')
ファイルを文字コードtextでオープンする]	open(filepath, encoding=text)
ファイルパスを文字コードtextでオープンする]	open(filepath, encoding=text)
ファイルパスを文字コードtextとしてオープンする]	open(filepath, encoding=text)
ファイルを文字列の示すエンコーディングでオープンする]	open(filepath, encoding=s)
ファイルを文字列の示すエンコーディングとしてオープンする]	open(filepath, encoding=s)
ファイルをUTF8で書き込み用にオープンする]	open(filepath, mode='w', encoding='utf-8')
ファイルをSJISで書き込み用にオープンする]	open(filepath, mode='w', encoding='shift_jis')
SJISを用いて書き込みできるようにファイルをオープンする]	open(filepath, mode='w', encoding='shift_jis')
SJISとしてファイルを書き込みできるように開く]	open(filepath, mode='w', encoding='shift_jis')
ファイルをEUCで書き込み用にオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルをEUCとして書き込みできるようにオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルパスをEUCで書き込み用に開く]	open(filepath, mode='w', encoding='euc_jp')
ファイルをBOM付きで書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
ファイルを書き込み用にBOM付きでオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
ファイルをBOM付きを使って書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
ファイルを文字コードtextで書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
ファイルパスを書き込み用に文字コードtextでオープンする]	open(filepath, mode='w', encoding=text)
ファイルを書き込みできるように文字コードtextで開く]	open(filepath, mode='w', encoding=text)
ファイルを文字列の示すエンコーディングで書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
ファイルパスを文字列の示すエンコーディングで書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
ファイルパスを文字列の示す文字コードとして書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
既存のファイルをUTF8で追加できるようにオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルパスをUTF8で追加できるようにオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルをSJISとして追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルをEUCで追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルを追加できるようにEUCを用いてオープンする]	open(filepath, mode='a', encoding='euc_jp')
追加できるようにEUCで既存のファイルパスを開く]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
既存のファイルを追加できるようにBOM付きで開く]	open(filepath, mode='a', encoding='utf_8_sig')
既存のファイルを文字コードtextで追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
文字コードtextとしてファイルを追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルパスを文字コードtextで追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルを文字列の示すエンコーディングで追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
既存のファイルパスを文字列の示す文字コードを使って追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
既存のファイルパスを文字列の示すエンコーディングで追加できるように開く]	open(filepath, mode='a', encoding=s)
＜オプション＞エンコーディングをUTF8に設定する	encoding = 'utf-8'
＜オプション＞UTF8を使う	encoding = 'utf-8'
＜オプション＞エンコーディングをSJISに設定する	encoding = 'shift_jis'
＜オプション＞エンコーディングをSJISにする	encoding = 'shift_jis'
＜オプション＞SJISを使う	encoding = 'shift_jis'
＜オプション＞エンコーディングをEUCに設定する	encoding = 'euc_jp'
＜オプション＞EUCを使う	encoding = 'euc_jp'
＜オプション＞エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
＜オプション＞BOM付きを使う	encoding = 'utf_8_sig'
＜オプション＞エンコーディングを文字コードtextに設定する	encoding = text
＜オプション＞文字コードtextを使う	encoding = text
＜オプション＞エンコーディングを文字列の示すエンコーディングに設定する	encoding = s
＜オプション＞エンコーディングを文字列の示すエンコーディングに指定する	encoding = s
＜オプション＞文字列の示すエンコーディングを使う	encoding = s
＜オプション＞バッファリングを無効にする	buffering = 0
＜オプション＞バッファリングのサイズを設定する	buffering = 4096
＜オプション＞エラーがあるとき、例外を発生させるように設定する	errors = 'strict'
＜オプション＞エラーを無視するように設定する	errors = 'ignore'
＜オプション＞改行コードをUNIXに設定する	newline = '\n'
＜オプション＞改行コードを旧Macに設定する	newline = '\r'
＜オプション＞改行コードをWindowsに設定する	newline = '\r\n'
＜オプション＞改行コードを動作環境依存に設定する	newline = None
ファイルをクローズする	f.close()
ファイルを全部、読み込む	f.read()
ファイルを全て読み込む	f.read()
ファイルから1文字、読み込む	f.read(1)
ファイルから1文字読み込む	f.read(1)
ファイルからn文字、読み込む	f.read(n)
ファイルからn文字読み込む	f.read(n)
ファイル全体を行単位で分割して読み込む	f.readlines()
出力ストリーム全体を行単位で分割して読み込む	f.readlines()
ファイル全体を行分割して読み込む	f.readlines()
ファイル全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
入力ストリーム全体を行ごとに分割してリストに変換する	[s.strip() for s in f.readlines()]
ファイルを一行ずつ読み込む	f.readline()
ファイルを改行を取り除いて一行ずつ読み込む	f.readline()
ファイルに文字列を書き込む	f.write(s)
ファイルに文字列を書く	f.write(s)
ファイルにxを文字列に変換して書き込む	f.write(str(x))
出力ストリームにxを文字列に変換して書く	f.write(str(x))
実数が正の数か調べる	x > 0
実数が正か調べる	x > 0
実数が負の数か調べる	x < 0
整数が負の数かどうか調べる	x < 0
実数が負か確認する	x < 0
実数を二乗する	x ** 2
数を二乗する	x ** 2
実数の二乗	x ** 2
実数の二乗を求める	x ** 2
浮動小数点数の２乗	x ** 2
実数を三乗する	x ** 3
実数を３乗する	x ** 3
実数の三乗	x ** 3
実数の３乗を求める	x ** 3
浮動小数点数の三乗	x ** 3
実数をn乗する	x ** n
実数のn乗	x ** n
実数に実数を加える	x + y
浮動小数点数に浮動小数点数を加える	x + y
実数に浮動小数点数を加算する	x + y
実数から実数を引く	x - y
実数から実数を減算する	x - y
実数を浮動小数点数から引く	x - y
実数に実数を掛ける	x * y
数を実数に乗算する	x * y
実数を実数で割る	x / y
実数で実数を割る	x / y
浮動小数点数で実数を割る	x / y
実数を実数で割って、切り捨てる	x // y
数で実数を割って切り捨てる	x // y
実数を実数で割って小数点以下を切り捨てる	x // y
実数を実数で整数除算する	x // y
数で浮動小数点数を整数除算する	x // y
実数を数で整数除算する	x // y
実数を実数で割った余り	x % y
実数を整数に変換する	int(x)
実数を文字列に変換する	str(x)
実数の複素数	complex(x)
浮動小数点数の複素数	complex(x)
実数を複素数に変換する	complex(x)
実部と虚部から複素数	complex(x, y)
商と余りを同時に計算する	divmod(x, y)
実数のn乗	pow(x, n)
実数のn乗の実数剰余	pow(x, n, y)
実数のn乗して実数による余り	pow(x, n, y)
実数の小数点以下を丸める	round(x)
実数の小数点を四捨五入する	round(x)
実数を小数点以下第一位で丸める	round(x, 1)
実数を小数点以下で丸める	round(x, n)
実数を十の位で丸める	round(x, -1)
実数を百の位で丸める	round(x, -2)
実数を千の位で丸める	round(x, -3)
実数を万の位で丸める	round(x, -4)
数を万の位で丸める	round(x, -4)
Pythonのバージョン	sys.version
浮動小数点数の最大値	sys.float_info.max
浮動小数点数の最小値	sys.float_info.min
計算機イプシロン	sys.float_info.epsilon
実数が整数か調べる	x.is_integer()
実数が整数か	x.is_integer()
数が整数	x.is_integer()
実数を十六進表記の文字列に変換する	x.hex()
実数を十六進文字列にする	x.hex()
十六進表記の文字列を浮動小数点数に変換する	float.fromhex(十六進表記の文字列)
十六進表記の文字列を浮動小数点数にする	float.fromhex(十六進表記の文字列)
有理数を使う	import fractions
分数を使う	import fractions
有理数を使用する	import fractions
分子n、分母mの有理数を作る	fractions.Fraction(numerator=n, denominator=m)
分子n分母mの有理数を用意する	fractions.Fraction(numerator=n, denominator=m)
n割るmの有理数表現	fractions.Fraction(numerator=n, denominator=m)
分子と分母から有理数を作る	fractions.Fraction(分子, 分母)
分子割る分母	fractions.Fraction(分子, 分母)
有理数の分子	q.numerator
有理数の分母	q.denominator
有理数を分母の最大値を指定して近似する	q.limit_denominator(max_denominator=1000000)
浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
n進文字列を整数に変換する	int(s, n)
二進文字列を整数に変換する	int(s, 2)
八進文字列を整数に変換する	int(s, 8)
八進数文字列を整数に変換する	int(s, 8)
十六進文字列を整数に変換する	int(s, 16)
十六進文字列を整数にする	int(s, 16)
n進文字列をバイト列に変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進数の文字列をバイト列に変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進文字列をバイト列にする	int(s, n).to_bytes(length=bytesize, byteorder='big')
二進文字列をバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
八進文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
八進文字列をbytesizeバイトのバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
十六進文字列をバイト列に変換する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
16進文字列をbytesizeバイトのバイト列に変換する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
整数nの二進表現	bin(n)
nの二進表現	bin(n)
整数nの二進表記	bin(n)
整数nを二進表現に変換する	bin(n)
nを二進表現にする	bin(n)
整数nを2進数表記に変換する	bin(n)
整数nの八進表現	oct(n)
整数nの八進数表現を見る	oct(n)
整数nを八進表現に変換する	oct(n)
整数nを8進表現に変換する	oct(n)
整数nの十六進表現	hex(n)
整数nの十六進数表現	hex(n)
整数nを十六進表現に変換する	hex(n)
整数nを16進表現にする	hex(n)
整数nを16進表現に変換する	hex(n)
整数nの二進文字列	bin(n)[2:]
nの二進数文字列	bin(n)[2:]
整数nを二進文字列に変換する	bin(n)[2:]
整数nの八進文字列	oct(n)[2:]
nの八進文字列	oct(n)[2:]
整数nを八進文字列に変換する	oct(n)[2:]
nを八進数文字列に変換する	oct(n)[2:]
整数nの十六進文字列	hex(n)[2:]
整数nを十六進文字列に変換する	hex(n)[2:]
整数nのビット長	n.bit_length()
整数nのバイト長	(n.bit_length() + 7) // 8
nのバイト長を調べる	(n.bit_length() + 7) // 8
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
整数nを符号付きでバイナリにする	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
整数nをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
整数nをバイナリに変換する	n.to_bytes(length=bytesize, byteorder='big')
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
nにn2を加える	n + n2
nプラスn2	n + n2
n足すn2	n + n2
nとn2の和	n + n2
nからn2を引く	n - n2
nマイナスn2	n - n2
nとn2の差	n - n2
nにn2をかける	n * n2
nかけるn2	n * n2
nとn2の積	n * n2
nをn2で割る	n / n2
nわるn2	n / n2
nとn2の商	n / n2
n2分のn	n / n2
nをn2で整数除算する	n // n2
nのn2乗	n ** n2
nの二乗	n ** 2
nの2乗	n ** 2
nの三乗	n ** 3
nをn2で割った余り	n % n2
nをn2で割ったmod	n % n2
nをn2で割った結果の切り上げ	(n + n2 - 1) // n2
nをn2で結果の切り上げを求める	(n + n2 - 1) // n2
n割るn2を切り上げる	(n + n2 - 1) // n2
n割るn2の切り上げ	(n + n2 - 1) // n2
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
nとn2の論理積	n & n2
nとn2の論理和	n | n2
nとn2のビット和を求める	n | n2
nとn2の排他的論理和	n ^ n2
nをn2だけ左シフトする	n << n2
nをn2だけ右シフトする	n >> n2
nをn2だけ増加させる	n += n2
nにn2を足して代入する	n += n2
nとn2の値を足してnに代入する	n += n2
nをn2だけ減少させる	n -= n2
nからn2の値を引いてnに代入する	n -= n2
nをn2倍にする	n *= n2
nにn2をかけた値をnに代入する	n *= n2
nをn2乗に増やす	n **= n2
nをn2分の一にする	n /= n2
nを半分にする	n /= 2
nを切り捨てながらn2分の一にする	n //= n2
切り捨てながらnをn2分の１にする	n //= n2
整数nをn2分の一にする	n //= n2
nを切り捨てながら半分にする	n //= 2
整数nを半分にする	n //= 2
nをn2で割った余りをnに代入する	n %= n2
nとn2が等しいか調べる	n == n2
nとn2が等しいか確認する	n == n2
nとn2が等しい	n == n2
nがn2と等しいか調べる	n == n2
nがn2と等しい	n == n2
nがn2か調べる	n == n2
nがn2かどうか判定する	n == n2
nがn2より大きいか調べる	n > n2
nがn2よりも大きいか調べる	n > n2
nがn2よりも大きいか確認する	n > n2
nがn2より小さいか調べる	n < n2
nがn2より小さいか確認する	n < n2
nがn2より小さい	n < n2
nがn2よりも小さいか調べる	n < n2
nがn2よりも小さい	n < n2
nがn2以上か調べる	n >= n2
nがn2以上か判定する	n >= n2
nがn2以上か	n >= n2
nがn2以下か調べる	n <= n2
nがn2未満、またはn3以上か調べる	n < n2 or n >= n3
nがn2未満またはn3以上か	n < n2 or n >= n3
nがn2以下、または、n3以上か調べる	n <= n2 or n >= n3
nがn2以下もしくは、n3以上か調べる	n <= n2 or n >= n3
nがn2以下、またはn3以上か調べる	n <= n2 or n >= n3
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
n2がn以上かつ、n3以下	n <= n2 and n2 <= n3
n2がn以上、かつ、n3以下か確認する	n <= n2 and n2 <= n3
n2がnより大きく、かつ、n3未満か調べる	n < n2 and n2 < n3
n2がnより大きくかつ、n3未満	n < n2 and n2 < n3
n2がnより大きくかつ、n3より小さい	n < n2 and n2 < n3
nが偶数か調べる	n % 2 == 0
nが偶数かどうか調べる	n % 2 == 0
nが2で割り切れるか調べる	n % 2 == 0
nが2で割り切れるかどうか	n % 2 == 0
nが奇数か調べる	n % 2 == 1
nが奇数か	n % 2 == 1
nが2で割り切れないか調べる	n % 2 == 1
nが3の倍数か調べる	n % 3 == 0
nが3の倍数	n % 3 == 0
nが3で割り切れるか調べる	n % 3 == 0
nが3で割り切れるかどうか調べる	n % 3 == 0
nが5の倍数か調べる	n % 5 == 0
nが5で割り切れるか調べる	n % 5 == 0
nが5で割り切れる	n % 5 == 0
nがn2の倍数か調べる	n % n2 == 0
nがn2で割り切れるか調べる	n % n2 == 0
nがn2で割り切れるかどうか調べる	n % n2 == 0
nがn2の倍数でないか調べる	n % n2 != 0
nがn2の倍数でない	n % n2 != 0
nがn2で割り切れないか調べる	n % n2 != 0
nがn2で割り切れないか	n % n2 != 0
nが正の数か調べる	n > 0
nが正の数か確認する	n > 0
nが負の数か調べる	n < 0
nが負の数	n < 0
nが一桁の数か調べる	-9 <= n <= 9
nが一桁の数かどうか調べる	-9 <= n <= 9
nが一桁の数か	-9 <= n <= 9
nが-9以上、9以下か調べる	-9 <= n <= 9
nが-9以上、9以下かどうか	-9 <= n <= 9
nが一桁の数か調べる	0 <= n <= 9
nが一桁の数	0 <= n <= 9
整数nがリストのどれかか調べる	n in aList
整数nがリストのどれか	n in aList
整数nがセットのどれかか調べる	n in aSet
整数nがセットのどれかかどうか調べる	n in aSet
整数nは集合のひとつであるか調べる	n in aSet
整数nがタプルのどれかか調べる	n in aTuple
nが組のどれかか調べる	n in aTuple
整数nはタプルのひとつか調べる	n in aTuple
整数nが配列のどれかか調べる	n in aArray
nが配列のどれか	n in aArray
nが配列のいづれかかどうか確認する	n in aArray
nが1、もしくは2か調べる	n == 1 or n == 2
nが1もしくは2か確認する	n == 1 or n == 2
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
nが1、もしくは2、もしくは3に等しい	n == 1 or n == 2 or n == 3
nの桁数	len(str(n))
nが何桁か	len(str(n))
nの各桁の総和	sum(map(int, str(n)))
xが一桁の数か調べる	-9 <= x <= 9
xが-9以上、9以下か調べる	-9 <= x <= 9
xが-9以上、9以下か	-9 <= x <= 9
xが-9以上、9以下かどうか調べる	-9 <= x <= 9
xが一桁の正の数か調べる	0 <= x <= 9
xが一桁の正の数かどうか判定する	0 <= x <= 9
xが1、もしくは2か調べる	x == 1 or x == 2
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
xが1もしくは2、もしくは3に等しいかどうか	x == 1 or x == 2 or x == 3
xが1、もしくは2もしくは3に等しいか	x == 1 or x == 2 or x == 3
itertoolsモジュールをインポートする	import itertools
nの無限数列	itertools.repeat(n)
nの無限のイテラブル	itertools.repeat(n)
nが無限に続く数列	itertools.repeat(n)
文字列が無限に繰り返すイテラブル	itertools.repeat(element)
文字列が無限に繰り返すイテラブルを得る	itertools.repeat(element)
文字列の無限イテラブル	itertools.repeat(element)
オブジェクトの無限イテラブル	itertools.repeat(element)
文字列の無限な列	itertools.repeat(element)
文字列がn回繰り返すイテラブル	itertools.repeat(element, n)
オブジェクトをn回続く列	itertools.repeat(element, n)
オブジェクトがn回繰り返すイテラブル	itertools.repeat(element, n)
無限にカウントアップする	itertools.count()
いつまでもカウントアップする	itertools.count()
0から始まる無限数列	itertools.count()
0から始まる無限列	itertools.count()
0から始まる無限のイテラブル	itertools.count()
nから無限にカウントアップする	itertools.count(start=n)
nからstep間隔で無限にカウントアップする	itertools.count(start=n, step=step)
nからstep間隔でいつまでも数え上げるする	itertools.count(start=n, step=step)
nからstep間隔で無限に数え上げるする	itertools.count(start=n, step=step)
rangeの無限バージョン	itertools.count(start=n, step=step)
nから無限にカウントダウンする	itertools.count(start=n, step=-1)
イテラブルを無限に繰り返す	itertools.cycle(iterable)
列をいつまでも繰り返す	itertools.cycle(iterable)
列をぐるぐると繰り返す	itertools.cycle(iterable)
イテラブルを累加する	itertools.accumulate(iterable)
イテラブルを累加したイテラブル	itertools.accumulate(iterable)
列を累加したイテラブル	itertools.accumulate(iterable)
イテラブルを累積する	itertools.accumulate(iterable, operator.mul)
シーケンスを累積する	itertools.accumulate(iterable, operator.mul)
イテラブルを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
シーケンスを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
イテラブルを累積した列	itertools.accumulate(iterable, operator.mul)
イテラブルとイテラブルを連結する	itertools.chain(iterable, iterable2)
列と列を連結する	itertools.chain(iterable, iterable2)
イテラブルとリストをつなぐ	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続ける	itertools.chain(iterable, iterable2)
イテラブルに列を続ける	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続けたイテラブル	itertools.chain(iterable, iterable2)
イテラブルに列を続けた列を得る	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続けたイテラブルを得る	itertools.chain(iterable, iterable2)
selectorsでマスクされたイテラブルの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
イテラブルの各要素に対して、predicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
列の各要素に対して、predicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となる列の要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真とならないイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真とならないタプルの要素を得る	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真とならないイテラブルの部分	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真となるシーケンスの部分	itertools.dropwhile(predicateFunc, iterable)
predicateFuncを適用したとき真となるリストの要素を除去する	itertools.dropwhile(predicateFunc, iterable)
イテラブルとイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
シーケンスとイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルをペアリングする	itertools.zip_longest(iterable, iterable2)
イテラブルと列をペアリングする	itertools.zip_longest(iterable, iterable2)
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルの直積	itertools.product(iterable, iterable2)
シーケンスと列の直積	itertools.product(iterable, iterable2)
イテラブルとイテラブルの直積を求める	itertools.product(iterable, iterable2)
イテラブルを2回あわせた直積	itertools.product(iterable, repeat=2)
列を2回あわせたデカルト積	itertools.product(iterable, repeat=2)
イテラブルの全順列	itertools.permutations(iterable)
イテラブルの長さnの順列	itertools.permutations(iterable, n)
列の長さnの順列	itertools.permutations(iterable, n)
イテラブルのコンビネーション	itertools.combinations(iterable, n)
列のコンビネーション	itertools.combinations(iterable, n)
列の組み合わせ	itertools.combinations(iterable, n)
イテラブルの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
イテラブルの重複組み合わせ	itertools.combinations_with_replacement(iterable, n)
列の重複コンビネーションを得る	itertools.combinations_with_replacement(iterable, n)
JSONを使う	import json
JSONを用いる	import json
JSON形式の文字列を辞書に変換する	json.loads(jsonString)
JSON形式の文字列をデータに変換する	json.loads(jsonString)
JSONフォーマットの文字列をデータにする	json.loads(jsonString)
JSON形式の文字列を読み込む	json.loads(jsonString)
JSON形式のバイト列を辞書に変換する	json.loads(b.decode('unicode-escape'))
JSON形式の文字列をデータに変換する	json.loads(b.decode('unicode-escape'))
JSONファイルのファイル入力を辞書に変換する	json.load(fin)
JSON形式の入力を辞書にする	json.load(fin)
JSONファイルのfをデータに変換する	json.load(fin)
JSONフォーマットのfをデータに変換する	json.load(fin)
JSONファイルのファイル入力を読み込んで、dataとする	data = json.load(fin)
JSON形式の入力ストリームを読み込んで、dataとする	data = json.load(fin)
JSON形式の入力を読み込んで、dataとする	data = json.load(fin)
辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False)
辞書をJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False)
インデント付きで辞書を文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
改行付きで辞書を文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント付きで文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで、辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで、辞書をJSONフォーマットの文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をソートしてJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
タプルをソートしてJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書をJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
空列	[]
空のリスト	[]
空のタプル	()
要素ひとつのタプル	(element,)
bとn2から成るペア	(n, n2)
要素ひとつのりスト	[element]
要素一つのりスト	[element]
n個の要素があるリスト	[element] * n
n個の要素があるリストを作る	[element] * n
長さnのリスト	[0] * n
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
n×n2の二次元リスト	[[0] * n for _ in range(n2)]
n×n2の２次元リスト	[[0] * n for _ in range(n2)]
リストをタプルに変換する	tuple(aList)
リストをイミュータブルにする	tuple(aList)
タプルをリストに変換する	list(aTuple)
タプルをミュータブルにする	list(aTuple)
リストの長さ	len(aList)
タプルの長さ	len(aTuple)
リストが空か調べる	len(aList) == 0
リストが空でないか調べる	len(aList) != 0
リストとリストを連結する	aList + aList2
タプルとタプルを連結する	aTuple + aTuple2
タプルと組を接続する	aTuple + aTuple2
リストをn倍する	aList * n
リストをn回、連結する	aList * n
タプルをn倍する	aTuple * n
タプルをn回、連結する	aTuple * n
リストの先頭	aList[0]
タプルの先頭	aTuple[0]
タプルの先頭の値	aTuple[0]
リストの末尾	aList[-1]
リストの最後の要素	aList[-1]
タプルの末尾	aTuple[-1]
組の末尾の要素	aTuple[-1]
タプルの最後	aTuple[-1]
リストのn番目の	aList[n]
タプルのn番目の	aTuple[n]
タプルのn番目のを使う	aTuple[n]
リストの先頭を取り除く	aList[1:]
リストの先頭を捨てる	aList[1:]
タプルの先頭を取り除く	aTuple[1:]
リストの先頭のn要素を取り除く	aList[n:]
リストのn番目以降の部分を取り出す	aList[n:]
タプルの先頭のn要素を取り除く	aTuple[n:]
組の先頭のn要素を捨てる	aTuple[n:]
タプルのn番目以降の部分を取り出す	aTuple[n:]
組のn番目以降の部分を取り出す	aTuple[n:]
タプルのn番目以降の部分を抽出する	aTuple[n:]
リストの末尾を取り除く	aList[:-1]
タプルの末尾を取り除く	aTuple[:-1]
リストの末尾のn要素を取り除く	aList[:-n]
リストの末尾のn要素を捨てる	aList[:-n]
リストの末尾からn番目以前の部分を取り出す	aList[:-n]
リストの末尾からn番目以前の要素を得る	aList[:-n]
タプルの末尾のn要素を取り除く	aTuple[:-n]
タプルの最後のn要素を取り除く	aTuple[:-n]
タプルの末尾からn番目以前の部分を取り出す	aTuple[:-n]
リストの要素を逆順にする	aList[::-1]
リストを逆順にする	aList[::-1]
タプルの要素を逆順にする	aTuple[::-1]
タプルを逆順にする	aTuple[::-1]
リストをひとつ置きに取り出す	aList[::2]
ひとつ飛ばしでリストを取り出す	aList[::2]
タプルをひとつ置きに取り出す	aTuple[::2]
ひとつ飛ばしでタプルを抽出する	aTuple[::2]
リストのn番目からn2番目までの部分	aList[n:n2]
リストのn番目からn2番目までを取り出す	aList[n:n2]
リストのn番目からn2番目までを抽出する	aList[n:n2]
タプルのn番目からn2番目までの部分	aTuple[n:n2]
タプルのn番目からn2番目までの部分を取り出す	aTuple[n:n2]
組のn番目からn2番目までを取り出す	aTuple[n:n2]
0からnまでのスライス	slice(n)
nからn2までのスライス	slice(n, n2)
nからn2までのstepごとによるスライス	slice(n, n2, step)
リストの合計値	sum(aList)
リストの合計	sum(aList)
タプルの合計値	sum(aTuple)
組の総和	sum(aTuple)
タプルの合計値を求める	sum(aTuple)
リストの中の最小値	min(aList)
リストの中の最小値を求める	min(aList)
タプルの中の最小値	min(aTuple)
組の中の最小値を求める	min(aTuple)
組の中の一番小さい値	min(aTuple)
リストの中の最大値	max(aList)
リストの中の最大値を計算する	max(aList)
タプルの中の最大値	max(aTuple)
リストの平均値	sum(aList)/len(aList)
リストの平均	sum(aList)/len(aList)
タプルの平均値	sum(aTuple)/len(aTuple)
タプルの平均値を求める	sum(aTuple)/len(aTuple)
リストの長さだけ繰り返す	range(len(aList))
n個の数値イテラブル	range(n)
0からnの範囲	range(n)
nからn2の範囲	range(n, n2)
n個の整数列	list(range(n))
0からnまでの整数列	list(range(n+1))
1からnまでの整数列	list(range(1, n+1))
nからn2までの整数列	list(range(n, n2+1))
nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1, 2))
nまでの偶整数列	list(range(2, n, 2))
nまでの奇整数列	list(range(1, n, 2))
リストに文字列を追加する	aList.append(element)
リストに文字列を加える	aList.append(element)
リストの末尾に文字列を追加する	aList.append(element)
リストにリストを追加する	aList.extend(aList2)
リストの末尾にリストを展開する	aList.extend(aList2)
リストにリストを展開する	aList.extend(aList2)
リストにリストを追加して拡張する	aList.extend(aList2)
リストにリストを加え、広げる	aList.extend(aList2)
リストにリストを追加し、拡張する	aList.extend(aList2)
リストのn番目に文字列を挿入する	aList.insert(n, element)
リストの末尾から要素をポップする	aList.pop()
リストの末尾から値をポップする	aList.pop()
aListn番目から要素をポップする	aList.pop(n)
aListn番目から値をポップする	aList.pop(n)
リストの全ての要素をクリアにする	aList.clear()
リストから文字列を取り除く	aList.remove(element)
リストのn番目の要素を削除する	del aList[n]
文字列がリストの要素か調べる	element in aList
文字列がリストに含まれるか調べる	element in aList
オブジェクトがリストに含まれるか調べる	element in aList
文字列がタプルの要素か調べる	element in aTuple
文字列が組の要素か調べる	element in aTuple
文字列がタプルに含まれるか調べる	element in aTuple
オブジェクトがタプルに含まれるかどうか	element in aTuple
文字列がタプルに含まれるか	element in aTuple
文字列がリストの要素でないか調べる	element not in aList
文字列がリストに含まれないか調べる	element not in aList
文字列がタプルの要素でないか調べる	element not in aTuple
文字列がタプルの要素でないか	element not in aTuple
文字列がタプルに含まれないか調べる	element not in aTuple
文字列はタプルに含まれないか調べる	element not in aTuple
文字列がタプルに含まれないかどうか調べる	element not in aTuple
リストの文字列が最初に見つかるインデックス	aList.index(element)
リスト中の文字列が最初に見つかるインデックス	aList.index(element)
リストのオブジェクトが最初に見つかるインデックスを見る	aList.index(element)
リストの最初の文字列を探す	aList.index(element)
タプルの文字列が最初に見つかるインデックス	aTuple.index(element)
タプルの文字列が最初に見つかるインデックスを使う	aTuple.index(element)
組中の文字列が最初に見つかるインデックス	aTuple.index(element)
タプルの最初の文字列を探す	aTuple.index(element)
タプル中の最初の文字列を探す	aTuple.index(element)
リストの要素をソートする	sorted(aList)
リストの要素を並べる	sorted(aList)
タプルの要素をソートする	sorted(aTuple)
タプルを並べ変える	sorted(aTuple)
リストの要素を昇順にソートする	sorted(aList, reverse=False)
リストの要素を小さい順に並べ変える	sorted(aList, reverse=False)
リストを小さい順にソートする	sorted(aList, reverse=False)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=False)
組を小さい順にソートする	sorted(aTuple, reverse=False)
昇順にタプルの値をソートする	sorted(aTuple, reverse=False)
リストの要素を昇順にソートする	sorted(aList, reverse=True)
リストの要素を昇順に並べ直す	sorted(aList, reverse=True)
リストを昇順にソートする	sorted(aList, reverse=True)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=True)
タプルの値を昇順に並べ直す	sorted(aTuple, reverse=True)
昇順にタプルの値をソートする	sorted(aTuple, reverse=True)
リストの文字列の位置をエラーなく使う	aList.index(element) if element in aList else -1
エラーなくリストの文字列の位置を使う	aList.index(element) if element in aList else -1
リストの各要素を関数に適用した結果でソートする	sorted(aList, key=func)
タプルの各要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
タプルの値を関数に適用した結果でソートする	sorted(aTuple, key=func)
組の要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
リストを複製する	aList.copy()
リストを反転する	reversed(aList)
タプルを反転する	reversed(aTuple)
リスト内の要素が全て真か調べる	all(aList)
リスト中の要素が全て真か調べる	all(aList)
タプル内の要素が全て真か調べる	all(aTuple)
タプル内の要素が全て真か確認する	all(aTuple)
タプル内の要素が全て真かどうか調べる	all(aTuple)
リスト内の要素が少なくともひとつ真か調べる	any(aList)
リストは少なくとも一つ真	any(aList)
リストが少なくともひとつ真か	any(aList)
タプル内の要素が少なくともひとつ真か調べる	any(aTuple)
タプル内の要素は少なくともひとつ真	any(aTuple)
タプル中の要素が少なくともひとつ真か調べる	any(aTuple)
リストを引数として展開して表示する	print(*aList)
タプルを引数として展開して表示する	print(*aTuple)
リストを引数として展開して表示する	print(*aList, sep=',')
タプルを引数として展開して表示する	print(*aTuple, sep=',')
タプルを引数として展開して出力する	print(*aTuple, sep=',')
組をカンマ区切りで出力する	print(*aTuple, sep=',')
二次元リストをフラット化する	sum(aList)
二次元タプルをフラット化する	sum(aTuple)
リストをナンバリングする	enumerate(aList)
タプルをナンバリングする	enumerate(aTuple)
リストをnからナンバリングする	enumerate(aList, start=n)
タプルをnからナンバリングする	enumerate(aTuple, start=n)
組をnからナンバリングする	enumerate(aTuple, start=n)
イテラブルのそれぞれを関数でフィルタする	filter(func, iterable)
イテラブルのそれぞれを関数でフィルタする	map(func, iterable)
イテラブルの各要素を関数でフィルタする	map(func, iterable)
mathをインポートする	import math
mathモジュールをインポートする	import math
実数の平方根	math.sqrt(x)
平方根	math.sqrt(x)
実数の天井	math.ceil(x)
実数の天井を求める	math.ceil(x)
天井	math.ceil(x)
実数以上の最小の整数	math.ceil(x)
実数を切り上げて整数に変換する	math.ceil(x)
実数を切り上げる	math.ceil(x)
実数の床	math.floor(x)
実数の床を求める	math.floor(x)
小数点数の床	math.floor(x)
実数以下の最大の整数	math.floor(x)
浮動小数点数以下の最大の整数	math.floor(x)
実数を切り下げて整数に変換する	math.floor(x)
実数を切り下げる	math.floor(x)
自然数の最大公約数	math.gcd(n, n2)
自然数最小公倍数	math.lcm(n, n2)
自然数LCM	math.lcm(n, n2)
三自然数の最大公約数	math.gcd(n, n2, n3)
３自然数の最大公約数	math.gcd(n, n2, n3)
三自然数の最小公倍数	math.lcm(n, n2, n3)
3自然数の最小公倍数	math.lcm(n, n2, n3)
３自然数のLCM	math.lcm(n, n2, n3)
nとkのコンビネーション	math.comb(n, k)
nとkの組合せを求める	math.comb(n, k)
コンビネーション	math.comb(n, k)
n個の集まりからk個重複なく選ぶ方法	math.comb(n, k)
異なるn個のものからk個選ぶ場合の数	math.comb(n, k)
数値の符号を同じにする	math.copysign(x, x2)
実数の符号を同じにする	math.copysign(x, x2)
数値の符号をコピーにする	math.copysign(x, x2)
実数の絶対値	math.fabs(x)
自然数の階乗	math.factorial(n)
実数の仮数	math.frexp(x)[0]
実数の指数	math.frexp(x)[1]
実数の指数部	math.frexp(x)[1]
実数の指数を求める	math.frexp(x)[1]
二つの浮動小数点数が十分に近いか調べる	math.isclose(x, x2)
2つの浮動小数点数が近似値かどうか調べる	math.isclose(x, x2)
実数が有限か調べる	math.isfinite(x)
実数は有限か	math.isfinite(x)
実数は有限か判定する	math.isfinite(x)
実数が無限大か調べる	math.isinf(x)
小数点数が無限大	math.isinf(x)
実数がNaNか調べる	math.isnan(x)
実数が非数	math.isnan(x)
実数がNaN	math.isnan(x)
実数の小数部	math.modf(x)[0]
実数の整数部	math.modf(x)[1]
自然数の順列の総数	math.perm(n)
整数の並べ方の総数を求める	math.perm(n)
自然数個からk個取り出したときの順列の総数	math.perm(n, k)
整数個からk個取り出した場合の順列の総数を求める	math.perm(n, k)
自然数個のものからk個取り出したときの並べ方の総数	math.perm(n, k)
自然数個のものからk個取り出した時の並べ方	math.perm(n, k)
実数を実数で割った剰余	math.remainder(x, x2)
浮動小数点数を実数で割った剰余	math.remainder(x, x2)
eの実数乗	math.exp(x)
eの乗数	math.exp(x)
実数の自然対数	math.log(x)
実数の自然対数を計算する	math.log(x)
kを底とする実数の対数	math.log(x, k)
kを底とする実数の対数を求める	math.log(x, k)
kを底とする対数を求める	math.log(x, k)
実数のk進対数	math.log(x, k)
k進対数を算出する	math.log(x, k)
実数の二進対数	math.log2(x)
実数のバイナリ対数	math.log2(x)
2を底とする実数の対数	math.log2(x)
2を底とする対数を計算する	math.log2(x)
2を底とする実数の対数を算出する	math.log2(x)
実数の常用対数	math.log10(x)
小数点数の常用対数を求める	math.log10(x)
10を底とする実数の対数	math.log10(x)
10を底とする対数	math.log10(x)
実数の余弦	math.cos(x)
浮動小数点数の余弦を計算する	math.cos(x)
実数のcosを計算する	math.cos(x)
実数の正弦	math.sin(x)
実数の正弦を求める	math.sin(x)
サイン	math.sin(x)
実数の正接	math.tan(x)
タンジェント	math.tan(x)
実数の逆余弦	math.acos(x)
小数点数の逆余弦	math.acos(x)
逆余弦	math.acos(x)
実数の余弦の逆数	math.acos(x)
実数のcosの逆数	math.acos(x)
実数の逆正弦	math.asin(x)
実数の逆正弦を求める	math.asin(x)
実数の正弦の逆数	math.asin(x)
実数のサインの逆数	math.asin(x)
実数の逆正接	math.atan(x)
実数のアークタンジェント	math.atan(x)
実数の正接の逆数	math.atan(x)
ラジアンの角度	math.degrees(x)
角度のラジアン	math.radians(degree)
実数の逆双曲線余弦	math.acosh(x)
実数の双曲線余弦の逆数	math.acosh(x)
実数のハイパボリック・コサインの逆数を計算する	math.acosh(x)
実数の逆双曲線正弦	math.asinh(x)
小数点数の逆双曲線正弦を求める	math.asinh(x)
実数の双曲線正弦の逆数	math.asinh(x)
実数の逆双曲線正接	math.atanh(x)
実数の双曲線正接の逆数	math.atanh(x)
実数の双曲線余弦	math.cosh(x)
小数点数のハイパボリック・コサイン	math.cosh(x)
実数の双曲線正弦	math.sinh(x)
小数点数の双曲線正弦	math.sinh(x)
実数のハイパボリック・サイン	math.sinh(x)
実数の双曲線正接	math.tanh(x)
二点間のユークリッド距離	math.dist(point, point2)
点間のユークリッド距離	math.dist(point, point2)
2ベクトル間のユークリッド距離を求める	math.dist(point, point2)
実数とyの斜辺	math.hypot(x, y)
原点から(実数,y)の距離	math.hypot(x, y)
ガンマ関数	math.gamma(x)
ガンマ関数を使用する	math.gamma(x)
ガンマ関数の値	math.gamma(x)
ガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
円周率	math.pi
ネイピア数	math.e
無限大	math.inf
NaN	math.nan
グラフを描画する準備をする	from sympy import N
グラフを使う準備をする	from sympy import N
綺麗なグラフを描画する準備をする	import seaborn as sns
綺麗なプロットを描画する	import seaborn as sns
綺麗なグラフを使う準備をする	import seaborn as sns
見やすいプロットを使う	import seaborn as sns
グラフの見栄えを綺麗にする	import seaborn as sns
グラフの描画を綺麗にする	import seaborn as sns
グラフの描画を見やすくする	import seaborn as sns
プロットを見やすくする	import seaborn as sns
グラフの見栄えを良くする	import seaborn as sns
seabornのデフォルトを適用する	sns.set()
グラフの見栄えをデフォルトでいい感じに設定する	sns.set()
デフォルトでプロットのデザインをいい感じに設定する	sns.set()
グラフの見栄えをデフォルトでイイ感じに設定する	sns.set()
グラフの用途を論文に設定する	sns.set(context='paper')
グラフの目的を論文に設定する	sns.set(context='paper')
プロットの目的を論文に設定する	sns.set(context='paper')
グラフを論文用に設定する	sns.set(context='paper')
論文用にプロットを変更する	sns.set(context='paper')
論文用にプロットを設定する	sns.set(context='paper')
グラフの用途を画面に設定する	sns.set(context='notebook')
グラフを画面に変更する	sns.set(context='notebook')
グラフを画面用に設定する	sns.set(context='notebook')
画面用にグラフを設定する	sns.set(context='notebook')
グラフの用途をスライドに設定する	sns.set(context='talk')
グラフをスライド用に設定する	sns.set(context='talk')
グラフの用途をポスターに設定する	sns.set(context='poster')
ポスターにプロットの用途を設定する	sns.set(context='poster')
グラフをポスター用に設定する	sns.set(context='poster')
グラフをポスター用に変更する	sns.set(context='poster')
プロットをポスター用に設定する	sns.set(context='poster')
グラフの色を濃くする	sns.set(pallete='deep')
グラフの色を全般的に濃くする	sns.set(pallete='deep')
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
カラーパレットを濃くする	sns.set(pallete='deep')
グラフの色を淡くする	sns.set(pallete='muted')
グラフの色を全般的に淡くする	sns.set(pallete='muted')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
グラフの全般的に色を淡くする	sns.set(pallete='muted')
グラフの色を淡くする	sns.set(pallete='muted')
グラフの色をパステル調にする	sns.set(pallete='pastel')
グラフの色を全般的にパステル調にする	sns.set(pallete='pastel')
グラフのカラーパレットをパステル調にする	sns.set(pallete='pastel')
プロットのカラーテーマをパステル調にする	sns.set(pallete='pastel')
グラフの色テーマをパステル調にする	sns.set(pallete='pastel')
グラフの色を暗くする	sns.set(pallete='dark')
プロットの色を暗くする	sns.set(pallete='dark')
グラフのパレットを全般的に暗くする	sns.set(pallete='dark')
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
プロットのパレットを暗くする	sns.set(pallete='dark')
プロットの色を暗くする	sns.set(pallete='dark')
グラフの色を明るくする	sns.set(pallete='bright')
グラフの色を全般的に明るくする	sns.set(pallete='bright')
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
プロットのカラーパレットを明るくする	sns.set(pallete='bright')
グラフのカラーパレットを全般的に明るくする	sns.set(pallete='bright')
グラフの色を色差別なくする	sns.set(pallete='colorblind')
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
プロットの色を色差別なくする	sns.set(pallete='colorblind')
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
グラフの色を色差別なくする	sns.set(pallete='colorblind')
グラフの描画で濃いカラーパレットを使う	sns.set(pallete='deep')
グラフの描画で濃い色を使う	sns.set(pallete='deep')
グラフの描画で濃いパレットを使う	sns.set(pallete='deep')
グラフの描画で淡いカラーパレットを使う	sns.set(pallete='muted')
グラフの描画でパステル調のカラーパレットを使う	sns.set(pallete='pastel')
グラフの描画でパステル調の色を使う	sns.set(pallete='pastel')
プロットの描画でパステル調のカラーパレットを用いる	sns.set(pallete='pastel')
グラフの描画で暗いカラーパレットを使う	sns.set(pallete='dark')
暗いカラーパレットをプロットの描画で使う	sns.set(pallete='dark')
グラフの描画で暗いパレットを使う	sns.set(pallete='dark')
グラフの描画で明るいカラーパレットを使う	sns.set(pallete='bright')
明るいカラーパレットをグラフの描画で使う	sns.set(pallete='bright')
グラフの描画で明るいパレットを使う	sns.set(pallete='bright')
グラフの描画で色差別ないカラーパレットを使う	sns.set(pallete='colorblind')
グラフの描画で色差別ない色を使う	sns.set(pallete='colorblind')
グラフのカラーパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
グラフのパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
グラフの色をpalleteNameで指定する	sns.set(pallete=palleteName)
グラフのカラーパレットをpalleteNameに設定する	sns.set(pallete=palleteName)
グラフのテーマをpalleteNameに変更する	sns.set(pallete=palleteName)
グラフで使うフォントをfontNameに指定する	sns.set(font=fontName)
グラフの中のフォントをfontNameに設定する	sns.set(font=fontName)
グラフで日本語を表示できるようにする	sns.set(font='IPAexGothic')
グラフの中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
グラフのフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
グラフで用いるフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
グラフの文字化けを防ぐ	sns.set(font='IPAexGothic')
グラフの背景色を暗くする	sns.set(style='darkgrid')
グラフの背景色を暗くする	sns.set(style='darkgrid')
グラフのグリッドを暗くする	sns.set(style='darkgrid')
グラフの背景色を白くする	sns.set(style='whitegrid')
プロットの背景色を白くする	sns.set(style='whitegrid')
グラフのタイトルをuntitledに設定する	plt.title(untitled)
プロットで使うタイトルをuntitledに設定する	plt.title(untitled)
プロットのタイトルを設定する	plt.title(untitled)
グラフのサイズを横width縦heightに設定する	plt.figure(figsize=(width, height))
グラフの大きさを横width縦heightに変更する	plt.figure(figsize=(width, height))
グラフのサイズを設定する	plt.figure(figsize=(width, height))
グラフの横軸のラベルをuntitledに設定する	plt.xlabel(untitled)
横軸のキャプションをuntitledに変更する	plt.xlabel(untitled)
グラフの横軸にuntitledというラベルを付ける	plt.xlabel(untitled)
プロットで使用する横軸にuntitledという名称を付ける	plt.xlabel(untitled)
グラフで使う横軸にuntitledというラベルを設定する	plt.xlabel(untitled)
グラフの中の縦軸のラベルをuntitledに設定する	plt.ylabel(untitled)
プロットの中の縦軸の軸名をuntitledに変更する	plt.ylabel(untitled)
グラフの中の縦軸の軸名をuntitledに設定する	plt.ylabel(untitled)
グラフの中の縦軸にuntitledというラベルを付ける	plt.ylabel(untitled)
縦軸にuntitledというラベルをつける	plt.ylabel(untitled)
グラフで使用するy軸に名称をつける	plt.ylabel(untitled)
グラフにグリッド線を入れる	plt.grid(True)
グラフに格子線を入れる	plt.grid(True)
グラフに目盛り線を描画する	plt.grid(True)
グラフに凡例を入れる	plt.legend()
凡例を描画する	plt.legend()
プロットに凡例を表示する	plt.legend()
グラフに凡例を文字列と文字列と入れる	plt.legend([s, s2])
凡例を文字列と文字列と描画する	plt.legend([s, s2])
グラフに補足を文字列と文字列と入れる	plt.legend([s, s2])
グラフの凡例の位置を指定する	plt.legend(loc=(x, y))
凡例の場所を指定する	plt.legend(loc=(x, y))
グラフの凡例の位置を(x,y)に設定する	plt.legend(loc=(x, y))
グラフの補足の場所を(x,y)に設定する	plt.legend(loc=(x, y))
グラフ中の(x,y)の位置に凡例を入れる	plt.legend(loc=(x, y))
プロット中の(x,y)の位置に凡例を入れる	plt.legend(loc=(x, y))
最適な位置に凡例を入れる	plt.legend(loc='best')
最適な位置に補足を描画する	plt.legend(loc='best')
最適な位置に凡例を表示する	plt.legend(loc='best')
グラフの中に枠なしの凡例を入れる	plt.legend(frameon=False)
プロットの中に枠なしの補足を入れる	plt.legend(frameon=False)
折れ線グラフを描画する	plt.plot(xdata, ydata)
リストとリストの折れ線グラフを描画する	plt.plot(xdata, ydata)
配列とリストの折れ線を描画する	plt.plot(xdata, ydata)
配列と配列の折れ線グラフを描画する	plt.plot(xdata, ydata)
リストとリストを折れ線グラフで描画する	plt.plot(xdata, ydata)
配列と配列を折れ線グラフでプロットする	plt.plot(xdata, ydata)
データ列と配列を折れ線グラフで描画する	plt.plot(xdata, ydata)
リストを縦軸、リストを横軸と指定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
リストをy軸、配列をx軸と設定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
数列をy座標数列をx座標と指定して、折れ線グラフを描く	plt.plot(xdata, ydata)
リストの変化を折れ線グラフで描画する	plt.plot(range(len(xdata)), xdata)
数列の変化を折れ線に描画する	plt.plot(range(len(xdata)), xdata)
イテラブルの変遷を折れ線グラフでプロットする	plt.plot(range(len(xdata)), xdata)
リストを横軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
リストを横軸として、折れ線グラフを描く	plt.plot(range(len(xdata)), xdata)
データ列を横軸として折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
データフレームのカラムとカラムを折れ線グラフで描画する	plt.plot(df[col], df[col2])
データフレームのカラムとカラムを折れ線グラフとして描画する	plt.plot(df[col], df[col2])
透明度alphaの折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaの折れ線をプロットする	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフの透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフのアルファをalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフの透明度をalphaに変更する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを透明度alphaで描画する	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaでリストとデータ列の折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを描画して、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
配列とリストの折れ線グラフをプロットして、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
リストと配列の折れ線を描画し、、アルファをalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
グラフで使える色名の一覧	matplotlib.colors.cnames
グラフで使える色名の一覧を知る	matplotlib.colors.cnames
折れ線グラフの色を文字列に設定する	plt.plot(xdata, ydata, color=s)
折れ線の色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
文字列の色でリストとリストの折れ線グラフを描画する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを文字列の色で描く	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描画して、色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描画し、、色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描き、、色を文字列に変更する	plt.plot(xdata, ydata, color=s)
折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
折れ線グラフの色をカラーコードにする	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフをカラーコードで描画する	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフをカラーコードで描く	plt.plot(xdata, ydata, color=rgb)
配列とリストの折れ線をカラーコードでプロットする	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフを描画して、その色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフを描画し、、その色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
破線グラフの色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストについて破線グラフを描画して、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
数列とイテラブルの破線をプロットし、、その色を濃いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストの破線グラフをプロットして、色を濃いにする	plt.plot(xdata, ydata, linestyle='dash', color='deep')
破線グラフの色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
破線グラフの色を淡いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとリストについて破線グラフを描画して、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストと数列について破線グラフを描いて、その色を淡いに指定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
破線グラフの色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
破線グラフの色をパステル調のに変更する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとリストについて破線グラフを描画して、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
数列とリストについて破線グラフを描画して色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
イテラブルとリストについて破線グラフを描画してその色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
破線グラフの色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
破線グラフの色を暗いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストについて破線グラフを描画して、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストの破線グラフをプロットして、その色を暗いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
配列とリストの破線を描画して、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
破線グラフの色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフを描画して、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストと配列について破線グラフを描画して、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフを描画して、色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
破線グラフの色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストとリストについて破線グラフを描画して、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
配列と配列について破線グラフを描き、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストと数列について破線を描画して、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストとリストについて濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
データ列とイテラブルについて濃い色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deep')
データ列とデータ列について濃い色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画し、、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストとリストについて淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストと配列について淡い色の折れ線グラフをプロットして線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='muted')
数列とデータ列について淡い色の折れ線グラフをプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
パステル調の色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
パステル調の色の折れ線グラフを描いて、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
パステル調の色の折れ線グラフをプロットして、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとリストについてパステル調の色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
配列とリストについてパステル調の色の折れ線を描いて線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとデータ列についてパステル調の色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフを描き、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとリストについて暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
数列と数列について暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとリストについて暗い色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストとリストについて明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストと配列について明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストと配列について明るい色の折れ線グラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
色差別ない色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線をプロットして、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストとリストについて色差別ない色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストとリストについて色差別ない色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
イテラブルとデータ列について色差別ない色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
散布図に濃い色のマーカーを使う	plt.plot(xdata, ydata, c='deep')
散布図に濃い色のマーカーを用いる	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deep')
散布図を濃い色のマーカーで描画する	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='deep')
リストとリストについての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
リストとリストの散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
データ列と数列の散布図を濃い色で描く	plt.plot(xdata, ydata, c='deep')
リストとリストについて散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
リストとデータ列の散布図を描いてマーカーの色を濃いに変更する	plt.plot(xdata, ydata, c='deep')
リストと配列について散布図を描画し、、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
散布図に淡い色のマーカーを使う	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='muted')
リストとリストについての散布図を淡い色で描画する	plt.plot(xdata, ydata, c='muted')
数列とリストの散布図を淡い色で描く	plt.plot(xdata, ydata, c='muted')
淡い色を用いてリストとリストについての散布図を描く	plt.plot(xdata, ydata, c='muted')
リストとリストについて散布図を描画して、マーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
リストとリストの散布図を描画し、マーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
データ列とリストについて散布図を描画し、色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
散布図にパステル調の色のマーカーを使う	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='pastel')
リストとリストについての散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
数列と配列についての散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
配列とイテラブルについての散布図をパステル調の色として描画する	plt.plot(xdata, ydata, c='pastel')
リストとリストについて散布図を描画して、マーカーの色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
データ列とリストについて散布図をプロットして、色をパステル調のに変更する	plt.plot(xdata, ydata, c='pastel')
イテラブルとリストの散布図を描画して、マーカーの色をパステル調のに指定する	plt.plot(xdata, ydata, c='pastel')
散布図に暗い色のマーカーを使う	plt.plot(xdata, ydata, c='dark')
暗い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dark')
暗い色で散布図を描画する	plt.plot(xdata, ydata, c='dark')
リストとリストについての散布図を暗い色で描画する	plt.plot(xdata, ydata, c='dark')
データ列とリストについての散布図を暗い色を使って描画する	plt.plot(xdata, ydata, c='dark')
リストとリストについて散布図を描画して、マーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
リストと数列について散布図を描画し、、マーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
数列と配列について散布図をプロットして、マーカーの色を暗いに変更する	plt.plot(xdata, ydata, c='dark')
散布図に明るい色のマーカーを使う	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='bright')
散布図に明るい色のマーカーを使用する	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='bright')
明るい色で散布図をプロットする	plt.plot(xdata, ydata, c='bright')
散布図を明るい色のマーカーで描画する	plt.plot(xdata, ydata, c='bright')
リストとリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
イテラブルとデータ列についての散布図を明るい色で描く	plt.plot(xdata, ydata, c='bright')
リストとイテラブルについての散布図を明るい色で描く	plt.plot(xdata, ydata, c='bright')
リストとリストについて散布図を描画して、マーカーの色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
リストとデータ列について散布図を描画して、マーカーの色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
数列と数列について散布図を描画して、マーカーの色を明るいに指定する	plt.plot(xdata, ydata, c='bright')
散布図に色差別ない色のマーカーを使う	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='colorblind')
リストとリストについての散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色でリストと数列についての散布図を描く	plt.plot(xdata, ydata, c='colorblind')
色差別ない色でリストとリストについての散布図をプロットする	plt.plot(xdata, ydata, c='colorblind')
リストとリストについて散布図を描画して、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
配列と数列について散布図を描画して、マーカーの色を色差別ないに指定する	plt.plot(xdata, ydata, c='colorblind')
濃い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストとリストについての散布図を濃い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストと配列の散布図を濃い色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストと配列についての散布図を濃い色を使って重なりを見やすく描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
淡い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
散布図を淡い色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
リストとリストについての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
イテラブルとデータ列の散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
イテラブルと数列の散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
パステル調の色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
重なりを見やすく散布図をパステル調の色のマーカーで描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
散布図を重なりを見やすくパステル調の色のマーカーで描く	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストとリストについての散布図をパステル調の色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストと配列についての散布図をパステル調の色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色でデータ列とリストの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
暗い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dark', alpha=0.5)
散布図を暗い色のマーカーで重なりを見やすくプロットする	plt.plot(xdata, ydata, c='dark', alpha=0.5)
リストとリストについての散布図を暗い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
数列とリストについての散布図を暗い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
データ列とデータ列についての散布図を暗い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
明るい色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
重なりを見やすく散布図を明るい色のマーカーで描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リストとリストについての散布図を明るい色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リストとリストの散布図を明るい色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色を用いて重なりを見やすくデータ列とデータ列についての散布図を描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
色差別ない色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
リストとリストについての散布図を色差別ない色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
データ列と配列についての散布図を色差別ない色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
重なりを見やすく色差別ない色でリストとリストの散布図をプロットする	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
濃い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='deep')
リストについてのヒストグラムを濃い色で描画する	plt.hist(xdata, color='deep')
濃いを使ってヒストグラムをプロットする	plt.hist(xdata, color='deep')
リストを濃い色のヒストグラムで描画する	plt.hist(xdata, color='deep')
数列を濃い色のヒストグラムとして描く	plt.hist(xdata, color='deep')
リストを濃い色の度数分布図としてプロットする	plt.hist(xdata, color='deep')
淡い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
淡い色でヒストグラムを描画する	plt.hist(xdata, color='muted')
淡い色としてリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
リストを淡い色のヒストグラムで描画する	plt.hist(xdata, color='muted')
イテラブルを淡い色の度数分布図で描画する	plt.hist(xdata, color='muted')
パステル調の色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='pastel')
パステル調のでリストについての柱状図をプロットする	plt.hist(xdata, color='pastel')
ヒストグラムをパステル調の色として描く	plt.hist(xdata, color='pastel')
リストをパステル調の色のヒストグラムで描画する	plt.hist(xdata, color='pastel')
パステル調の色のヒストグラムで配列を描画する	plt.hist(xdata, color='pastel')
リストをパステル調の色の柱状グラフを用いて描く	plt.hist(xdata, color='pastel')
暗い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='dark')
暗い色として配列についてのヒストグラムを描画する	plt.hist(xdata, color='dark')
リストについてのヒストグラムを暗い色を用いて描画する	plt.hist(xdata, color='dark')
リストを暗い色のヒストグラムで描画する	plt.hist(xdata, color='dark')
リストを暗い色の柱状図で描画する	plt.hist(xdata, color='dark')
明るい色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='bright')
リストを明るい色のヒストグラムで描画する	plt.hist(xdata, color='bright')
配列を明るい色の柱状グラフとして描画する	plt.hist(xdata, color='bright')
明るい色のヒストグラムでリストをプロットする	plt.hist(xdata, color='bright')
色差別ない色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='colorblind')
色差別ない色としてリストについての柱状図を描画する	plt.hist(xdata, color='colorblind')
色差別ない色としてリストについての柱状図を描く	plt.hist(xdata, color='colorblind')
リストを色差別ない色のヒストグラムで描画する	plt.hist(xdata, color='colorblind')
リストを色差別ない色のヒストグラムでプロットする	plt.hist(xdata, color='colorblind')
折れ線グラフにラベルを付ける	plt.plot(xdata, ydata, label=untitled)
折れ線グラフのラベルをuntitledに設定する	plt.plot(xdata, ydata, label=untitled)
折れ線グラフのラベルをuntitledに指定する	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
リストと配列の折れ線をuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフを描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフをプロットしてuntitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
イテラブルとリストの折れ線グラフを描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
＜オプション＞線幅をnに設定する	linewidth = n
＜オプション＞線幅をnに変更する	linewidth = n
折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線を描画する	plt.plot(xdata, ydata, linewidth=n)
リストとリストで折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
イテラブルとリストで折れ線グラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
リストとリストで折れ線を描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
濃いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いの折れ線の線幅を指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いグラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いを配列とイテラブルとして描画し、、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストとデータ列で濃いを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
淡いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストとデータ列で淡いグラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
パステル調のグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リストとリストとしてパステル調のを描画し、、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
配列とリストでパステル調のグラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
暗いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いグラフを配列とリストで描画し、、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
明るいグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストとリストで明るいの折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフを配列とリストで描き、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
色差別ないグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストとして色差別ないの折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないをデータ列とイテラブルで描画し、線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
濃いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いグラフの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いグラフの色をカラーコードにセットする	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストのカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ列とデータ列についてカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとイテラブルのカラーコードの濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いをプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
淡いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストのカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ列と配列のカラーコードの淡いを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
配列と数列のカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストと配列で淡いグラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストで淡いを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
パステル調のグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストのカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
数列と配列のカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストと配列についてカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
暗いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストのカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストと配列のカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いグラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
明るいグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線の色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストとリストのカラーコードの明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストと数列のカラーコードの明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線を描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
色差別ないグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないの色をカラーコードに変更する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストのカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとデータ列のカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
数列とリストについてカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとデータ列を用いて色差別ないを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないをリストとデータ列で描いて、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
赤い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い濃いを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの色を赤色に設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='deep', color='r')
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いを描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いをリストと配列で描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤い淡いの折れ線グラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ列とリストで淡いの折れ線グラフを描き、、線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', color='r')
配列と数列で淡いグラフを描いてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤色のパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
イテラブルとリストとしてパステル調のをプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストとリストを使ってパステル調のグラフを描いて線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤色の暗いの折れ線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフの色を赤色に変更する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフを描画し、、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフの色を赤くする	plt.plot(xdata, ydata, linestyle='bright', color='r')
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
数列とリストで明るいグラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤い色差別ないの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
データ列とデータ列で色差別ないの折れ線グラフを描いて線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
データ列と配列で色差別ないグラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
濃いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
配列とデータ列の青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの濃いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
イテラブルとリストの濃いを描画して、その色を青色に設定する	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストと配列の濃いグラフをプロットし、、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
青色の淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
青色の淡いをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='b')
淡いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの青色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストについて青い淡いを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの淡いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの淡いグラフを描画し、、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
数列とイテラブルの淡いグラフをプロットして色を青くする	plt.plot(xdata, ydata, linestyle='muted', color='b')
青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青いパステル調のを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のグラフの色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストの青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
データ列とリストの青いパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストの青色のパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストのパステル調のグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
データ列とリストについてパステル調のを描画して色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
数列とリストについてパステル調のグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
青色の暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
青い暗いをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='b')
暗いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
暗いグラフの色を青くする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの青い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの暗いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの暗いを描画して、色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとイテラブルについて暗いグラフを描画してその色を青くする	plt.plot(xdata, ydata, linestyle='dark', color='b')
青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
青色の明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='b')
青色の明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいグラフの色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいの色を青色に設定する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
イテラブルとリストの青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストと配列について青い明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストと数列の明るいを描き、、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
データ列と数列の明るいグラフを描いてその色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
色差別ないグラフの色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列とデータ列について青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとイテラブルの青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの色差別ないグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストと配列の色差別ないグラフを描画し、その色を青くする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
データ列とリストについて色差別ないグラフを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
濃いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの黒い濃いを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
数列と数列の黒い濃いをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの濃いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストについて濃いを描いて、その色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストについて濃いグラフをプロットして、色を黒くする	plt.plot(xdata, ydata, linestyle='deep', color='k')
黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒い淡いを描く	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒くする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
数列とリストについて黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
配列とリストの黒い淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの淡いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストと数列の淡いグラフをプロットし、、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
イテラブルと配列の淡いグラフを描いて、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
パステル調のグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
パステル調のの色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストの黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
配列と数列の黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
配列とリストの黒色のパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストのパステル調のグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストのパステル調のグラフを描画して、その色を黒色に設定する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
イテラブルとリストのパステル調のを描画し、、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い暗いグラフをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='k')
暗いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とリストの黒い暗いをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='k')
データ列とリストの黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの暗いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの暗いグラフを描いてその色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
データ列とデータ列について暗いグラフを描画してその色を黒色に設定する	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒色の明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='k')
明るいグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストについて黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
データ列と配列の黒色の明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいをプロットして色を黒くする	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
黒色の色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
色差別ないグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの黒い色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの黒い色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの色差別ないグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ列とイテラブルの色差別ないグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
配列と配列の色差別ないグラフを描いて、その色を黒くする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストについて散布図を描画する	plt.scatter(xdata, ydata)
散布図を描画する	plt.scatter(xdata, ydata)
データ列とデータ列について散布図を描画する	plt.scatter(xdata, ydata)
リストとリストについて相関を可視化する	plt.scatter(xdata, ydata)
リストとリストについて散らばりを可視化する	plt.scatter(xdata, ydata)
リストと配列について相関を可視化する	plt.scatter(xdata, ydata)
散布図のマーカーの大きさを指定する	plt.scatter(xdata, ydata, s=n)
散布図のマーカーの大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストを縦軸、リストを横軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストを縦軸、リストをx軸として、大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)
リストをy座標イテラブルをx軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストとリストについての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
リストと配列の散布図を大きさnで描く	plt.scatter(xdata, ydata, s=n)
大きさnでリストと配列についての散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストとリストについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
配列とリストについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストとリストの散布図を描画して、その大きさをnに指定する	plt.scatter(xdata, ydata, s=n)
散布図にポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
ポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.')
ポイントマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='.')
リストとリストについて散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
配列とリストの散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
データ列とリストについて散布図を描画して、マーカーをポイントに変更する	plt.plot(xdata, ydata, marker='.')
リストとリストについての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストとデータ列についての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストと配列についての散布図にポイントマーカーを描く	plt.plot(xdata, ydata, marker='.')
散布図に丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o')
リストとリストについて散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストと配列について散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
配列とリストについて散布図を描画し、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストとリストについての散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
リストと数列の散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
散布図に三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
▲マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='^')
三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^')
△マーカーで散布図を描く	plt.plot(xdata, ydata, marker='^')
リストとリストについて散布図を描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
リストとリストについて散布図を描き、、マーカーを△に設定する	plt.plot(xdata, ydata, marker='^')
リストとイテラブルについて散布図を描き、、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
リストとリストについての散布図に三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
リストとデータ列についての散布図に上三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^')
散布図に下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
散布図に下三角マーカーを用いる	plt.plot(xdata, ydata, marker='v')
散布図に▽マーカーを用いる	plt.plot(xdata, ydata, marker='v')
下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v')
散布図を下三角マーカーとして描画する	plt.plot(xdata, ydata, marker='v')
▽マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図を描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図を描画し、マーカーを▼に設定する	plt.plot(xdata, ydata, marker='v')
データ列とリストについて散布図を描画してマーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
リストとデータ列についての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
散布図に左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<')
左三角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='<')
左三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='<')
リストとリストについて散布図を描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとリストの散布図をプロットして、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストと配列の散布図を描画し、、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとリストについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
数列と配列についての散布図に左三角マーカーを描く	plt.plot(xdata, ydata, marker='<')
配列とリストについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
散布図に右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>')
右三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='>')
リストとリストについて散布図を描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
配列とリストについて散布図を描画し、、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
リストと配列について散布図を描画してマーカーを右三角に変更する	plt.plot(xdata, ydata, marker='>')
リストとリストについての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
データ列と配列についての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
リストと数列の散布図に右三角マーカーを描く	plt.plot(xdata, ydata, marker='>')
散布図にバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x')
バツマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='x')
クロスマーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='x')
リストとリストについて散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストとリストについて散布図をプロットして、マーカーをクロスに指定する	plt.plot(xdata, ydata, marker='x')
リストとリストについて散布図を描いて、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストとリストについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
イテラブルとリストについての散布図にクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x')
リストと数列についての散布図にバツマーカーをプロットする	plt.plot(xdata, ydata, marker='x')
散布図に大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X')
大バツマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='X')
散布図を大バツマーカーで描画する	plt.plot(xdata, ydata, marker='X')
リストとリストについて散布図を描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストと数列の散布図を描き、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストと配列の散布図を描画してマーカーを大バツに指定する	plt.plot(xdata, ydata, marker='X')
リストとリストについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
配列と配列についての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
散布図に四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
四角マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='s')
四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s')
四角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='s')
リストとリストについて散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
数列と配列について散布図を描画して、マーカーを四角に指定する	plt.plot(xdata, ydata, marker='s')
リストとリストについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
配列とリストの散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
リストと数列についての散布図に四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s')
散布図にダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
散布図に菱形マーカーを使う	plt.plot(xdata, ydata, marker='D')
散布図にダイアモンドマーカーを使用する	plt.plot(xdata, ydata, marker='D')
ダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D')
ダイアモンドマーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='D')
菱形マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='D')
リストとリストについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
リストとデータ列について散布図を描いて、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
リストとリストについて散布図を描画し、、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
リストとリストについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
データ列とリストについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
リストと数列についての散布図に菱形マーカーを描く	plt.plot(xdata, ydata, marker='D')
散布図に星マーカーを使う	plt.plot(xdata, ydata, marker='*')
星マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='*')
星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*')
リストとリストについて散布図を描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
数列と配列について散布図を描画してマーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
配列とリストの散布図を描画して、マーカーを星に指定する	plt.plot(xdata, ydata, marker='*')
リストとリストについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
配列とリストについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
イテラブルとデータ列の散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
散布図にカラーコードのポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについての散布図にカラーコードのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストと配列についての散布図にカラーコードのポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとイテラブルの散布図にカラーコードのポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについて散布図を描画して、ポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
データ列とリストの散布図をプロットして、ポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図にカラーコードの丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図をカラーコードの丸マーカーとしてプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図をカラーコードの丸マーカーで描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについての散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーをリストとリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)
リストと配列についての散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについて散布図を描画して、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストの散布図を描画して、丸マーカーの色をカラーコードにセットする	plt.plot(xdata, ydata, marker='o', c=rgb)
配列とリストについて散布図をプロットして、丸マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図にカラーコードの三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの上三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの上三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについての散布図にカラーコードの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの三角マーカーをリストとリストの散布図に描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの三角マーカーをイテラブルとデータ列についての散布図に描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについて散布図を描画して、三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
配列とイテラブルについて散布図を描画して、三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
イテラブルとリストの散布図を描画して、三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの下三角マーカーを使用する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの▼マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの▽マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについての散布図にカラーコードの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
配列とイテラブルの散布図にカラーコードの下三角マーカーをプロットする	plt.plot(xdata, ydata, marker='v', c=rgb)
リストと配列についての散布図にカラーコードの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについて散布図を描画して、下三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストと配列の散布図を描画し、、▽マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='v', c=rgb)
データ列とリストについて散布図を描画し、、▽マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図をカラーコードの左三角マーカーで描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについての散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
数列とリストについての散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーをデータ列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについて散布図を描画して、左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとデータ列の散布図を描画して左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストと配列の散布図を描画し、左三角マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図にカラーコードの右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについての散布図にカラーコードの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
データ列と数列についての散布図にカラーコードの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについて散布図を描画して、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについて散布図を描いて右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとデータ列について散布図を描画して、右三角マーカーの色をカラーコードにする	plt.plot(xdata, ydata, marker='>', c=rgb)
散布図にカラーコードのバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図にカラーコードのクロスマーカーを用いる	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのクロスマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについての散布図にカラーコードのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーを配列とリストについての散布図に描く	plt.plot(xdata, ydata, marker='x', c=rgb)
配列とデータ列についての散布図にカラーコードのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについて散布図を描画して、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
データ列と配列の散布図を描いてバツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストと数列について散布図を描画し、、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図にカラーコードの大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図にカラーコードの大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図をカラーコードの大バツマーカーで描く	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
配列とリストについての散布図にカラーコードの大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについて散布図を描画して、大バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとデータ列について散布図を描画し、、大バツマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='X', c=rgb)
配列と数列の散布図を描画して大バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図にカラーコードの四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図をカラーコードの四角マーカーで描く	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図をカラーコードの四角マーカーで描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについての散布図にカラーコードの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについて散布図を描画して、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
データ列とイテラブルについて散布図を描画して、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストの散布図を描いて、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にカラーコードのダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーを散布図に使う	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図をカラーコードの菱形マーカーとして描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについての散布図にカラーコードのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ列とデータ列の散布図にカラーコードの菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ列とリストについての散布図にカラーコードのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについて散布図を描画して、ダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
配列とリストの散布図を描画して、ダイアモンドマーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='D', c=rgb)
配列とリストについて散布図を描画して、ダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図にカラーコードの星マーカーを使う	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについての散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストの散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
データ列とリストの散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについて散布図を描画して、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについて散布図を描画し、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図に赤いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤いポイントマーカーを用いる	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤色のポイントマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')
リストとリストについての散布図に赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
イテラブルとイテラブルについての散布図に赤色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤色のポイントマーカーをリストとイテラブルの散布図にプロットする	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーを散布図に使う	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤い丸マーカーで描画する	plt.plot(xdata, ydata, marker='o', c='r')
リストとリストについての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
イテラブルとリストについての散布図に赤い丸マーカーを描く	plt.plot(xdata, ydata, marker='o', c='r')
リストとイテラブルについての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図に赤い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
赤色の三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c='r')
赤い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
散布図を赤色の三角マーカーとして描く	plt.plot(xdata, ydata, marker='^', c='r')
リストとリストについての散布図に赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
イテラブルと数列についての散布図に赤い上三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^', c='r')
データ列とデータ列の散布図に赤い上三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='r')
散布図に赤い下三角マーカーを用いる	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤色の▼マーカーで散布図を描く	plt.plot(xdata, ydata, marker='v', c='r')
赤い▽マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='v', c='r')
リストとリストについての散布図に赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤色の下三角マーカーをイテラブルとイテラブルの散布図に描く	plt.plot(xdata, ydata, marker='v', c='r')
リストとリストについての散布図に赤色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
散布図に赤い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
リストとリストについての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='<', c='r')
イテラブルとデータ列についての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')
赤色の右三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
赤色の右三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
リストとリストについての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
リストと配列についての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
配列と配列の散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
赤色のクロスマーカーで散布図を描く	plt.plot(xdata, ydata, marker='x', c='r')
散布図を赤いバツマーカーを用いて描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストとリストについての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
数列とリストについての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストと配列の散布図に赤いバツマーカーをプロットする	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='r')
散布図を赤色の大バツマーカーで描画する	plt.plot(xdata, ydata, marker='X', c='r')
赤色の大バツマーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='X', c='r')
リストとリストについての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
データ列とリストについての散布図に赤い大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', c='r')
リストとリストについての散布図に赤色の大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', c='r')
散布図に赤い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='r')
散布図に赤色の四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤色の四角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
リストとリストについての散布図に赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
配列とデータ列についての散布図に赤い四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c='r')
散布図に赤いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーで散布図を描く	plt.plot(xdata, ydata, marker='D', c='r')
赤色のダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
リストとリストについての散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
配列とデータ列の散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
赤い菱形マーカーをリストと数列についての散布図にプロットする	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='r')
散布図に赤色の星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーを散布図に使う	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*', c='r')
リストとリストについての散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーを配列とイテラブルの散布図に描画する	plt.plot(xdata, ydata, marker='*', c='r')
イテラブルとリストの散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
散布図に黒いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='k')
散布図に黒いポイントマーカーを用いる	plt.plot(xdata, ydata, marker='.', c='k')
黒いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
黒色のポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストとリストについての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
配列と配列についての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
黒いポイントマーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='.', c='k')
散布図に黒い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='k')
散布図に黒色の丸マーカーを使用する	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
散布図を黒い丸マーカーで描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストとリストについての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストと数列についての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストとイテラブルについての散布図に黒い丸マーカーを描く	plt.plot(xdata, ydata, marker='o', c='k')
散布図に黒い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒い三角マーカーを用いる	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
黒色の三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストとリストについての散布図に黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
配列とリストについての散布図に黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストとリストについての散布図に黒色の三角マーカーを描く	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='k')
黒い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
黒色の下三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='v', c='k')
黒い▽マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
リストとリストについての散布図に黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
黒い下三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='v', c='k')
データ列と配列についての散布図に黒い下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', c='k')
散布図に黒い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
黒色の左三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
リストとリストについての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーをリストとデータ列についての散布図にプロットする	plt.plot(xdata, ydata, marker='<', c='k')
リストと配列についての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='k')
散布図に黒い右三角マーカーを使用する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='k')
散布図を黒い右三角マーカーで描く	plt.plot(xdata, ydata, marker='>', c='k')
リストとリストについての散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーをデータ列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='>', c='k')
リストと配列の散布図に黒色の右三角マーカーを描く	plt.plot(xdata, ydata, marker='>', c='k')
散布図に黒いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='x', c='k')
リストとリストについての散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
リストとリストの散布図に黒いクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
リストとリストについての散布図に黒いバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒い大バツマーカーを用いる	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
黒色の大バツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストとリストについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストとイテラブルについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
イテラブルとリストについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒い四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒い四角マーカーを使用する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
散布図を黒い四角マーカーで描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストとリストについての散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
イテラブルと数列についての散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒色の四角マーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
黒いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
リストとリストについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
リストとリストについての散布図に黒色のダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D', c='k')
イテラブルとデータ列についての散布図に黒いダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
リストとリストについての散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
リストとイテラブルの散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーをリストと数列についての散布図に描画する	plt.plot(xdata, ydata, marker='*', c='k')
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
グラフに鉛直方向の破線を付ける	plt.axvline(x=0, linestyle='dashed')
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
グラフにx=0の点線を付ける	plt.axvline(x=0, linestyle='dotted')
に鉛直方向の点線を付ける	plt.axvline(x=0, linestyle='dotted')
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
グラフにy=0の破線を付ける	plt.axhline(y=0, linestyle='dashed')
グラフに水平方向の破線を付ける	plt.axhline(y=0, linestyle='dashed')
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
グラフに水平方向の一点鎖線をつける	plt.axhline(y=0, linestyle='dashbot')
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
グラフにy=0の点線をつける	plt.axhline(y=0, linestyle='dotted')
グラフにy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
グラフにy=0の実線をつける	plt.axhline(y=0, linestyle='solid')
に水平方向の実線をつける	plt.axhline(y=0, linestyle='solid')
リストに応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストとリストについてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストとイテラブルについてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストと数列についてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
カラーバーを描画する	plt.colorbar()
カラーバーを付ける	plt.colorbar()
カラーバーを横向きで描画する	plt.colorbar(orientation='horizontal')
カラーバーを横向きに描画する	plt.colorbar(orientation='horizontal')
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
リストとリストについての散布図に文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとイテラブルについての散布図にデータラベル用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストについての散布図に文字列というデータラベル用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストと配列の散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
ヒストグラムを描画する	plt.hist(データ列)
リストのヒストグラムを描画する	plt.hist(aList)
リストのヒストグラムをプロットする	plt.hist(aList)
リストをヒストグラムで可視化する	plt.hist(aList)
リストをヒストグラムを用いて可視化する	plt.hist(aList)
リストをヒストグラムにする	plt.hist(aList)
配列のヒストグラムを描画する	plt.hist(aArray)
配列をヒストグラムで可視化する	plt.hist(aArray)
配列をヒストグラムとして可視化する	plt.hist(aArray)
配列をヒストグラムにする	plt.hist(aArray)
データフレームの列のヒストグラムを描画する	plt.hist(df[column])
データフレームの列の度数分布図を描画する	plt.hist(df[column])
データフレームの列をヒストグラムで可視化する	plt.hist(df[column])
データフレームの列をヒストグラムを用いて可視化する	plt.hist(df[column])
データフレームの列をヒストグラムとして可視化する	plt.hist(df[column])
データフレームの列をヒストグラムにする	plt.hist(df[column])
データフレームのカラムをヒストグラムにする	plt.hist(df[column])
データ列のヒストグラムを描画する	plt.hist(ds)
データ列をヒストグラムで可視化する	plt.hist(ds)
データ列をヒストグラムにする	plt.hist(ds)
ヒストグラムを半透明にする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描画して、半透明ににする	plt.hist(データ列, alpha=0.5)
柱状グラフを描画して、半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描いて半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムの透明度をxに設定する	plt.hist(データ列, alpha=x)
度数分布図の透明度をxに設定する	plt.hist(データ列, alpha=x)
ヒストグラムを描画して、透明度をxに設定する	plt.hist(データ列, alpha=x)
柱状図を描画して、透明度をxに指定する	plt.hist(データ列, alpha=x)
ヒストグラムをプロットし、、透明度をxに変更する	plt.hist(データ列, alpha=x)
ヒストグラムのビン数を設定する	plt.hist(データ列, bins=n)
ヒストグラムのビン数をセットする	plt.hist(データ列, bins=n)
ビン数をnに設定してヒストグラムを描画する	plt.hist(データ列, bins=n)
区間の数を設定してヒストグラムを描く	plt.hist(データ列, bins=n)
ビン数nのヒストグラムを描画する	plt.hist(データ列, bins=n)
ビンnのヒストグラムを描画する	plt.hist(データ列, bins=n)
ヒストグラムを描画して、ビン数をnに設定する	plt.hist(データ列, bins=n)
ヒストグラムをプロットして、ビン数をnに変更する	plt.hist(データ列, bins=n)
ヒストグラムを描画して、nにビンを変更する	plt.hist(データ列, bins=n)
ヒストグラムの範囲を設定する	plt.hist(データ列, range=(start, end))
ヒストグラムの間を設定する	plt.hist(データ列, range=(start, end))
度数分布図の間を設定する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendまでの範囲で描画する	plt.hist(データ列, range=(start, end))
柱状グラフをstartからendまでの範囲で描画する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendまでの区間で描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてリストを描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてイテラブルを描く	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いて数列を描く	plt.hist(データ列, range=(start, end))
startからendまでヒストグラムにする	plt.hist(データ列, range=(start, end))
ヒストグラムの描画して、正規化する	plt.hist(データ列, density=True)
ヒストグラムの描画して正規化する	plt.hist(データ列, density=True)
ヒストグラムのプロットし、、正規化する	plt.hist(データ列, density=True)
正規化されたヒストグラムを描画する	plt.hist(データ列, density=True)
ヒストグラムを描画し、合計を1にする	plt.hist(データ列, density=True)
柱状図を描画し、合計を1にする	plt.hist(データ列, density=True)
二つのデータ列を並べてヒストグラムにする	plt.hist([データ列, データ列2], color=['b', 'r'])
ヒストグラムを二つ並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
２つ並べて度数分布図を描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
ヒストグラムを横に並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
データ列を箱ひげ図で描画する	plt.boxplot(データ列)
データ列を箱ヒゲ図で描く	plt.boxplot(データ列)
データ列を箱ひげ図にする	plt.boxplot(データ列)
箱ひげ図でデータ列を可視化する	plt.boxplot(データ列)
箱ひげ図を用いてデータ列を可視化する	plt.boxplot(データ列)
二つのデータ列を並べて箱ひげ図にする	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べて描画する	plt.boxplot([データ列, データ列2])
ボックスチャートを横に並べて描画する	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べる	plt.boxplot([データ列, データ列2])
箱ひげ図を２つ並べる	plt.boxplot([データ列, データ列2])
二つのカラムを並べて箱ひげ図にする	plt.boxplot([df[column], df[column2]])
二つのカラムを並べてボックスチャートにする	plt.boxplot([df[column], df[column2]])
棒グラフを描画する	plt.bar(ラベル列, データ列)
棒グラフを描く	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、棒グラフを描画する	plt.bar(ラベル列, データ列)
縦棒グラフを描画する	plt.bar(ラベル列, データ列)
縦棒グラフを描く	plt.bar(ラベル列, データ列)
縦棒をプロットする	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、縦棒グラフを描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、縦棒を描画する	plt.bar(ラベル列, データ列)
横棒グラフを描画する	plt.barh(ラベル列, データ列)
横棒グラフを描く	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して、横棒グラフを描画する	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して、横棒を描画する	plt.barh(ラベル列, データ列)
棒グラフの色をカラーコードに設定する	plt.bar(ラベル列, データ列, color=rgb)
棒グラフの色をカラーコードに変更する	plt.bar(ラベル列, データ列, color=rgb)
横棒グラフの色をカラーコードに設定する	plt.barh(ラベル列, データ列, color=rgb)
横棒グラフの色を設定する	plt.barh(ラベル列, データ列, color=rgb)
棒グラフを積み上げにする	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ棒グラフを描画する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
横棒グラフを積み上げにする	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ横棒グラフを描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ横棒グラフを描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
棒グラフを描画して、グラフ幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒を描画して幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフを描いて、グラフ幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフの幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
xに棒グラフの幅を設定する	plt.bar(ラベル列, データ列, width=x)
横棒グラフを描画して、グラフ幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフを描き、xにグラフ幅を変更する	plt.barh(ラベル列, データ列, width=x)
横棒グラフを描画して、xに棒の幅を変更する	plt.barh(ラベル列, データ列, width=x)
横棒グラフの幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
xに横棒の幅を変更する	plt.barh(ラベル列, データ列, width=x)
xに横棒の幅を設定する	plt.barh(ラベル列, データ列, width=x)
棒グラフを描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
縦棒グラフを描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
横棒グラフを描画して、中央寄せする	plt.barh(ラベル列, データ列, align='center')
横棒グラフを描画し、、中央寄せする	plt.barh(ラベル列, データ列, align='center')
横棒グラフを描画して中央寄せする	plt.barh(ラベル列, データ列, align='center')
複数カラムの散布図を一度に描画する	sns.pairplot(df[[column, column2, column3]])
複数カラムの関係性を一度に描画する	sns.pairplot(df[[column, column2, column3]])
複数カラムのヒストグラムを一度に描画する	sns.pairplot(df[[column, column2, column3]])
＜オプション＞アリスブルー色を使う	color = 'aliceblue'
＜オプション＞グラフの色をアリスブルーに設定する	color = 'aliceblue'
＜オプション＞アリスブルーに色を設定する	color = 'aliceblue'
＜オプション＞アンティークホワイト色を使う	color = 'antiquewhite'
＜オプション＞グラフの色をアンティークホワイトに設定する	color = 'antiquewhite'
＜オプション＞アンティークホワイトにグラフの色を設定する	color = 'antiquewhite'
＜オプション＞アクア色を使う	color = 'aqua'
＜オプション＞アクアを使う	color = 'aqua'
＜オプション＞グラフの色をアクアに設定する	color = 'aqua'
＜オプション＞グラフの色をアクアに指定する	color = 'aqua'
＜オプション＞色をアクアに設定する	color = 'aqua'
＜オプション＞アクアマリン色を使う	color = 'aquamarine'
＜オプション＞グラフの色をアクアマリンに設定する	color = 'aquamarine'
＜オプション＞グラフの色をアクアマリンに指定する	color = 'aquamarine'
＜オプション＞グラフの色をアクアマリンにする	color = 'aquamarine'
＜オプション＞紺碧色を使う	color = 'azure'
＜オプション＞紺碧色を使用する	color = 'azure'
＜オプション＞グラフの色を紺碧に設定する	color = 'azure'
＜オプション＞色を紺碧に設定する	color = 'azure'
＜オプション＞ベージュ色を使う	color = 'beige'
＜オプション＞グラフの色をベージュに設定する	color = 'beige'
＜オプション＞ビスク色を使う	color = 'bisque'
＜オプション＞グラフの色をビスクに設定する	color = 'bisque'
＜オプション＞グラフの色をビスクに変更する	color = 'bisque'
＜オプション＞色をビスクに指定する	color = 'bisque'
＜オプション＞ブラック色を使う	color = 'black'
＜オプション＞グラフの色をブラックに設定する	color = 'black'
＜オプション＞ブランチドアーモンド色を使う	color = 'blanchedalmond'
＜オプション＞ブランチドアーモンドを用いる	color = 'blanchedalmond'
＜オプション＞ブランチドアーモンド色を用いる	color = 'blanchedalmond'
＜オプション＞グラフの色をブランチドアーモンドに設定する	color = 'blanchedalmond'
＜オプション＞青色を使う	color = 'blue'
＜オプション＞グラフの色を青に設定する	color = 'blue'
＜オプション＞グラフの色を青に指定する	color = 'blue'
＜オプション＞ブルーバイオレット色を使う	color = 'blueviolet'
＜オプション＞ブルーバイオレット色を使用する	color = 'blueviolet'
＜オプション＞グラフの色をブルーバイオレットに設定する	color = 'blueviolet'
＜オプション＞色をブルーバイオレットに設定する	color = 'blueviolet'
＜オプション＞茶色色を使う	color = 'brown'
＜オプション＞グラフの色を茶色に設定する	color = 'brown'
＜オプション＞色をブラウンに設定する	color = 'brown'
＜オプション＞バリーウッド色を使う	color = 'burlywood'
＜オプション＞グラフの色をバリーウッドに設定する	color = 'burlywood'
＜オプション＞色をバリーウッドに設定する	color = 'burlywood'
＜オプション＞カデットブルー色を使う	color = 'cadetblue'
＜オプション＞カデットブルー色を用いる	color = 'cadetblue'
＜オプション＞グラフの色をカデットブルーに設定する	color = 'cadetblue'
＜オプション＞カデットブルーに色を設定する	color = 'cadetblue'
＜オプション＞カデットブルーに色を指定する	color = 'cadetblue'
＜オプション＞シャルトリューズ色を使う	color = 'chartreuse'
＜オプション＞グラフの色をシャルトリューズに設定する	color = 'chartreuse'
＜オプション＞色をシャルトリューズに変更する	color = 'chartreuse'
＜オプション＞チョコレート色を使う	color = 'chocolate'
＜オプション＞チョコレート色を用いる	color = 'chocolate'
＜オプション＞グラフの色をチョコレートに設定する	color = 'chocolate'
＜オプション＞グラフの色をチョコレートにセットする	color = 'chocolate'
＜オプション＞コーラル色を使う	color = 'coral'
＜オプション＞コーラルを使用する	color = 'coral'
＜オプション＞グラフの色をコーラルに設定する	color = 'coral'
＜オプション＞コーラルに色を設定する	color = 'coral'
＜オプション＞コーンフラワーブルー色を使う	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルー色を使用する	color = 'cornflowerblue'
＜オプション＞やわらかい青を使う	color = 'cornflowerblue'
＜オプション＞グラフの色をコーンフラワーブルーに設定する	color = 'cornflowerblue'
＜オプション＞色をコーンフラワーブルーにする	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルーにグラフの色を設定する	color = 'cornflowerblue'
＜オプション＞コーンズシルク色を使う	color = 'cornsilk'
＜オプション＞コーンズシルク色を用いる	color = 'cornsilk'
＜オプション＞グラフの色をコーンズシルクに設定する	color = 'cornsilk'
＜オプション＞色をコーンズシルクに設定する	color = 'cornsilk'
＜オプション＞クリムゾン色を使う	color = 'crimson'
＜オプション＞真紅色を使う	color = 'crimson'
＜オプション＞深紅色を使う	color = 'crimson'
＜オプション＞グラフの色をクリムゾンに設定する	color = 'crimson'
＜オプション＞色を深紅に設定する	color = 'crimson'
＜オプション＞クリムゾンにグラフの色を設定する	color = 'crimson'
＜オプション＞シアン色を使う	color = 'cyan'
＜オプション＞グラフの色をシアンに設定する	color = 'cyan'
＜オプション＞色をシアンに指定する	color = 'cyan'
＜オプション＞紺色を使う	color = 'darkblue'
＜オプション＞グラフの色を紺に設定する	color = 'darkblue'
＜オプション＞色を濃い青に設定する	color = 'darkblue'
＜オプション＞ダークシアン色を使う	color = 'darkcyan'
＜オプション＞ダークシアンを使う	color = 'darkcyan'
＜オプション＞グラフの色をダークシアンに設定する	color = 'darkcyan'
＜オプション＞グラフの色をダークシアンに変更する	color = 'darkcyan'
＜オプション＞ダークゴールデンロッド色を使う	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッドを用いる	color = 'darkgoldenrod'
＜オプション＞グラフの色をダークゴールデンロッドに設定する	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッドにグラフの色を設定する	color = 'darkgoldenrod'
＜オプション＞ダークグレー色を使う	color = 'darkgray'
＜オプション＞ダークグレーを使う	color = 'darkgray'
＜オプション＞グラフの色をダークグレーに設定する	color = 'darkgray'
＜オプション＞ダークグレーにグラフの色を設定する	color = 'darkgray'
＜オプション＞ダークグリーン色を使う	color = 'darkgreen'
＜オプション＞グラフの色をダークグリーンに設定する	color = 'darkgreen'
＜オプション＞ダークグレー色を使う	color = 'darkgrey'
＜オプション＞ダークグレー色を用いる	color = 'darkgrey'
＜オプション＞グラフの色をダークグレーに設定する	color = 'darkgrey'
＜オプション＞ダークカーキ色を使う	color = 'darkkhaki'
＜オプション＞グラフの色をダークカーキに設定する	color = 'darkkhaki'
＜オプション＞ダークマゼンタ色を使う	color = 'darkmagenta'
＜オプション＞グラフの色をダークマゼンタに設定する	color = 'darkmagenta'
＜オプション＞色をダークマゼンタにセットする	color = 'darkmagenta'
＜オプション＞ダークオリーブグリーン色を使う	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーン色を用いる	color = 'darkolivegreen'
＜オプション＞グラフの色をダークオリーブグリーンに設定する	color = 'darkolivegreen'
＜オプション＞色をダークオリーブグリーンに変更する	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーンにグラフの色を設定する	color = 'darkolivegreen'
＜オプション＞ダークオレンジ色を使う	color = 'darkorange'
＜オプション＞グラフの色をダークオレンジに設定する	color = 'darkorange'
＜オプション＞ダークオーキッド色を使う	color = 'darkorchid'
＜オプション＞グラフの色をダークオーキッドに設定する	color = 'darkorchid'
＜オプション＞グラフの色をダークオーキッドにセットする	color = 'darkorchid'
＜オプション＞暗い赤色を使う	color = 'darkred'
＜オプション＞ダークレッド色を用いる	color = 'darkred'
＜オプション＞グラフの色を暗い赤に設定する	color = 'darkred'
＜オプション＞グラフの色をダークレッドに設定する	color = 'darkred'
＜オプション＞グラフの色をダークレッドにする	color = 'darkred'
＜オプション＞ダークサーモン色を使う	color = 'darksalmon'
＜オプション＞ダークサーモンを使う	color = 'darksalmon'
＜オプション＞グラフの色をダークサーモンに設定する	color = 'darksalmon'
＜オプション＞ダークシアグリーン色を使う	color = 'darkseagreen'
＜オプション＞グラフの色をダークシアグリーンに設定する	color = 'darkseagreen'
＜オプション＞グラフの色をダークシアグリーンに指定する	color = 'darkseagreen'
＜オプション＞ダークスレートブルー色を使う	color = 'darkslateblue'
＜オプション＞グラフの色をダークスレートブルーに設定する	color = 'darkslateblue'
＜オプション＞グラフの色をダークスレートブルーに指定する	color = 'darkslateblue'
＜オプション＞ダークスラテグレー色を使う	color = 'darkslategray'
＜オプション＞グラフの色をダークスラテグレーに設定する	color = 'darkslategray'
＜オプション＞グラフの色をダークスラテグレーに変更する	color = 'darkslategray'
＜オプション＞ダーク・スラテグレー色を使う	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーを使う	color = 'darkslategrey'
＜オプション＞グラフの色をダーク・スラテグレーに設定する	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーに色を設定する	color = 'darkslategrey'
＜オプション＞ダークターコイズ色を使う	color = 'darkturquoise'
＜オプション＞ダークターコイズを使う	color = 'darkturquoise'
＜オプション＞グラフの色をダークターコイズに設定する	color = 'darkturquoise'
＜オプション＞ダークバイオレット色を使う	color = 'darkviolet'
＜オプション＞グラフの色をダークバイオレットに設定する	color = 'darkviolet'
＜オプション＞色をダークバイオレットに設定する	color = 'darkviolet'
＜オプション＞デピンク色を使う	color = 'deeppink'
＜オプション＞グラフの色をデピンクに設定する	color = 'deeppink'
＜オプション＞色をデピンクにする	color = 'deeppink'
＜オプション＞ディープスカイブルー色を使う	color = 'deepskyblue'
＜オプション＞ディープスカイブルーを使う	color = 'deepskyblue'
＜オプション＞グラフの色をディープスカイブルーに設定する	color = 'deepskyblue'
＜オプション＞グラフの色をディープスカイブルーに変更する	color = 'deepskyblue'
＜オプション＞色をディープスカイブルーに設定する	color = 'deepskyblue'
＜オプション＞ディムグレー色を使う	color = 'dimgray'
＜オプション＞グラフの色をディムグレーに設定する	color = 'dimgray'
＜オプション＞グラフの色をディムグレーにセットする	color = 'dimgray'
＜オプション＞ディムグレー色を使う	color = 'dimgrey'
＜オプション＞グラフの色をディムグレーに設定する	color = 'dimgrey'
＜オプション＞色をディムグレーにする	color = 'dimgrey'
＜オプション＞ディムグレーにグラフの色を設定する	color = 'dimgrey'
＜オプション＞ドジャーブルー色を使う	color = 'dodgerblue'
＜オプション＞ドジャーブルーを使用する	color = 'dodgerblue'
＜オプション＞グラフの色をドジャーブルーに設定する	color = 'dodgerblue'
＜オプション＞耐火レンガ色を使う	color = 'firebrick'
＜オプション＞グラフの色を耐火レンガに設定する	color = 'firebrick'
＜オプション＞フローラルホワイト色を使う	color = 'floralwhite'
＜オプション＞グラフの色をフローラルホワイトに設定する	color = 'floralwhite'
＜オプション＞フローラルホワイトにグラフの色を指定する	color = 'floralwhite'
＜オプション＞フローラルホワイトに色を設定する	color = 'floralwhite'
＜オプション＞フォレストグリーン色を使う	color = 'forestgreen'
＜オプション＞グラフの色をフォレストグリーンに設定する	color = 'forestgreen'
＜オプション＞フォレストグリーンにグラフの色を指定する	color = 'forestgreen'
＜オプション＞フォレストグリーンにグラフの色をセットする	color = 'forestgreen'
＜オプション＞フクシア色を使う	color = 'fuchsia'
＜オプション＞グラフの色をフクシアに設定する	color = 'fuchsia'
＜オプション＞ゲインズボロ色を使う	color = 'gainsboro'
＜オプション＞ゲインズボロ色を使用する	color = 'gainsboro'
＜オプション＞ゲインズボロ色を用いる	color = 'gainsboro'
＜オプション＞グラフの色をゲインズボロに設定する	color = 'gainsboro'
＜オプション＞ゴーストホワイト色を使う	color = 'ghostwhite'
＜オプション＞グラフの色をゴーストホワイトに設定する	color = 'ghostwhite'
＜オプション＞ゴーストホワイトにグラフの色を変更する	color = 'ghostwhite'
＜オプション＞ゴールド色を使う	color = 'gold'
＜オプション＞グラフの色をゴールドに設定する	color = 'gold'
＜オプション＞ゴールデンロッド色を使う	color = 'goldenrod'
＜オプション＞ゴールデンロッドを用いる	color = 'goldenrod'
＜オプション＞グラフの色をゴールデンロッドに設定する	color = 'goldenrod'
＜オプション＞グレー色を使う	color = 'gray'
＜オプション＞グラフの色をグレーに設定する	color = 'gray'
＜オプション＞グリーン色を使う	color = 'green'
＜オプション＞グリーン色を用いる	color = 'green'
＜オプション＞グラフの色をグリーンに設定する	color = 'green'
＜オプション＞グラフの色をグリーンに変更する	color = 'green'
＜オプション＞グリーンイエロー色を使う	color = 'greenyellow'
＜オプション＞グラフの色をグリーンイエローに設定する	color = 'greenyellow'
＜オプション＞グリーンイエローにグラフの色を設定する	color = 'greenyellow'
＜オプション＞グレー色を使う	color = 'grey'
＜オプション＞グレーを使う	color = 'grey'
＜オプション＞グラフの色をグレーに設定する	color = 'grey'
＜オプション＞色をグレーに変更する	color = 'grey'
＜オプション＞ハニーデュー色を使う	color = 'honeydew'
＜オプション＞グラフの色をハニーデューに設定する	color = 'honeydew'
＜オプション＞グラフの色をハニーデューに指定する	color = 'honeydew'
＜オプション＞ホットピンク色を使う	color = 'hotpink'
＜オプション＞ホットピンク色を用いる	color = 'hotpink'
＜オプション＞グラフの色をホットピンクに設定する	color = 'hotpink'
＜オプション＞色をホットピンクに設定する	color = 'hotpink'
＜オプション＞インディアンレッド色を使う	color = 'indianred'
＜オプション＞グラフの色をインディアンレッドに設定する	color = 'indianred'
＜オプション＞グラフの色をインディアンレッドにする	color = 'indianred'
＜オプション＞インディゴ色を使う	color = 'indigo'
＜オプション＞グラフの色をインディゴに設定する	color = 'indigo'
＜オプション＞インディゴにグラフの色を設定する	color = 'indigo'
＜オプション＞アイボリー色を使う	color = 'ivory'
＜オプション＞グラフの色をアイボリーに設定する	color = 'ivory'
＜オプション＞色をアイボリーにする	color = 'ivory'
＜オプション＞カーキ色を使う	color = 'khaki'
＜オプション＞グラフの色をカーキに設定する	color = 'khaki'
＜オプション＞カーキにグラフの色を指定する	color = 'khaki'
＜オプション＞ラベンダー色を使う	color = 'lavender'
＜オプション＞ラベンダーを使う	color = 'lavender'
＜オプション＞グラフの色をラベンダーに設定する	color = 'lavender'
＜オプション＞ラベンダーブラッシュ色を使う	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュを用いる	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュを使う	color = 'lavenderblush'
＜オプション＞グラフの色をラベンダーブラッシュに設定する	color = 'lavenderblush'
＜オプション＞ローングリーン色を使う	color = 'lawngreen'
＜オプション＞グラフの色をローングリーンに設定する	color = 'lawngreen'
＜オプション＞レモンシフォン色を使う	color = 'lemonchiffon'
＜オプション＞グラフの色をレモンシフォンに設定する	color = 'lemonchiffon'
＜オプション＞レモンシフォンにグラフの色を指定する	color = 'lemonchiffon'
＜オプション＞ライトブルー色を使う	color = 'lightblue'
＜オプション＞ライトブルー色を使用する	color = 'lightblue'
＜オプション＞グラフの色をライトブルーに設定する	color = 'lightblue'
＜オプション＞グラフの色をライトブルーに指定する	color = 'lightblue'
＜オプション＞ライトコーラル色を使う	color = 'lightcoral'
＜オプション＞グラフの色をライトコーラルに設定する	color = 'lightcoral'
＜オプション＞ライトシアン色を使う	color = 'lightcyan'
＜オプション＞グラフの色をライトシアンに設定する	color = 'lightcyan'
＜オプション＞ライトゴールドロディイエロー色を使う	color = 'lightgoldenrodyellow'
＜オプション＞ライトゴールドロディイエロー色を用いる	color = 'lightgoldenrodyellow'
＜オプション＞グラフの色をライトゴールドロディイエローに設定する	color = 'lightgoldenrodyellow'
＜オプション＞グラフの色をライトゴールドロディイエローに変更する	color = 'lightgoldenrodyellow'
＜オプション＞ライトグレー色を使う	color = 'lightgray'
＜オプション＞ライトグレーを使う	color = 'lightgray'
＜オプション＞グラフの色をライトグレーに設定する	color = 'lightgray'
＜オプション＞ライトグリーン色を使う	color = 'lightgreen'
＜オプション＞ライトグリーン色を用いる	color = 'lightgreen'
＜オプション＞グラフの色をライトグリーンに設定する	color = 'lightgreen'
＜オプション＞ライトグリーンに色を設定する	color = 'lightgreen'
＜オプション＞色をライトグリーンに指定する	color = 'lightgreen'
＜オプション＞ライトグレー色を使う	color = 'lightgrey'
＜オプション＞ライトグレーを使う	color = 'lightgrey'
＜オプション＞グラフの色をライトグレーに設定する	color = 'lightgrey'
＜オプション＞淡いピンク色色を使う	color = 'lightpink'
＜オプション＞グラフの色を淡いピンク色に設定する	color = 'lightpink'
＜オプション＞ライトサーモン色を使う	color = 'lightsalmon'
＜オプション＞グラフの色をライトサーモンに設定する	color = 'lightsalmon'
＜オプション＞ライトグリーン色を使う	color = 'lightseagreen'
＜オプション＞ライトグリーン色を使用する	color = 'lightseagreen'
＜オプション＞グラフの色をライトグリーンに設定する	color = 'lightseagreen'
＜オプション＞ライトグリーンに色を設定する	color = 'lightseagreen'
＜オプション＞ライトスカイブルー色を使う	color = 'lightskyblue'
＜オプション＞ライトスカイブルー色を使用する	color = 'lightskyblue'
＜オプション＞グラフの色をライトスカイブルーに設定する	color = 'lightskyblue'
＜オプション＞色をライトスカイブルーに設定する	color = 'lightskyblue'
＜オプション＞ライトスレイグレー色を使う	color = 'lightslategray'
＜オプション＞ライトスレイグレーを使う	color = 'lightslategray'
＜オプション＞グラフの色をライトスレイグレーに設定する	color = 'lightslategray'
＜オプション＞グラフの色をライトスレイグレーに変更する	color = 'lightslategray'
＜オプション＞ライトスレイグレー色を使う	color = 'lightslategrey'
＜オプション＞ライトスレイグレーを用いる	color = 'lightslategrey'
＜オプション＞グラフの色をライトスレイグレーに設定する	color = 'lightslategrey'
＜オプション＞色をライトスレイグレーに指定する	color = 'lightslategrey'
＜オプション＞ライトスチールブルー色を使う	color = 'lightsteelblue'
＜オプション＞グラフの色をライトスチールブルーに設定する	color = 'lightsteelblue'
＜オプション＞色をライトスチールブルーに変更する	color = 'lightsteelblue'
＜オプション＞ライトイエロー色を使う	color = 'lightyellow'
＜オプション＞ライトイエロー色を用いる	color = 'lightyellow'
＜オプション＞グラフの色をライトイエローに設定する	color = 'lightyellow'
＜オプション＞ライトイエローにグラフの色を設定する	color = 'lightyellow'
＜オプション＞ライム色を使う	color = 'lime'
＜オプション＞ライムを用いる	color = 'lime'
＜オプション＞グラフの色をライムに設定する	color = 'lime'
＜オプション＞グラフの色をライムに変更する	color = 'lime'
＜オプション＞ライムグリーン色を使う	color = 'limegreen'
＜オプション＞ライムグリーンを用いる	color = 'limegreen'
＜オプション＞グラフの色をライムグリーンに設定する	color = 'limegreen'
＜オプション＞リネン色を使う	color = 'linen'
＜オプション＞リネン色を使用する	color = 'linen'
＜オプション＞グラフの色をリネンに設定する	color = 'linen'
＜オプション＞グラフの色をリネンに指定する	color = 'linen'
＜オプション＞色をリネンに設定する	color = 'linen'
＜オプション＞マゼンタ色を使う	color = 'magenta'
＜オプション＞マゼンタ色を使用する	color = 'magenta'
＜オプション＞グラフの色をマゼンタに設定する	color = 'magenta'
＜オプション＞マゼンタに色を設定する	color = 'magenta'
＜オプション＞マルーン色を使う	color = 'maroon'
＜オプション＞グラフの色をマルーンに設定する	color = 'maroon'
＜オプション＞ミディアムアクアマリン色を使う	color = 'mediumaquamarine'
＜オプション＞ミディアムアクアマリンを使う	color = 'mediumaquamarine'
＜オプション＞グラフの色をミディアムアクアマリンに設定する	color = 'mediumaquamarine'
＜オプション＞ミディアムブルー色を使う	color = 'mediumblue'
＜オプション＞ミディアムブルー色を用いる	color = 'mediumblue'
＜オプション＞グラフの色をミディアムブルーに設定する	color = 'mediumblue'
＜オプション＞ミディアムオーキッド色を使う	color = 'mediumorchid'
＜オプション＞グラフの色をミディアムオーキッドに設定する	color = 'mediumorchid'
＜オプション＞グラフの色をミディアムオーキッドに変更する	color = 'mediumorchid'
＜オプション＞ミディアムパープル色を使う	color = 'mediumpurple'
＜オプション＞グラフの色をミディアムパープルに設定する	color = 'mediumpurple'
＜オプション＞色をミディアムパープルに設定する	color = 'mediumpurple'
＜オプション＞ミディアムシアグリーン色を使う	color = 'mediumseagreen'
＜オプション＞ミディアムシアグリーン色を用いる	color = 'mediumseagreen'
＜オプション＞ミディアムシアグリーンを使う	color = 'mediumseagreen'
＜オプション＞グラフの色をミディアムシアグリーンに設定する	color = 'mediumseagreen'
＜オプション＞ミディアムスレートブルー色を使う	color = 'mediumslateblue'
＜オプション＞グラフの色をミディアムスレートブルーに設定する	color = 'mediumslateblue'
＜オプション＞グラフの色をミディアムスレートブルーに指定する	color = 'mediumslateblue'
＜オプション＞グラフの色をミディアムスレートブルーにセットする	color = 'mediumslateblue'
＜オプション＞ミディアムスプリンググリーン色を使う	color = 'mediumspringgreen'
＜オプション＞グラフの色をミディアムスプリンググリーンに設定する	color = 'mediumspringgreen'
＜オプション＞ミディアムスプリンググリーンに色を指定する	color = 'mediumspringgreen'
＜オプション＞ミディアムターコイズ色を使う	color = 'mediumturquoise'
＜オプション＞ミディアムターコイズ色を使用する	color = 'mediumturquoise'
＜オプション＞グラフの色をミディアムターコイズに設定する	color = 'mediumturquoise'
＜オプション＞ミディアムターコイズにグラフの色を設定する	color = 'mediumturquoise'
＜オプション＞ミディアムバイオレットレッド色を使う	color = 'mediumvioletred'
＜オプション＞ミディアムバイオレットレッドを使う	color = 'mediumvioletred'
＜オプション＞グラフの色をミディアムバイオレットレッドに設定する	color = 'mediumvioletred'
＜オプション＞ミッドナイトブルー色を使う	color = 'midnightblue'
＜オプション＞グラフの色をミッドナイトブルーに設定する	color = 'midnightblue'
＜オプション＞ミントクリーム色を使う	color = 'mintcream'
＜オプション＞ミントクリーム色を使用する	color = 'mintcream'
＜オプション＞グラフの色をミントクリームに設定する	color = 'mintcream'
＜オプション＞グラフの色をミントクリームに指定する	color = 'mintcream'
＜オプション＞ミスティローズ色を使う	color = 'mistyrose'
＜オプション＞ミスティローズ色を用いる	color = 'mistyrose'
＜オプション＞グラフの色をミスティローズに設定する	color = 'mistyrose'
＜オプション＞モカシン色を使う	color = 'moccasin'
＜オプション＞グラフの色をモカシンに設定する	color = 'moccasin'
＜オプション＞ナバホホワイト色を使う	color = 'navajowhite'
＜オプション＞グラフの色をナバホホワイトに設定する	color = 'navajowhite'
＜オプション＞ナバホホワイトにグラフの色をセットする	color = 'navajowhite'
＜オプション＞ネイビー色を使う	color = 'navy'
＜オプション＞ネイビー色を使用する	color = 'navy'
＜オプション＞グラフの色をネイビーに設定する	color = 'navy'
＜オプション＞オールドレース色を使う	color = 'oldlace'
＜オプション＞グラフの色をオールドレースに設定する	color = 'oldlace'
＜オプション＞グラフの色をオールドレースに変更する	color = 'oldlace'
＜オプション＞色をオールドレースに設定する	color = 'oldlace'
＜オプション＞オリーブ色を使う	color = 'olive'
＜オプション＞オリーブを用いる	color = 'olive'
＜オプション＞グラフの色をオリーブに設定する	color = 'olive'
＜オプション＞オリベドラブ色を使う	color = 'olivedrab'
＜オプション＞オリベドラブ色を使用する	color = 'olivedrab'
＜オプション＞グラフの色をオリベドラブに設定する	color = 'olivedrab'
＜オプション＞色をオリベドラブに設定する	color = 'olivedrab'
＜オプション＞オレンジ色を使う	color = 'orange'
＜オプション＞グラフの色をオレンジに設定する	color = 'orange'
＜オプション＞グラフの色をオレンジに指定する	color = 'orange'
＜オプション＞オレンジレッド色を使う	color = 'orangered'
＜オプション＞オレンジレッドを使う	color = 'orangered'
＜オプション＞グラフの色をオレンジレッドに設定する	color = 'orangered'
＜オプション＞オーキッド色を使う	color = 'orchid'
＜オプション＞グラフの色をオーキッドに設定する	color = 'orchid'
＜オプション＞パールゴールデンロッド色を使う	color = 'palegoldenrod'
＜オプション＞グラフの色をパールゴールデンロッドに設定する	color = 'palegoldenrod'
＜オプション＞色をパールゴールデンロッドに設定する	color = 'palegoldenrod'
＜オプション＞ペールグリーン色を使う	color = 'palegreen'
＜オプション＞ペールグリーンを用いる	color = 'palegreen'
＜オプション＞グラフの色をペールグリーンに設定する	color = 'palegreen'
＜オプション＞色をペールグリーンに設定する	color = 'palegreen'
＜オプション＞パレットトルコイズ色を使う	color = 'paleturquoise'
＜オプション＞グラフの色をパレットトルコイズに設定する	color = 'paleturquoise'
＜オプション＞グラフの色をパレットトルコイズに変更する	color = 'paleturquoise'
＜オプション＞パールバイオレットレッド色を使う	color = 'palevioletred'
＜オプション＞グラフの色をパールバイオレットレッドに設定する	color = 'palevioletred'
＜オプション＞グラフの色をパールバイオレットレッドに変更する	color = 'palevioletred'
＜オプション＞グラフの色をパールバイオレットレッドに指定する	color = 'palevioletred'
＜オプション＞パパイヤウィップ色を使う	color = 'papayawhip'
＜オプション＞パパイヤウィップを使う	color = 'papayawhip'
＜オプション＞グラフの色をパパイヤウィップに設定する	color = 'papayawhip'
＜オプション＞ピーチパフ色を使う	color = 'peachpuff'
＜オプション＞グラフの色をピーチパフに設定する	color = 'peachpuff'
＜オプション＞色をピーチパフに指定する	color = 'peachpuff'
＜オプション＞ピーチパフにグラフの色を設定する	color = 'peachpuff'
＜オプション＞ペルー色を使う	color = 'peru'
＜オプション＞ペルーを使用する	color = 'peru'
＜オプション＞グラフの色をペルーに設定する	color = 'peru'
＜オプション＞ペルーに色を設定する	color = 'peru'
＜オプション＞ピンク色を使う	color = 'pink'
＜オプション＞ピンクを使う	color = 'pink'
＜オプション＞グラフの色をピンクに設定する	color = 'pink'
＜オプション＞グラフの色をピンクにセットする	color = 'pink'
＜オプション＞色をピンクに設定する	color = 'pink'
＜オプション＞プラム色を使う	color = 'plum'
＜オプション＞グラフの色をプラムに設定する	color = 'plum'
＜オプション＞色をプラムに設定する	color = 'plum'
＜オプション＞パウダーブルー色を使う	color = 'powderblue'
＜オプション＞パウダーブルー色を用いる	color = 'powderblue'
＜オプション＞グラフの色をパウダーブルーに設定する	color = 'powderblue'
＜オプション＞パープル色を使う	color = 'purple'
＜オプション＞グラフの色をパープルに設定する	color = 'purple'
＜オプション＞レベッカパープル色を使う	color = 'rebeccapurple'
＜オプション＞レベッカパープル色を用いる	color = 'rebeccapurple'
＜オプション＞レベッカパープル色を使用する	color = 'rebeccapurple'
＜オプション＞グラフの色をレベッカパープルに設定する	color = 'rebeccapurple'
＜オプション＞レベッカパープルに色を変更する	color = 'rebeccapurple'
＜オプション＞赤色を使う	color = 'red'
＜オプション＞赤を使う	color = 'red'
＜オプション＞赤色を使用する	color = 'red'
＜オプション＞グラフの色を赤に設定する	color = 'red'
＜オプション＞ロージーブラウン色を使う	color = 'rosybrown'
＜オプション＞グラフの色をロージーブラウンに設定する	color = 'rosybrown'
＜オプション＞グラフの色をロージーブラウンにする	color = 'rosybrown'
＜オプション＞色をロージーブラウンに設定する	color = 'rosybrown'
＜オプション＞ロイヤルブルー色を使う	color = 'royalblue'
＜オプション＞グラフの色をロイヤルブルーに設定する	color = 'royalblue'
＜オプション＞ロイヤルブルーにグラフの色を設定する	color = 'royalblue'
＜オプション＞サドルブラウン色を使う	color = 'saddlebrown'
＜オプション＞グラフの色をサドルブラウンに設定する	color = 'saddlebrown'
＜オプション＞色をサドルブラウンに設定する	color = 'saddlebrown'
＜オプション＞サドルブラウンに色を変更する	color = 'saddlebrown'
＜オプション＞サーモン色を使う	color = 'salmon'
＜オプション＞サーモン色を使用する	color = 'salmon'
＜オプション＞サーモンを使う	color = 'salmon'
＜オプション＞グラフの色をサーモンに設定する	color = 'salmon'
＜オプション＞サンディーブラウン色を使う	color = 'sandybrown'
＜オプション＞グラフの色をサンディーブラウンに設定する	color = 'sandybrown'
＜オプション＞シーグリーン色を使う	color = 'seagreen'
＜オプション＞シーグリーン色を用いる	color = 'seagreen'
＜オプション＞グラフの色をシーグリーンに設定する	color = 'seagreen'
＜オプション＞シーグリーンにグラフの色を変更する	color = 'seagreen'
＜オプション＞シーグリーンにグラフの色を設定する	color = 'seagreen'
＜オプション＞貝殻色を使う	color = 'seashell'
＜オプション＞貝殻を使用する	color = 'seashell'
＜オプション＞グラフの色を貝殻に設定する	color = 'seashell'
＜オプション＞グラフの色を貝殻に変更する	color = 'seashell'
＜オプション＞シエナ色を使う	color = 'sienna'
＜オプション＞グラフの色をシエナに設定する	color = 'sienna'
＜オプション＞色をシエナに設定する	color = 'sienna'
＜オプション＞シルバー色を使う	color = 'silver'
＜オプション＞グラフの色をシルバーに設定する	color = 'silver'
＜オプション＞シルバーに色をする	color = 'silver'
＜オプション＞グラフの色をシルバーに変更する	color = 'silver'
＜オプション＞スカイブルー色を使う	color = 'skyblue'
＜オプション＞スカイブルーを使用する	color = 'skyblue'
＜オプション＞グラフの色をスカイブルーに設定する	color = 'skyblue'
＜オプション＞グラフの色をスカイブルーに変更する	color = 'skyblue'
＜オプション＞スレートブルー色を使う	color = 'slateblue'
＜オプション＞スレートブルーを用いる	color = 'slateblue'
＜オプション＞グラフの色をスレートブルーに設定する	color = 'slateblue'
＜オプション＞スラグレー色を使う	color = 'slategray'
＜オプション＞グラフの色をスラグレーに設定する	color = 'slategray'
＜オプション＞スラグレーに色を設定する	color = 'slategray'
＜オプション＞スラグレー色を使う	color = 'slategrey'
＜オプション＞スラグレー色を使用する	color = 'slategrey'
＜オプション＞グラフの色をスラグレーに設定する	color = 'slategrey'
＜オプション＞色をスラグレーに設定する	color = 'slategrey'
＜オプション＞スノー色を使う	color = 'snow'
＜オプション＞グラフの色をスノーに設定する	color = 'snow'
＜オプション＞スプリンググリーン色を使う	color = 'springgreen'
＜オプション＞グラフの色をスプリンググリーンに設定する	color = 'springgreen'
＜オプション＞スプリンググリーンにグラフの色を設定する	color = 'springgreen'
＜オプション＞スチールブルー色を使う	color = 'steelblue'
＜オプション＞グラフの色をスチールブルーに設定する	color = 'steelblue'
＜オプション＞色をスチールブルーに設定する	color = 'steelblue'
＜オプション＞色をスチールブルーに変更する	color = 'steelblue'
＜オプション＞タン色を使う	color = 'tan'
＜オプション＞タンを使う	color = 'tan'
＜オプション＞グラフの色をタンに設定する	color = 'tan'
＜オプション＞グラフの色をタンに指定する	color = 'tan'
＜オプション＞青緑色を使う	color = 'teal'
＜オプション＞青緑色を使用する	color = 'teal'
＜オプション＞グラフの色を青緑に設定する	color = 'teal'
＜オプション＞グラフの色を青緑にセットする	color = 'teal'
＜オプション＞シスル色を使う	color = 'thistle'
＜オプション＞グラフの色をシスルに設定する	color = 'thistle'
＜オプション＞トマト色を使う	color = 'tomato'
＜オプション＞トマト色を使用する	color = 'tomato'
＜オプション＞グラフの色をトマトに設定する	color = 'tomato'
＜オプション＞ターコイズ色を使う	color = 'turquoise'
＜オプション＞ターコイズを使う	color = 'turquoise'
＜オプション＞ターコイズ色を用いる	color = 'turquoise'
＜オプション＞グラフの色をターコイズに設定する	color = 'turquoise'
＜オプション＞ターコイズにグラフの色を設定する	color = 'turquoise'
＜オプション＞青紫色を使う	color = 'violet'
＜オプション＞青紫色を使用する	color = 'violet'
＜オプション＞グラフの色を青紫に設定する	color = 'violet'
＜オプション＞グラフの色を青紫に変更する	color = 'violet'
＜オプション＞色を青紫に設定する	color = 'violet'
＜オプション＞小麦色色を使う	color = 'wheat'
＜オプション＞小麦色を使う	color = 'wheat'
＜オプション＞グラフの色を小麦色に設定する	color = 'wheat'
＜オプション＞白色を使う	color = 'white'
＜オプション＞グラフの色を白に設定する	color = 'white'
＜オプション＞白にグラフの色を変更する	color = 'white'
＜オプション＞色を白にする	color = 'white'
＜オプション＞ホワイトスモーク色を使う	color = 'whitesmoke'
＜オプション＞ホワイトスモーク色を使用する	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークに設定する	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークにする	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークに指定する	color = 'whitesmoke'
＜オプション＞黄色色を使う	color = 'yellow'
＜オプション＞グラフの色を黄色に設定する	color = 'yellow'
＜オプション＞黄色にグラフの色を設定する	color = 'yellow'
＜オプション＞グラフの色を黄色に指定する	color = 'yellow'
＜オプション＞イエローグリーン色を使う	color = 'yellowgreen'
＜オプション＞グラフの色をイエローグリーンに設定する	color = 'yellowgreen'
＜オプション＞色をイエローグリーンに設定する	color = 'yellowgreen'
折れ線グラフの色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフの色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
アリスブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフを描画して、その色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフの色をアンティークホワイトに変更する	plt.plot(データ列, データ列2, color='antiquewhite')
アンティークホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフの色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
アクア色の線グラフを描画する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画して、その色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフの色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
アクアマリン色の線グラフを描画する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
線グラフを描画して、その色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに指定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフの色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
紺碧色の線グラフを描画する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフを描画して、その色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフを描画してその色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフの色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
ベージュ色の線グラフを描画する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフを描画して、その色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
線グラフを描画して、その色をベージュに指定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフの色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
ビスク色の線グラフを描画する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフを描画して、その色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフの色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
ブラック色の線グラフを描画する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して、その色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフの色をブランチドアーモンドに変更する	plt.plot(データ列, データ列2, color='blanchedalmond')
ブランチドアーモンド色の線グラフを描画する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフを描画して、色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフの色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色を青に変更する	plt.plot(データ列, データ列2, color='blue')
青色の線グラフを描画する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して、その色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して、その色を青に指定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して、色を青にする	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフの色をブルーバイオレットにセットする	plt.plot(データ列, データ列2, color='blueviolet')
ブルーバイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
線グラフを描画してその色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
線グラフを描画して色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフの色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフの色を茶色に変更する	plt.plot(データ列, データ列2, color='brown')
茶色色の線グラフを描画する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、その色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、その色をブラウンに指定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフの色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
バリーウッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、その色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画してその色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフの色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
カデットブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、その色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、色をカデットブルーに指定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフの色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
シャルトリューズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して、その色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して、色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフの色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
チョコレート色の線グラフを描画する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、その色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、その色をチョコレートに変更する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフの色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色を珊瑚に変更する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色をコーラルに変更する	plt.plot(データ列, データ列2, color='coral')
コーラル色の線グラフを描画する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、その色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
線グラフを描画して、その色をコーラルに指定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
コーンフラワーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
線グラフの色をコーンズシルクにセットする	plt.plot(データ列, データ列2, color='cornsilk')
コーンズシルク色の線グラフを描画する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画してその色をコーンズシルクにする	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画して色をコーンズシルクに指定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフの色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
線グラフの色をクリムゾンに指定する	plt.plot(データ列, データ列2, color='crimson')
クリムゾン色の線グラフを描画する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色を真紅に設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフの色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
線グラフの色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
シアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画して、その色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフの色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色を濃い青に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色をダークブルーに変更する	plt.plot(データ列, データ列2, color='darkblue')
紺色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画して、その色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画してその色を濃い青に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色を濃いシアンにセットする	plt.plot(データ列, データ列2, color='darkcyan')
ダークシアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフを描画して、その色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
線グラフを描画してその色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
ダークゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画してその色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
線グラフを描画して、色をダークゴールデンロッドに指定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
ダークグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、その色をダークグレーに指定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、色をダークグレーに変更する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフの色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフの色をダークグリーンに指定する	plt.plot(データ列, データ列2, color='darkgreen')
ダークグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、その色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
ダークグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフの色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
線グラフの色をダークカーキに指定する	plt.plot(データ列, データ列2, color='darkkhaki')
ダークカーキ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して、その色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して、色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフの色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
線グラフの色をダークマゼンタに変更する	plt.plot(データ列, データ列2, color='darkmagenta')
ダークマゼンタ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
ダークオリーブグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画して、その色をダークオリーブグリーンに変更する	plt.plot(データ列, データ列2, color='darkolivegreen')
線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフの色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
線グラフの色をダークオレンジに変更する	plt.plot(データ列, データ列2, color='darkorange')
ダークオレンジ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、その色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、色をダークオレンジに指定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフの色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色をダークオーキッドに変更する	plt.plot(データ列, データ列2, color='darkorchid')
ダークオーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色をダークレッドに設定する	plt.plot(データ列, データ列2, color='darkred')
線グラフの色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
暗い赤色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、その色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
線グラフを描画して、その色をダークレッドに設定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
ダークサーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画して、その色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画して、色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
線グラフの色をダークシアグリーンに指定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフの色をダークシアグリーンに指定する	plt.plot(データ列, データ列2, color='darkseagreen')
ダークシアグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画して、その色をダークシアグリーンにセットする	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフの色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
ダークスレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画して色をダークスレートブルーにセットする	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
線グラフの色をダークスラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategray')
ダークスラテグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して、その色をダークスラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して、その色をダークスラテグレーに指定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
ダーク・スラテグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフの色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
ダークターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画して、その色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画してその色をダークターコイズに変更する	plt.plot(データ列, データ列2, color='darkturquoise')
線グラフを描画して、その色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフの色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
ダークバイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフの色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
デピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、その色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
線グラフを描画してその色をデピンクに指定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、その色をデピンクに指定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフの色をディープスカイブルーに変更する	plt.plot(データ列, データ列2, color='deepskyblue')
線グラフの色をディープスカイブルーに変更する	plt.plot(データ列, データ列2, color='deepskyblue')
ディープスカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
線グラフを描画して、色をディープスカイブルーに指定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
線グラフの色をディムグレーに変更する	plt.plot(データ列, データ列2, color='dimgray')
線グラフの色をディムグレーにする	plt.plot(データ列, データ列2, color='dimgray')
ディムグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフを描画してその色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
ディムグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画してその色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフの色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
ドジャーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフの色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
耐火レンガ色の線グラフを描画する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフを描画して、その色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
線グラフを描画して、色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフを描画してその色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
フローラルホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
線グラフの色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
フォレストグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、その色をフォレストグリーンに指定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、色をフォレストグリーンに指定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフの色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフの色をフクシアに指定する	plt.plot(データ列, データ列2, color='fuchsia')
フクシア色の線グラフを描画する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画して、その色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
線グラフを描画してその色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフの色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフの色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
ゲインズボロ色の線グラフを描画する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフを描画して、その色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフを描画して色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフの色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
線グラフの色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
ゴーストホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフの色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールドに指定する	plt.plot(データ列, データ列2, color='gold')
ゴールド色の線グラフを描画する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して、その色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
ゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフの色をグレーに指定する	plt.plot(データ列, データ列2, color='gray')
線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
グレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、その色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフの色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
線グラフの色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
グリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='green')
折れ線グラフを描画して、その色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
線グラフを描画して、その色をグリーンに指定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフの色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
線グラフの色をグリーンイエローに指定する	plt.plot(データ列, データ列2, color='greenyellow')
グリーンイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフを描画して、色をグリーンイエローに変更する	plt.plot(データ列, データ列2, color='greenyellow')
線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
グレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して、その色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して、色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画してその色をグレーに変更する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフの色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
ハニーデュー色の線グラフを描画する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフを描画して、その色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフを描画して色をハニーデューにセットする	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフの色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
ホットピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフを描画して、その色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフを描画してその色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
線グラフを描画して、その色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフの色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフの色をインディアンレッドにセットする	plt.plot(データ列, データ列2, color='indianred')
インディアンレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
線グラフを描画して色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフの色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフの色をインディゴに変更する	plt.plot(データ列, データ列2, color='indigo')
インディゴ色の線グラフを描画する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画して、その色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
線グラフを描画して、その色をインディゴに指定する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフの色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
アイボリー色の線グラフを描画する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画して、その色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画してその色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画して色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフの色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
カーキ色の線グラフを描画する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、その色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、その色をカーキに変更する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフの色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフの色をラベンダーにする	plt.plot(データ列, データ列2, color='lavender')
ラベンダー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画して、その色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
線グラフを描画して、その色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフの色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
ラベンダーブラッシュ色の線グラフを描画する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフの色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
ローングリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画して、その色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画して、その色をローングリーンに変更する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフの色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
レモンシフォン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフの色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフの色をライトブルーに指定する	plt.plot(データ列, データ列2, color='lightblue')
ライトブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して、その色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して、色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフの色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
ライトコーラル色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフを描画して、その色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフを描画して、色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
線グラフを描画して色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフの色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフの色をライトシアンに変更する	plt.plot(データ列, データ列2, color='lightcyan')
ライトシアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフの色をライトゴールドロディイエローに変更する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
ライトゴールドロディイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
線グラフを描画して、色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
ライトグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
ライトグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
線グラフを描画して、色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画して、その色をライトグリーンに指定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
ライトグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
線グラフを描画して、色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画してその色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフの色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
淡いピンク色色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画してその色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、その色を淡いピンク色に指定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフの色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
ライトサーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画して、その色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
線グラフを描画して、色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画して、その色をライトサーモンに指定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
ライトグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して、その色をライトグリーンに変更する	plt.plot(データ列, データ列2, color='lightseagreen')
線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
ライトスカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
線グラフの色をライトスレイグレーに変更する	plt.plot(データ列, データ列2, color='lightslategray')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して、色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画して、色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフの色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
ライトスチールブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
線グラフを描画してその色をライトスチールブルーに指定する	plt.plot(データ列, データ列2, color='lightsteelblue')
線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフの色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
ライトイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフを描画して、その色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフを描画してその色をライトイエローに変更する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフの色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
ライム色の線グラフを描画する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して、その色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフの色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
線グラフの色をライムグリーンに指定する	plt.plot(データ列, データ列2, color='limegreen')
ライムグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画して、その色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
線グラフを描画して、その色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画してその色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフの色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
リネン色の線グラフを描画する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画して、その色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
マゼンタ色の線グラフを描画する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、その色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
線グラフを描画して、その色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、その色をマゼンタに変更する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフの色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
マルーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、その色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
ミディアムアクアマリン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフを描画してその色をミディアムアクアマリンに指定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフの色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフの色をミディアムブルーにする	plt.plot(データ列, データ列2, color='mediumblue')
ミディアムブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
線グラフを描画して、その色をミディアムブルーに変更する	plt.plot(データ列, データ列2, color='mediumblue')
線グラフを描画して、色をミディアムブルーに変更する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
ミディアムオーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画してその色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフの色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
ミディアムパープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフを描画して色をミディアムパープルにする	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
ミディアムシアグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画してその色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
線グラフを描画して、色をミディアムシアグリーンに指定する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
ミディアムスレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
ミディアムスプリンググリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフの色をミディアムターコイズに変更する	plt.plot(データ列, データ列2, color='mediumturquoise')
ミディアムターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
線グラフを描画してその色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフの色をミディアムバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='mediumvioletred')
ミディアムバイオレットレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフの色をミッドナイトブルーに指定する	plt.plot(データ列, データ列2, color='midnightblue')
ミッドナイトブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフを描画して、色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフの色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
ミントクリーム色の線グラフを描画する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画して、その色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画して、色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフの色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
ミスティローズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、その色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、その色をミスティローズにセットする	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフの色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフの色をモカシンにセットする	plt.plot(データ列, データ列2, color='moccasin')
モカシン色の線グラフを描画する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画して、その色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフの色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
ナバホホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフの色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフの色をネイビーに指定する	plt.plot(データ列, データ列2, color='navy')
ネイビー色の線グラフを描画する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、その色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、色をネイビーに変更する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフの色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
線グラフの色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフの色をオールドレースに変更する	plt.plot(データ列, データ列2, color='oldlace')
オールドレース色の線グラフを描画する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、その色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
線グラフを描画して、その色をオールドレースに変更する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画してその色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフの色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
オリーブ色の線グラフを描画する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画して、その色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
線グラフを描画して、その色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画してその色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフの色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフの色をオリベドラブに変更する	plt.plot(データ列, データ列2, color='olivedrab')
オリベドラブ色の線グラフを描画する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して、その色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフの色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
線グラフの色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
オレンジ色の線グラフを描画する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、その色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、その色をオレンジにセットする	plt.plot(データ列, データ列2, color='orange')
折れ線グラフの色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
オレンジレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフの色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
オーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、その色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
パールゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
線グラフを描画して、その色をパールゴールデンロッドにする	plt.plot(データ列, データ列2, color='palegoldenrod')
線グラフを描画して、その色をパールゴールデンロッドに変更する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフの色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
線グラフの色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
ペールグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、その色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフの色をパレットトルコイズに変更する	plt.plot(データ列, データ列2, color='paleturquoise')
パレットトルコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフを描画してその色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
パールバイオレットレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
線グラフを描画して、その色をパールバイオレットレッドにセットする	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
パパイヤウィップ色の線グラフを描画する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフを描画して、その色をパパイヤウィップにする	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフの色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
ピーチパフ色の線グラフを描画する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、その色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、その色をピーチパフにセットする	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフの色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフの色をペルーに指定する	plt.plot(データ列, データ列2, color='peru')
線グラフの色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
ペルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、その色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画してその色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、その色をペルーに指定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフの色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
ピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して、その色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して、その色をピンクに指定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフの色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
プラム色の線グラフを描画する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画して、その色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
線グラフを描画して、その色をプラムにする	plt.plot(データ列, データ列2, color='plum')
折れ線グラフの色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフの色をパウダーブルーに指定する	plt.plot(データ列, データ列2, color='powderblue')
パウダーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフを描画して、その色をパウダーブルーに変更する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフを描画して、色をパウダーブルーに変更する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフの色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
パープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフを描画して、その色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフの色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
レベッカパープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフの色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフの色を赤に指定する	plt.plot(データ列, データ列2, color='red')
赤色の線グラフを描画する	plt.plot(データ列, データ列2, color='red')
折れ線グラフを描画して、その色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフを描画して、色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフの色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフの色をロージーブラウンに指定する	plt.plot(データ列, データ列2, color='rosybrown')
ロージーブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフを描画して色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
ロイヤルブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフを描画して、その色をロイヤルブルーに変更する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフを描画して、その色をロイヤルブルーに指定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフの色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフの色をサドルブラウンに変更する	plt.plot(データ列, データ列2, color='saddlebrown')
サドルブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、その色をサドルブラウンにセットする	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフの色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
サーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフを描画して、その色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
サンディーブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
線グラフを描画してその色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフの色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
シーグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して、その色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフの色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
貝殻色の線グラフを描画する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画して、その色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフの色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
シエナ色の線グラフを描画する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、その色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、その色をシエナにセットする	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフの色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
シルバー色の線グラフを描画する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して、その色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して、その色をシルバーに変更する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフの色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
スカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフを描画して、その色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフを描画してその色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフの色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
スレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、その色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、その色をスレートブルーにセットする	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、色をスレートブルーにセットする	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
スラグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
線グラフを描画してその色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
スラグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフの色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフの色をスノーに指定する	plt.plot(データ列, データ列2, color='snow')
線グラフの色をスノーに指定する	plt.plot(データ列, データ列2, color='snow')
スノー色の線グラフを描画する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画して、その色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画して色をスノーに指定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画してその色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフの色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフの色をスプリンググリーンにセットする	plt.plot(データ列, データ列2, color='springgreen')
スプリンググリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフの色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
線グラフの色をスチールブルーに変更する	plt.plot(データ列, データ列2, color='steelblue')
スチールブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフを描画して、その色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフを描画して、その色をスチールブルーに指定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフの色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
線グラフの色を淡い茶色に変更する	plt.plot(データ列, データ列2, color='tan')
線グラフの色をタンに指定する	plt.plot(データ列, データ列2, color='tan')
タン色の線グラフを描画する	plt.plot(データ列, データ列2, color='tan')
タン色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、その色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、その色を淡い茶色に変更する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、その色を淡い茶色に設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフの色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
青緑色の線グラフを描画する	plt.plot(データ列, データ列2, color='teal')
青緑色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画して、その色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画して、その色を青緑にセットする	plt.plot(データ列, データ列2, color='teal')
折れ線グラフの色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
シスル色の線グラフを描画する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、その色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
線グラフを描画して色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフの色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
トマト色の線グラフを描画する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画して、その色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
線グラフを描画してその色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフの色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
線グラフの色をターコイズに変更する	plt.plot(データ列, データ列2, color='turquoise')
線グラフの色をターコイズにする	plt.plot(データ列, データ列2, color='turquoise')
ターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフを描画して、その色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
線グラフを描画して、色をターコイズに変更する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフの色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
青紫色の線グラフを描画する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、その色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、色をバイオレットに設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフの色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
小麦色色の線グラフを描画する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して、その色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して、その色を小麦色に指定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフの色を白に設定する	plt.plot(データ列, データ列2, color='white')
白色の線グラフを描画する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画して、その色を白に設定する	plt.plot(データ列, データ列2, color='white')
線グラフを描画して、その色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフの色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
線グラフの色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
線グラフの色をホワイトスモークに変更する	plt.plot(データ列, データ列2, color='whitesmoke')
ホワイトスモーク色の線グラフを描画する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
線グラフを描画して、その色をホワイトスモークに指定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフの色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
黄色色の線グラフを描画する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフを描画して、その色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフの色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
イエローグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
ヒストグラムの色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
アリスブルー色のヒストグラムを描画する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画して、その色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画して、その色をアリスブルーに指定する	plt.hist(データ列, color='aliceblue')
ヒストグラムの色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
アンティークホワイト色のヒストグラムを描画する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、その色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、色をアンティークホワイトにする	plt.hist(データ列, color='antiquewhite')
ヒストグラムの色をアクアに設定する	plt.hist(データ列, color='aqua')
アクア色のヒストグラムを描画する	plt.hist(データ列, color='aqua')
ヒストグラムを描画して、その色をアクアに設定する	plt.hist(データ列, color='aqua')
ヒストグラムを描画して、その色をアクアに変更する	plt.hist(データ列, color='aqua')
ヒストグラムの色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
アクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画して、その色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画して色をアクアマリンに変更する	plt.hist(データ列, color='aquamarine')
ヒストグラムの色を紺碧に設定する	plt.hist(データ列, color='azure')
紺碧色のヒストグラムを描画する	plt.hist(データ列, color='azure')
ヒストグラムを描画して、その色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムを描画して、その色を紺碧に変更する	plt.hist(データ列, color='azure')
ヒストグラムを描画してその色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムの色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムの色をベージュに変更する	plt.hist(データ列, color='beige')
ヒストグラムの色をベージュにセットする	plt.hist(データ列, color='beige')
ベージュ色のヒストグラムを描画する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、その色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、その色をベージュにする	plt.hist(データ列, color='beige')
ヒストグラムの色をビスクに設定する	plt.hist(データ列, color='bisque')
ビスク色のヒストグラムを描画する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して、その色をビスクに設定する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して、色をビスクに変更する	plt.hist(データ列, color='bisque')
ヒストグラムの色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムの色をブラックに変更する	plt.hist(データ列, color='black')
ブラック色のヒストグラムを描画する	plt.hist(データ列, color='black')
ヒストグラムを描画して、その色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムを描画してその色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムを描画して色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムの色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ブランチドアーモンド色のヒストグラムを描画する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画して、その色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画してその色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムの色を青に設定する	plt.hist(データ列, color='blue')
青にヒストグラムの色を設定する	plt.hist(データ列, color='blue')
青色のヒストグラムを描画する	plt.hist(データ列, color='blue')
ヒストグラムを描画して、その色を青に設定する	plt.hist(データ列, color='blue')
ヒストグラムの色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ブルーバイオレットにヒストグラムの色を設定する	plt.hist(データ列, color='blueviolet')
ブルーバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画して、その色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画してその色をブルーバイオレットにする	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画してその色をブルーバイオレットに指定する	plt.hist(データ列, color='blueviolet')
ヒストグラムの色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムの色をブラウンに変更する	plt.hist(データ列, color='brown')
茶色色のヒストグラムを描画する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色をブラウンに設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画してその色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムの色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
バリーウッドにヒストグラムの色を設定する	plt.hist(データ列, color='burlywood')
ヒストグラムの色をバリーウッドに指定する	plt.hist(データ列, color='burlywood')
バリーウッド色のヒストグラムを描画する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画して、その色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画して、色をバリーウッドに変更する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画して、その色をバリーウッドにセットする	plt.hist(データ列, color='burlywood')
ヒストグラムの色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
カデットブルー色のヒストグラムを描画する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して、その色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して、色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画してその色をカデットブルーにする	plt.hist(データ列, color='cadetblue')
ヒストグラムの色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムの色をシャルトリューズに変更する	plt.hist(データ列, color='chartreuse')
シャルトリューズ色のヒストグラムを描画する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して、その色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムの色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
チョコレート色のヒストグラムを描画する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、その色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
ヒストグラムの色をコーラルに設定する	plt.hist(データ列, color='coral')
コーラルにヒストグラムの色を変更する	plt.hist(データ列, color='coral')
コーラル色のヒストグラムを描画する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、その色をコーラルに設定する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、その色をコーラルにセットする	plt.hist(データ列, color='coral')
ヒストグラムの色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
コーンフラワーブルー色のヒストグラムを描画する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画してその色をやわらかい青に指定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムの色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
コーンズシルクにヒストグラムの色を設定する	plt.hist(データ列, color='cornsilk')
コーンズシルク色のヒストグラムを描画する	plt.hist(データ列, color='cornsilk')
ヒストグラムを描画して、その色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
ヒストグラムを描画して、色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
ヒストグラムの色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
クリムゾン色のヒストグラムを描画する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色をクリムゾンに指定する	plt.hist(データ列, color='crimson')
ヒストグラムの色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムの色をシアンに変更する	plt.hist(データ列, color='cyan')
シアン色のヒストグラムを描画する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、その色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画してその色をシアンに変更する	plt.hist(データ列, color='cyan')
ヒストグラムの色を紺に設定する	plt.hist(データ列, color='darkblue')
紺色のヒストグラムを描画する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色をダークブルーに指定する	plt.hist(データ列, color='darkblue')
ヒストグラムの色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムの色をダークシアンに指定する	plt.hist(データ列, color='darkcyan')
ダークシアン色のヒストグラムを描画する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、その色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して色を濃いシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、その色をダークシアンにする	plt.hist(データ列, color='darkcyan')
ヒストグラムの色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークゴールデンロッドにセットする	plt.hist(データ列, color='darkgoldenrod')
ダークゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、その色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画してその色をダークゴールデンロッドに指定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgray')
ヒストグラムを描画して、その色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ヒストグラムを描画して、色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ヒストグラムの色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ダークグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、その色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画してその色をダークグリーンに変更する	plt.hist(データ列, color='darkgreen')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して、その色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムの色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ダークカーキ色のヒストグラムを描画する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、その色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、その色をダークカーキにする	plt.hist(データ列, color='darkkhaki')
ヒストグラムの色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ダークマゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、その色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、その色をダークマゼンタに指定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムの色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ダークオリーブグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画して、その色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画して、色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムの色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ダークオレンジにヒストグラムの色を指定する	plt.hist(データ列, color='darkorange')
ダークオレンジ色のヒストグラムを描画する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、その色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、その色をダークオレンジにする	plt.hist(データ列, color='darkorange')
ヒストグラムを描画してその色をダークオレンジに変更する	plt.hist(データ列, color='darkorange')
ヒストグラムの色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色をダークオーキッドにセットする	plt.hist(データ列, color='darkorchid')
ダークオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、その色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ダークレッドにヒストグラムの色をする	plt.hist(データ列, color='darkred')
ダークレッドにヒストグラムの色を設定する	plt.hist(データ列, color='darkred')
暗い赤色のヒストグラムを描画する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色をダークレッドに変更する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ヒストグラムの色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ダークサーモン色のヒストグラムを描画する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して、その色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して、その色をダークサーモンに変更する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムの色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ダークシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画して、その色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムの色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスレートブルーに指定する	plt.hist(データ列, color='darkslateblue')
ダークスレートブルーにヒストグラムの色をする	plt.hist(データ列, color='darkslateblue')
ダークスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、その色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、その色をダークスレートブルーに指定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムの色をダークスラテグレーに変更する	plt.hist(データ列, color='darkslategray')
ダークスラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画して、その色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムの色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダーク・スラテグレーにセットする	plt.hist(データ列, color='darkslategrey')
ダーク・スラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して、その色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画してその色をダーク・スラテグレーに変更する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ダークターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに指定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに変更する	plt.hist(データ列, color='darkturquoise')
ヒストグラムの色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
ダークバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して、その色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して色をダークバイオレットにする	plt.hist(データ列, color='darkviolet')
ヒストグラムの色をデピンクに設定する	plt.hist(データ列, color='deeppink')
デピンク色のヒストグラムを描画する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画して、その色をデピンクに設定する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画してその色をデピンクに指定する	plt.hist(データ列, color='deeppink')
ヒストグラムの色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ディープスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、その色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、色をディープスカイブルーにセットする	plt.hist(データ列, color='deepskyblue')
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して、その色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画してその色をディムグレーに変更する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して、色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ディムグレーにヒストグラムの色をする	plt.hist(データ列, color='dimgrey')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画して、その色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画して、その色をディムグレーに変更する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画してその色をディムグレーに指定する	plt.hist(データ列, color='dimgrey')
ヒストグラムの色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ドジャーブルー色のヒストグラムを描画する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、その色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムの色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
耐火レンガ色のヒストグラムを描画する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して、その色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して、その色を耐火レンガに指定する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画してその色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムの色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
フローラルホワイト色のヒストグラムを描画する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して、その色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムの色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
フォレストグリーン色のヒストグラムを描画する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、その色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
ヒストグラムの色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
フクシア色のヒストグラムを描画する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画して、その色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画して色をフクシアに変更する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画してその色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
ヒストグラムの色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ゲインズボロにヒストグラムの色を設定する	plt.hist(データ列, color='gainsboro')
ゲインズボロにヒストグラムの色をセットする	plt.hist(データ列, color='gainsboro')
ゲインズボロ色のヒストグラムを描画する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して、その色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ゴーストホワイト色のヒストグラムを描画する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトにセットする	plt.hist(データ列, color='ghostwhite')
ヒストグラムの色をゴールドに設定する	plt.hist(データ列, color='gold')
ゴールド色のヒストグラムを描画する	plt.hist(データ列, color='gold')
ヒストグラムを描画して、その色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムを描画してその色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムを描画して、その色をゴールドに指定する	plt.hist(データ列, color='gold')
ヒストグラムの色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画して、その色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画してその色をゴールデンロッドにする	plt.hist(データ列, color='goldenrod')
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='gray')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、その色をグレーに設定する	plt.hist(データ列, color='gray')
ヒストグラムの色をグリーンに設定する	plt.hist(データ列, color='green')
グリーンにヒストグラムの色を指定する	plt.hist(データ列, color='green')
グリーン色のヒストグラムを描画する	plt.hist(データ列, color='green')
ヒストグラムを描画して、その色をグリーンに設定する	plt.hist(データ列, color='green')
ヒストグラムを描画して色をグリーンに設定する	plt.hist(データ列, color='green')
ヒストグラムの色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
グリーンイエロー色のヒストグラムを描画する	plt.hist(データ列, color='greenyellow')
ヒストグラムを描画して、その色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='grey')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='grey')
ヒストグラムを描画して、その色をグレーに設定する	plt.hist(データ列, color='grey')
ヒストグラムを描画して、色をグレーに設定する	plt.hist(データ列, color='grey')
ヒストグラムの色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ハニーデュー色のヒストグラムを描画する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに変更する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、色をハニーデューに指定する	plt.hist(データ列, color='honeydew')
ヒストグラムの色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムの色をホットピンクに指定する	plt.hist(データ列, color='hotpink')
ホットピンク色のヒストグラムを描画する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画して、その色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画して、色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画して、その色をホットピンクに変更する	plt.hist(データ列, color='hotpink')
ヒストグラムの色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
インディアンレッドにヒストグラムの色を設定する	plt.hist(データ列, color='indianred')
インディアンレッド色のヒストグラムを描画する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドにセットする	plt.hist(データ列, color='indianred')
ヒストグラムの色をインディゴに設定する	plt.hist(データ列, color='indigo')
インディゴにヒストグラムの色を指定する	plt.hist(データ列, color='indigo')
インディゴ色のヒストグラムを描画する	plt.hist(データ列, color='indigo')
ヒストグラムを描画して、その色をインディゴに設定する	plt.hist(データ列, color='indigo')
ヒストグラムを描画してその色をインディゴに設定する	plt.hist(データ列, color='indigo')
ヒストグラムの色をアイボリーに設定する	plt.hist(データ列, color='ivory')
アイボリー色のヒストグラムを描画する	plt.hist(データ列, color='ivory')
ヒストグラムを描画して、その色をアイボリーに設定する	plt.hist(データ列, color='ivory')
ヒストグラムの色をカーキに設定する	plt.hist(データ列, color='khaki')
ヒストグラムの色をカーキに指定する	plt.hist(データ列, color='khaki')
カーキ色のヒストグラムを描画する	plt.hist(データ列, color='khaki')
ヒストグラムを描画して、その色をカーキに設定する	plt.hist(データ列, color='khaki')
ヒストグラムを描画して、その色をカーキにセットする	plt.hist(データ列, color='khaki')
ヒストグラムの色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ラベンダー色のヒストグラムを描画する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、その色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムの色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ラベンダーブラッシュ色のヒストグラムを描画する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、その色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画してその色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、色をラベンダーブラッシュにする	plt.hist(データ列, color='lavenderblush')
ヒストグラムの色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
ヒストグラムの色をローングリーンに指定する	plt.hist(データ列, color='lawngreen')
ローングリーン色のヒストグラムを描画する	plt.hist(データ列, color='lawngreen')
ヒストグラムを描画して、その色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
ヒストグラムの色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
レモンシフォン色のヒストグラムを描画する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、その色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムの色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ライトブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画して、その色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画してその色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ヒストグラムの色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ヒストグラムの色をライトコーラルに変更する	plt.hist(データ列, color='lightcoral')
ライトコーラル色のヒストグラムを描画する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに指定する	plt.hist(データ列, color='lightcoral')
ヒストグラムの色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ライトシアンにヒストグラムの色を設定する	plt.hist(データ列, color='lightcyan')
ライトシアン色のヒストグラムを描画する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、その色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画してその色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムの色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ライトゴールドロディイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムを描画して、その色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して、その色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ライトグリーンにヒストグラムの色を指定する	plt.hist(データ列, color='lightgreen')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画して、その色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、その色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画してその色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムの色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
淡いピンク色色のヒストグラムを描画する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画して、その色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画してその色を淡いピンク色に変更する	plt.hist(データ列, color='lightpink')
ヒストグラムの色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をライトサーモンにする	plt.hist(データ列, color='lightsalmon')
ライトサーモン色のヒストグラムを描画する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、その色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムの色をライトグリーンにセットする	plt.hist(データ列, color='lightseagreen')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して、その色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して、色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムの色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
ライトスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightskyblue')
ヒストグラムを描画して、その色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ライトスレイグレーにヒストグラムの色をセットする	plt.hist(データ列, color='lightslategray')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画して、その色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスレイグレーに変更する	plt.hist(データ列, color='lightslategrey')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、その色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画してその色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ライトスチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムを描画して、その色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムの色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムの色をライトイエローに変更する	plt.hist(データ列, color='lightyellow')
ライトイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して、その色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムの色をライムに設定する	plt.hist(データ列, color='lime')
ライム色のヒストグラムを描画する	plt.hist(データ列, color='lime')
ヒストグラムを描画して、その色をライムに設定する	plt.hist(データ列, color='lime')
ヒストグラムを描画して、その色をライムにセットする	plt.hist(データ列, color='lime')
ヒストグラムの色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ライムグリーン色のヒストグラムを描画する	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して、その色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して、色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ヒストグラムの色をリネンに設定する	plt.hist(データ列, color='linen')
リネンにヒストグラムの色を設定する	plt.hist(データ列, color='linen')
リネンにヒストグラムの色を指定する	plt.hist(データ列, color='linen')
リネン色のヒストグラムを描画する	plt.hist(データ列, color='linen')
ヒストグラムを描画して、その色をリネンに設定する	plt.hist(データ列, color='linen')
ヒストグラムの色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムの色をマゼンタに変更する	plt.hist(データ列, color='magenta')
マゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='magenta')
ヒストグラムを描画して、その色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムを描画して色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムの色をマルーンに設定する	plt.hist(データ列, color='maroon')
マルーン色のヒストグラムを描画する	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、その色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムを描画してその色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムの色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ミディアムアクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画して、その色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画して、色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムの色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ミディアムブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画して、その色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画してその色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムの色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ヒストグラムの色をミディアムオーキッドに変更する	plt.hist(データ列, color='mediumorchid')
ミディアムオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumorchid')
ヒストグラムを描画して、その色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ヒストグラムの色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ミディアムパープルにヒストグラムの色をする	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムパープルにする	plt.hist(データ列, color='mediumpurple')
ミディアムパープル色のヒストグラムを描画する	plt.hist(データ列, color='mediumpurple')
ヒストグラムを描画して、その色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ミディアムシアグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='mediumseagreen')
ミディアムシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画して、その色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムの色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ミディアムスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、その色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、その色をミディアムスレートブルーにセットする	plt.hist(データ列, color='mediumslateblue')
ヒストグラムの色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムの色をミディアムスプリンググリーンに指定する	plt.hist(データ列, color='mediumspringgreen')
ミディアムスプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画して、その色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画してその色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムの色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ミディアムターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムを描画して、その色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムの色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムの色をミディアムバイオレットレッドに指定する	plt.hist(データ列, color='mediumvioletred')
ミディアムバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画して、その色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画して、色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画して、色をミディアムバイオレットレッドに変更する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムの色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ミッドナイトブルー色のヒストグラムを描画する	plt.hist(データ列, color='midnightblue')
ヒストグラムを描画して、その色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ミントクリーム色のヒストグラムを描画する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画して、その色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムの色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ヒストグラムの色をミスティローズにセットする	plt.hist(データ列, color='mistyrose')
ミスティローズ色のヒストグラムを描画する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画して、その色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ヒストグラムの色をモカシンに設定する	plt.hist(データ列, color='moccasin')
モカシン色のヒストグラムを描画する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画して、その色をモカシンに設定する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画して色をモカシンに設定する	plt.hist(データ列, color='moccasin')
ヒストグラムの色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ナバホホワイトにヒストグラムの色を設定する	plt.hist(データ列, color='navajowhite')
ナバホホワイト色のヒストグラムを描画する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画して、その色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画して色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムの色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムの色をネイビーにする	plt.hist(データ列, color='navy')
ネイビー色のヒストグラムを描画する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、その色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、色をネイビーにセットする	plt.hist(データ列, color='navy')
ヒストグラムの色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオールドレースに指定する	plt.hist(データ列, color='oldlace')
オールドレース色のヒストグラムを描画する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、その色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオリーブに設定する	plt.hist(データ列, color='olive')
オリーブにヒストグラムの色を設定する	plt.hist(データ列, color='olive')
オリーブ色のヒストグラムを描画する	plt.hist(データ列, color='olive')
ヒストグラムを描画して、その色をオリーブに設定する	plt.hist(データ列, color='olive')
ヒストグラムを描画してその色をオリーブに設定する	plt.hist(データ列, color='olive')
ヒストグラムの色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
オリベドラブ色のヒストグラムを描画する	plt.hist(データ列, color='olivedrab')
ヒストグラムを描画して、その色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
ヒストグラムの色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムの色をオレンジに指定する	plt.hist(データ列, color='orange')
オレンジ色のヒストグラムを描画する	plt.hist(データ列, color='orange')
ヒストグラムを描画して、その色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムを描画して、色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムの色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
オレンジレッドにヒストグラムの色を設定する	plt.hist(データ列, color='orangered')
オレンジレッド色のヒストグラムを描画する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して、その色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して、色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
ヒストグラムの色をオーキッドに設定する	plt.hist(データ列, color='orchid')
オーキッド色のヒストグラムを描画する	plt.hist(データ列, color='orchid')
ヒストグラムを描画して、その色をオーキッドに設定する	plt.hist(データ列, color='orchid')
ヒストグラムを描画してその色をオーキッドに変更する	plt.hist(データ列, color='orchid')
ヒストグラムの色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムの色をパールゴールデンロッドにセットする	plt.hist(データ列, color='palegoldenrod')
パールゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、その色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、色をパールゴールデンロッドに変更する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムの色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ヒストグラムの色をペールグリーンにセットする	plt.hist(データ列, color='palegreen')
ペールグリーン色のヒストグラムを描画する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、その色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、色をペールグリーンに変更する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ヒストグラムの色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
パレットトルコイズ色のヒストグラムを描画する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、その色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムの色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
パールバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画して、その色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画してその色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
ヒストグラムの色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
パパイヤウィップ色のヒストグラムを描画する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、その色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、その色をパパイヤウィップに変更する	plt.hist(データ列, color='papayawhip')
ヒストグラムの色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ピーチパフ色のヒストグラムを描画する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、その色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムの色をペルーに設定する	plt.hist(データ列, color='peru')
ペルーにヒストグラムの色を変更する	plt.hist(データ列, color='peru')
ペルー色のヒストグラムを描画する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、その色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムを描画してその色をペルーに変更する	plt.hist(データ列, color='peru')
ヒストグラムの色をピンクに設定する	plt.hist(データ列, color='pink')
ピンクにヒストグラムの色をする	plt.hist(データ列, color='pink')
ピンク色のヒストグラムを描画する	plt.hist(データ列, color='pink')
ヒストグラムを描画して、その色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムを描画して、色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムを描画して色をピンクに変更する	plt.hist(データ列, color='pink')
ヒストグラムの色をプラムに設定する	plt.hist(データ列, color='plum')
プラム色のヒストグラムを描画する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、その色をプラムに設定する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、その色をプラムにする	plt.hist(データ列, color='plum')
ヒストグラムの色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
パウダーブルー色のヒストグラムを描画する	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して、その色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
ヒストグラムの色をパープルに設定する	plt.hist(データ列, color='purple')
パープル色のヒストグラムを描画する	plt.hist(データ列, color='purple')
ヒストグラムを描画して、その色をパープルに設定する	plt.hist(データ列, color='purple')
ヒストグラムを描画して、色をパープルに設定する	plt.hist(データ列, color='purple')
ヒストグラムの色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
レベッカパープル色のヒストグラムを描画する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、その色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムの色を赤に設定する	plt.hist(データ列, color='red')
赤にヒストグラムの色を変更する	plt.hist(データ列, color='red')
赤色のヒストグラムを描画する	plt.hist(データ列, color='red')
ヒストグラムを描画して、その色を赤に設定する	plt.hist(データ列, color='red')
ヒストグラムを描画して色を赤に設定する	plt.hist(データ列, color='red')
ヒストグラムの色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ヒストグラムの色をロージーブラウンにする	plt.hist(データ列, color='rosybrown')
ロージーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画して、その色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画して、その色をロージーブラウンにセットする	plt.hist(データ列, color='rosybrown')
ヒストグラムの色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ロイヤルブルーにヒストグラムの色を設定する	plt.hist(データ列, color='royalblue')
ロイヤルブルー色のヒストグラムを描画する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、その色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ヒストグラムの色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムの色をサドルブラウンにする	plt.hist(データ列, color='saddlebrown')
サドルブラウン色のヒストグラムを描画する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画して、その色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画してその色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムの色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムの色をサーモンに変更する	plt.hist(データ列, color='salmon')
サーモン色のヒストグラムを描画する	plt.hist(データ列, color='salmon')
ヒストグラムを描画して、その色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムを描画して、その色をサーモンに指定する	plt.hist(データ列, color='salmon')
ヒストグラムを描画して色をサーモンに変更する	plt.hist(データ列, color='salmon')
ヒストグラムの色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
サンディーブラウンにヒストグラムの色を設定する	plt.hist(データ列, color='sandybrown')
サンディーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、その色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムの色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
シーグリーン色のヒストグラムを描画する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画して、その色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
ヒストグラムの色を貝殻に設定する	plt.hist(データ列, color='seashell')
貝殻色のヒストグラムを描画する	plt.hist(データ列, color='seashell')
ヒストグラムを描画して、その色を貝殻に設定する	plt.hist(データ列, color='seashell')
ヒストグラムを描画してその色を貝殻に設定する	plt.hist(データ列, color='seashell')
ヒストグラムの色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムの色をシエナにセットする	plt.hist(データ列, color='sienna')
シエナ色のヒストグラムを描画する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、その色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、その色をシエナにセットする	plt.hist(データ列, color='sienna')
ヒストグラムの色をシルバーに設定する	plt.hist(データ列, color='silver')
ヒストグラムの色をシルバーにセットする	plt.hist(データ列, color='silver')
シルバー色のヒストグラムを描画する	plt.hist(データ列, color='silver')
ヒストグラムを描画して、その色をシルバーに設定する	plt.hist(データ列, color='silver')
ヒストグラムを描画して色をシルバーにする	plt.hist(データ列, color='silver')
ヒストグラムの色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
スカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して、その色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
ヒストグラムの色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
スレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、その色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムの色をスラグレーにセットする	plt.hist(データ列, color='slategray')
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategray')
ヒストグラムを描画して、その色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムを描画して、色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、その色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画してその色をスラグレーにする	plt.hist(データ列, color='slategrey')
ヒストグラムの色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムの色をスノーに指定する	plt.hist(データ列, color='snow')
スノー色のヒストグラムを描画する	plt.hist(データ列, color='snow')
ヒストグラムを描画して、その色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムの色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
スプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して、その色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して、色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
ヒストグラムの色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ヒストグラムの色をスチールブルーにする	plt.hist(データ列, color='steelblue')
スチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、その色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、色をスチールブルーに変更する	plt.hist(データ列, color='steelblue')
ヒストグラムの色をタンに設定する	plt.hist(データ列, color='tan')
ヒストグラムの色をタンにセットする	plt.hist(データ列, color='tan')
淡い茶色にヒストグラムの色を設定する	plt.hist(データ列, color='tan')
タン色のヒストグラムを描画する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、その色をタンに設定する	plt.hist(データ列, color='tan')
ヒストグラムを描画してその色をタンに設定する	plt.hist(データ列, color='tan')
ヒストグラムの色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムの色をティールに指定する	plt.hist(データ列, color='teal')
青緑色のヒストグラムを描画する	plt.hist(データ列, color='teal')
ヒストグラムを描画して、その色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムを描画してその色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムの色をシスルに設定する	plt.hist(データ列, color='thistle')
シスル色のヒストグラムを描画する	plt.hist(データ列, color='thistle')
ヒストグラムを描画して、その色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムを描画して色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムを描画してその色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムの色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムの色をトマトに変更する	plt.hist(データ列, color='tomato')
トマト色のヒストグラムを描画する	plt.hist(データ列, color='tomato')
ヒストグラムを描画して、その色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムを描画してその色をトマトに指定する	plt.hist(データ列, color='tomato')
ヒストグラムの色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ヒストグラムの色を青緑に設定する	plt.hist(データ列, color='turquoise')
ターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色を青緑に設定する	plt.hist(データ列, color='turquoise')
ヒストグラムの色を青紫に設定する	plt.hist(データ列, color='violet')
青紫にヒストグラムの色を設定する	plt.hist(データ列, color='violet')
青紫色のヒストグラムを描画する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色をバイオレットに設定する	plt.hist(データ列, color='violet')
ヒストグラムの色を小麦色に設定する	plt.hist(データ列, color='wheat')
小麦色色のヒストグラムを描画する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、その色を小麦色に設定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、色を小麦色に設定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画してその色を小麦色にセットする	plt.hist(データ列, color='wheat')
ヒストグラムの色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムの色を白に変更する	plt.hist(データ列, color='white')
白色のヒストグラムを描画する	plt.hist(データ列, color='white')
ヒストグラムを描画して、その色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムを描画して、その色を白に変更する	plt.hist(データ列, color='white')
ヒストグラムを描画して色をホワイトに設定する	plt.hist(データ列, color='white')
ヒストグラムの色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ホワイトスモーク色のヒストグラムを描画する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、その色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムの色を黄色に設定する	plt.hist(データ列, color='yellow')
黄色にヒストグラムの色を変更する	plt.hist(データ列, color='yellow')
黄色色のヒストグラムを描画する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して、その色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して、色を黄色に指定する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して、色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムの色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
イエローグリーン色のヒストグラムを描画する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して、その色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して、その色をイエローグリーンにする	plt.hist(データ列, color='yellowgreen')
折れ線グラフの色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフを描画して、色を赤くする	plt.plot(データ列, データ列2, color='r')
線グラフを描画して、色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフの色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフを描画して、色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフの色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフを描画して、色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフを描画して色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフの色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフを描画して、色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフの色を黄色くする	plt.plot(データ列, データ列2, color='y')
折れ線グラフを描画して、色を黄色くする	plt.plot(データ列, データ列2, color='y')
ヒストグラムの色を赤くする	plt.hist(データ列, color='r')
ヒストグラムを描画して、色を赤くする	plt.hist(データ列, color='r')
ヒストグラムの色を青くする	plt.hist(データ列, color='b')
ヒストグラムを描画して、色を青くする	plt.hist(データ列, color='b')
ヒストグラムの色を黒くする	plt.hist(データ列, color='k')
ヒストグラムを描画して、色を黒くする	plt.hist(データ列, color='k')
ヒストグラムの色を白くする	plt.hist(データ列, color='w')
ヒストグラムを描画して、色を白くする	plt.hist(データ列, color='w')
ヒストグラムの色を黄色くする	plt.hist(データ列, color='y')
ヒストグラムを描画して、色を黄色くする	plt.hist(データ列, color='y')
赤い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='r')
青い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='b')
黒い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='k')
白い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='w')
黄色い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='y')
赤いヒストグラムを描画する	plt.hist(データ列, color='r')
青いヒストグラムを描画する	plt.hist(データ列, color='b')
黒いヒストグラムを描画する	plt.hist(データ列, color='k')
白いヒストグラムを描画する	plt.hist(データ列, color='w')
黄色いヒストグラムを描画する	plt.hist(データ列, color='y')
名前からカラーマップを使う	"plt.get_cmap(""カラーマップ名"")"
ヒストグラムをカラーマップで描画する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムをカラーマップとして描画する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムでカラーマップを使う	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
＜オプション＞グラフの種類を破線に設定する	linestyle = 'dashed'
＜オプション＞線種を破線に設定する	linestyle = 'dashed'
＜オプション＞線種を破線に変更する	linestyle = 'dashed'
＜オプション＞グラフの種類を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞線種を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞グラフの線種を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞線種を一点鎖線にする	linestyle = 'dashbot'
＜オプション＞グラフの種類を点線に設定する	linestyle = 'dotted'
＜オプション＞線種を点線に設定する	linestyle = 'dotted'
＜オプション＞グラフの線種を点線に設定する	linestyle = 'dotted'
＜オプション＞グラフの種類を実線に設定する	linestyle = 'solid'
＜オプション＞線種を実線に設定する	linestyle = 'solid'
＜オプション＞線種を実線にセットする	linestyle = 'solid'
折れ線グラフのスタイルを破線に設定する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフを破線に設定する	plt.plot(データ列, データ列2, linestyle='dashed')
破線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフを破線で描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフのスタイルを一点鎖線に設定する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフを一点鎖線に設定する	plt.plot(データ列, データ列2, linestyle='dashbot')
一点鎖線に折れ線グラフを設定する	plt.plot(データ列, データ列2, linestyle='dashbot')
一点鎖線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフを一点鎖線で描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフのスタイルを点線に設定する	plt.plot(データ列, データ列2, linestyle='dotted')
点線に折れ線グラフのスタイルを変更する	plt.plot(データ列, データ列2, linestyle='dotted')
点線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフを点線で描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフのスタイルを実線に設定する	plt.plot(データ列, データ列2, linestyle='solid')
折れ線グラフを実線に設定する	plt.plot(データ列, データ列2, linestyle='solid')
実線グラフを描画する	plt.plot(データ列, データ列2, linestyle='solid')
折れ線グラフを実線で描画する	plt.plot(データ列, データ列2, linestyle='solid')
ヒストグラムの線のスタイルを破線に設定する	plt.hist(データ列, linestyle='dashed')
破線にヒストグラムの線のスタイルを指定する	plt.hist(データ列, linestyle='dashed')
破線ヒストグラムを描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線で描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムの線のスタイルを一点鎖線に設定する	plt.hist(データ列, linestyle='dashbot')
一点鎖線にヒストグラムを指定する	plt.hist(データ列, linestyle='dashbot')
一点鎖線ヒストグラムを描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムを一点鎖線で描画する	plt.hist(データ列, linestyle='dashbot')
一点鎖線でヒストグラムを描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムの線のスタイルを点線に設定する	plt.hist(データ列, linestyle='dotted')
ヒストグラムを点線に設定する	plt.hist(データ列, linestyle='dotted')
点線ヒストグラムを描画する	plt.hist(データ列, linestyle='dotted')
ヒストグラムを点線で描画する	plt.hist(データ列, linestyle='dotted')
ヒストグラムの線のスタイルを実線に設定する	plt.hist(データ列, linestyle='solid')
ヒストグラムを実線に指定する	plt.hist(データ列, linestyle='solid')
実線ヒストグラムを描画する	plt.hist(データ列, linestyle='solid')
ヒストグラムを実線で描画する	plt.hist(データ列, linestyle='solid')
ヒストグラムを実線として描画する	plt.hist(データ列, linestyle='solid')
実線としてヒストグラムを描画する	plt.hist(データ列, linestyle='solid')
＜オプション＞マーカーをポイントに変更する	marker = '.'
＜オプション＞ポイントマーカーを使う	marker = '.'
＜オプション＞ポイントマーカーを加える	marker = '.'
＜オプション＞ポイントマーカーを描画する	marker = '.'
＜オプション＞マーカーを丸に変更する	marker = 'o'
＜オプション＞丸マーカーを使う	marker = 'o'
＜オプション＞丸マーカーを描画する	marker = 'o'
＜オプション＞マーカーを三角に変更する	marker = '^'
＜オプション＞印を三角に変更する	marker = '^'
＜オプション＞三角マーカーを使う	marker = '^'
＜オプション＞三角印を用いる	marker = '^'
＜オプション＞△印を用いる	marker = '^'
＜オプション＞三角マーカーを描画する	marker = '^'
＜オプション＞マーカーを下三角に変更する	marker = 'v'
＜オプション＞下三角マーカーを使う	marker = 'v'
＜オプション＞▽マーカーを用いる	marker = 'v'
＜オプション＞下三角マーカーを描画する	marker = 'v'
＜オプション＞マーカーを左三角に変更する	marker = '<'
＜オプション＞左三角マーカーを使う	marker = '<'
＜オプション＞左三角マーカーを加える	marker = '<'
＜オプション＞左三角マーカーを描画する	marker = '<'
＜オプション＞マーカーを右三角に変更する	marker = '>'
＜オプション＞右三角マーカーを使う	marker = '>'
＜オプション＞右三角マーカーを用いる	marker = '>'
＜オプション＞右三角マーカーを描画する	marker = '>'
＜オプション＞マーカーをバツに変更する	marker = 'x'
＜オプション＞印をクロスに変更する	marker = 'x'
＜オプション＞バツマーカーを使う	marker = 'x'
＜オプション＞バツマーカーを使用する	marker = 'x'
＜オプション＞クロスマーカーを用いる	marker = 'x'
＜オプション＞バツマーカーを描画する	marker = 'x'
＜オプション＞バツ印を描画する	marker = 'x'
＜オプション＞マーカーを大バツに変更する	marker = 'X'
＜オプション＞大バツマーカーを使う	marker = 'X'
＜オプション＞大バツマーカーを描画する	marker = 'X'
＜オプション＞マーカーを四角に変更する	marker = 's'
＜オプション＞四角マーカーを使う	marker = 's'
＜オプション＞四角マーカーを描画する	marker = 's'
＜オプション＞マーカーをダイアモンドに変更する	marker = 'D'
＜オプション＞マーカーを菱形に変更する	marker = 'D'
＜オプション＞ダイアモンドマーカーを使う	marker = 'D'
＜オプション＞ダイアモンドマーカーを描画する	marker = 'D'
＜オプション＞マーカーを星に変更する	marker = '*'
＜オプション＞星マーカーを使う	marker = '*'
＜オプション＞星マーカーを加える	marker = '*'
＜オプション＞星マーカーを描画する	marker = '*'
折れ線グラフにポイントマーカーを使う	plt.plot(データ列, データ列2, marker='.')
折れ線グラフにポイントマーカーを加える	plt.plot(データ列, データ列2, marker='.')
折れ線グラフのマーカーをポイントにする	plt.plot(データ列, データ列2, marker='.')
データ列を折れ線グラフに描画して、マーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに描画してマーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに丸マーカーを使う	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに丸マーカーを加える	plt.plot(データ列, データ列2, marker='o')
折れ線グラフのマーカーを丸にする	plt.plot(データ列, データ列2, marker='o')
折れ線グラフのマーカーを丸印にする	plt.plot(データ列, データ列2, marker='o')
データ列を折れ線グラフに描画して、マーカーを丸印にする	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに三角マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを三角にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを▲印にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを△にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して、マーカーを三角印にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して、マーカーを▲印にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに下三角マーカーを使う	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに下三角マーカーを用いる	plt.plot(データ列, データ列2, marker='v')
折れ線グラフのマーカーを下三角にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフのマーカーを▽にする	plt.plot(データ列, データ列2, marker='v')
データ列を折れ線グラフに描画して、マーカーを下三角印にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに描画してマーカーを▼印にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに左三角マーカーを使う	plt.plot(データ列, データ列2, marker='<')
折れ線グラフのマーカーを左三角にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフの印を左三角にする	plt.plot(データ列, データ列2, marker='<')
データ列を折れ線グラフに描画して、マーカーを左三角印にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに右三角マーカーを使う	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに右三角印を使う	plt.plot(データ列, データ列2, marker='>')
折れ線グラフのマーカーを右三角にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフの印を右三角にする	plt.plot(データ列, データ列2, marker='>')
データ列を折れ線グラフに描画して、マーカーを右三角印にする	plt.plot(データ列, データ列2, marker='>')
データ列を折れ線グラフに描画して、マーカーを右三角にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフにバツマーカーを使う	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにクロスマーカーを加える	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにバツマーカーを使用する	plt.plot(データ列, データ列2, marker='x')
折れ線グラフのマーカーをバツにする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフの印をクロス印にする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、マーカーをバツ印にする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフに描画して、印をクロス印にする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画してマーカーをバツにする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフに大バツマーカーを使う	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに大バツマーカーを加える	plt.plot(データ列, データ列2, marker='X')
折れ線グラフのマーカーを大バツにする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画して、マーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画して印を大バツにする	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに四角マーカーを使う	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角マーカーを用いる	plt.plot(データ列, データ列2, marker='s')
折れ線グラフのマーカーを四角にする	plt.plot(データ列, データ列2, marker='s')
データ列を折れ線グラフに描画して、マーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフにダイアモンドマーカーを使う	plt.plot(データ列, データ列2, marker='D')
折れ線グラフにダイアモンドマーカーを加える	plt.plot(データ列, データ列2, marker='D')
折れ線グラフのマーカーをダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフのマーカーを菱形にする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画して、マーカーをダイアモンド印にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに描画して、マーカーを菱形印にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに描画して、マーカーをダイアモンド印にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに星マーカーを使う	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに星印を使う	plt.plot(データ列, データ列2, marker='*')
折れ線グラフのマーカーを星にする	plt.plot(データ列, データ列2, marker='*')
データ列を折れ線グラフに描画して、マーカーを星印にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに赤いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフのポイントマーカーを赤くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフのポイント印を赤くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフに赤い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフの丸マーカーを赤くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフに赤い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの三角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの上三角印を赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフに赤い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの下三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの下三角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフに赤い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフに赤い左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフの左三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフの左三角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフに赤い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフの右三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフの右三角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフに赤いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
赤いクロス印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフのバツマーカーを赤くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフに赤い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフの大バツマーカーを赤くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフに赤い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフの四角マーカーを赤くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフに赤いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフの菱形マーカーを赤くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフに赤い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフの星マーカーを赤くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフの星印を赤くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフに青いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフに青いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフのポイントマーカーを青くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフに青い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフに青い丸印を描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフの丸マーカーを青くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフに青い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの三角マーカーを青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの△マーカーを青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの三角印を青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフに青い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの下三角マーカーを青くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの▼印を青くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフの左三角マーカーを青くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフに青い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
青い右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフの右三角マーカーを青くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフの右三角印を青色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフに青いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのバツマーカーを青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのクロスマーカーを青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフに青い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフの大バツマーカーを青くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフに青い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフの四角マーカーを青くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフに青いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフに青い菱形印を描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフの菱形マーカーを青色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフに青い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフに青い星印を描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフの星マーカーを青くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフの星印を青くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフに黒いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフのポイントマーカーを黒くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフに黒い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフの丸マーカーを黒くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフの丸マーカーを黒色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフに黒い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフに黒い▲マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの▲マーカーを黒色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの△マーカーを黒くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフに黒い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い▽印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い▼印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの下三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの下三角マーカーを黒色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフの左三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフの左三角印を黒くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフに黒い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフの右三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフに黒いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフのバツマーカーを黒くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフのクロスマーカーを黒くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフに黒い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
黒い大バツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフの大バツマーカーを黒くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフの大バツ印を黒色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフに黒い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフの四角マーカーを黒くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフに黒いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフのダイアモンドマーカーを黒くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフに黒い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフの星マーカーを黒くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフに黄色いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフのポイントマーカーを黄色くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフのポイント印を黄色くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフに黄色い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフの丸マーカーを黄色くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフの丸マーカーを黄色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフに黄色い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフに黄色い上三角印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフに黄色い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフに黄色い▽マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角印を黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角印を黄色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフに黄色い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフの左三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフに黄色い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフの右三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフに黄色いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフのバツマーカーを黄色くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフに黄色い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツマーカーを黄色くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツ印を黄色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツマーカーを黄色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフに黄色い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフの四角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフに黄色いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い菱形印を描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
黄色いダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフのダイアモンドマーカーを黄色くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフに黄色い星印を描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフの星マーカーを黄色くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフの星印を黄色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフに緑色のポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフに緑色のポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフのポイントマーカーを緑色にする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフに緑色の丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
緑色の丸印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
折れ線グラフの丸マーカーを緑色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
折れ線グラフに緑色の三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の▲マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフに緑色の▼マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフの下三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフの▽印を緑色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフに緑色の左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフの左三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフに緑色の右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフの右三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフに緑色のバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフのバツマーカーを緑色にする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフに緑色の大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフに緑色の大バツ印を描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフの大バツマーカーを緑色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフに緑色の四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフに緑色の四角印を描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフの四角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフに緑色のダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
緑色のダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフのダイアモンドマーカーを緑色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフのダイアモンド印を緑色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフに緑色の星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
折れ線グラフの星マーカーを緑色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
折れ線グラフに大きさnのポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイントマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイントマーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフに大きさnの丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフの丸マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフに大きさnの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフに大きさnの三角印を描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの上三角マーカーの大きさをnにする	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの△印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフに大きさnの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角印の大きさをnに変更する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーの大きさをnに指定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフに大きさnの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフにサイズnの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフに大きさnのバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフに大きさnのクロス印を描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのクロス印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツマーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフに大きさnの大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフに大きさnの四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフに大きさnの四角印を描画する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフに大きさnのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフのダイアモンドマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフに大きさnの星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフの星マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフの星印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフに線幅nのポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイント印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフに線幅nの丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
線幅nの丸印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフの丸マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフに線幅nの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの三角マーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの上三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフに線幅nの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnにする	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフの左三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフに線幅nの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
線幅nの右三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフの右三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフに線幅nのバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのバツマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのクロスマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフに線幅nの大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
線幅nの大バツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフの大バツマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフに線幅nの四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角マーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフに線幅nのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
線幅nのダイアモンド印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンド印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフに線幅nの星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
ベクトルの演算をする	import numpy as np
ベクトルの演算を行う	import numpy as np
行列の演算をする	import numpy as np
numpyを使う	import numpy as np
＜オプション＞データ型を指定する	dtype = np.int
＜オプション＞整数型を使う	dtype = np.int
＜オプション＞データ型を指定する	dtype = np.int8
＜オプション＞８ビット整数型を使う	dtype = np.int8
＜オプション＞データ型を指定する	dtype = np.uint8
＜オプション＞符号なし８ビット整数型を使う	dtype = np.uint8
＜オプション＞データ型を指定する	dtype = np.int16
＜オプション＞三二ビット整数型を使う	dtype = np.int16
＜オプション＞三二ビット整数型を用いる	dtype = np.int16
＜オプション＞３二ビット整数型を用いる	dtype = np.int16
＜オプション＞データ型を指定する	dtype = np.int32
＜オプション＞ブール型を使う	dtype = np.int32
＜オプション＞データ型を指定する	dtype = bool
＜オプション＞複素数型を使う	dtype = bool
リストを配列に変換する	np.array(aList)
リストを行列に変換する	np.array(aList)
リストをベクトルに変換する	np.array(aList)
リストから配列を作る	np.array(aList)
リストからベクトルを作る	np.array(aList)
イテラブルを配列に変換する	np.array(iterable)
イテラブルを行列にする	np.array(iterable)
イテラブルから配列を作る	np.array(iterable)
配列をイテラブルから作る	np.array(iterable)
全要素を0で初期化された配列	np.zeros(要素数)
全要素を0で初期化された配列を作る	np.zeros(要素数)
全要素を0で初期化した配列	np.zeros(要素数)
ゼロ埋めされた配列	np.zeros(要素数)
ゼロ埋めされたベクトル	np.zeros(要素数)
ゼロ埋めされた整数型の配列	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた８ビット整数型の配列	np.zeros(要素数, dtype=np.int8)
ゼロ埋めされた８ビット整数型の配列を作る	np.zeros(要素数, dtype=np.int8)
ゼロ埋めされた符号なし８ビット整数型の配列	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めされた三二ビット整数型の配列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めした３二ビット整数型の配列	np.zeros(要素数, dtype=np.int16)
３二ビット整数型のゼロ埋めされた配列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされたブール型の配列	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされた複素数型の配列	np.zeros(要素数, dtype=bool)
全要素を０で初期化された行列	np.zeros(行数, 列数)
０で全要素を初期化された行列を初期化する	np.zeros(行数, 列数)
０で全要素を初期化された行列を作る	np.zeros(行数, 列数)
ゼロ埋めされた行列	np.zeros(行数, 列数)
全要素を０で初期化された整数型の行列	np.zeros(行数, 列数, dtype=np.int)
全要素を０で初期化された８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int8)
８ビット整数型の全要素を０で初期化された行列	np.zeros(行数, 列数, dtype=np.int8)
全要素を０で初期化された符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
全要素を０で初期化した符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
全要素を０で初期化された三二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化した三二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
０で全要素を初期化された3２ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化されたブール型の行列	np.zeros(行数, 列数, dtype=np.int32)
０で全要素を初期化した論理値型の行列	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化したブール型の行列	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化された複素数型の行列	np.zeros(行数, 列数, dtype=bool)
０で全要素を初期化された複素数型の行列	np.zeros(行数, 列数, dtype=bool)
全要素を０で初期化した複素数型の行列を初期化する	np.zeros(行数, 列数, dtype=bool)
全要素を1で初期化された配列	np.ones(要素数, dtype=np.int)
全要素を1で初期化された行列	np.ones(要素数, dtype=np.int)
要素が全て1の配列	np.ones(要素数, dtype=np.int)
要素が全て1の行列を作る	np.ones(要素数, dtype=np.int)
全要素を1で初期化された行列	np.ones(行数, 列数, dtype=np.int)
1で全要素を初期化された行列	np.ones(行数, 列数, dtype=np.int)
全要素が1の行列	np.ones(行数, 列数, dtype=np.int)
全要素を初期値で初期化された配列	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化されたベクトル	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化した配列	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の配列	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の配列を作る	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化された行列	np.full((行数, 列数), 初期値, dtype=np.int)
全要素を初期値で初期化した行列	np.full((行数, 列数), 初期値, dtype=np.int)
全要素が初期値の行列	np.full((行数, 列数), 初期値, dtype=np.int)
単位行列	np.eye(行数, 列数)
単位正方行列	np.identity(N)
未初期化の配列	np.empty(要素数, dtype=np.int)
未初期化の行列	np.empty(要素数, dtype=np.int)
未初期化の行列	np.empty((行数, 列数), dtype=np.int)
配列と同じ大きさの空配列を作る	np.empty_like(aArray)
行列と同じ大きさの空配列を作る	np.empty_like(aArray)
ベクトルと同じ大きさの空配列を作る	np.empty_like(aArray)
0からNまでの配列	np.arange(N)
0からNまでの行列	np.arange(N)
1からNまでの配列	np.arange(1, N+1)
等差数列を配列に変換する	np.arange(開始値, 終端値, 等差)
等差数列をベクトルに変換する	np.arange(開始値, 終端値, 等差)
配列の次元を変形する	aArray.reshape(行数, 列数)
ベクトルを変形する	aArray.reshape(行数, 列数)
ベクトルの次元を変形する	aArray.reshape(行数, 列数)
配列を2次元1列に変形する	aArray.reshape(-1, 1)
配列を2次元1行に変形する	aArray.reshape(1, -1)
既存の配列を元に全要素が0の配列	np.zeros_like(aArray)
既存の行列をベースに全要素が0の配列を作る	np.zeros_like(aArray)
既存の配列をベースに全要素が0の行列を作成する	np.zeros_like(aArray)
既存の配列を元に全要素が1の配列	np.ones_like(aArray)
既存の配列を元にして全要素が1の配列	np.ones_like(aArray)
既存の配列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
配列を元にして全要素が初期値の配列	np.full_like(aArray, 初期値)
既存の行列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
配列の全要素の値を変更する	aArray[:, :] = 指定の値
行列の全要素の値を変更する	aArray[:, :] = 指定の値
配列の全要素を指定の値にする	aArray[:, :] = 指定の値
行列の値	aArray[行番号, 列番号]
行列の値を変更する	aArray[行番号, 列番号] = 指定の値
行列の行	aArray[行番号]
行列の行を選択する	aArray[行番号]
行列の列	aArray[:, 列番号]
ユニークな値を要素とする配列	np.unique(aArray)
ユニークな値を要素とする行列を使う	np.unique(aArray)
ユニークな要素ごとの頻度	np.unique(aArray, return_counts=True)
二次元リストを転置する	[list(x) for x in list(zip(*aList))]
二次元リストの転置行列	[list(x) for x in list(zip(*aList))]
２次元リストの転置行列	[list(x) for x in list(zip(*aList))]
配列を転置する	aArray.T
行列の転置行列	aArray.T
配列の和	aArray + aArray2
配列の要素ごとに加算する	aArray + aArray2
配列の差	aArray - aArray2
配列のスカラー倍	aArray * n
配列の要素ごとの積	np.multiply(aArray, aArray2)
配列の要素ごとのアダマール積	np.multiply(aArray, aArray2)
配列の要素ごとの積を求める	np.multiply(aArray, aArray2)
配列の内積	np.dot(aArray, aArray2)
ベクトルの内積	np.dot(aArray, aArray2)
行列の内積を算出する	np.dot(aArray, aArray2)
行列の行列積	np.matmul(aArray, aArray2)
行列の逆行列	np.linalg.inv(aArray)
行列のムーア・ペンローズの擬似逆行列	np.linalg.pinv(aArray)
行列の行列式	np.linalg.det(aArray)
行列の行列式を求める	np.linalg.det(aArray)
FIXME	np.linalg.eig(aArray)
配列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
ベクトル間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
行列間の要素ごとの最大公約数を計算する	np.gcd(aArray, aArray2)
配列間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
配列の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
配列の形状	aArray.shape
配列の形	aArray.shape
配列のデータ型	aArray.dtype()
ベクトルのデータ型	aArray.dtype()
行列のデータ型を算出する	aArray.dtype()
配列が何のデータ型か	aArray.dtype()
配列の次元数	aArray.ndim
行列の次元の数を求める	aArray.ndim
配列が何次元か	aArray.ndim
配列を列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
配列を行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
配列の合計値	np.sum(aArray)
行列の合計値	np.sum(aArray)
配列の列ごとの合計値	np.sum(aArray, axis=0)
行列の列ごとの合計	np.sum(aArray, axis=0)
配列の列ごとの合計	np.sum(aArray, axis=0)
配列の行ごとの合計値	np.sum(aArray, axis=1)
ベクトルの行ごとの合計値	np.sum(aArray, axis=1)
行列の行ごとの合計値	np.sum(aArray, axis=1)
配列の平均値	np.mean(aArray)
配列の列ごとの平均値	np.mean(aArray, axis=0)
配列の行ごとの平均値	np.mean(aArray, axis=1)
行列の行ごとの平均値	np.mean(aArray, axis=1)
配列の行ごとの平均値を求める	np.mean(aArray, axis=1)
配列の最小値	np.min(aArray)
行列の最小値を求める	np.min(aArray)
行列の列ごとの最小値	np.min(aArray, axis=0)
行列の列ごとの最小	np.min(aArray, axis=0)
行列の行ごとの最小値	np.min(aArray, axis=1)
配列の最大値	np.max(aArray)
行列の列ごとの最大値	np.max(aArray, axis=0)
行列の行ごとの最大値	np.max(aArray, axis=1)
配列の標準偏差	np.std(aArray)
ベクトルの標準偏差	np.std(aArray)
行列の列ごとの標準偏差	np.std(aArray, axis=0)
配列の列ごとの標準偏差	np.std(aArray, axis=0)
行列の行ごとの標準偏差	np.std(aArray, axis=1)
行列の行ごとの標準偏差を算出する	np.std(aArray, axis=1)
配列の分散	np.var(aArray)
配列の分散を求める	np.var(aArray)
行列の列ごとの分散	np.var(aArray, axis=0)
行列の行ごとの分散	np.var(aArray, axis=1)
行列の行ごとの分散を算出する	np.var(aArray, axis=1)
配列の累積和	np.cumsum(aArray)
行列の累積和	np.cumsum(aArray)
配列の累積積	np.cumprod(aArray)
ベクトルの累積積	np.cumprod(aArray)
配列から重複を除いた配列を作る	np.unique(aArray)
行列から重複を除いた配列を作る	np.unique(aArray)
配列のユニークな要素	np.unique(aArray)
行列のユニークな要素を計算する	np.unique(aArray)
配列のユニークな要素とその個数	u, counts = np.unique(aArray, return_counts=True)
ベクトルのユニークな要素とその個数を求める	u, counts = np.unique(aArray, return_counts=True)
配列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
行列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
配列を平坦化する	aArray.flatten()
配列を平坦にする	aArray.flatten()
行列を一次元にする	aArray.flatten()
配列を一次元にする	aArray.flatten()
二つのオブジェクトが等しいか調べる	obj == obj2
二つのオブジェクトが等しいか	obj == obj2
二つのオブジェクトが同一参照か調べる	obj is obj2
二つのオブジェクトが同一かどうか調べる	obj is obj2
オブジェクトをデバッグ向けの文字列に変換する	repr(obj)
オブジェクトを文字列に変換する	str(obj)
オブジェクトのイテレータ	iter(obj)
オブジェクトをイテラブルに変換する	iter(obj)
オブジェクトをイテレータに変換する	iter(obj)
文字列をバイト配列に変換する	bytearray(s)
文字列をバイト列に変換する	bytes(s)
オブジェクトのメモリビュー	memoryview(obj)
オブジェクトが関数か調べる	callable(obj)
オブジェクトが関数	callable(obj)
文字列を式として評価する	eval(s)
グローバル変数の一覧	globals()
オブジェクトのプロパティを削除する	delattr(obj, プロパティ名)
オブジェクトのフィールドを消す	delattr(obj, プロパティ名)
オブジェクトから属性を削除する	delattr(obj, プロパティ名)
オブジェクトのプロパティの値	getattr(obj, プロパティ名)
オブジェクトにプロパティが存在するか調べる	hasattr(obj, プロパティ名)
オブジェクトに属性があるかどうか確認する	hasattr(obj, プロパティ名)
オブジェクトに属性が存在する	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つか調べる	hasattr(obj, プロパティ名)
オブジェクトがフィールドを持つか調べる	hasattr(obj, プロパティ名)
オブジェクトのプロパティの値を値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトの属性を値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティを値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティの値を設定する	setattr(obj, プロパティ名, 値)
オブジェクトのハッシュ値	hash(obj)
オブジェクトがあるクラスか調べる	isinstance(obj, クラス)
オブジェクトがクラスのインスタンスか調べる	isinstance(obj, クラス)
オブジェクトはあるクラスのインスタンスか	isinstance(obj, クラス)
オブジェクトは整数クラスか調べる	isinstance(obj, int)
オブジェクトは整数型かどうか	isinstance(obj, int)
オブジェクトは整数かどうか確認する	isinstance(obj, int)
オブジェクトは浮動小数点数クラスか調べる	isinstance(obj, float)
オブジェクトは浮動小数点数か	isinstance(obj, float)
オブジェクトは文字列クラスか調べる	isinstance(obj, str)
オブジェクトが文字列クラスか調べる	isinstance(obj, str)
オブジェクトは論理値クラスか調べる	isinstance(obj, bool)
オブジェクトは論理値型か	isinstance(obj, bool)
オブジェクトは論理値クラスか確認する	isinstance(obj, bool)
オブジェクトはリストクラスか調べる	isinstance(obj, list)
オブジェクトはリストクラス	isinstance(obj, list)
オブジェクトはリストか確認する	isinstance(obj, list)
オブジェクトはタプルクラスか調べる	isinstance(obj, tuple)
オブジェクトはタプル	isinstance(obj, tuple)
オブジェクトは辞書クラスか調べる	isinstance(obj, dict)
オブジェクトが辞書クラスか調べる	isinstance(obj, dict)
オブジェクトは辞書クラス	isinstance(obj, dict)
オブジェクトは集合クラスか調べる	isinstance(obj, set)
オブジェクトは集合クラスのインスタンスか調べる	isinstance(obj, set)
オブジェクトは集合	isinstance(obj, set)
オブジェクトはバイト列クラスか調べる	isinstance(obj, bytes)
オブジェクトがバイト列型かどうか調べる	isinstance(obj, bytes)
オブジェクトはバイト列型	isinstance(obj, bytes)
オブジェクトは数値か調べる	isinstance(obj, (int,float))
オブジェクトはリストかタプルか調べる	isinstance(obj, (list)
クラスのサブクラスか調べる	issubclass(サブクラス, クラス)
サブクラスか	issubclass(サブクラス, クラス)
型のサブクラスか調べる	issubclass(サブクラス, クラス)
オブジェクトのオブジェクト識別子	id(obj)
オブジェクトのクラス	type(obj)
データ列を使う	import pandas as pd
データ列をインポートする	import pandas as pd
データフレームの要約統計量	df.describe()
データフレームの記述統計量	df.describe()
データフレームのリストカラムの要約統計量	df[aList].describe()
データフレームのリストカラムの基本統計量を求める	df[aList].describe()
データフレームのリストカラムの要約統計量を計算する	df[aList].describe()
データ列の要約統計量	ds.describe()
データフレームのカラムの要約統計量	df[col].describe()
データフレームの平均値	df.mean()
データフレームのリストカラムの平均値	df[aList].mean()
データフレームのリストカラムの平均	df[aList].mean()
データ列の平均値	ds.mean()
カラムの平均値	ds.mean()
データフレームのカラムの平均値	df[col].mean()
データフレームのカラムの平均値を求める	df[col].mean()
データフレームの中央値	df.median()
データフレームのリストカラムの中央値	df[aList].median()
データフレームのリスト列の中央値を求める	df[aList].median()
データ列の中央値	ds.median()
データ列のメディアンを求める	ds.median()
データ列のメディアン	ds.median()
データフレームのカラムの中央値	df[col].median()
データフレームの第一四分位数	df.quantile(0.25)
データフレームの上位25%	df.quantile(0.25)
データフレームのリストカラムの第一四分位数	df[aList].quantile(0.25)
データフレームのリストカラムの上位25%を求める	df[aList].quantile(0.25)
データ列の第一四分位数	ds.quantile(0.25)
データ列の25パーセンタイル	ds.quantile(0.25)
データフレームのカラムの第一四分位数	df[col].quantile(0.25)
データフレームの列の第一四分位数	df[col].quantile(0.25)
データフレームの第三四分位数	df.quantile(0.75)
データフレームのリストカラムの第三四分位数	df[aList].quantile(0.75)
データフレームのリストカラムの下位25%	df[aList].quantile(0.75)
データ列の第三四分位数	ds.quantile(0.75)
データ列の下位25%	ds.quantile(0.75)
データフレームのカラムの第三四分位数	df[col].quantile(0.75)
データフレームのpercent分位数	df.quantile(percent/100)
データフレームのリストカラムのpercent分位数	df[aList].quantile(percent/100)
データ列のpercent分位数	ds.quantile(percent/100)
データフレームのカラムのpercent分位数	df[col].quantile(percent/100)
データフレームの列のpercent分位数を計算する	df[col].quantile(percent/100)
データフレームの最頻値	df.mode()
データフレームのどの値が頻出か見る	df.mode()
データフレームのどの値が頻出か確認する	df.mode()
データフレームのリストカラムの最頻値	df[aList].mode()
データフレームのリスト列の最頻値	df[aList].mode()
データフレームのリストカラムのどの値が頻出か見る	df[aList].mode()
データ列の最頻値	ds.mode()
データ列のどの値が頻出か見る	ds.mode()
データフレームのカラムの最頻値	df[col].mode()
データフレームのカラムのモード	df[col].mode()
データフレームのカラムのどの値が頻出か見る	df[col].mode()
データフレームの標本標準偏差	df.std()
データフレームのリストカラムの標本標準偏差	df[aList].std()
データフレームのリストカラムの標本標準偏差を求める	df[aList].std()
データ列の標本標準偏差	ds.std()
データフレームのカラムの標本標準偏差	df[col].std()
データフレームの列の標本標準偏差	df[col].std()
データフレームの母標準偏差	df.std(ddof=0)
データフレームのリストカラムの母標準偏差	df[aList].std(ddof=0)
データ列の母標準偏差	ds.std(ddof=0)
データフレームのカラムの母標準偏差	df[col].std(ddof=0)
データフレームの列の母標準偏差を求める	df[col].std(ddof=0)
データフレームの分散	df.var()
データフレームがどの程度、分散しているか見る	df.var()
データフレームがどの程度分散しているか見る	df.var()
データフレームのリストカラムの分散	df[aList].var()
データフレームのリストカラムの分散を求める	df[aList].var()
データフレームのリストカラムがどの程度、分散しているか見る	df[aList].var()
データフレームのリストカラムはどの程度分散しているか見る	df[aList].var()
データフレームのリストカラムはどの程度、分散しているか見る	df[aList].var()
データ列の分散	ds.var()
データ列がどの程度、分散しているか見る	ds.var()
データフレームのカラムの分散	df[col].var()
データフレームの列の分散を求める	df[col].var()
データフレームのカラムがどの程度、分散しているか見る	df[col].var()
データフレームのカラムはどれだけ、分散しているか確認する	df[col].var()
データフレームの列がどの程度、分散しているか見る	df[col].var()
データフレームの歪度	df.kurt()
データフレームが正規分布からどの程度、歪んでいるか見る	df.kurt()
データフレームが正規分布からどの程度、歪んでいるか確認する	df.kurt()
データフレームが正規分布からどの程度歪んでいるか見る	df.kurt()
データフレームのリストカラムの歪度	df[aList].kurt()
データフレームのリストカラムが正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
データフレームのリストカラムが正規分布からどの程度歪んでいるか調べる	df[aList].kurt()
データフレームのリストカラムが正規分布からどの程度歪んでいるか見る	df[aList].kurt()
データ列の歪度	ds.kurt()
データ列が正規分布からどの程度、歪んでいるか見る	ds.kurt()
データ列は正規分布からどの程度歪んでいるか調べる	ds.kurt()
データフレームのカラムの歪度	df[col].kurt()
データフレームのカラムが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの列が正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの尖度	df.skew()
データフレームが正規分布からどの程度、尖っているか見る	df.skew()
データフレームが正規分布からどの程度、尖っているか調べる	df.skew()
データフレームは正規分布からどの程度尖っているか見る	df.skew()
データフレームのリストカラムの尖度	df[aList].skew()
データフレームのリストカラムの尖度を算出する	df[aList].skew()
データフレームのリストカラムの正規分布に対する上下広がり	df[aList].skew()
データフレームのリストカラムが正規分布からどの程度、尖っているか見る	df[aList].skew()
データフレームのリストカラムが正規分布からどの程度、尖っているか確認する	df[aList].skew()
データ列の尖度	ds.skew()
カラムの尖度	ds.skew()
データ列が正規分布からどの程度、尖っているか見る	ds.skew()
データ列は正規分布からどの程度、尖っているか調べる	ds.skew()
データフレームのカラムの尖度	df[col].skew()
データフレームのカラムが正規分布からどの程度、尖っているか見る	df[col].skew()
データフレームの列は正規分布からどの程度、尖っているか確認する	df[col].skew()
データフレームのカラムが正規分布からどの程度、尖っているか調べる	df[col].skew()
データフレームを丸める	df.round()
データフレームのリストカラムを丸める	df[aList].round()
データ列を丸める	ds.round()
データ列を四捨五入する	ds.round()
データフレームのカラムを丸める	df[col].round()
データフレームの列を四捨五入する	df[col].round()
データフレームのカラムを四捨五入する	df[col].round()
データフレームを小数点以下n桁で丸める	df.round(n)
データフレームのリストカラムを小数点以下n桁で丸める	df[aList].round(n)
データ列を小数点以下n桁で丸める	ds.round(n)
データフレームのカラムを小数点以下n桁で丸める	df[col].round(n)
データフレームを10の位で丸める	df.round(-1)
データフレームのリストカラムを10の位で丸める	df[aList].round(-1)
データフレームのリストカラムを10の位で四捨五入する	df[aList].round(-1)
データ列を10の位で丸める	ds.round(-1)
データ列を十の位で四捨五入する	ds.round(-1)
カラムを10の位で丸める	ds.round(-1)
データフレームのカラムを10の位で丸める	df[col].round(-1)
データフレームのカラムを10の位で四捨五入する	df[col].round(-1)
データフレームの列を10の位で丸める	df[col].round(-1)
データフレームを100の位で丸める	df.round(-2)
データフレームのリストカラムを100の位で丸める	df[aList].round(-2)
データフレームのリスト列を百の位で丸める	df[aList].round(-2)
データ列を100の位で丸める	ds.round(-2)
データ列を100の位で四捨五入する	ds.round(-2)
データフレームのカラムを100の位で丸める	df[col].round(-2)
データフレームを1000の位で丸める	df.round(-3)
データフレームのリストカラムを1000の位で丸める	df[aList].round(-3)
データ列を1000の位で丸める	ds.round(-3)
データ列を1000の位で四捨五入する	ds.round(-3)
データフレームのカラムを1000の位で丸める	df[col].round(-3)
データフレームの列を千の位で丸める	df[col].round(-3)
データフレームを丸めて、整数型にする	df.round().astype(int)
データフレームのリストカラムを丸めて、整数型にする	df[aList].round().astype(int)
データフレームのリスト列を丸めて、整数にする	df[aList].round().astype(int)
データ列を丸めて、整数型にする	ds.round().astype(int)
データフレームのカラムを丸めて、整数型にする	df[col].round().astype(int)
データフレームのカラムを四捨五入して整数型にする	df[col].round().astype(int)
データフレームの列を丸めて、整数にする	df[col].round().astype(int)
データフレームを10の位で丸めて、整数型にする	df.round(-1).astype(int)
データフレームを10の位で四捨五入して、整数にする	df.round(-1).astype(int)
データフレームのリストカラムを10の位で丸めて、整数型にする	df[aList].round(-1).astype(int)
データフレームのリストカラムを十の位で四捨五入して、整数型にする	df[aList].round(-1).astype(int)
データ列を10の位で丸めて、整数型にする	ds.round(-1).astype(int)
列を十の位で丸めて整数にする	ds.round(-1).astype(int)
データフレームのカラムを10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
データフレームのカラムを10の位で丸めて整数型にする	df[col].round(-1).astype(int)
データフレームを100の位で丸めて、整数型にする	df.round(-2).astype(int)
データフレームを百の位で丸めて整数にする	df.round(-2).astype(int)
データフレームのリストカラムを100の位で丸めて、整数型にする	df[aList].round(-2).astype(int)
データフレームのリスト列を百の位で四捨五入して整数型にする	df[aList].round(-2).astype(int)
データフレームのリストカラムを百の位で丸めて整数型にする	df[aList].round(-2).astype(int)
データ列を100の位で丸めて、整数型にする	ds.round(-2).astype(int)
データフレームのカラムを100の位で丸めて、整数型にする	df[col].round(-2).astype(int)
データフレームの列を100の位で四捨五入して、整数型にする	df[col].round(-2).astype(int)
データフレームを1000の位で丸めて、整数型にする	df.round(-3).astype(int)
データフレームを1000の位で四捨五入して整数型にする	df.round(-3).astype(int)
データフレームのリストカラムを1000の位で丸めて、整数型にする	df[aList].round(-3).astype(int)
データフレームのリストカラムを千の位で丸めて、整数型にする	df[aList].round(-3).astype(int)
データ列を1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
データ列を千の位で四捨五入して、整数にする	ds.round(-3).astype(int)
データ列を千の位で丸めて整数型にする	ds.round(-3).astype(int)
データフレームのカラムを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
データフレームの列を1000の位で丸めて、整数にする	df[col].round(-3).astype(int)
データフレームの欠損値をxで埋める	df.fillna(x)
xでデータフレームの欠損値を埋める	df.fillna(x)
データフレームの欠損値をxに設定する	df.fillna(x)
データフレームのリストカラムの欠損値をxで埋める	df[aList].fillna(x)
データフレームのリスト列の欠損値をxで埋める	df[aList].fillna(x)
xでデータフレームのリストカラムの欠損値を補う	df[aList].fillna(x)
データフレームのリストカラムの欠損値をxに設定する	df[aList].fillna(x)
データ列の欠損値をxで埋める	ds.fillna(x)
カラムの未入力値をxで埋める	ds.fillna(x)
データ列の欠損値をxに設定する	ds.fillna(x)
カラムの欠損値をxに設定する	ds.fillna(x)
データフレームのカラムの欠損値をxで埋める	df[col].fillna(x)
xでデータフレームのカラムのNaNを補う	df[col].fillna(x)
データフレームのカラムの欠損値をxに設定する	df[col].fillna(x)
データフレームの列の欠損値をxに設定する	df[col].fillna(x)
データフレームの欠損値を平均値で埋める	df.fillna(df.mean())
平均値でデータフレームの欠損値を補う	df.fillna(df.mean())
データフレームの欠損値を平均値に設定する	df.fillna(df.mean())
データフレームの欠損値を平均に変更する	df.fillna(df.mean())
データフレームのリストカラムの欠損値を平均値で埋める	df[aList].fillna(df[aList].mean())
データフレームのリスト列の欠損値を平均で補う	df[aList].fillna(df[aList].mean())
平均でデータフレームのリストカラムの未入力値を埋める	df[aList].fillna(df[aList].mean())
データフレームのリストカラムの欠損値を平均値に設定する	df[aList].fillna(df[aList].mean())
データフレームのリスト列の欠損値を平均値にする	df[aList].fillna(df[aList].mean())
データフレームのリストカラムのNaNを平均値に設定する	df[aList].fillna(df[aList].mean())
データ列の欠損値を平均値で埋める	ds.fillna(ds.mean())
カラムの欠損値を平均値で補う	ds.fillna(ds.mean())
列の未入力値を平均値で埋める	ds.fillna(ds.mean())
データ列の欠損値を平均値に設定する	ds.fillna(ds.mean())
カラムの欠損値を平均値に設定する	ds.fillna(ds.mean())
データ列の未入力値を平均に設定する	ds.fillna(ds.mean())
データフレームのカラムの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
データフレームのカラムのNaNを平均値で埋める	df[col].fillna(df[col].mean())
データフレームのカラムの未入力値を平均で埋める	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
データフレームの列の欠損値を平均値に指定する	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均に変更する	df[col].fillna(df[col].mean())
データフレームの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
データフレームのNaNをモードで埋める	df.fillna(df.mode().iloc[0])
データフレームのNaNをモードで補う	df.fillna(df.mode().iloc[0])
データフレームの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
データフレームのNaNを最頻値に設定する	df.fillna(df.mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値で埋める	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリスト列の欠損値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データ列の欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
列の欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
データ列の欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
カラムのNaNを最頻値に設定する	ds.fillna(ds.mode().iloc[0])
データフレームのカラムの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
最頻値でデータフレームのカラムの未入力値を埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値を最頻値で置換する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの未入力値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データフレームの欠損値を中央値で埋める	df.fillna(df.median())
データフレームのNaNを中央値で埋める	df.fillna(df.median())
データフレームの欠損値を中央値に設定する	df.fillna(df.median())
データフレームのNaNを中央値に指定する	df.fillna(df.median())
データフレームのNaNを中央値に設定する	df.fillna(df.median())
データフレームのリストカラムの欠損値を中央値で埋める	df[aList].fillna(df[aList].median())
中央値でデータフレームのリストカラムのNaNを補う	df[aList].fillna(df[aList].median())
データフレームのリスト列の欠損値を第二四分位数で埋める	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を中央値に設定する	df[aList].fillna(df[aList].median())
データフレームのリスト列のNaNをメディアンに設定する	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を中央値に減らす	df[aList].fillna(df[aList].median())
データ列の欠損値を中央値で埋める	ds.fillna(ds.median())
カラムの欠損値を第二四分位数で補う	ds.fillna(ds.median())
データ列の欠損値を中央値に設定する	ds.fillna(ds.median())
データ列の欠損値をメディアンにする	ds.fillna(ds.median())
カラムの欠損値を中央値に設定する	ds.fillna(ds.median())
データフレームのカラムの欠損値を中央値で埋める	df[col].fillna(df[col].median())
データフレームの列の欠損値を中央値で埋める	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を第二四分位数に設定する	df[col].fillna(df[col].median())
データフレームの欠損値を最大値で埋める	df.fillna(df.max())
最大値でデータフレームの欠損値を補う	df.fillna(df.max())
データフレームの欠損値を最大値に設定する	df.fillna(df.max())
データフレームのリストカラムの欠損値を最大値で埋める	df[aList].fillna(df[aList].max())
最大値でデータフレームのリスト列の欠損値を置換する	df[aList].fillna(df[aList].max())
データフレームのリストカラムの欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
データ列の欠損値を最大値で埋める	ds.fillna(ds.max())
最大値でデータ列の欠損値を補う	ds.fillna(ds.max())
カラムの欠損値を最大値で埋める	ds.fillna(ds.max())
データ列の欠損値を最大値に設定する	ds.fillna(ds.max())
データ列のNaNを最大値に設定する	ds.fillna(ds.max())
カラムのNaNを最大値に設定する	ds.fillna(ds.max())
データフレームのカラムの欠損値を最大値で埋める	df[col].fillna(df[col].max())
データフレームのカラムのNaNを最大値で埋める	df[col].fillna(df[col].max())
データフレームのカラムの欠損値を最大値に設定する	df[col].fillna(df[col].max())
データフレームのカラムの欠損値を最大値に指定する	df[col].fillna(df[col].max())
データフレームのカラムのNaNを最大値に設定する	df[col].fillna(df[col].max())
データフレームの欠損値を最小値で埋める	df.fillna(df.min())
最小値でデータフレームの欠損値を補う	df.fillna(df.min())
データフレームの未入力値を最小値で補う	df.fillna(df.min())
データフレームの欠損値を最小値に設定する	df.fillna(df.min())
データフレームの欠損値を最小値に指定する	df.fillna(df.min())
データフレームのリストカラムの欠損値を最小値で埋める	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
データフレームのリスト列の欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
データフレームのリスト列の欠損値を最小値に増やす	df[aList].fillna(df[aList].min())
データ列の欠損値を最小値で埋める	ds.fillna(ds.min())
最小値でデータ列の欠損値を埋める	ds.fillna(ds.min())
データ列の欠損値を最小値で補う	ds.fillna(ds.min())
データ列の欠損値を最小値に設定する	ds.fillna(ds.min())
カラムの欠損値を最小値に変更する	ds.fillna(ds.min())
データフレームのカラムの欠損値を最小値で埋める	df[col].fillna(df[col].min())
データフレームのカラムのNaNを最小値で置換する	df[col].fillna(df[col].min())
最小値でデータフレームの列のNaNを置換する	df[col].fillna(df[col].min())
データフレームのカラムの欠損値を最小値に設定する	df[col].fillna(df[col].min())
データフレームの欠損値を直前の値で埋める	df.fillna(method='ffill')
データフレームの欠損値を直前の値に設定する	df.fillna(method='ffill')
データフレームの未入力値を直前の値に設定する	df.fillna(method='ffill')
データフレームのNaNを直前の値にセットする	df.fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムの未入力値を前の行の値で補う	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値に設定する	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を前の行の値に設定する	df[aList].fillna(method='ffill')
データ列の欠損値を直前の値で埋める	ds.fillna(method='ffill')
直前の値でデータ列の欠損値を補う	ds.fillna(method='ffill')
データ列の欠損値を直前の値に設定する	ds.fillna(method='ffill')
データ列の欠損値を前の行の値に変更する	ds.fillna(method='ffill')
データ列の欠損値を前の行の値に設定する	ds.fillna(method='ffill')
データフレームのカラムの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値で置き換える	df[col].fillna(method='ffill')
直前の値でデータフレームの列の欠損値を埋める	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値に設定する	df[col].fillna(method='ffill')
データフレームの列の欠損値を直前の値に設定する	df[col].fillna(method='ffill')
データフレームの欠損値を直後の値で埋める	df.fillna(method='bfill')
後の行の値でデータフレームのNaNを補う	df.fillna(method='bfill')
データフレームの欠損値を直後の値に設定する	df.fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値で埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を後の行の値で埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値に設定する	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を後の行の値に設定する	df[aList].fillna(method='bfill')
データフレームのリストカラムの未入力値を直後の値に設定する	df[aList].fillna(method='bfill')
データ列の欠損値を直後の値で埋める	ds.fillna(method='bfill')
データ列の欠損値を直後の値で補う	ds.fillna(method='bfill')
直後の値でデータ列の欠損値を埋める	ds.fillna(method='bfill')
データ列の欠損値を直後の値に設定する	ds.fillna(method='bfill')
カラムの欠損値を直後の値に設定する	ds.fillna(method='bfill')
データフレームのカラムの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
データフレームの列の欠損値を直後の値で埋める	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を直後の値に設定する	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を直後の値に指定する	df[col].fillna(method='bfill')
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値にする	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を未入力値に変換する	df[aList].replace(s, np.nan)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
データ列の文字列を未入力値にする	ds.replace(s, np.nan)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームの列の文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームのカラムの文字列を未入力値に変換する	df[col].replace(s, np.nan)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
データフレームの空文字を未入力値に変換しドロップする	df.replace('', np.nan).dropna()
データフレームの空文字をNaNに変換し、ドロップする	df.replace('', np.nan).dropna()
データフレームの空文字をドロップする	df.replace('', np.nan).dropna()
データフレームのリストカラムの空文字を欠損値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリストカラムの空文字を未入力値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリストカラムの空文字をドロップする	df[aList].replace('', np.nan).dropna()
データ列の空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
データ列の空文字をドロップする	ds.replace('', np.nan).dropna()
カラムの空文字をドロップする	ds.replace('', np.nan).dropna()
データフレームのカラムの空文字を欠損値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字を欠損値に変換しドロップする	df[col].replace('', np.nan).dropna()
データフレームの列の空文字を未入力値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字をドロップする	df[col].replace('', np.nan).dropna()
データフレームの値をValueMapでまとめて置き換える	df.replace(ValueMap)
データフレームをValueMapでまとめて置き換える	df.replace(ValueMap)
データフレームのリストカラムの値をValueMapでまとめて置き換える	df[aList].replace(ValueMap)
データ列の値をValueMapでまとめて置き換える	ds.replace(ValueMap)
ValueMapでデータ列の値を変更する	ds.replace(ValueMap)
データ列をValueMapで一度に変更する	ds.replace(ValueMap)
データフレームのカラムの値をValueMapでまとめて置き換える	df[col].replace(ValueMap)
データフレームの列の値をValueMapでまとめて置き換える	df[col].replace(ValueMap)
データフレームの値を正規表現patternでまとめてreplに置き換える	df.replace(pattern, repl, regex=True)
まとめてreplにデータフレームの値を正規表現patternで置換する	df.replace(pattern, repl, regex=True)
正規表現patternでreplにデータフレームの値をまとめて置換する	df.replace(pattern, repl, regex=True)
データフレームのリストカラムの値を正規表現patternでまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
replに正規表現patternでデータフレームのリストカラムをまとめて置き換える	df[aList].replace(pattern, repl, regex=True)
データフレームのリスト列の値を正規表現patternでまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
データ列の値を正規表現patternでまとめてreplに置き換える	ds.replace(pattern, repl, regex=True)
正規表現でデータ列の値を一度にreplに置き換える	ds.replace(pattern, repl, regex=True)
データフレームのカラムの値を正規表現patternでまとめてreplに置き換える	df[col].replace(pattern, repl, regex=True)
まとめてデータフレームのカラムを正規表現patternで置換する	df[col].replace(pattern, repl, regex=True)
正規表現でデータフレームのカラムの値をreplに置き換える	df[col].replace(pattern, repl, regex=True)
データフレームの値が欠損値か調べる	df.isna()
データフレームのリストカラムの値が欠損値か調べる	df[aList].isna()
データ列の値が欠損値か調べる	ds.isna()
データ列の値が欠損値か	ds.isna()
カラムの値が欠損値か	ds.isna()
データフレームのカラムの値が欠損値か調べる	df[col].isna()
データフレームのカラムの値が欠損値	df[col].isna()
データフレームのカラムの値が欠損値か確認する	df[col].isna()
データフレームの中の欠損値の合計を数える	df.isna().sum()
データフレームの中にいくつ欠損値があるか数える	df.isna().sum()
データフレームの中にいくつ未入力値が含まれるか数える	df.isna().sum()
データフレームの中にいくつNaNが含まれるか数える	df.isna().sum()
データフレームのリストカラムの中の欠損値の合計を数える	df[aList].isna().sum()
データフレームのリストカラムの中の欠損値の合計をカウントする	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ欠損値があるか数える	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ未入力値が存在するか数える	df[aList].isna().sum()
データフレームのリストカラムの中にいくつNaNがあるか数える	df[aList].isna().sum()
データ列の中の欠損値の合計を数える	ds.isna().sum()
データ列の中の欠損値の数を数える	ds.isna().sum()
データ列の中にいくつ欠損値があるか数える	ds.isna().sum()
データ列の中にいくつ未入力値があるか数える	ds.isna().sum()
データフレームのカラムの中の欠損値の合計を数える	df[col].isna().sum()
データフレームの列の中の未入力値の合計を数える	df[col].isna().sum()
データフレームのカラムの中にいくつ欠損値があるか数える	df[col].isna().sum()
データフレームのカラムの中にいくつ未入力値があるか数える	df[col].isna().sum()
データフレームのカラムの中にいくつ欠損値があるかカウントする	df[col].isna().sum()
データフレームの中に文字列があるか調べる	df.isin([value])
データフレームの中に文字列が存在するか調べる	df.isin([value])
データフレームのリストカラムの中に文字列があるか調べる	df[aList].isin([value])
データフレームのリスト列の中にが含まれるか調べる	df[aList].isin([value])
データフレームのリストカラムの中に日付データがある	df[aList].isin([value])
データ列の中に文字列があるか調べる	ds.isin([value])
データ列の中に日付データがあるか調べる	ds.isin([value])
データ列の中に文字列が存在する	ds.isin([value])
データフレームのカラムの中に文字列があるか調べる	df[col].isin([value])
データフレームの列の中に文字列があるか調べる	df[col].isin([value])
データフレームのカラムの中に文字列がある	df[col].isin([value])
データフレームの中にある文字列の合計を数える	df.isin([value]).sum()
データフレームの中にある日付データの合計を数える	df.isin([value]).sum()
データフレームの中に含まれる文字列の合計を数える	df.isin([value]).sum()
データフレームの中にいくつ文字列があるか数える	df.isin([value]).sum()
データフレームの中にいくつ日付データが含まれるか数える	df.isin([value]).sum()
データフレームのリストカラムの中にある文字列の合計を数える	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつ文字列があるか数える	df[aList].isin([value]).sum()
データフレームのリスト列の中にいくつ文字列があるかカウントする	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつがあるか数える	df[aList].isin([value]).sum()
データ列の中にある文字列の合計を数える	ds.isin([value]).sum()
データ列の中にある文字列の個数を数える	ds.isin([value]).sum()
データ列の中にいくつ文字列があるか数える	ds.isin([value]).sum()
カラムの中にいくつがあるか数える	ds.isin([value]).sum()
データフレームのカラムの中にある文字列の合計を数える	df[col].isin([value]).sum()
データフレームのカラムの中にあるの合計を数える	df[col].isin([value]).sum()
データフレームのカラムの中にいくつ文字列があるか数える	df[col].isin([value]).sum()
データフレームのカラムの中にいくつ日付データがあるかカウントする	df[col].isin([value]).sum()
データフレームの列の中にいくつがあるかカウントする	df[col].isin([value]).sum()
データフレームの中に文字列と文字列があるか調べる	df.isin([value, value2])
データフレームのリストカラムの中に文字列と文字列があるか調べる	df[aList].isin([value, value2])
データフレームのリストカラムの中に文字列と文字列がある	df[aList].isin([value, value2])
データフレームのリストカラムの中に日付データと文字列があるか調べる	df[aList].isin([value, value2])
データ列の中に文字列と文字列があるか調べる	ds.isin([value, value2])
データ列の中に文字列と文字列が含まれるかどうか調べる	ds.isin([value, value2])
データ列の中にとがあるかどうか調べる	ds.isin([value, value2])
データフレームのカラムの中に文字列と文字列があるか調べる	df[col].isin([value, value2])
データフレームの列の中にと文字列がある	df[col].isin([value, value2])
データフレームのカラムの中に文字列と日付データがあるか調べる	df[col].isin([value, value2])
データフレームの中にある文字列と文字列の合計を数える	df.isin([value, value2]).sum()
データフレームの中に含まれると文字列の合計を求める	df.isin([value, value2]).sum()
データフレームの中にある文字列と文字列の合計を求める	df.isin([value, value2]).sum()
データフレームの中に文字列と文字列がいくつあるか数える	df.isin([value, value2]).sum()
データフレームのリストカラムの中にある文字列と文字列の合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に存在すると文字列の合計をカウントする	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に文字列と文字列がいくつあるか数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に日付データと文字列がいくつ存在するか数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中にと文字列がいくつ存在するか数える	df[aList].isin([value, value2]).sum()
データ列の中にある文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
カラムの中にある文字列と日付データの合計を数える	ds.isin([value, value2]).sum()
データ列の中にあると文字列の数を求める	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつあるか数える	ds.isin([value, value2]).sum()
列の中に文字列と文字列がいくつ存在するか数える	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつあるか求める	ds.isin([value, value2]).sum()
データフレームのカラムの中にある文字列と文字列の合計を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に含まれる文字列と文字列の数を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中にある日付データと日付データの合計を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に文字列と文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
二つのデータフレームを縦方向に連結する	pd.concat([df, df2])
2つのデータフレームを縦方向に連結する	pd.concat([df, df2])
二つのデータフレームを縦方向に連結する	pd.concat([df, df2], axis=0)
二つのデータフレームを縦にくっつける	pd.concat([df, df2], axis=0)
二つのデータフレームを横方向に連結する	pd.concat([df, df2], axis=1)
横方向に二つのデータフレームを連結する	pd.concat([df, df2], axis=1)
三つのデータフレームを縦方向に連結する	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを横方向に連結する	pd.concat([df, df2, df3], axis=1)
三つのデータフレームを横方向に一つにする	pd.concat([df, df2, df3], axis=1)
複数のデータフレームを横方向に連結する	pd.concat([df, df2, df3], axis=1)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を横向きにつなぐ	pd.concat([df, ds], axis=1)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
データフレームから最初の列を除く	df[df.columns[1:]]
最初の列をデータフレームから除く	df[df.columns[1:]]
データフレームから最後の列を除く	df[df.columns[:-1]]
データフレームから末尾の列を除く	df[df.columns[:-1]]
データフレームからn番目の列を除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
二つのデータフレームを横方向にマージする	pd.merge(df, df2)
横方向に二つのデータフレームをマージする	pd.merge(df, df2)
二つのデータフレームを結合する	pd.merge(df, df2)
列をキーにして二つのデータフレームを結合する	pd.merge(df, df2, on=column)
列をキーにして２つのデータフレームを結合する	pd.merge(df, df2, on=column)
列をキーにして2つのデータフレームを結合する	pd.merge(df, df2, on=column)
列'A'と列'B'をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
列'A'と列'B'をキーにして２つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
二つのデータフレームを列'A'と列'B'をキーとしてジョインする	pd.merge(df, df2, left_on='A', right_on='B')
異なる列をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
二つのデータフレームを異なる列をキーとして結合する	pd.merge(df, df2, left_on='A', right_on='B')
列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, on=column, how='outer')
列をキーにして二つのデータフレームを外部ジョインする	pd.merge(df, df2, on=column, how='outer')
列をキーとして2つのデータフレームを外部結合する	pd.merge(df, df2, on=column, how='outer')
列をキーにして二つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
列をキーにして2つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
列をキーにして二つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
列をキーとして２つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
列をキーにして２つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
列をキーにして二つのデータフレームを内部結合する	pd.merge(df, df2, on=column, how='inner')
列'A'と列'B'をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
二つの表データを列'A'と列'B'をキーとして外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
二つのデータフレームを列'A'と列'B'をキーとして外部ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
異なる列をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
異なる列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
列'A'と列'B'をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
2つのデータフレームを列'A'と列'B'をキーとして左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
二つのデータフレームを異なる列をキーにして左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
二つのデータフレームを異なるカラムをキーとして左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
列'A'と列'B'をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして２つのデータフレームを右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして２つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
列'A'と列'B'をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
二つのデータフレームを列'A'と列'B'をキーとして内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
列'A'と列'B'をキーとして二つのデータフレームを内部ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーとして２つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
データフレームのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
データフレームのカテゴリデータをワンホット・ベクトルに変換する	pd.get_dummies(df)
データフレームの列をダミー変数に変換する	pd.get_dummies(df[column])
データフレームの列をワンホット・ベクトルにする	pd.get_dummies(df[column])
イテラブルをダミー変数に変換する	pd.get_dummies(iterable)
最初のカテゴリーを除外してデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを無視してデータフレームの列をダミー変数にする	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを除外してデータフレームのカラムをベクトルに変換する	pd.get_dummies(df[column], drop_first=True)
NaNも加えてデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
データフレームの列を欠損値も加えてダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
データフレームを使う	import pandas as pd
データフレームをインポートする	import pandas as pd
データフレームを見る	df.head()
データフレームの先頭	df.head()
データフレームの先頭n行	df.head(n)
表データの最初n行	df.head(n)
データフレームの上n行	df.head(n)
データフレームの先頭n行	df.head(n)
データフレームの先頭n行を見る	df.head(n)
データフレームの末尾	df.tail()
データフレームの末尾n行を抽出する	df.tail(n)
データフレームの最後n行を抽出する	df.tail(n)
データフレームの最後n行を選択する	df.tail(n)
データフレームからランダムに抽出する	df.sample()
ランダムにデータフレームから取り出す	df.sample()
データフレームをサンプリングする	df.sample()
データフレームをランダムサンプリングする	df.sample()
データフレームからランダムにn行を抽出する	df.sample(n)
データフレームからランダムにn行を取り出す	df.sample(n)
データフレームからn行、サンプリングする	df.sample(n)
データフレームから重複ありでランダムにn行をサンプリングする	df.sample(n, replace=True)
n行をデータフレームからランダムに重複ありでサンプリングする	df.sample(n, replace=True)
ランダムにn行をデータフレームから重複ありでサンプリングする	df.sample(n, replace=True)
データフレームの行を範囲指定して抽出する	df[start:end]
データフレームの行を範囲指定して選ぶ	df[start:end]
データフレームのstart行目からend行目まで抽出する	df[start:end]
データフレームのn行以降抽出する	df[n:]
データフレームのn行以降を取り出す	df[n:]
データフレームのn行目より後ろ抽出する	df[n:]
データフレームのn行まで抽出する	df[:n]
データフレームの指定された列を抽出する	df[column]
データフレームの指定された列を配列に変換する	df[column].values
データフレームの指定された列を配列として抽出する	df[column].values
データフレームの指定された列をリストに変換する	df[column].values.tolist()
列をリストにする	df[column].values.tolist()
データフレームの指定された列をリストとして抽出する	df[column].values.tolist()
列をリストとして抽出する	df[column].values.tolist()
データフレームから列を一つ選択する	df[[column]]
データフレームから列を１つだけ選択する	df[[column]]
データフレームから指定された列を抽出する	df[[column]]
データフレームから指定された列のみ取り出す	df[[column]]
データフレームから指定された列だけ抽出する	df[[column]]
データフレームから列を二つ選択する	df[[column, column2]]
データフレームから指定された二つの列を抽出する	df[[column, column2]]
データフレームから指定された2つの列を抽出する	df[[column, column2]]
データフレームから指定された２列を取り出す	df[[column, column2]]
データフレームから列を三つ選択する	df[[column, column2, column3]]
データフレームから指定された三つの列を抽出する	df[[column, column2, column3]]
データフレームから列を４つ選択する	df[[column, column2, column3, column4]]
データフレームから指定された４つの列を抽出する	df[[column, column2, column3, column4]]
データフレームの指定された４つの列のみ抽出する	df[[column, column2, column3, column4]]
データフレームから列名を複数指定して選択する	df[columns]
データフレームの指定された列の名前一覧の列を抽出する	df[columns]
データフレームの指定した列の名前一覧の列を選択する	df[columns]
データフレームの指定した列名一覧の列のみ取り出す	df[columns]
データフレームのn行目を抽出する	df.loc[n]
データフレームのインデックスがnの行を抽出する	df.loc[n]
データフレームの列の一覧	df.info()
データフレームの列の種類	df.info()
列の種類を確認する	df.info()
データフレームの列の名前の一覧を使う	df.columns
データフレームの列の名前のリストを求める	df.columns
列名の一覧	df.columns
データフレームの列の名前を列挙する	df.columns
列名を列挙する	df.columns
データフレームの列名を指定された列の名前一覧に置き換える	df.columns = columns
データフレームからカテゴリデータの列名の一覧を使う	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名一覧を見る	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名の一覧を求める	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名を列挙する	df.select_dtypes('object').columns
データフレームから指定されたデータ型の列名の一覧	df.select_dtypes(型).columns
データフレームから指定したデータ型の列名の一覧	df.select_dtypes(型).columns
データフレームの指定されたデータ型の列名を列挙する	df.select_dtypes(型).columns
列名の一覧をデータ型でフィルタする	df.select_dtypes(型).columns
データフレームのインデックスの一覧	df.index
データフレームの行の名前の一覧	df.index
データフレームのインデックス一覧	df.index
データフレームを配列に変換する	df.values
データフレームのデータ型の一覧	df.dtypes
データフレームのデータ型リスト	df.dtypes
データフレームのデータ型のリスト	df.dtypes
データフレームから型リストで指定されたデータ型の列を抽出する	df.select_dtypes(include=typeList)
表データから型リストで指定されたデータ型の列を抽出する	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型の列を取り出す	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型の列を除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストで指定されたデータ型の列だけ除外する	df.select_dtypes(exclude=typeList)
データフレームからカテゴリデータの列を抽出する	df.select_dtypes('object')
データフレームからカテゴリデータを選択する	df.select_dtypes('object')
データフレームからカテゴリデータの列だけ選ぶ	df.select_dtypes('object')
データフレームから数値データの列を抽出する	df.select_dtypes('number')
データフレームから数値データの列のみ選択する	df.select_dtypes('number')
データフレームから型の列を抽出する	df.select_dtypes(ty)
データフレームから型のカラムを選ぶ	df.select_dtypes(ty)
データフレームから型のカラムを抽出する	df.select_dtypes(ty)
データフレームの各次元の大きさを見る	df.shape
データフレームを転置する	df.T
データフレームの行と列を入れ替える	df.T
データフレームの相関行列	df.corr()
データフレームの列と列の相関行列	df[[column, column2]].corr()
データフレームのリスト列の相関行列	df[aList].corr()
データフレームのリスト列の各列間の相関係数を算出する	df[aList].corr()
ピアソン相関係数でデータフレームの相関行列	df.corr(method='pearson')
ピアソン積率相関係数でデータフレームの相関行列	df.corr(method='pearson')
ピアソンを用いてデータフレームの相関行列	df.corr(method='pearson')
ピアソン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
データフレームの列と列の相関行列ピアソンとして	df[[column, column2]].corr(method='pearson')
ピアソンでデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
ピアソン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
ピアソンでデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
ピアソン相関係数でデータフレームのリスト列の相関行列を計算する	df[aList].corr(method='pearson')
ケンドール相関係数でデータフレームの相関行列	df.corr(method='kendall')
ケンドール相関係数でデータフレームの相関行列を求める	df.corr(method='kendall')
ケンドール相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
ケンドールを用いてデータフレームの列と列の相関行列を求める	df[[column, column2]].corr(method='kendall')
データフレームの列と列の相関行列ケンドールを用いて	df[[column, column2]].corr(method='kendall')
ケンドール相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
データフレームのリスト列の相関行列ケンドール相関係数で	df[aList].corr(method='kendall')
ケンドールでデータフレームのリスト列の相関行列を算出する	df[aList].corr(method='kendall')
スピアマン相関係数でデータフレームの相関行列	df.corr(method='spearman')
データフレームの相関行列スピアマン相関係数で	df.corr(method='spearman')
データフレームの相関行列スピアマンで	df.corr(method='spearman')
スピアマン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
スピアマン相関係数でデータフレームのカラムと列の相関行列	df[[column, column2]].corr(method='spearman')
スピアマンでデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
スピアマン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='spearman')
スピアマン相関係数としてデータフレームのリスト列の相関行列	df[aList].corr(method='spearman')
スピアマンでデータフレームのリストカラムの相関行列を求める	df[aList].corr(method='spearman')
データフレームの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
表データの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
データフレームのヒートマップを描画する	sns.heatmap(df.corr())
データフレームの列と列の相関行列をヒートマップで描画する	sns.heatmap(df[[column, column2]].corr())
ヒートマップを使ってデータフレームの列と列の相関行列を描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列と列のヒートマップを描画する	sns.heatmap(df[[column, column2]].corr())
データフレームのリスト列の相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
データフレームのリストで指定された列の相関行列をヒートマップでグラフ化する	sns.heatmap(df[aList].corr())
データフレームのリストカラムの相関行列をヒートマップを用いてグラフ化する	sns.heatmap(df[aList].corr())
データフレームのリスト列のヒートマップを描画する	sns.heatmap(df[aList].corr())
データフレームの数値をまとめて丸める	df.round()
データフレームをまとめて丸める	df.round()
データフレームの数値をまとめて小数点以下n桁で丸める	df.round(n)
データフレームの列の名前を付け直す	df.rename(columns={column: name})
データフレームのカラムの名前を付け直す	df.rename(columns={column: name})
データフレームの列の名前を列から文字列に付け直す	df.rename(columns={column: name})
データフレームの列名を列から文字列に付け直す	df.rename(columns={column: name})
データフレームの列を文字列にリネームする	df.rename(columns={column: name})
データフレームの列の名前をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームの列名をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームのインデックスの名前をまとめて、nameからname2に付け直す	df.rename(index={name: name2})
データフレームのインデックス名をまとめてnameからname2に付け直す	df.rename(index={name: name2})
表データの行の名前を一度にnameからname2に付け直す	df.rename(index={name: name2})
データフレームの列をインデックスに設定する	df.set_index(column)
データフレームの列をインデックスに指定する	df.set_index(column)
データフレームのインデックスをリセットする	df.reset_index()
データフレームの列がxの行を抽出する	df[df[column] == x]
表データの列がxの行を抽出する	df[df[column] == x]
データフレームの列がxでない行をフィルタする	df[df[column] == x]
データフレームのカラムの値がxでない行を消す	df[df[column] == x]
データフレームの列がxでない行を取り除く	df[df[column] == x]
データフレームの行を条件でフィルタするには	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列の値がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がx、かつ列がx2である行を取り出す	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がxより小さい行を抽出する	df[df[column] < x]
データフレームの列がx以下の行を抽出する	df[df[column] <= x]
データフレームの列がx以下のデータを抽出する	df[df[column] <= x]
データフレームの列がxより大きい行を抽出する	df[df[column] > x]
データフレームの列がx以上の行を抽出する	df[df[column] >= x]
データフレームの列の値がx以上の行を抽出する	df[df[column] >= x]
データフレームの列がxより大きくx2より小さい行を抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がxより大きくx2より小さい行を選択する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がx以上かつx2未満の行を抽出する	df[(x <= df[column]) & (df[column] < x2)]
データフレームの列の値がx以上かつx2未満の行を選択する	df[(x <= df[column]) & (df[column] < x2)]
データフレームの列がリストに含まれる行を抽出する	df[df[column].isin(aList)]
データフレームの列の値がリストに含まれる行を抽出する	df[df[column].isin(aList)]
データフレームの列が文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
データフレームの列で文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
データフレームの列が文字列が含まれない行を抽出する	df[not df[column].str.contains(s)]
データフレームの列の文字列が文字列が含まれないデータを取り出す	df[not df[column].str.contains(s)]
データフレームの列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
データフレームの列の文字列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチしない行を抽出する	df[not df[column].str.match(s)]
データフレームのカラムの文字列が正規表現文字列にマッチしないデータを抽出する	df[not df[column].str.match(s)]
データフレームの列が文字列で始まる行を抽出する	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まる行を選択する	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まる行を取り出す	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まらない行を抽出する	df[not df[column].str.startswith(s)]
データフレームの列の文字列が文字列で始まらないデータを抽出する	df[not df[column].str.startswith(s)]
データフレームの列が文字列で終わる行を抽出する	df[df[column].str.endswith(s)]
データフレームの列の文字列が文字列で終わるデータを取り出す	df[df[column].str.endswith(s)]
データフレームの列が文字列で終わらない行を抽出する	df[not df[column].str.endswith(s)]
データフレームの列が文字列で終わらないデータを抽出する	df[not df[column].str.endswith(s)]
データフレームの欠損値が含まれる箇所に色を付ける	df.style.highlight_null()
データフレームのNaNがある部分に	df.style.highlight_null()
データフレームのn行目を削除する	df.drop(n, axis=0)
データフレームのn行目を破壊的に削除する	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
データフレームのn行目を削除して、インプレイスする	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして更新する	df.drop(n, axis=0, inplace=True)
データフレームの列を削除する	df.drop(column, axis=1)
データフレームの列を破壊的に削除する	df.drop(column, axis=1, inplace=True)
データフレームの列をインプレイスで削除する	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップして、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列を削除して、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列と列を削除する	df.drop([column, column2], axis=1)
データフレームの列の名前一覧で指定された列を削除する	df.drop(columns, axis=1)
データフレームの名前リストで指定された列を消す	df.drop(columns, axis=1)
データフレームの列名一覧で指定された列を落とす	df.drop(columns, axis=1)
データフレームの中の欠損値を削除する	df.dropna()
データフレームの中のNaNを落とす	df.dropna()
データフレームの中の欠損値を消す	df.dropna()
データフレームの中の欠損値がある行を削除する	df.dropna()
データフレームの中の欠損値が存在する行を落とす	df.dropna()
データフレームの重複を見る	df.duplicated()
データフレームに重複があるか見る	df.duplicated()
データフレームが重複しているか調べる	df.duplicated()
データフレームが重複している	df.duplicated()
データフレームの重複した行をマスクする	df.duplicated()
データフレームの重複した行数のマスク	df.duplicated()
データフレームの重複した行を数える	df.duplicated().sum()
データフレームの中で何行、重複するか見る	df.duplicated().sum()
データフレームの内で何行、重複するか見る	df.duplicated().sum()
データフレームの重複した行のみを抽出する	df[df.duplicated(keep=False)]
重複する行だけを取り出す	df[df.duplicated(keep=False)]
重複した行のみを抽出する	df[df.duplicated(keep=False)]
データフレームの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
データフレームの中で、列の重複を見る	df.duplicated(subset=column)
データフレームで列の重複を確認する	df.duplicated(subset=column)
データフレームの中で、列に重複があるか見る	df.duplicated(subset=column)
データフレームの内で列に重複があるか見る	df.duplicated(subset=column)
データフレームの列に重複があれば、マスクする	df.duplicated(subset=column)
データフレームの中で、列と列の重複を見る	df.duplicated(subset=[column, column2])
データフレームで、列と列の重複を確認する	df.duplicated(subset=[column, column2])
データフレームの中で、列と列に重複があるか見る	df.duplicated(subset=[column, column2])
データフレームの中で、列と列に重複があるか確認する	df.duplicated(subset=[column, column2])
データフレームの中の列と列に重複があれば、マスクする	df.duplicated(subset=[column, column2])
データフレームの中の列と列に重複があればマスクする	df.duplicated(subset=[column, column2])
データフレームから重複を削除する	df.drop_duplicates()
データフレームから重複を落とす	df.drop_duplicates()
データフレームから重複した行を削除する	df.drop_duplicates()
データフレームから破壊的に重複を削除する	df.drop_duplicates(inplace=True)
データフレームから破壊的に重複を落とす	df.drop_duplicates(inplace=True)
データフレームから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
データフレームから重複した行をドロップして、入れ替える	df.drop_duplicates(inplace=True)
データフレームから破壊的に重複した行を削除する	df.drop_duplicates(inplace=True)
データフレームから重複を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複を残さず、消す	df.drop_duplicates(keep=False)
データフレームから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複した行を残さず削除する	df.drop_duplicates(keep=False)
データフレームから重複したデータを残さず取り除く	df.drop_duplicates(keep=False)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=column)
データフレームの中で、列と列の重複を消す	df.drop_duplicates(subset=column)
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=column)
データフレームの中のカラムと列に重複があれば、消す	df.drop_duplicates(subset=column)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
列と列の重複を消す	df.drop_duplicates(subset=[column, column2])
列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば落とす	df.drop_duplicates(subset=[column, column2])
アヤメのデータセットをロードする	sns.load_dataset('iris')
データ列を使う	import pandas as pd
データ列をインポートする	import pandas as pd
Pandasで、dateStringを日付データに変換する	pd.to_datetime(dateString)
Pandasで、dateStringをタイムスタンプ型にする	pd.to_datetime(dateString)
Pandasで、dateStringをPandasの日付型にする	pd.to_datetime(dateString)
Pandasで、データフレームのcollを日付データに変換する	pd.to_datetime(df[col])
データフレームのcollを日付データにする	pd.to_datetime(df[col])
Pandasでデータフレームのcollを日付データにする	pd.to_datetime(df[col])
Pandasで、データ列を日付データに変換する	pd.to_datetime(ds)
Pandasで、文字列を日付データに変換する	pd.to_datetime(s)
Pandasで文字列を日付データにする	pd.to_datetime(s)
Pandasで文字列をPandasの日付型に変換する	pd.to_datetime(s)
Pandasで、フォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasでフォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、データフレームのcollをフォーマットで日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、フォーマットでデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、書式でデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、書式でデータ列をPandasの日付型にする	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、フォーマットで文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットで文字列を日付データにする	pd.to_datetime(s, format='%Y-%m-%d')
文字列をフォーマットで日付データにする	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットfmtでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
フォーマットfmtを用いてデータフレームのcollをPandasの日付型に変換する	pd.to_datetime(df[col], format=fmt)
Pandasで、フォーマットfmtでデータフレームのcollを日付データにする	pd.to_datetime(df[col], format=fmt)
Pandasで、フォーマットfmtでデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
書式fmtでデータ列をPandasの日付型に変換する	pd.to_datetime(ds, format=fmt)
Pandasでフォーマットfmtでデータ列をタイムスタンプに変換する	pd.to_datetime(ds, format=fmt)
Pandasで、フォーマットfmtで文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで、フォーマットfmtで文字列を日付データにする	pd.to_datetime(s, format=fmt)
Pandasで、フォーマットfmtで文字列をタイムスタンプ型に変換する	pd.to_datetime(s, format=fmt)
Pandasで、エポック秒のデータフレームのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasでエポック秒のデータフレームのcollからタイムスタンプ型にする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータフレームのcollからPandasの日付型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、データフレームのcollのエポック秒から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
PandasでデータフレームのcollのUNIX時間から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、データフレームのcollのエポック秒からPandasの日付型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
エポック秒のデータ列からタイムスタンプ型に変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、UNIX時間のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、データ列のエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、データ列のエポック秒からdatetime64型に変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、エポック秒の文字列から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、エポック秒の文字列からdatetime64型に変換する	pd.to_datetime(s, unit='s', utc=True)
PandasでUNIX秒の文字列から日付データにする	pd.to_datetime(s, unit='s', utc=True)
Pandasで、文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで文字列のUNIX時間から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
データフレームのカラムのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
データフレームのカラムのタイムゾーンを日本にセットする	df[col].tz_convert('Asia/Tokyo')
データ列のタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
データ列のタイムゾーンを東京に変更する	ds.tz_convert('Asia/Tokyo')
データフレームのカラムのタイムゾーンを文字列に設定する	df[col].tz_convert(s)
データ列のタイムゾーンを文字列に設定する	ds.tz_convert(s)
Pandasで、データフレームのカラムをインデックスにする	df.set_index(col, inplace=True)
Pandasで、日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
タイムスタンプのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
Pandasで、日付データのデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、タイムスタンプ型のデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、データフレームのカラムを日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データフレームのカラムをdatetime64型に変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasでデータフレームのカラムを日付データに変換しインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データ列を日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
データフレームのカラムの年	df[col].dt.year
データフレームのカラムが何年か見る	df[col].dt.year
データ列の年	ds.dt.year
データ列が何年か見る	ds.dt.year
データ列は何年か調べる	ds.dt.year
データフレームのカラムの月	df[col].dt.month
データフレームのカラムが何月か見る	df[col].dt.month
データフレームのカラムは何月か見る	df[col].dt.month
データ列の月	ds.dt.month
データ列が何月か見る	ds.dt.month
データ列が何月か調べる	ds.dt.month
データフレームのカラムの日	df[col].dt.day
データフレームのカラムが何日か見る	df[col].dt.day
データフレームのカラムは何日か確認する	df[col].dt.day
データ列の日	ds.dt.day
データ列が何日か見る	ds.dt.day
データフレームのカラムの時	df[col].dt.hour
データフレームのカラムの時刻を使う	df[col].dt.hour
データフレームのカラムが何時か見る	df[col].dt.hour
データフレームのカラムが何時か確認する	df[col].dt.hour
データ列の時	ds.dt.hour
データ列が何時か見る	ds.dt.hour
データフレームのカラムの分	df[col].dt.minute
データフレームのカラムが何分か見る	df[col].dt.minute
データ列の分	ds.dt.minute
データ列が何分か見る	ds.dt.minute
データフレームのカラムの秒	df[col].dt.second
データフレームのカラムが何秒か見る	df[col].dt.second
データフレームのカラムは何秒か調べる	df[col].dt.second
データ列の秒	ds.dt.second
データ列が何秒か見る	ds.dt.second
データフレームのカラムの曜日の名前	df[col].dt.weekday_name
データフレームのカラムの曜日名	df[col].dt.weekday_name
データフレームのカラムが何曜日か見る	df[col].dt.weekday_name
データ列の曜日の名前	ds.dt.weekday_name
データ列が何曜日か見る	ds.dt.weekday_name
データ列が何曜日か調べる	ds.dt.weekday_name
データ列は何曜日か調べる	ds.dt.weekday_name
データフレームのカラムの曜日数	df[col].dt.dayofweek
データフレームのカラムの曜日数を使う	df[col].dt.dayofweek
データフレームのカラムの曜日が何日目か見る	df[col].dt.dayofweek
データ列の曜日数	ds.dt.dayofweek
データ列の曜日が何日目か見る	ds.dt.dayofweek
データ列の曜日が何日目か確認する	ds.dt.dayofweek
表データを使う	import pandas as pd
表データを使用する	import pandas as pd
表データをインポートする	import pandas as pd
Pandasのバージョンを表示する	print(pd.__version__)
Pandasのバージョンを見る	print(pd.__version__)
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な最大列数を減らす	pd.set_option('display.max_columns', n)
データフレームを表示するとき列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数の最大値をnに増やす	pd.set_option('display.max_columns', n)
データフレームを表示するとき、列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、データフレームをn列まで表示されるようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、n列までデータフレームを表示できるようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
表示できる最大行数を増やす	pd.set_option('display.max_rows', n)
データフレームを表示するとき、表示可能な最大行数を減らす	pd.set_option('display.max_rows', n)
データフレームを表示するとき、表示可能な最大行数をnに設定する	pd.set_option('display.max_rows', n)
最大行数をnに設定する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
データフレームを表示するときn行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
データフレームを表示するとき小数点以下の表示精度を設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、折り返しを無効に設定する	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームを表示するとき列の最大幅をnにする	pd.set_option('max_colwidth', n)
データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
データフレームを表示するときヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
データフレームをエクセルファイルから読み込む	pd.read_excel(filename)
エクセルファイルファイルをデータフレームとして読み込む	pd.read_excel(filename)
エクセルファイルファイルをデータフレームとして読む	pd.read_excel(filename)
エクセルファイルファイルからエクセルファイルを読み込む	pd.read_excel(filename)
ファイルからエクセルファイルを読む	pd.read_excel(filename)
エクセルファイルファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからn番目のシートをデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからnというシートをデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからnというシートを読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルデータファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
ファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルファイルファイルからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
nとn2のシートをエクセルファイルファイルから読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルファイルファイルから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
データフレームをCSVファイルから読み込む	pd.read_csv(filename, sep=',')
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
データフレームをCSVファイルから読み込む	pd.read_csv(filename, sep=',')
CSVファイルを読み込む	pd.read_csv(filename, sep=',')
データフレームとしてカンマ区切りのファイルを読む	pd.read_csv(filename, sep=',')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
タブ区切りのファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t')
タブ区切りのファイルを読む	pd.read_csv(filename, sep='\t')
＜オプション＞読み込むシートの名前をnamesに設定する	sheet_name = names
＜オプション＞読み込むシート名をnamesに設定する	sheet_name = names
＜オプション＞のシート名をnamesに設定する	sheet_name = names
＜オプション＞先頭のカラムをインデックスに設定する	index_col = 0
＜オプション＞先頭の列をインデックスに設定する	index_col = 0
＜オプション＞n番目のカラムをインデックスに設定する	index_col = n
＜オプション＞n番目のカラムをインデックスに指定する	index_col = n
＜オプション＞n番目の列を行に指定する	index_col = n
＜オプション＞インデックスを自動的な連番に設定する	index_col = None
＜オプション＞インデックスを連番に設定する	index_col = None
＜オプション＞どのカラムもインデックスに設定しない	index_col = None
＜オプション＞どの列もインデックスに設定しない	index_col = None
＜オプション＞先頭の行をヘッダに設定する	header = 0
＜オプション＞先頭の行をカラムの名前に設定する	header = 0
＜オプション＞ヘッダを自動的な連番に設定する	header = None
＜オプション＞ヘッダを連番に設定する	header = None
＜オプション＞カラムの名前を自動的な連番に設定する	header = None
＜オプション＞どの行もヘッダにしない	header = None
＜オプション＞どの行もヘッダに設定しない	header = None
＜オプション＞ヘッダをnamesに設定する	header = names
＜オプション＞namesをカラムの名前に設定する	names = names
＜オプション＞namesをカラム名にセットする	names = names
＜オプション＞読み込む行番号をnamesで指定する	usecols = names
＜オプション＞読み込まない列番号をnamesで指定する	skiprows = names
＜オプション＞読み込まないフッタをnに設定する	skipfooter = n
TSVファイルをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
ヘッダを指定せずTSVファイルを読み込む	pd.read_csv(filename, header=None)
CSVファイルTSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
CSVTSVをn番目のカラムをインデックスにして読む	pd.read_csv(filename, index_col=n)
CSVファイルTSVファイルをn番目の列を行として読み込む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列タブ区切りのファイルからCSVファイルをn番目のカラムをインデックスにして読み込む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスにして読み込む	pd.read_csv(filename, index_col=n)
TSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからCSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからCSVをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからSJISでCSVファイルを読み込む	pd.read_csv(filename, encoding='shift_jis')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSV形式のファイルからデータフレームを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルをデータフレームとして読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
タブ区切りのファイルをデータフレームとして読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルをデータフレームとして読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルからデータフレームを読む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルを読み込む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONLファイルに保存する	df.to_excel(filename)
データフレームをエクセルファイルファイルでJSONLファイルに保存する	df.to_excel(filename)
JSONLファイルにファイルでデータフレームを保存する	df.to_excel(filename)
データフレームをエクセルデータファイルでJSONLファイルに保存する	df.to_excel(filename)
データフレームをJSONLファイルに保存する	df.to_csv(filename)
データフレームをCSVファイルでJSONLファイルに保存する	df.to_csv(filename)
データフレームをCSVとしてJSONLファイルに書き込む	df.to_csv(filename)
データフレームをCSVを用いてJSONLファイルに保存する	df.to_csv(filename)
データフレームをJSONLファイルに保存する	df.to_csv(filename, sep='\t')
JSONLファイルにデータフレームを書き込む	df.to_csv(filename, sep='\t')
データフレームをタブ区切りでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをタブ区切りを用いてJSONLファイルに書き込む	df.to_csv(filename, sep='\t')
タブ区切りとしてJSONLファイルにデータフレームを保存する	df.to_csv(filename, sep='\t')
データフレームをTSVファイルでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをTSVファイルを使ってJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをJSONLファイルにヘッダを付けずに保存する	df.to_csv(filename, header=None)
JSONLファイルにカラムの名前を付けずにデータフレームを保存する	df.to_csv(filename, header=None)
データフレームをJSONLファイルにインデックスを付けずに保存する	df.to_csv(filename, index=None)
インデックスを付けずにデータフレームをJSONLファイルに書き込む	df.to_csv(filename, index=None)
データフレームをJSONLファイルにBOM付きで保存する	df.to_csv(filename, encoding='utf_8_sig')
データフレームをJSONLファイルにBOMを付けて書き込む	df.to_csv(filename, encoding='utf_8_sig')
データフレームをJSONLファイルにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
保存するCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
書き込むCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
データフレームをJSONLファイルに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
データフレームを列の値によってグループ化する	df.groupby(column)
列の値によってデータフレームをグループ分けする	df.groupby(column)
データフレームを列によってまとめたグループ	df.groupby(column)
列の値によってデータフレームをまとめたグループ	df.groupby(column)
データフレームを列の値によってまとめたグループ	df.groupby(column)
データフレームを'A'列の値によってグループ化する	df.groupby('A')
表データを'A'列の値によってグループ分けする	df.groupby('A')
データフレームを'A'列によってまとめたグループ	df.groupby('A')
データフレームを二つの列の値によってグループ化する	df.groupby(['A', 'B'])
データフレームを二つの列によってグループ化する	df.groupby(['A', 'B'])
2つの列の値でデータフレームをグループ分けする	df.groupby(['A', 'B'])
データフレームを二つの列によってまとめたグループ	df.groupby(['A', 'B'])
データフレームを二つの列によってまとめたグループを使う	df.groupby(['A', 'B'])
二つの列によってデータフレームをまとめたグループ	df.groupby(['A', 'B'])
データフレームを複数の列の値によってグループ化する	df.groupby(columns)
複数の列の値によってデータフレームをグループ化する	df.groupby(columns)
データフレームを複数の列によってまとめたグループ	df.groupby(columns)
列名リストでデータフレームをまとめたグループを見る	df.groupby(columns)
データフレームを関数の値によってグループ化する	df.groupby(関数)
データフレームを関数によってまとめたグループ	df.groupby(関数)
データフレームを関数の値によってまとめた表	df.groupby(関数)
データフレームを列の値によってグループ化し、要約統計量を求める	df.groupby(column).describe()
列の値によってデータフレームをグループ化し要約統計量を求める	df.groupby(column).describe()
データフレームを'A'列の値によってグループ化し、要約統計量を求める	df.groupby('A').describe()
データフレームを'A'列の値によってグループ化し、記述統計量を計算する	df.groupby('A').describe()
データフレームを'A'列によってグループ化し要約統計量を求める	df.groupby('A').describe()
データフレームを二つの列の値によってグループ化し、要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを二つの列の値でグループ化し、要約統計量を計算する	df.groupby(['A', 'B']).describe()
データフレームを二つの列でグループ化し、記述統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを複数の列の値によってグループ化し、要約統計量を求める	df.groupby(columns).describe()
データフレームを複数の列の値でグループ化し、要約統計量を計算する	df.groupby(columns).describe()
データフレームを列名リストの値によってグループ化し、要約統計量を求める	df.groupby(columns).describe()
データフレームを関数の値によってグループ化し、要約統計量を求める	df.groupby(関数).describe()
データフレームを関数によってグループ化し、要約統計量を計算する	df.groupby(関数).describe()
関数でデータフレームをグループ化し要約統計量を計算する	df.groupby(関数).describe()
データフレームを欠損値を含めて列の値でグループ化する	df.groupby(column, dropna=False)
データフレームを欠損値を含めて列で集約する	df.groupby(column, dropna=False)
欠損値を含めて列でデータフレームをグループ化する	df.groupby(column, dropna=False)
＜オプション＞欠損値は無視する	dropna = True
＜オプション＞欠損値も無視しない	dropna = True
＜オプション＞未入力値も無視しない	dropna = True
データフレームを列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを列の値で集約して列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを'A'列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
'A'列によってデータフレームを集計して、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列の値ごとにグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを二つの列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを'A'列と'B'列にグループ化し、、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
'A'列と'B'列の値によってデータフレームをグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを複数の列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
複数の列の値ごとにデータフレームをグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを複数の列でグループ分けし、、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを関数の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを関数の値によってグループ化して列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを関数の値によって集約して、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを各列毎にグループ化して、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎にグループ分けし、、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎に集約して、文字列というグループを見る	df.groupby(column).get_group(s)
データフレームを列でグループ化して、それぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを列でグループ化して、各グループの件数を知る	df.groupby(column).size()
データフレームを各列毎にグループ化して、文字列というグループの個数を求める	df.groupby(column).size()[s]
データフレームを各列毎に分類し、文字列というグループの個数を計算する	df.groupby(column).size()[s]
データフレームのそれぞれのグループごとの合計	df.groupby(column).sum()
データフレームの各グループごとの合計	df.groupby(column).sum()
データフレームを列によってグループ化して、それぞれのグループごとの合計を求める	df.groupby(column).sum()
列によってデータフレームを集計して合計を求める	df.groupby(column).sum()
データフレームを列の値ごとにグループ分けして、合計を算出する	df.groupby(column).sum()
データフレームのそれぞれのグループごとの平均値	df.groupby(column).mean()
データフレームを列によってグループ化して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
表データを列によって集計してそれぞれのグループごとの平均値を求める	df.groupby(column).mean()
列でデータフレームを集約し、平均値を求める	df.groupby(column).mean()
データフレームのそれぞれのグループごとの個数	df.groupby(column).count()
データフレームを列によってグループ化して、それぞれのグループごとの個数を求める	df.groupby(column).count()
データフレームを列によってグループ化して、それぞれのグループ毎の個数を求める	df.groupby(column).count()
データフレームのそれぞれのグループごとの最大値	df.groupby(column).max()
データフレームの各グループごとの最大値	df.groupby(column).max()
データフレームを列によってグループ化して、それぞれのグループごとの最大値を求める	df.groupby(column).max()
表データを列によってグループ化して、グループ毎の最大値を算出する	df.groupby(column).max()
データフレームのそれぞれのグループごとの最小値	df.groupby(column).min()
データフレームのそれぞれのグループの最小値	df.groupby(column).min()
データフレームを列によってグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
データフレームを列でグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
列によってデータフレームをグループ化して、各グループ毎の最小値を計算する	df.groupby(column).min()
データフレームのそれぞれのグループごとの分散	df.groupby(column).var()
データフレームのそれぞれのグループごとの分散を求める	df.groupby(column).var()
データフレームを列によってグループ化して、それぞれのグループごとの分散を求める	df.groupby(column).var()
列によってデータフレームをグループ化して、分散を求める	df.groupby(column).var()
列ごとにデータフレームをグループ化してそれぞれのグループごとの分散を求める	df.groupby(column).var()
データフレームのそれぞれのグループごとの標準偏差	df.groupby(column).std()
表データのそれぞれのグループごとの標準偏差	df.groupby(column).std()
データフレームの各グループごとの標準偏差	df.groupby(column).std()
データフレームを列によってグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
データフレームを列の値によってグループ化して、グループ毎の標準偏差を求める	df.groupby(column).std()
データフレームを列によって分類して、標準偏差を求める	df.groupby(column).std()
データフレームを各列と列の組み合わせ毎にグループ化して、合計を求める	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎に集約し、、合計を求める	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎にグループ化して、平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎に集計して、平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎にグループ化して、個数を求める	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎にグループ化し、、個数を算出する	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を計算する	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して、最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ化して最小値を算出する	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ化して、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化して、分散を算出する	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化して、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ分けし、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ化し、、標準偏差を計算する	df.groupby([column, column2], as_index=False).std()
データフレームをグループ化し、それぞれの列に対し合計を求める	df.groupby(column)[column2].sum()
データフレームをグループ化し、各列に対し合計を計算する	df.groupby(column)[column2].sum()
データフレームをグループ化し、それぞれの列に対し合計を算出する	df.groupby(column)[column2].sum()
データフレームを各列毎にグループ化して、列の合計を求める	df.groupby(column)[column2].sum()
データフレームをグループ化し、それぞれの列に対し平均値を求める	df.groupby(column)[column2].mean()
データフレームを各列毎にグループ化して、列の平均値を求める	df.groupby(column)[column2].mean()
データフレームをグループ化し、それぞれの列に対し個数を求める	df.groupby(column)[column2].count()
データフレームをグループ化しそれぞれの列に対し個数を計算する	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化して、列の個数を求める	df.groupby(column)[column2].count()
各列毎にデータフレームをグループ化して、列の個数を求める	df.groupby(column)[column2].count()
データフレームをグループ化し、それぞれの列に対し最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、列に対し最大値を計算する	df.groupby(column)[column2].max()
データフレームをグループ化しそれぞれの列に対し最大値を求める	df.groupby(column)[column2].max()
データフレームを各列毎にグループ化して、列の最大値を求める	df.groupby(column)[column2].max()
データフレームを各列毎に集計し、、カラムの最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、それぞれの列に対し最小値を求める	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化して、列の最小値を求める	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化して、列の最小値を計算する	df.groupby(column)[column2].min()
データフレームを各列毎に分類し、、列の最小値を求める	df.groupby(column)[column2].min()
データフレームをグループ化し、それぞれの列に対し分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化し、それぞれの列に対し分散を算出する	df.groupby(column)[column2].var()
データフレームを各列毎にグループ化して、列の分散を求める	df.groupby(column)[column2].var()
データフレームを各カラム毎にグループ化して、列の分散を求める	df.groupby(column)[column2].var()
各列毎にデータフレームをグループ化し、、カラムの分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化し、それぞれの列に対し標準偏差を求める	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化して、列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化して列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームを列でグループ化して、列の要約統計量を求める	df.groupby(column).describe()[column2]
列でデータフレームを集計して、列の要約統計量を求める	df.groupby(column).describe()[column2]
列でデータフレームを集計して、列の要約統計量を算出する	df.groupby(column).describe()[column2]
データ列を使う	import pandas as pd
データ列をインポートする	import pandas as pd
データ列の各データ値の出現数	ds.value_counts()
列の各データ値の出現回数	ds.value_counts()
データ列の各データが何回出現するか見る	ds.value_counts()
列の各データが何回出現するか見る	ds.value_counts()
データフレームの列の各データ値の出現数	df[col].value_counts()
列の各値の出現回数	df[col].value_counts()
列の各データ値の出現数を計算する	df[col].value_counts()
データフレームの列の各データが何回出現するか見る	df[col].value_counts()
データ列のユニークな値	ds.unique()
データフレームの列のユニークな値	df[col].unique()
カラムのユニークな値を見る	df[col].unique()
データ列のユニークな値の個数	ds.nunique()
列のユニークな値の個数	ds.nunique()
データフレームの列のユニークな値の個数	df[col].nunique()
データフレームの列の一意な要素数を確認する	df[col].nunique()
データフレームの列をカテゴリデータに変換する	df[col].astype(object)
データフレームのカラムをカテゴリデータにする	df[col].astype(object)
データ列をカテゴリデータに変換する	ds.astype(object)
データフレームの列の文字列長を列として使う	df[col].str.len()
データ列の文字列長を列として使う	ds.str.len()
列の文字列長を列として見る	ds.str.len()
データフレームの列からユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
データ列からユニークな要素を抽出し、リスト化する	ds.unique().tolist()
データ列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
データフレームの列を型に変換する	df[col] = df[col].astype(ty)
データ列をビン数nでビン分割する	pd.cut(ds, n)
データ列を等間隔でn個にビン分割する	pd.cut(ds, n)
データフレームの中の列をビン数nでビン分割する	pd.cut(df[col], n)
分割数nでデータフレームの中のカラムを分割する	pd.cut(df[col], n)
データフレームの中の列を分割数nとしてビン分割する	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個にビン分割する	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個に分割する	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個にビニングする	pd.cut(df[col], n)
リストをビン数nでビン分割する	pd.cut(aList, n)
ビン数nでリストをビン分割する	pd.cut(aList, n)
リストを分割数nでビン分割する	pd.cut(aList, n)
リストを等間隔でn個にビン分割する	pd.cut(aList, n)
n個にリストを等間隔でビン分割する	pd.cut(aList, n)
リストをn個にビン分割する	pd.cut(aList, n)
配列をビン数nでビン分割する	pd.cut(aArray, n)
分割数nとして配列を分割する	pd.cut(aArray, n)
配列を等間隔でn個にビン分割する	pd.cut(aArray, n)
配列を等間隔でn個にビニングする	pd.cut(aArray, n)
データ列をビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
列を分割数nでビニングしてnamesのラベルをつける	pd.cut(ds, n, labels=names)
ビン数nで列を分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
列をn個に等間隔でビン分割し、、namesのラベルをつける	pd.cut(ds, n, labels=names)
等間隔でデータ列をn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データフレームの中の列をビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をビン数nとしてビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中のカラムをビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中のカラムをn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個にビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)
リストをビン数nでビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストを分割数nで分割し、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストを分割数nでビニングして、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個にビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個に等間隔でビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個に等間隔で分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
配列をビン数nでビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列を分割数nでビンニングして、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個にビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
データ列を等量でビン数nでビン分割する	pd.qcut(ds, n)
列を等しい量になるようにビン数nでビン分割する	pd.qcut(ds, n)
データ列を等量でn個にビン分割する	pd.qcut(ds, n)
データ列をn個に等量で分割する	pd.qcut(ds, n)
等量でn個にデータ列をビン分割する	pd.qcut(ds, n)
データフレームの中の列を等量でビン数nでビン分割する	pd.qcut(df[col], n)
データフレームの中の列を等量でビン数nを用いてビン分割する	pd.qcut(df[col], n)
等しい量になるように分割数nとしてデータフレームの中の列をビン分割する	pd.qcut(df[col], n)
データフレームの中の列を等量でn個にビン分割する	pd.qcut(df[col], n)
リストを等量でビン数nでビン分割する	pd.qcut(aList, n)
分割数nでリストを等量で分割する	pd.qcut(aList, n)
リストを等量でn個にビン分割する	pd.qcut(aList, n)
リストを等しい量になるようにn個にビン分割する	pd.qcut(aList, n)
配列を等量でビン数nでビン分割する	pd.qcut(aArray, n)
配列を等量でビン数nを用いてビン分割する	pd.qcut(aArray, n)
ビン数nで等しい量になるように配列をビン分割する	pd.qcut(aArray, n)
配列を等量でn個にビン分割する	pd.qcut(aArray, n)
等しい量になるようにn個に配列をビン分割する	pd.qcut(aArray, n)
データ列をビン分割する	pd.cut(ds, aList)
データ列をビンニングする	pd.cut(ds, aList)
データ列をリストを境界値としてビン分割する	pd.cut(ds, aList)
列をリストを境界値としてビン分割する	pd.cut(ds, aList)
データフレームの中の列をビン分割する	pd.cut(df[col], aList)
データフレームの中の列をリストを境界値としてビン分割する	pd.cut(df[col], aList)
リストを境界値としてデータフレームの中の列をビン分割する	pd.cut(df[col], aList)
リストをビン分割する	pd.cut(aList, aList)
リストを分割する	pd.cut(aList, aList)
リストをリストを境界値としてビン分割する	pd.cut(aList, aList)
リストをリストを境界値としてビニングする	pd.cut(aList, aList)
配列をビン分割する	pd.cut(aArray, aList)
配列をリストを境界値としてビン分割する	pd.cut(aArray, aList)
配列をリストを境界値として分割する	pd.cut(aArray, aList)
データ列を中央値でビン分割する	pd.qcut(ds, 2)
データフレームの中の列を中央値でビン分割する	pd.qcut(df[col], 2)
データフレームの中のカラムを中央値でビン分割する	pd.qcut(df[col], 2)
リストを中央値でビン分割する	pd.qcut(aList, 2)
中央値でリストをビニングする	pd.qcut(aList, 2)
配列を中央値でビン分割する	pd.qcut(aArray, 2)
中央値で配列をビン分割する	pd.qcut(aArray, 2)
データ列を四分位数ごとにビン分割する	pd.qcut(ds, 4)
データ列を四分位数でビン分割する	pd.qcut(ds, 4)
データ列を四分位数で分割する	pd.qcut(ds, 4)
データフレームの中の列を四分位数ごとにビン分割する	pd.qcut(df[col], 4)
四分位数ごとにデータフレームの中の列をビン分割する	pd.qcut(df[col], 4)
リストを四分位数ごとにビン分割する	pd.qcut(aList, 4)
リストを四分位数でビン分割する	pd.qcut(aList, 4)
配列を四分位数ごとにビン分割する	pd.qcut(aArray, 4)
データフレームを列によってソートする	df.sort_values(by=column)
列をキーにしてデータフレームをソートする	df.sort_values(by=column)
列によってデータフレームを並べる	df.sort_values(by=column)
データフレームを'A'列によってソートする	df.sort_values(by='A')
データフレームを'A'列でソートする	df.sort_values(by='A')
データフレームを'A'列によって並べ直す	df.sort_values(by='A')
データフレームを二つの列によってソートする	df.sort_values(by=['A', 'B'])
データフレームを２つの列によって並べる	df.sort_values(by=['A', 'B'])
データフレームを2つの列によって並べる	df.sort_values(by=['A', 'B'])
データフレームを複数の列によってソートする	df.sort_values(by=column)
データフレームを複数の列によって並べる	df.sort_values(by=column)
データフレームを複数の列で並べる	df.sort_values(by=column)
データフレームを列によって昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを'A'列によって昇順にソートする	df.sort_values(by='A', ascending=True)
データフレームを'A'列によって昇順に並べる	df.sort_values(by='A', ascending=True)
'A'列で昇順にデータフレームを整列する	df.sort_values(by='A', ascending=True)
データフレームを二つの列によって昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを昇順に二つの列でソートする	df.sort_values(by=['A', 'B'], ascending=True)
昇順にデータフレームを'A'列と'B'列を用いて並べ直す	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを複数の列によって昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを複数の列で昇順に並べ直す	df.sort_values(by=column, ascending=True)
データフレームを複数の列によって昇順に整列する	df.sort_values(by=column, ascending=True)
データフレームを列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
大きい順にデータフレームを列でによってソートする	df.sort_values(by=column, ascending=False)
データフレームを'A'列によってによって降順にソートする	df.sort_values(by='A', ascending=False)
大きい順に'A'列によってでデータフレームをソートする	df.sort_values(by='A', ascending=False)
データフレームを'A'列によってによって大きい順にソートする	df.sort_values(by='A', ascending=False)
データフレームを二つの列によってによって降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
降順に二つの列によってによってデータフレームを並べ直す	df.sort_values(by=['A', 'B'], ascending=False)
'A'列と'B'列によってでデータフレームを降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを複数の列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームを複数の列によってによって大きい順にソートする	df.sort_values(by=column, ascending=False)
データフレームを複数の列を用いてを用いて大きい順に整列する	df.sort_values(by=column, ascending=False)
データフレームを列によってソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを列によって整列し、、更新する	df.sort_values(by=column, inplace=True)
データフレームを列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを列によってを用いて破壊的にソートする	df.sort_values(by=column, inplace=True)
列によってで破壊的にデータフレームをソートする	df.sort_values(by=column, inplace=True)
データフレームを'A'列によってソートして、更新する	df.sort_values(by='A', inplace=True)
'A'列によってデータフレームをソートして、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってによって破壊的にソートする	df.sort_values(by='A', inplace=True)
'A'列でで破壊的にデータフレームをソートする	df.sort_values(by='A', inplace=True)
データフレームを二つの列によってソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを２つの列によってソートし、、更新する	df.sort_values(by=['A', 'B'], inplace=True)
二つの列を用いてデータフレームをソートし、、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列によってによって破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つのカラムによってによって破壊的に並べる	df.sort_values(by=['A', 'B'], inplace=True)
破壊的に２つの列によってによってデータフレームをソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを複数の列によってソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列によって整列し、、更新する	df.sort_values(by=column, inplace=True)
複数の列でデータフレームを並べ直して、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを列名リストによってを用いて破壊的にソートする	df.sort_values(by=column, inplace=True)
複数の列によってによってデータフレームを破壊的に並べ直す	df.sort_values(by=column, inplace=True)
データフレームを列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に整列して、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列を用いて昇順にソートして更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを破壊的に昇順に列で並べる	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを'A'列によって昇順にソートして、更新する	df.sort_values(by='A', ascending=True, inplace=True)
昇順にデータフレームを'A'列によって並べて、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に並べ、、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを破壊的に'A'列によって昇順に並べる	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを二つの列によって昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
小さい順にデータフレームを'A'列と'B'列によってソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを2つの列によって小さい順に並べ、、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを二つの列によって昇順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを2つの列によって昇順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを複数の列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列で昇順にソートし、更新する	df.sort_values(by=column, ascending=True, inplace=True)
表データを複数の列によって昇順にソートし、、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列名リストによって昇順に破壊的に並べる	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列で降順に破壊的に並べる	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを'A'列によって降順に破壊的にソートする	df.sort_values(by='A', ascending=False, inplace=True)
降順に破壊的にデータフレームを'A'列によってソートする	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを二つの列によって降順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを'A'列と'B'列によって破壊的に降順にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを大きい順に２つの列によって破壊的に並べる	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを複数の列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列名リストで大きい順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
列名リストで破壊的に降順にデータフレームを並べる	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列によってソートし、、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを'A'列によってソートして、NaNを先頭にする	df.sort_values(by='A', na_position='first')
'A'列でデータフレームを整列し、NaNを先頭にする	df.sort_values(by='A', na_position='first')
表データを'A'列で並べ直し、、NaNを先頭にする	df.sort_values(by='A', na_position='first')
データフレームを二つの列によってソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
二つの列によってデータフレームをソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを2つの列でソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを複数の列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列名リストによって並べ直し、、NaNを先頭に来るようにする	df.sort_values(by=column, na_position='first')
＜オプション＞値を置き換える	inplace = True
＜オプション＞破壊的に操作する	inplace = True
＜オプション＞欠損値を先頭にする	na_position = 'first'
＜オプション＞降順にする	ascending = False
＜オプション＞昇順にする	ascending = True
データフレームを列によってソートして、上位n件を取り出す	df.sort_values(columns).head(n)
データフレームを列でソートし、、上位n件を取り出す	df.sort_values(columns).head(n)
データフレームを列でソートして、上位n件を取り出す	df.sort_values(columns).head(n)
データフレームを列によってソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
列によってデータフレームをソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列で並べて下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列によってソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
データフレームを列でソートし、、新しいインデックスを加える	df.sort_values(columns).reset_index()
データフレームを列によってソートして、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームを列によって並べ直して、行を振り直す	df.sort_values(columns).reset_index(drop=True)
列によってデータフレームをソートして、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームをインデックスによってソートする	df.sort_index()
インデックスによってデータフレーム全体を並べる	df.sort_index()
データフレームをインデックスによって昇順にソートする	df.sort_index(ascending=True)
データフレームをインデックスで小さい順にソートする	df.sort_index(ascending=True)
インデックスによって昇順に表データをソートする	df.sort_index(ascending=True)
データフレームをインデックスによって降順でソートする	df.sort_index(ascending=False)
データフレームをインデックスを用いて降順で整列する	df.sort_index(ascending=False)
データフレームをインデックスで降順でソートする	df.sort_index(ascending=False)
FIXME:カテゴリーデータを出現頻度順にソートする	df['A'].value_counts().sort_index().index
FIXME:カテゴリーデータを出現頻度順に並べる	df['A'].value_counts().sort_index().index
乱数シードを初期化する	random.seed()
システム時刻で乱数を初期化する	random.seed()
乱数シードをnで初期化する	random.seed(n)
乱数シードをnで固定する	random.seed(n)
nで乱数生成系列を固定する	random.seed(n)
サイコロ	random.randint(1, 6)
サイコロと同じ乱数	random.randint(1, 6)
範囲を指定して整数乱数を生成する	random.randint(最小値, 最大値)
範囲を指定して整数乱数を計算する	random.randint(最小値, 最大値)
最大値・最小値で整数乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値で整数乱数を得る	random.randint(最小値, 最大値)
等差数列から整数乱数を生成する	random.randrange(start, end, step)
疑似乱数を生成する	random.random()
乱数を生成する	random.random()
最大値・最小値の範囲で一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
最大値・最小値の範囲として一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
最大値・最小値の範囲を用いて一様な乱数を生成する	random.uniform(最小値, 最大値)
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
正規分布として疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
正規分布として乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均値と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均と標準偏差から疑似乱数を得る	random.normalvariate(mu=0.5, sigma=0.2)
イテラブルからひとつランダムに選ぶ	random.choice(iterable)
リストから一つランダムに選ぶ	random.choice(iterable)
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
アルファベットから１文字ランダムに選ぶ	random.choice(string.ascii_uppercase)
英文字から一つランダムに選ぶ	random.choice(string.ascii_uppercase)
イテラブルから複数個、ランダムに選ぶ	random.choices(iterable, k=n)
列からn個、ランダムに選ぶ	random.choices(iterable, k=n)
イテラブルからサンプリングする	random.sample(iterable)
イテラブルからn個、サンプリングする	random.sample(iterable, k=n)
イテラブルから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
配列から重複なく、n個選ぶ	random.sample(iterable, k=n)
列から重複なくn個ランダムに選ぶ	random.sample(iterable, k=n)
リストをランダムにシャッフルする	random.shuffle(aList)
正規表現モジュールをインポートする	import re
正規表現を使う	import re
事前に正規表現をコンパイルする	re.compile(pattern)
＜オプション＞ASCII文字に限定する	flag = re.ASCII
＜オプション＞大文字・小文字を無視する	flag = re.IGNORECASE
＜オプション＞複数行に対応する	flag = re.MULTILINE
事前にASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
正規表現をASCII限定として事前にコンパイルする	re.compile(pattern, flag=re.ASCI)
事前に大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前にケースを無視してパターンをコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前にパターンを大文字・小文字を無視してコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前に複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
複数行対応としてパターンをあらかじめコンパイルする	re.compile(pattern, flag=re.MULTILINE)
複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
文字列中から正規表現にマッチする文字列を探す	re.search(pattern, s)
文字列中から正規表現にマッチする位置を探す	re.search(pattern, s)
文字列を走査し、正規表現にマッチするか見る	re.search(pattern, s)
文字列を走査しパターンにマッチするか見る	re.search(pattern, s)
文字列中から正規表現にASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
文字列を走査し、正規表現にASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
文字列を走査し正規表現にASCII限定としてマッチするか確認する	re.search(pattern, s, flags=re.ASCI)
文字列中から正規表現に大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列中からパターンに大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し、正規表現に大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
文字列中から正規表現に複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
文字列を走査し、正規表現に複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
文字列が正規表現にマッチさせる	re.match(pattern, s)
文字列がパターンにマッチさせる	re.match(pattern, s)
文字列の先頭で正規表現にマッチするか見る	re.match(pattern, s)
文字列の先頭でパターンにマッチするか確認する	re.match(pattern, s)
文字列の先頭でASCII限定として正規表現にマッチさせる	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で正規表現にASCII限定としてマッチさせる	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で正規表現にASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で大文字・小文字を無視して正規表現にマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか確認する	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で複数行対応として正規表現にマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で正規表現に複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭でパターンに複数行対応としてマッチするか調べる	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で正規表現に複数行対応としてマッチするか確認する	re.match(pattern, s, flags=re.MULTILINE)
文字列全体を正規表現にマッチさせる	re.fullmatch(pattern, s)
文字列全体が正規表現にマッチするか見る	re.fullmatch(pattern, s)
文字列全体をASCII限定として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
ASCII限定として正規表現に文字列全体をマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体が正規表現にASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体を大文字・小文字を無視して正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体をケースを無視して正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現に大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現にケースを無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体を複数行対応として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
複数行対応として正規表現に文字列全体をマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列全体が正規表現に複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列全体がパターンに複数行対応としてマッチするか調べる	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列を正規表現で分割する	re.split(pattern, s)
文字列を正規表現で区切る	re.split(pattern, s)
文字列をASCII限定として正規表現で分割する	re.split(pattern, s, flags=re.ASCI)
文字列をASCII限定としてパターンで分ける	re.split(pattern, s, flags=re.ASCI)
文字列を大文字・小文字を無視して正規表現で分割する	re.split(pattern, s, flags=re.IGNORECASE)
ケースを無視して正規表現で文字列を分ける	re.split(pattern, s, flags=re.IGNORECASE)
文字列を大文字・小文字を無視してパターンで分割する	re.split(pattern, s, flags=re.IGNORECASE)
文字列を複数行対応として正規表現で分割する	re.split(pattern, s, flags=re.MULTILINE)
文字列の中の正規表現による全てのマッチを使う	re.findall(pattern, s)
文字列の中の正規表現による全てのマッチを求める	re.findall(pattern, s)
文字列の中で正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
文字列の中で正規表現にマッチしたすべての文字列をリストにする	re.findall(pattern, s)
文字列の中のASCII限定として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによる全てのマッチを見る	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによる全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定としてパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
文字列の中の大文字・小文字を無視して正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の大文字・小文字を無視してパターンによる全てのマッチを見る	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中のケースを無視して正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視して正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中でケースを無視して正規表現にマッチした全ての文字列をリストにする	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の複数行対応として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応としてパターンによる全マッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応としてパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列を正規表現によって置き換える	re.sub(pattern, newsub, s)
文字列をパターンによって置換する	re.sub(pattern, newsub, s)
文字列中の正規表現を新しい文字列で置き換える	re.sub(pattern, newsub, s)
文字列中のパターンを新しい文字列で置き換える	re.sub(pattern, newsub, s)
正規表現にマッチした文字列を新しい文字列で置き換える	re.sub(pattern, newsub, s)
新しい文字列で正規表現にマッチした文字列を置き換える	re.sub(pattern, newsub, s)
空の集合	set()
イテラブルの集合	set(iterable)
シーケンスの集合を見る	set(iterable)
リストの集合	set(iterable)
イテラブルから重複を取り除く	set(iterable)
列から重複を取り除く	set(iterable)
イテラブルを集合に変換する	set(iterable)
シーケンスをセットに変換する	set(iterable)
列を集合に変換する	set(iterable)
集合に要素を追加する	aSet.add(element)
セットに要素を追加する	aSet.add(element)
集合にイテラブルの要素を全て追加する	aSet.update(iterable)
セットに列の要素を全て追加する	aSet.update(iterable)
集合にイテラブルを追加更新する	aSet.update(iterable)
集合に列を追加更新する	aSet.update(iterable)
集合から要素を取り除く	aSet.remove(element)
セットから要素を除く	aSet.remove(element)
集合からエラーなく要素を取り除く	aSet.discard(element)
集合からエラーなく値を取り除く	aSet.discard(element)
集合から全ての要素を取り除く	aSet.clear()
集合から要素を全て除く	aSet.clear()
集合を空にする	aSet.clear()
ふたつの集合の共通要素だけに更新する	aSet.intersection_update(aSet2)
二つの集合の共通要素だけにする	aSet.intersection_update(aSet2)
集合から別の集合の要素を全て取り除く	aSet.difference_update(aSet2)
集合から別の集合の要素を取り除く	aSet.difference_update(aSet2)
集合から別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
集合から別の集合との共通要素を全て除く	aSet.symmetric_difference_update(aSet2)
集合から任意の要素を取り出す	aSet.pop()
ふたつの集合の和集合	aSet.union(aSet2)
ふたつの集合の和集合を算出する	aSet.union(aSet2)
ふたつの集合の積集合	aSet.intersection(aSet2)
ふたつの集合の共通部分を求める	aSet.intersection(aSet2)
ふたつの集合に共通する要素からなる集合	aSet.intersection(aSet2)
ふたつのリストの積集合	list(set(aList) & set(aList2))
二つのリストの共通りスト	list(set(aList) & set(aList2))
ふたつの集合の差集合	aSet.difference(aSet2)
ふたつの集合の差を求める	aSet.difference(aSet2)
一方に含まれ、他方に含まれない集合	aSet.difference(aSet2)
一方に含まれ、他方に含まれない集合を使う	aSet.difference(aSet2)
一方に含まれ他方に含まれない集合を使う	aSet.difference(aSet2)
集合の補集合	aSet.difference(aSet2)
集合の補集合を求める	aSet.difference(aSet2)
集合＼集合	aSet.difference(aSet2)
ふたつの集合の対称差集合	aSet.symmetric_difference(aSet2)
ふたつの集合のいずれか一方だけの集合	aSet.symmetric_difference(aSet2)
要素が集合のメンバーか調べる	element in aSet
要素が集合のメンバーに含まれる	element in aSet
要素が集合に含まれるか調べる	element in aSet
値が集合に含まれる	element in aSet
要素∈集合	element in aSet
要素が集合のメンバーでないか調べる	element not in aSet
要素がセットのメンバーでない	element not in aSet
値は集合のメンバーでないか	element not in aSet
要素が集合に含まれないか調べる	element not in aSet
値は集合に含まれないか調べる	element not in aSet
要素∉集合	element not in aSet
部分集合か調べる	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれるか調べる	aSet.issubset(aSet2)
集合の全要素が別の集合に含まれるかどうか調べる	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれる	aSet.issubset(aSet2)
真部分集合か調べる	aSet < aSet2
ふたつの関係が真下位集合	aSet < aSet2
上位集合か調べる	aSet.issuperset(aSet2)
スーパーセットか調べる	aSet.issuperset(aSet2)
二つの関係が上位集合か調べる	aSet.issuperset(aSet2)
真上位集合か調べる	aSet > aSet2
真上位集合	aSet > aSet2
真スーパーセット	aSet > aSet2
上位集合もしくは等しいか調べる	aSet > aSet2
上位集合もしくは等しいかどうか調べる	aSet > aSet2
ふたつの集合が共通の要素を持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が共通の要素を持たない	aSet.isdisjoint(aSet2)
二つの集合が共通の要素を持たないか判定する	aSet.isdisjoint(aSet2)
ふたつの集合が集合と交わりを持たないか調べる	aSet.isdisjoint(aSet2)
二つの集合はセットと交わりを持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が集合と互いに素か調べる	aSet.isdisjoint(aSet2)
ふたつの集合がセットと互いに素か	aSet.isdisjoint(aSet2)
ふたつの集合が集合と互いに素か	aSet.isdisjoint(aSet2)
ふたつの集合が互いに素か調べる	aSet.isdisjoint(aSet2)
二つの集合が互いに素か調べる	aSet.isdisjoint(aSet2)
集合の濃度	len(aSet)
集合が空か調べる	len(aSet) == 0
集合が空集合か調べる	len(aSet) == 0
集合が空	len(aSet) == 0
集合が空でないか調べる	len(aSet) != 0
集合が空集合でないかどうか調べる	len(aSet) != 0
集合の浅いコピー	aSet.copy()
イテラブルのイミュータブルな集合	frozenset(iterable)
列のイミュータブルな集合	frozenset(iterable)
イテラブルをイミュータブルな集合に変換する	frozenset(iterable)
集合のイミュータブル版	frozenset(aSet)
セットの変更不能版	frozenset(aSet)
集合をイミュータブルなセットに変換する	frozenset(aSet)
セットをイミュータブルな集合に変換する	frozenset(aSet)
セットを更新不能なセットに変換する	frozenset(aSet)
集合をイミュータブルに変換する	frozenset(aSet)
集合をイミュータブルにする	frozenset(aSet)
集合をリストに変換する	list(aSet)
集合をタプルに変換する	tuple(aSet)
セットをタプルに変換する	tuple(aSet)
リストの重複を取り除く	sorted(set(aList), key=aList.index)
リストの重複を除去する	sorted(set(aList), key=aList.index)
文字列モジュールをインポートする	import string
空文字	''
anemptystring	''
改行	'\n'
タブ	'\t'
空白	' '
空白を使う	' '
space	' '
アルファベットの文字列	string.ascii_letters
アルファベットを全部使う	string.ascii_letters
英字を全て見る	string.ascii_letters
アルファベットの小文字列	string.ascii_lowercase
アルファベットの小文字を全部使う	string.ascii_lowercase
小文字を使う	string.ascii_lowercase
アルファベットの大文字列	string.ascii_uppercase
アルファベットの大文字を全部使う	string.ascii_uppercase
アルファベットの大文字を使う	string.ascii_uppercase
大文字を見る	string.ascii_uppercase
全ての数字	string.digits
数字を全部使う	string.digits
数字を全て求める	string.digits
全ての十六進数字	string.hexdigits
十六進数字を全部使う	string.hexdigits
全ての８進数字	string.octdigits
全８進数字	string.octdigits
８進数字を全部使う	string.octdigits
八進数字を全て使う	string.octdigits
全ての句読点文字	string.punctuation
全ての句点文字	string.punctuation
句読点文字を全部使う	string.punctuation
句読点文字を全て使う	string.punctuation
全ての印字可能な文字	string.printable
全ての印字	string.printable
印字可能な文字を全部使う	string.printable
印字できる文字を全部使う	string.printable
全ての空白文字	string.whitespace
空白文字を全部使う	string.whitespace
空白文字を全部求める	string.whitespace
空白文字を全て使う	string.whitespace
文字コードを文字に変換する	chr(unicode)
文字コードに対応する文字	chr(unicode)
文字を文字コードに変換する	ord(ch)
文字の文字コード	ord(ch)
文字列を文字コード列に変換する	[ord(ch) for ch in s]
文字列を全て大文字に変換する	s.upper()
文字列中の小文字を大文字に変換する	s.upper()
文字列を全て小文字に変換する	s.lower()
文字列中の大文字を小文字に変換する	s.lower()
文字列のケースを変換する	s.casefold()
文字列の大文字小文字を整える	s.casefold()
文字列のケースを整える	s.casefold()
文字列を全て小文字に変換する	s.casefold()
文字列を積極的に小文字に変換する	s.casefold()
文字列を文字リストに変換する	list(s)
文字列中の文字を列挙する	list(s)
文字列を空白で区切って、文字列リストに変換する	s.split()
空白で文字列を分割し、、列挙する	s.split()
文字列を空白で区切り、文字列リストに変換する	s.split()
文字列を空白で区切る	s.split()
空白によって文字列を区切る	s.split()
空白で文字列を区切る	s.split()
文字列を空白で区切って、整数リストに変換する	map(int, s.split())
文字列を空白で分割し、、整数のリストにする	map(int, s.split())
文字列を空白で分割して整数リストに変換する	map(int, s.split())
文字列を部分文字列で区切って、文字列リストに変換する	s.split(sub)
文字列を区切りで区切って、列挙する	s.split(sub)
文字列をセパレータで区切り、文字列リストに変換する	s.split(sub)
文字列を部分文字列で区切る	s.split(sub)
文字列を部分文字列によって区切る	s.split(sub)
文字列をカンマで分割して、文字列リストに変換する	s.split(',')
文字列をカンマで区切って、列挙する	s.split(',')
文字列をカンマによって区切り、、列挙する	s.split(',')
文字列をカンマによって分割して列挙する	s.split(',')
文字列をコロンで分割して、文字列リストに変換する	s.split(':')
文字列をコロンで区切って、列挙する	s.split(':')
文字列をコロンによって区切って列挙する	s.split(':')
文字列をコロンで分割し、、列挙する	s.split(':')
文字列をセパレータで分割して、文字列リストに変換する	s.split(sep)
文字列をセパレータで区切り、、文字列リストに変換する	s.split(sep)
文字列を区切りで分割して、文字列リストに変換する	s.split(sep)
文字列をセパレータで区切って、列挙する	s.split(sep)
文字列を区切りで区切って、列挙する	s.split(sep)
文字列をセパレータを使って区切って列挙する	s.split(sep)
文字列を改行で分割し、文字列リストに変換する	s.splitlines()
改行で文字列を分割し文字列リストに変換する	s.splitlines()
改行で文字列を区切り文字列リストにする	s.splitlines()
文字列を改行で区切る	s.splitlines()
文字列を改行で分割する	s.splitlines()
文字列を末尾から空白で区切る	s.rsplit()
文字列を末尾から空白で分割する	s.rsplit()
文字列を末尾から部分文字列で区切る	s.rsplit(sub)
末尾から部分文字列で文字列を区切る	s.rsplit(sub)
文字列を右から部分文字列で分割する	s.rsplit(sub)
文字列を二分する	s.partition(sep)
文字列を部分文字列で二分する	s.partition(sub)
文字列を部分文字列によって二分する	s.partition(sub)
文字列を最後の部分文字列で二分する	s.rpartition(sub)
文字列を最後の部分文字列によって二分する	s.rpartition(sub)
文字列を最後の部分文字列で二分割する	s.rpartition(sub)
文字列を部分文字列で二分し、前半の文字列を使う	s.partition(sub)[0]
文字列を最初の部分文字列で二分し、前半の文字列を使う	s.partition(sub)[0]
文字列を最初の部分文字列で二分し、前半の文字列を見る	s.partition(sub)[0]
文字列を部分文字列で分けたときの前半の文字列	s.partition(sub)[0]
文字列を最初の部分文字列で分割した時の前半の文字列を求める	s.partition(sub)[0]
部分文字列で文字列を分けたときの先頭の文字列	s.partition(sub)[0]
文字列を部分文字列で二分し、後半の文字列を使う	s.partition(sub)[-1]
文字列を最初の部分文字列で二分し残りの文字列を求める	s.partition(sub)[-1]
文字列を部分文字列で分けたときの後半の文字列	s.partition(sub)[-1]
文字列を部分文字列で分けた場合の後半の文字列を使う	s.partition(sub)[-1]
文字列を部分文字列で分けた時の後半の文字列を見る	s.partition(sub)[-1]
文字列を最後の部分文字列で二分し、前半の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で二つに区切って、前半の文字列を使う	s.rpartition(sub)[0]
最後の部分文字列で文字列を二分し最初の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けたときの前半の文字列	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けたときの最初の文字列	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けたときの先頭の文字列	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し、後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二つに区切って後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二つに区切って後半の文字列を求める	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けたときの後半の文字列	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けた時の後半の文字列	s.rpartition(sub)[-1]
文字列を置き換える	s.replace(sub, newsub)
文字列を新しい文字列で置き換える	s.replace(sub, newsub)
文字列を別の文字列で全部置き換える	s.replace(sub, newsub)
文字列を別の文字列で置き換える	s.replace(sub, newsub)
文字列中の部分文字列を新しい文字列に置き換える	s.replace(sub, newsub)
文字列中の部分文字列を文字列に置き換える	s.replace(sub, newsub)
文字列中の部分文字列を文字列に置換する	s.replace(sub, newsub)
文字列を回数を制限して置き換える	s.replace(sub, newsub, n)
文字列中の部分文字列を新しい文字列に回数を制限して置き換える	s.replace(sub, newsub, n)
文字列から部分文字列を全て取り除く	s.replace(sub, '')
文字列から部分文字列を全て除く	s.replace(sub, '')
文字列中のタブ文字を空白に置き換える	s.expandtabs(tabsize=n)
文字列の両端から空白を取り除く	s.strip()
文字列の両端から余分な空白と改行を取り除く	s.strip()
文字列の両端から余分な空白を取り除く	s.strip()
文字列をトリムする	s.strip()
文字列の両端から部分文字列を取り除く	s.strip(sub)
文字列の両端から部分文字列を除去する	s.strip(sub)
文字列の先頭から空白を取り除く	s.lstrip()
文字列の先頭から空白を消す	s.lstrip()
文字列の先頭から不要な空白を除く	s.lstrip()
文字列を左トリムする	s.lstrip()
文字列の左側から部分文字列を取り除く	s.lstrip(sub)
文字列の左側から部分文字列を除く	s.lstrip(sub)
文字列の左側からタブを取り除く	s.lstrip('\t')
文字列の左側から空白を取り除く	s.lstrip(' ')
文字列の右側から空白を取り除く	s.rstrip()
文字列の末尾から空白を除去する	s.rstrip()
文字列の右側から改行を消す	s.rstrip()
文字列を右トリムする	s.rstrip()
文字列の右側から部分文字列を取り除く	s.rstrip(sub)
文字列の末尾から部分文字列を取り除く	s.rstrip(sub)
文字列の右側からタブを取り除く	s.rstrip('\t')
文字列の右側から改行を取り除く	s.rstrip('\n')
文字列の右端から改行を除く	s.rstrip('\n')
文字列の右側から空白を取り除く	s.rstrip(' ')
文字列の右側から空白を除去する	s.rstrip(' ')
文字列をゼロ埋めする	s.zfill(文字列幅)
整数をゼロ埋めした文字列に変換する	str(n).zfill(文字列幅)
文字列をセンタリングにする	s.center(文字列幅)
文字列を中央寄せにする	s.center(文字列幅)
文字列を左寄せにする	s.ljust(文字列幅)
文字列を右寄せにする	s.rjust(文字列幅)
文字列をキャピタライズする	s.capitalize()
文字列の先頭だけ大文字化する	s.capitalize()
文字列の大文字と小文字を交換する	s.swapcase()
文字列の大文字と小文字を逆にする	s.swapcase()
文字列のケースを入れ替える	s.swapcase()
文字列が文字列リストのいづれか調べる	s in aStringList
文字列が文字列リストに含まれるか調べる	s in aStringList
文字列が文字列リストに含まれるか	s in aStringList
部分文字列か調べる	sub in s
部分文字列かどうか調べる	sub in s
文字列中に部分文字列が含まれるか調べる	sub in s
部分文字列が文字列中に存在するか	sub in s
文字列中に部分文字列が存在する	sub in s
文字列中に部分文字列が含まれないか調べる	sub not in s
文字列中に部分文字列が含まれない	sub not in s
文字列中から部分文字列を探す	s.find(sub)
文字列の先頭から部分文字列を探す	s.find(sub)
文字列の左端から部分文字列を見つける	s.find(sub)
部分文字列を文字列の先頭から見つける	s.find(sub)
文字列の開始位置以降に部分文字列が含まれるか調べる	s.find(sub, start) != -1
文字列の開始位置以降に部分文字列が含まれるか	s.find(sub, start) != -1
文字列の開始位置先に部分文字列がある	s.find(sub, start) != -1
文字列の開始位置以降に部分文字列が含まれないか調べる	s.find(sub, start) == -1
文字列の開始位置以降に部分文字列が含まれないか	s.find(sub, start) == -1
文字列の開始位置より後に部分文字列がないかどうか調べる	s.find(sub, start) == -1
文字列の終了位置より前に部分文字列が含まれるか調べる	s.find(sub, 0, end) != -1
文字列の終了位置以前に部分文字列が含まれるか	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が含まれないか調べる	s.find(sub, 0, end) == -1
部分文字列が文字列の終了位置より前に含まれない	s.find(sub, 0, end) == -1
部分文字列が文字列の終了位置より前にない	s.find(sub, 0, end) == -1
文字列の開始位置と終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が存在するか調べる	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が含まれるかどうか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列が含まれるかどうか	s.find(sub, start, end) != -1
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの間に部分文字列が存在しない	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置番目までの範囲に部分文字列がないか調べる	s.find(sub, start, end) == -1
文字列の開始位置から部分文字列を探す	s.find(sub, start)
文字列の終了位置まで部分文字列を探す	s.find(sub, 0, end)
部分文字列を範囲を指定して探す	s.find(sub, start, end)
文字列の開始位置から終了位置まで部分文字列を探す	s.find(sub, start, end)
文字列の末尾から部分文字列を探す	s.rfind(sub)
部分文字列を範囲を指定して探す	s.find(sub, start, end)
文字列の末尾から範囲を指定して部分文字列を探す	s.find(sub, start, end)
文字列の右側から範囲を指定して部分文字列を探す	s.find(sub, start, end)
文字列リストを連結する	''.join(aStringList)
文字列リストを連結してひとつの文字列にする	''.join(aStringList)
文字列リストをsepを区切りとして連結する	sep.join(aStringList)
文字列リストをsepを区切りにしてひとつの文字列にする	sep.join(aStringList)
イテラブルを文字列に変換して連結する	''.join(map(str, iterable))
イテラブルを文字列として連結する	''.join(map(str, iterable))
文字列に変換して配列を結合する	''.join(map(str, iterable))
文字列リストを連結してひとつの文字列にする	''.join(map(str, iterable))
イテラブルを文字列リストに変換して、空白で連結する	' '.join(map(str, iterable))
配列を文字列リストに変換して、空白で結合する	' '.join(map(str, iterable))
文字列リストに列を変換して、空白を用いて連結する	' '.join(map(str, iterable))
イテラブルを文字列リストに変換して、カンマで連結する	','.join(map(str, iterable))
イテラブルを文字列リストに変換して、カンマによって連結する	','.join(map(str, iterable))
列を文字列リストに変換してカンマによって連結する	','.join(map(str, iterable))
イテラブルを文字列リストに変換して、タブで連結する	'\t'.join(map(str, iterable))
文字列リストに列を変換してタブで結合する	'\t'.join(map(str, iterable))
文字列リストにイテラブルを変換して、タブによって連結する	'\t'.join(map(str, iterable))
イテラブルを文字列リストに変換して、'改行で連結する	'\n'.join(map(str, iterable))
リストを文字列リストに変換して、'改行でつなげる	'\n'.join(map(str, iterable))
文字列リストにリストを変換して、'改行で連結する	'\n'.join(map(str, iterable))
イテラブルを文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
列を文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
文字列に列を変換して、部分文字列を使ってつなげる	sub.join(map(str, iterable))
文字列中の部分文字列の出現をカウントする	s.count(sub)
文字列中の部分文字列をカウントする	s.count(sub)
文字列中に部分文字列がいくつか含まれるか調べる	s.count(sub)
文字列中に部分文字列がいくつかあるか調べる	s.count(sub)
文字列の開始位置から終了位置までの範囲で部分文字列の出現をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列の登場をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列の出現	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列をカウントする	s.count(sub, start, end)
文字列のの開始位置から終了位置までの間に部分文字列がいくつか含まれるか調べる	s.count(sub, start, end)
文字列のの開始位置から終了位置までの間に部分文字列がいくつかあるか調べる	s.count(sub, start, end)
部分文字列が部分文字列で始まるか調べる	s.startswith(sub)
文字列の接頭辞が部分文字列か調べる	s.startswith(sub)
文字列の接頭辞が部分文字列か確認する	s.startswith(sub)
文字列の開始位置以降が部分文字列で始まるか調べる	s.startswith(sub, start)
文字列が部分文字列で終わるか調べる	s.endswith(sub)
文字列が部分文字列で終了する	s.endswith(sub)
文字列の接尾辞が部分文字列か調べる	s.endswith(sub)
文字列の接尾辞が部分文字列	s.endswith(sub)
文字列の接頭辞から部分文字列を取り除く	s.removeprefix(sub)
文字列の先頭から部分文字列を取り除く	s.removeprefix(sub)
文字列の左側から安全に部分文字列を取り除く	s.removeprefix(sub)
文字列の接尾辞から部分文字列を取り除く	s.removesuffix(sub)
部分文字列を文字列の右側から取り除く	s.removesuffix(sub)
ファイル名がCSVファイルか調べる	filename.endswith('.csv')
ファイル名がCSVファイルか	filename.endswith('.csv')
ファイル名がテキストファイルか調べる	filename.endswith('.txt')
テキストファイルファイル名が	filename.endswith('.txt')
ファイル名がテキストファイル	filename.endswith('.txt')
ファイル名がTSVファイルか調べる	filename.endswith('.tsv')
ファイル名がJSONファイルか調べる	filename.endswith('.json')
ファイル名がJSONファイル	filename.endswith('.json')
ファイル名がJSONファイルかどうか	filename.endswith('.json')
文字列が全て大文字か調べる	s.isupper()
文字列が大文字か確認する	s.isupper()
文字列が全て大文字	s.isupper()
文字列が全て小文字か調べる	s.islower()
文字列が全て小文字かどうか	s.islower()
文字列が全て数字か調べる	s.isdigit()
文字列が全てアルファベットか調べる	s.isalpha()
文字列が英字かどうか調べる	s.isalpha()
文字列が全て英字	s.isalpha()
文字列が全て英数字か調べる	s.isalnum()
文字列が全て英数字	s.isalnum()
文字列が全て英数字か	s.isalnum()
文字列が全てアスキー文字か調べる	s.isascii()
文字列が全て空白文字からなるか調べる	s.isspace()
文字列は全て十進数字か調べる	s.isdecimal()
文字列は十進数字かどうか	s.isdecimal()
文字列が全て十進数字かどうか	s.isdecimal()
文字列は全て数値か調べる	s.isnumeric()
文字列は全て数値か	s.isnumeric()
文字列は数値かどうか	s.isnumeric()
文字列内にひとつでも大文字が含まれるか調べる	any(c.isupper() for c in s)
ひとつでも大文字が文字列内に含まれる	any(c.isupper() for c in s)
文字列内にひとつでも小文字が含まれるか調べる	any(c.islower() for c in s)
文字列内に小文字がある	any(c.islower() for c in s)
文字列内にひとつでも小文字があるか調べる	any(c.islower() for c in s)
文字列内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
文字列内にひとつでも数字があるか	any(c.isdigit() for c in s)
文字列内にひとつでもアルファベットが含まれるか調べる	any(c.isalpha() for c in s)
文字列内にひとつでもアルファベットがあるかどうか調べる	any(c.isalpha() for c in s)
文字列内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
ひとつでも英数字が文字列内に含まれるかどうか確認する	any(c.isalnum() for c in s)
ひとつでも英数字が文字列内に含まれるか調べる	any(c.isalnum() for c in s)
文字列内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
空白が文字列内に含まれる	any(c.isspace() for c in s)
文字列内に空白があるかどうか調べる	any(c.isspace() for c in s)
文字列内にひとつでもアスキー文字が含まれるか調べる	any(c.isascii() for c in s)
ひとつでもアスキー文字が文字列内にあるか調べる	any(c.isascii() for c in s)
文字列内にアスキー文字が含まれるか	any(c.isascii() for c in s)
文字列中にひとつでも非大文字が含まれるか調べる	any(not c.isupper() for c in s)
文字列中にひとつでも非小文字が含まれるか調べる	any(not c.islower() for c in s)
文字列中にひとつでも非小文字がある	any(not c.islower() for c in s)
文字列中にひとつでも非数字が含まれるか調べる	any(not c.isdigit() for c in s)
文字列中に非数字がある	any(not c.isdigit() for c in s)
非数字が文字列中にある	any(not c.isdigit() for c in s)
文字列中にひとつでも非アルファベットが含まれるか調べる	any(not c.isalpha() for c in s)
ひとつでも非英字が文字列中に含まれるかどうか	any(not c.isalpha() for c in s)
文字列中に非アルファベットが含まれる	any(not c.isalpha() for c in s)
文字列中にひとつでも非英数字が含まれるか調べる	any(not c.isalnum() for c in s)
文字列中にひとつでも非空白が含まれるか調べる	any(not c.isspace() for c in s)
文字列中に非空白があるか調べる	any(not c.isspace() for c in s)
文字列中にひとつでも非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
文字列中にひとつでも非ASCII文字が含まれるか	any(not c.isascii() for c in s)
非アスキー文字が文字列中に含まれるかどうか調べる	any(not c.isascii() for c in s)
文字列は全て識別子名か調べる	s.isidentifier()
文字列は全て識別子名かどうか調べる	s.isidentifier()
文字列はPythonのキーワードか調べる	keyword.iskeyword(s)
文字列は全て印字できるか調べる	s.isprintable()
文字列が全て印字できる	s.isprintable()
文字列が全て印字できるか調べる	s.isprintable()
文字列はタイトルケースか調べる	s.istitle()
文字列がタイトルケース	s.istitle()
文字列をUTF8でバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
UTF8で文字列をバイト列にする	s.encode(encoding='utf-8', errors='strict')
文字列をSJISでバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
文字列を文字コードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
文字列を文字コードエスケープでバイト列にする	s.encode(encoding='unicode_escape')
文字列をエンコーディングでバイト列に変換する	s.encode(encoding=encoding)
文字列を文字コードでバイト列に変換する	s.encode(encoding=encoding)
エンコーディングを用いて文字列をバイト列にする	s.encode(encoding=encoding)
エラーを無視して文字列をバイト列に変換する	s.encode(errors='ignore')
書式をargsを引数としてフォーマットする	formatText.format(*args)
書式を引数としてargsを文字列整形する	formatText.format(*args)
書式を辞書でフォーマットする	formatText.format_map(aDict)
テンプレートを辞書で文字列整形する	formatText.format_map(aDict)
書式をマッピングでフォーマットする	formatText.format_map(aDict)
文字列の長さ	len(s)
文字列の先頭	s[0]
文字列の最初を使う	s[0]
文字列の末尾	s[-1]
文字列の最後	s[-1]
文字列の右端の文字	s[-1]
文字列のn番目	s[n]
二つの文字列は同じか調べる	s == s2
二つの文字列は同じか	s == s2
二つの文字列は等しくないか調べる	s != s2
２つの文字列が等しくないか確認する	s != s2
二つの文字列は同じでない	s != s2
二つの文字列を辞書順で比較する	s < s2
文字列が文字列より辞書順で前か調べる	s < s2
辞書順で文字列が文字列より前かどうか調べる	s < s2
文字列が文字列より辞書順で後か調べる	s > s2
文字列は文字列より辞書順で後かどうか	s > s2
文字列が文字列より辞書順で後	s > s2
二つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
2つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
二つの文字列をケースを無視して比較する	s.casefold() < s2.casefold()
文字列が片仮名か調べる	('ァ' <= ch <= 'ン')
文字列が片仮名	('ァ' <= ch <= 'ン')
文字列が平仮名か調べる	('ぁ' <= ch <= 'ん')
文字列がひらがなかどうか調べる	('ぁ' <= ch <= 'ん')
文字列はひらがなか調べる	('ぁ' <= ch <= 'ん')
文字列が漢字か調べる	('\u4E00' <= ch <= '\u9FD0')
文字列は漢字かどうか調べる	('\u4E00' <= ch <= '\u9FD0')
文字列に漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
漢字が文字列内に含まれるか判定する	re.search('[\u4E00-\u9FD0]', s)
漢字が文字列に含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列に日本語が含まれるか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列中に日本語が使われているか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列中に日本語が含まれるか確認する	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列の片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列の平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列の全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
代数計算を使う	import sympy
記号計算モジュールを使用する	import sympy
文字列をシンボルに変換する	sympy.Symbol(s)
文字列をシンボルにする	sympy.Symbol(s)
文字列を代数計算の変数に変換する	sympy.Symbol(s)
文字列の変数名を数式に変換する	sympy.Symbol(s)
文字列をシンボルにして、変数にする	z = sympy.Symbol(s)
数式の変数にnを代入する	e.subs(z, n)
数式の変数に数式を代入する	e.subs(z, e2)
数値の変数に数式を代入する	e.subs(z, e2)
数式の変数を数式で置き換える	e.subs(z, e2)
数式を展開する	sympy.expand(e)
数式の展開を行う	sympy.expand(e)
数式を因数分解する	sympy.factor(e)
数式の因数分解を行う	sympy.factor(e)
数式を簡単にする	sympy.sympify(e)
数式を簡略にする	sympy.sympify(e)
数式の簡略化を行う	sympy.sympify(e)
数式を部分分数に展開する	sympy.apart(e)
数値を部分分数として展開する	sympy.apart(e)
数式の部分分数化を行う	sympy.apart(e)
数値の部分分数化を行う	sympy.apart(e)
数式を方程式として解く	sympy.solve(e)
方程式の解	sympy.solve(e)
方程式として数式の変数の解を求める	sympy.solve(e, z)
方程式として数値の変数の解を求める	sympy.solve(e, z)
連立方程式の解を求める	sympy.solve([e, e2])
連立方程式を解く	sympy.solve([e, e2])
変数が0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
パラメータが0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
変数が無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, oo)
変数が無限大に近づくときの数値の極限値を求める	sympy.limit(e, z, oo)
変数が無限大に近づく際の数式の極限値を算出する	sympy.limit(e, z, oo)
変数がマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
パラメータがマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
変数がマイナス無限大に近づく際の数式の極限値を算出する	sympy.limit(e, z, -oo)
数式を微分する	sympy.diff(e)
数式の微分を求める	sympy.diff(e)
数値の微分を計算する	sympy.diff(e)
変数について数式の微分を行う	sympy.diff(e, z)
パラメータについて数式の微分を行う	sympy.diff(e, z)
数式を変数について微分する	sympy.diff(e, z)
数式を変数についてn階微分する	sympy.diff(e, z, n)
数式の変数についてのn階微分を求める	sympy.diff(e, z, n)
数式を積分する	sympy.integrate(e)
数式の積分を求める	sympy.integrate(e)
数式の積分を行う	sympy.integrate(e)
変数について数式を積分する	sympy.integrate(e, z)
変数について数式の積分を求める	sympy.integrate(e, z)
変数について数値の積分を計算する	sympy.integrate(e, z)
変数について数式のインテグラルを求める	sympy.integrate(e, z)
数式の数値を求める	float(e)
数式の数値を計算する	float(e)
数式を数値計算する	float(e)
数式を数値に変換する	float(e)
数式を浮動小数点数に変換する	float(e)
数式の平方根を求める	sympy.sqrt(e)
バイトオーダを知る	sys.byteorder
バイトオーダを調べる	sys.byteorder
エンディアンを知る	sys.byteorder
エンコーディング	sys.getdefaultencoding()
オブジェクトの参照カウント	sys.getrefcount(obj)
オブジェクトのバイトサイズ	sys.getsizeof(obj)
現在の再帰の最大回数	sys.getrecursionlimit()
ランタイムの再帰の最大回数を調べる	sys.getrecursionlimit()
何回まで再帰ができるかを	sys.getrecursionlimit()
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
再帰の上限を上げる	sys.setrecursionlimit(1000000)
文字列を隔離する	sys.intern(s)
プラットフォームの符号付き整数の最大値	sys.maxsize
プラットフォームのコードポイントの最大値	sys.maxunicode
コードポイントの最大値	sys.maxunicode
プラットホームの名前	sys.platform
実行環境の名前	sys.platform
実行環境名	sys.platform
プラットホームがMacOSか調べる	sys.platform.startswith('darwin')
プラットホームがMacOS	sys.platform.startswith('darwin')
プラットホームがLinuxか調べる	sys.platform.startswith('linux')
環境がLinux	sys.platform.startswith('linux')
実行環境はLinuxか調べる	sys.platform.startswith('linux')
プラットホームがWindowsか調べる	sys.platform.startswith('win32')
実行環境がウィンドウズか	sys.platform.startswith('win32')
プラットホームがWindows	sys.platform.startswith('win32')
コマンドライン引数	sys.argv
スクリプトの名前	sys.argv[0]
スクリプト名	sys.argv[0]
プログラムのファイルの名前	sys.argv[0]
最初のコマンド引数	sys.argv[1]
第一コマンド引数	sys.argv[1]
最初のコマンド引数を調べる	sys.argv[1]
コマンドの第一引数を知る	sys.argv[1]
コマンドの第一引数	sys.argv[1]
コマンドの第一引数を調べる	sys.argv[1]
第一引数で指定されたファイルの名前	sys.argv[1]
第一引数のファイル名	sys.argv[1]
第二コマンド引数	sys.argv[1]
コマンドの第二引数を知る	sys.argv[1]
第二引数で指定されたファイルの名前	sys.argv[1]
第二引数で指定したファイルの名前	sys.argv[1]
コマンド引数の一覧	sys.argv[1:]
コマンド引数のリスト	sys.argv[1:]
コマンド引数の一覧を得る	sys.argv[1:]
コマンド引数を列挙する	sys.argv[1:]
コマンドラインフラグの状態	sys.flags
コマンドフラグの状態を知る	sys.flags
モジュールを検索するパス	sys.path
Pythonパスの一覧	sys.path
Pythonパスを知る	sys.path
モジュールを検索するパスにディレクトリを追加する	sys.path.append(dir)
ディレクトリをモジュールを検索するパスに追加する	sys.path.append(dir)
Pythonパスにディレクトリを追加する	sys.path.append(dir)
ディレクトリをPythonパスに追加する	sys.path.append(dir)
ディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.path.dirname(__file__), dir))
ロードされたモジュールの一覧	sys.modules
既にロードされたモジュールを列挙する	sys.modules
ロードされたモジュールを列挙する	sys.modules
現在のモジュール	sys.modules[__name__]
自分自身をモジュールとして	sys.modules[__name__]
現在処理中の例外を情報	sys.exc_info()
処理中の例外を情報	sys.exc_info()
実行時の標準出力の出力先がターミナルか調べる	sys.stdout.isatty()
標準出力の出力先がターミナルかどうか調べる	sys.stdout.isatty()
実行時の標準出力の出力先がターミナルか調べる	os.isatty(sys.stdin.fileno())
実行時の標準出力の出力先がターミナル	os.isatty(sys.stdin.fileno())
実行時に標準出力がパイプか調べる	not sys.stdout.isatty()
実行時に標準出力がパイプ	not sys.stdout.isatty()
Pythonインタプリタの実行ファイルの絶対パス	sys.executable
標準入力を得る	sys.stdin
標準入力を使う	sys.stdin
標準入力を使用する	sys.stdin
オプションで、出力先を標準出力に設定する	file = sys.stdout
オプションで、標準出力に出力する	file = sys.stdout
オプションで、標準出力を使う	file = sys.stdout
オプションで標準出力を使う	file = sys.stdout
オプションで、標準出力を出力にする	file = sys.stdout
オプションで、出力先を標準エラーに設定する	file = sys.stderr
オプションで、標準エラーに出力する	file = sys.stderr
オプションで、標準エラーを使う	file = sys.stderr
オプションで、標準エラーを出力にする	file = sys.stderr
オプションで標準エラーを出力にする	file = sys.stderr
オプションで、出力先をファイルに設定する	file = sys.open(filename, 'w')
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
オプションで、ファイルを使う	file = sys.open(filename, 'w')
オプションでファイルを使う	file = sys.open(filename, 'w')
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
オプションでファイルを出力にする	file = sys.open(filename, 'w')
標準出力を得る	sys.stdout
標準出力を使う	sys.stdout
標準出力を用いる	sys.stdout
標準エラーを得る	sys.stderr
標準エラーを使う	sys.stderr
エラーを出力する	sys.stderr
標準入力から1文字だけ読む	sys.stdin.read(1)
標準入力から1文字だけ読み込む	sys.stdin.read(1)
標準入力から1行だけ読む	sys.stdin.readline()
1行分標準入力から読む	sys.stdin.readline()
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
標準入力から改行なしで1行だけ読む	sys.stdin.readline().rstrip()
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
標準出力のバッファをフラッシュする	sys.stdout.flush()
プログラムの実行を強制的に終了する	sys.exit()
プログラムの実行を強制的に停止する	sys.exit()
プログラムの実行をここで停止する	sys.exit()
プログラムの実行を正しく終了する	sys.exit(0)
プログラムの実行を適切に停止する	sys.exit(0)
プログラムの実行を正しく終える	sys.exit(0)
プログラムの実行を異常終了する	sys.exit(1)
