空行をプリントする	print()
空行を出力する	print()
改行する	print()
文字列をプリントする	print(value)
実行結果を出力する	print(value)
変数を表示する	print(value)
文字列を表示する	print(value)
二つの文字列を順にプリントする	print(value, value2)
2つの文字列を順にプリントする	print(value, value2)
２つの実行結果をプリントする	print(value, value2)
２つの値を順にプリントする	print(value, value2)
三つの文字列を順にプリントする	print(value, value2, value3)
３つのリストをプリントする	print(value, value2, value3)
三つの値を順にプリントする	print(value, value2, value3)
＜オプション＞改行の代わりに文字列を用いる	end = s
＜オプション＞文字列を改行の代わりに用いる	end = s
＜オプション＞改行しない	end = ''
＜オプション＞改行なし	end = ''
改行なしに文字列をプリントする	print(value, end='')
文字列を改行なしにプリントする	print(value, end='')
文字列の出力を改行なしに行う	print(value, end='')
文字列の出力を改行しないで行う	print(value, end='')
改行なしに二つの文字列をプリントする	print(value, value2, end='')
改行せず二つの文字列を出力する	print(value, value2, end='')
改行なしに2つの実行結果をプリントする	print(value, value2, end='')
改行なしに二つの文字列を表示する	print(value, value2, end='')
リストを展開してプリントする	print(*aList)
リストを展開して表示する	print(*aList)
タプルを展開してプリントする	print(*aTuple)
組を展開してプリントする	print(*aTuple)
タプルの値だけ表示する	print(*aTuple)
＜オプション＞セパレータをカンマにする	sep = ','
＜オプション＞分割記号をカンマにする	sep = ','
＜オプション＞カンマをセパレータで使う	sep = ','
＜オプション＞カンマを区切り記号で使う	sep = ','
＜オプション＞セパレータをタブにする	sep = '\t'
＜オプション＞タブをセパレータで使う	sep = '\t'
＜オプション＞タブをセパレータで用いる	sep = '\t'
＜オプション＞セパレータをコロンにする	sep = ':'
＜オプション＞コロンをセパレータで使う	sep = ':'
＜オプション＞コロンを区切りで使う	sep = ':'
＜オプション＞コロンを分割記号で使う	sep = ':'
＜オプション＞セパレータをスラッシュにする	sep = '/'
＜オプション＞スラッシュをセパレータで使う	sep = '/'
＜オプション＞スラッシュを区切りで使う	sep = '/'
＜オプション＞セパレータを改行にする	sep = '\n'
＜オプション＞改行をセパレータで使う	sep = '\n'
＜オプション＞改行をセパレータで用いる	sep = '\n'
＜オプション＞セパレータを文字列にする	sep = s
＜オプション＞文字列をセパレータで使う	sep = s
＜オプション＞文字列を区切りで用いる	sep = s
＜オプション＞文字列をセパレータで使用する	sep = s
＜オプション＞セパレータを使わない	sep = ''
二つの文字列をカンマで区切ってプリントする	print(value, value2, sep=',')
二つの文字列をカンマで区切って表示する	print(value, value2, sep=',')
２つの数値をカンマで区切ってプリントする	print(value, value2, sep=',')
２つの実行結果をカンマで区切ってプリントする	print(value, value2, sep=',')
二つの文字列をタブで区切ってプリントする	print(value, value2, sep='\t')
タブで区切って二つのリストをプリントする	print(value, value2, sep='\t')
二つの変数をタブで区切ってプリントする	print(value, value2, sep='\t')
二つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
コロンで区切って2つの数値を出力する	print(value, value2, sep=':')
二つの文字列をスラッシュで区切ってプリントする	print(value, value2, sep='/')
2つの変数をスラッシュで区切ってプリントする	print(value, value2, sep='/')
二つの文字列をスラッシュで区切って表示する	print(value, value2, sep='/')
スラッシュで区切って二つの変数を表示する	print(value, value2, sep='/')
二つの文字列を改行で区切ってプリントする	print(value, value2, sep='\n')
２つの実行結果を改行で区切って表示する	print(value, value2, sep='\n')
二つの数値を改行で区切ってプリントする	print(value, value2, sep='\n')
改行で区切って二つのリストを出力する	print(value, value2, sep='\n')
二つの文字列を文字列で区切ってプリントする	print(value, value2, sep=s)
2つの文字列を文字列で区切って表示する	print(value, value2, sep=s)
文字列で区切って二つの数値を出力する	print(value, value2, sep=s)
二つの文字列を文字列で区切って出力する	print(value, value2, sep=s)
ハローワールドとプリントする	print('Hello World')
ハローワールドと表示する	print('Hello World')
試しに何か動かす	print('Hello World')
最初のプログラムを書く	print('Hello World')
文字列を黒色でプリントする	print(f'\033[30m{value}\033[0m')
黒色でリストをプリントする	print(f'\033[30m{value}\033[0m')
実行結果を黒色でプリントする	print(f'\033[30m{value}\033[0m')
文字列を赤色でプリントする	print(f'\033[31m{value}\033[0m')
赤色で値を表示する	print(f'\033[31m{value}\033[0m')
赤色で実行結果を表示する	print(f'\033[31m{value}\033[0m')
リストを赤色でプリントする	print(f'\033[31m{value}\033[0m')
文字列を緑色でプリントする	print(f'\033[32m{value}\033[0m')
数値を緑色でプリントする	print(f'\033[32m{value}\033[0m')
文字列を黄色でプリントする	print(f'\033[33m{value}\033[0m')
変数を黄色で出力する	print(f'\033[33m{value}\033[0m')
黄色で値をプリントする	print(f'\033[33m{value}\033[0m')
文字列を青色でプリントする	print(f'\033[34m{value}\033[0m')
青色で文字列をプリントする	print(f'\033[34m{value}\033[0m')
青色で数値をプリントする	print(f'\033[34m{value}\033[0m')
文字列をマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
実行結果をマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
値を紫色でプリントする	print(f'\033[35m{value}\033[0m')
文字列をシアンでプリントする	print(f'\033[36m{value}\033[0m')
数値を水色で出力する	print(f'\033[36m{value}\033[0m')
変数をシアンでプリントする	print(f'\033[36m{value}\033[0m')
文字列をシアンで出力する	print(f'\033[36m{value}\033[0m')
文字列を白色でプリントする	print(f'\033[37m{value}\033[0m')
リストを白色でプリントする	print(f'\033[37m{value}\033[0m')
変数を白色でプリントする	print(f'\033[37m{value}\033[0m')
文字列を太字でプリントする	print(f'\033[1m{value}\033[0m')
文字列を太文字で出力する	print(f'\033[1m{value}\033[0m')
太字でリストをプリントする	print(f'\033[1m{value}\033[0m')
太文字で数値をプリントする	print(f'\033[1m{value}\033[0m')
文字列を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
アンダーライン付きで値をプリントする	print(f'\033[4m{value}\033[0m')
実行結果を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
変数をアンダーライン付きでプリントする	print(f'\033[4m{value}\033[0m')
文字列を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
文字列を黒色でプリントできる文字列にする	f'\033[30m{value}\033[0m'
文字列を黒色にする	f'\033[30m{value}\033[0m'
実行結果を黒色にする	f'\033[30m{value}\033[0m'
文字列を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
リストを赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
数値を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
文字列を赤色にする	f'\033[31m{value}\033[0m'
値を赤色にする	f'\033[31m{value}\033[0m'
文字列を赤色化する	f'\033[31m{value}\033[0m'
文字列を緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
値を緑色でプリントできる文字列にする	f'\033[32m{value}\033[0m'
リストを緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
文字列を緑色にする	f'\033[32m{value}\033[0m'
数値を緑色にする	f'\033[32m{value}\033[0m'
文字列を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
文字列を黄色で表示できる文字列にする	f'\033[33m{value}\033[0m'
変数を黄色でプリントできる文字列にする	f'\033[33m{value}\033[0m'
文字列を黄色にする	f'\033[33m{value}\033[0m'
実行結果を黄色にする	f'\033[33m{value}\033[0m'
リストを黄色化する	f'\033[33m{value}\033[0m'
文字列を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
値を青色で表示できる文字列にする	f'\033[34m{value}\033[0m'
数値を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
変数を青色でプリントできる文字列にする	f'\033[34m{value}\033[0m'
文字列を青色にする	f'\033[34m{value}\033[0m'
文字列を青色化する	f'\033[34m{value}\033[0m'
文字列をマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
変数をマゼンタでプリントできる文字列にする	f'\033[35m{value}\033[0m'
文字列をマゼンタにする	f'\033[35m{value}\033[0m'
リストを紫色にする	f'\033[35m{value}\033[0m'
変数をマゼンタにする	f'\033[35m{value}\033[0m'
文字列をシアンでプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
文字列を水色でプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
実行結果を水色でプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
文字列をシアンで表示できる文字列に変換する	f'\033[36m{value}\033[0m'
文字列をシアンにする	f'\033[36m{value}\033[0m'
数値をシアン化する	f'\033[36m{value}\033[0m'
文字列を水色にする	f'\033[36m{value}\033[0m'
文字列を白色でプリントできる文字列に変換する	f'\033[37m{value}\033[0m'
文字列を白色で表示できる文字列にする	f'\033[37m{value}\033[0m'
文字列を白色で表示できる文字列に変換する	f'\033[37m{value}\033[0m'
実行結果を白色でプリントできる文字列にする	f'\033[37m{value}\033[0m'
文字列を白色にする	f'\033[37m{value}\033[0m'
実行結果を白色にする	f'\033[37m{value}\033[0m'
文字列を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
数値を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
文字列を太字にする	f'\033[1m{value}\033[0m'
実行結果を太文字にする	f'\033[1m{value}\033[0m'
文字列を下線付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
文字列をアンダーライン付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
文字列をアンダーライン付きでプリントできる文字列にする	f'\033[4m{value}\033[0m'
文字列を下線付きにする	f'\033[4m{value}\033[0m'
変数を下線付きにする	f'\033[4m{value}\033[0m'
リストをアンダーライン付きにする	f'\033[4m{value}\033[0m'
xの小数点以下'1'桁までをプリントする	print(':.1f'.format(x))
xの小数点以下'1'桁までプリントする	print(':.1f'.format(x))
xの小数点以下'2'桁までをプリントする	print(':.2f'.format(x))
xの小数点以下'2'桁まで出力する	print(':.2f'.format(x))
xの小数点以下'2'桁までプリントする	print(':.2f'.format(x))
xの小数点以下'3'桁までをプリントする	print(':.3f'.format(x))
xの小数点以下'3'桁までプリントする	print(':.3f'.format(x))
xの小数点以下'3'桁まで表示する	print(':.3f'.format(x))
xの小数点以下'4'桁までをプリントする	print(':.4f'.format(x))
xの小数点以下'5'桁までをプリントする	print(':.5f'.format(x))
xの小数点以下'5'桁までを表示する	print(':.5f'.format(x))
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
xの小数点以下'2'桁の文字列に変換する	':.2f'.format(x)
xの小数点以下'3'桁までの文字列に変換する	':.3f'.format(x)
xの小数点以下'3'桁の文字列に変換する	':.3f'.format(x)
xの小数点以下'4'桁までの文字列に変換する	':.4f'.format(x)
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
xの小数点以下'5'桁の文字列にする	':.5f'.format(x)
標準入力から1行読み取る	input()
ユーザから入力される	input()
ユーザの入力を整数として受け取る	int(input())
ユーザが整数を入力する	int(input())
ユーザから入力される	int(input())
変数を定義する	x = n
変数をスワップする	x, y = y, x
変数の値を入れ替える	x, y = y, x
リストの要素をスワップする	aList[i], aList[j] = aList[j], aList[i]
二つの変数を同じ値にする	x = y = n
二つの変数をそれぞれ定義する	x, y = i, j
x,y,zをそれぞれn,n2,n3とする	x, y, z = n, n2, n3
x,y,zにそれぞれn,n2,n3を代入する	x, y, z = n, n2, n3
x,y,zをそれぞれn,n2,n3に設定する	x, y, z = n, n2, n3
x,y,zをそれぞれn,n2,n3に変更する	x, y, z = n, n2, n3
xの絶対値	abs(x)
xを論理値に変換する	bool(x)
xが真か調べる	bool(x)
xが真かどうか	bool(x)
xが真かどうか調べる	bool(x)
xが真か	bool(x)
x,yの複素数	complex(x, y)
複素数を求める	complex(x, y)
xとyの商と余りを同時に求める	divmod(x, y)
商と余りを同時に求める	divmod(x, y)
xとyの商と余りを同時に算出する	divmod(x, y)
xを浮動小数点数に変換する	float(x)
浮動小数点数に変換する	float(x)
xを整数に変換する	int(x)
xを印字できる文字列にする	ascii(x)
xの印字可能な文字列	ascii(x)
xのハッシュ値	hash(x)
ハッシュ値	hash(x)
二変数の最大値	max(x, y)
2変数の最大値	max(x, y)
二数の最大値	max(x, y)
二変数の最小値	min(x, y)
２変数の最小値	min(x, y)
２つの最小値	min(x, y)
三変数の最大値	max(x, y, z)
３つの最大値	max(x, y, z)
三変数の最小値	min(x, y, z)
3変数の最小値	min(x, y, z)
三数の最小値	min(x, y, z)
３変数の最小値を計算する	min(x, y, z)
xを浮動小数点数型に変換する	float(x)
xを整数に変換する	int(x)
xを文字列に変換する	str(x)
nかつn2	n and n2
nまたはn2	n or n2
nではない	not n
nを否定する	not n
真	True
偽	False
nullに等しい値	None
nullに等しい識別子	None
未定値	None
コレクションを使う	import collections
キューを用いる	import collections
名前付きタプルを使う	import collections
空の両端キュー	collections.deque()
イテラブルから両端キューを作る	collections.deque(iterable)
両端キューをイテラブルから作る	collections.deque(iterable)
シーケンスから両端キューを作る	collections.deque(iterable)
両端キューをイテラブルから新規生成する	collections.deque(iterable)
イテラブルを両端キューに変換する	collections.deque(iterable)
シーケンスを両端キューに変換する	collections.deque(iterable)
列を両端キューにする	collections.deque(iterable)
両端キューの長さを制限する	collections.deque(maxlen=n)
最大長を指定して、両端キュー	collections.deque(maxlen=n)
上限を指定して、双方向キュー	collections.deque(maxlen=n)
最大長nの両端キューを作る	collections.deque(maxlen=n)
最大長nの両端キューを作成する	collections.deque(maxlen=n)
上限nの両端キューを作成する	collections.deque(maxlen=n)
イテラブルの長さを制限する	collections.deque(iterable, maxlen=n)
最大長nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
上限nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
上限長nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
最大長nの両端キューをシーケンスから作る	collections.deque(iterable, maxlen=n)
両端キューの先頭に要素を追加する	deq.appendleft(element)
デックの先頭に要素を追加する	deq.appendleft(element)
両端キューの先頭に数値を追加する	deq.appendleft(element)
スタックの最初に要素を追加する	deq.appendleft(element)
両端キューに要素をエンキューする	deq.appendleft(element)
両端キューに文字列をエンキューする	deq.appendleft(element)
両端キューの末尾に要素を追加する	deq.append(element)
数値を双方向キューの末尾に入れる	deq.append(element)
キューの最後に文字列を入れる	deq.append(element)
両端キューの最後に要素を付け加える	deq.append(element)
両端キューに要素をプッシュする	deq.append(element)
双方向キューに要素をプッシュする	deq.append(element)
双方向キューに値をプッシュする	deq.append(element)
キューに数値をスタックする	deq.append(element)
両端キューの先頭にイテラブルの各要素を追加する	deq.extendleft(iterable)
イテラブルの各要素を双方向キューの先頭につけ加える	deq.extendleft(iterable)
両端キューの最初にリストの各値を追加する	deq.extendleft(iterable)
列の各データを両端キューの先頭に入れる	deq.extendleft(iterable)
両端キューの末尾にイテラブルの各要素を追加する	deq.extend(iterable)
デックの末尾にシーケンスの各要素を順に入れる	deq.extend(iterable)
両端キューの最後にシーケンスの各データを追加する	deq.extend(iterable)
双方向キューの末尾にイテラブルの各要素を付け加える	deq.extend(iterable)
両端キューのn番目に要素を挿入する	deq.insert(n, element)
双方向キューのn番目に要素を挿入する	deq.insert(n, element)
両端キューのn番目に要素を差し込む	deq.insert(n, element)
両端キューの先頭から要素を取り除く	deq.popleft()
スタックの先頭から要素を取り除く	deq.popleft()
双方向キューの先頭から値を取り除く	deq.popleft()
両端キューをデキューする	deq.popleft()
キューをデキューする	deq.popleft()
両端キューの末尾から要素を取り除く	deq.pop()
要素を双方向キューの最後から取り除く	deq.pop()
両端キューの末尾から要素を取り出す	deq.pop()
両端キューをポップする	deq.pop()
両端キューから最初の要素を取り除く	deq.remove(element)
両端キューから最初の値を取り除く	deq.remove(element)
両端キューから最初の値を削除する	deq.remove(element)
両端キューを空にする	deq.clear()
双方向キューを空にする	deq.clear()
両端キューをクリアする	deq.clear()
両端キューの要素を右にn個分ローテンションする	deq.rotate(n)
両端キューの要素をn個分ローテンションする	deq.rotate(n)
両端キューの順序を右にn個分ローテンションする	deq.rotate(n)
両端キューの要素を右にn個分回転させる	deq.rotate(n)
両端キューの要素を左にn個分ローテンションする	deq.rotate(-n)
左にn個分両端キューの要素をローテンションする	deq.rotate(-n)
n個分双方向キューの要素を左に回転させる	deq.rotate(-n)
左に双方向キューの要素をn個分ローテンションする	deq.rotate(-n)
両端キューの最大長	deq.maxlen
双方向キューの最大長	deq.maxlen
両端キューの大きさ	len(deq)
双方向キューの要素数	len(deq)
両端キューが空か調べる	len(deq) == 0
両端キューは空か	len(deq) == 0
双方向キューが空か	len(deq) == 0
双方向キューが空か調べる	len(deq) == 0
両端キューが空でないか調べる	len(deq) != 0
双方向キューは空でない	len(deq) != 0
キューが空でないか調べる	len(deq) != 0
キューが空でないか	len(deq) != 0
両端キューの中に要素が含まれてるか調べる	element in deq
値はキューの中にあるか調べる	element in deq
両端キューの中に要素がある	element in deq
値が両端キューの中にあるか調べる	element in deq
両端キューの先頭	deq[0]
キューの先頭を使う	deq[0]
双方向キューの先頭を見る	deq[0]
両端キューの左を使う	deq[0]
両端キューの末尾	deq[-1]
スタックの最後	deq[-1]
双方向キューの末尾	deq[-1]
両端キューのn番目	deq[n]
両端キューのn番目の要素	deq[n]
両端キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
両端キューのstart〜endの部分要素	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart〜endの部分要素を使う	collections.deque(itertools.islice(deq, start, end))
両端キューのstart〜endの部分データ	collections.deque(itertools.islice(deq, start, end))
スタックのstart〜endの部分要素を見る	collections.deque(itertools.islice(deq, start, end))
両端キューのstart番目からend番目の部分要素	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart番目からend番目までの部分要素	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart番目からend番目のデータ	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart番目からend番目の要素を使う	collections.deque(itertools.islice(deq, start, end))
両端キュー中の要素のインデックス	deq.index(element)
キュー中の要素のインデックス	deq.index(element)
両端キュー中の要素の位置	deq.index(element)
双方向キュー中の値の位置を使う	deq.index(element)
両端キュー中の要素の数を数える	deq.count(element)
両端キュー中の値の数を数える	deq.count(element)
両端キュー中の要素をカウントする	deq.count(element)
両端キュー中の値を数える	deq.count(element)
両端キューの要素をインプレースに反転する	deq.reverse()
双方向キューの値を逆順にする	deq.reverse()
インプレースに両端キューの要素を反転する	deq.reverse()
逆順の両端キュー	reversed(deq)
逆順のキューを使う	reversed(deq)
逆順の両端キューを求める	reversed(deq)
両端キューをリストに変換する	list(deq)
両端キューをリストにする	list(deq)
両端キューをタプルに変換する	tuple(deq)
デックをタプルにする	tuple(deq)
双方向キューをタプルにする	tuple(deq)
空のカウンタ	collections.Counter()
イテラブルからカウンタを作る	collections.Counter(iterable)
イテラブルからカウンタを用意する	collections.Counter(iterable)
新しいカウンタをイテラブルから作る	collections.Counter(iterable)
シーケンスから多重集合を作る	collections.Counter(iterable)
イテラブルをカウンタに変換する	collections.Counter(iterable)
リストを計数器にする	collections.Counter(iterable)
辞書からカウンタを作る	collections.Counter(aDict)
マッピングからカウンタを作る	collections.Counter(aDict)
計数器を辞書から作成する	collections.Counter(aDict)
辞書をカウンタに変換する	collections.Counter(aDict)
マッピングをカウンタにする	collections.Counter(aDict)
カウンタのそれぞれの項目を、そのカウントだけ列挙する	aCounter.elements()
カウンタのそれぞれの項目を、そのカウントだけリストとして得る	aCounter.elements()
カウンタのそれぞれの要素をその回数だけ列挙する	aCounter.elements()
カウンタを高頻出方から列挙する	aCounter.most_common()
カウンタを高頻度方から列挙する	aCounter.most_common()
カウンタを高頻出な方から列挙する	aCounter.most_common()
カウンタを多い順に列挙する	aCounter.most_common()
多い順にカウンタを列挙する	aCounter.most_common()
カウンタを多い順にリストとして得る	aCounter.most_common()
カウンタを少ない順に列挙する	aCounter.most_common()[::-1]
少ない順にカウンタをリストとして得る	aCounter.most_common()[::-1]
カウンタを少ない順番に列挙する	aCounter.most_common()[::-1]
カウンタを低頻出方から列挙する	aCounter.most_common()[::-1]
カウンタを低頻出な方から列挙する	aCounter.most_common()[::-1]
カウンタを低頻度方からリストとして得る	aCounter.most_common()[::-1]
カウンタの上位を列挙する	aCounter.most_common(k)
カウンタの上位をリストとして得る	aCounter.most_common(k)
カウンタの下位を列挙する	aCounter.most_common()[:-n-1:-1]
カウンタのボトムをリストとして得る	aCounter.most_common()[:-n-1:-1]
カウンタの最頻出な項目	aCounter.most_common()[0]
カウンタの最頻出の項目	aCounter.most_common()[0]
カウンタから最頻出な項目の件数	aCounter.most_common()[1]
カウンタから最頻出な文字列の件数	aCounter.most_common()[1]
カウンタをイテラブルで更新する	aCounter.update(iterable)
カウンタを列で更新する	aCounter.update(iterable)
イテラブルをカウントして、カウンタを更新する	aCounter.update(iterable)
イテラブルを出現回数してカウンタを更新する	aCounter.update(iterable)
カウンタを辞書で更新する	aCounter.update(aDict)
カウンタからイテラブルをカウントして引く	aCounter.subtract(iterable)
カウンタからイテラブルを出現回数して引く	aCounter.subtract(iterable)
カウンタからイテラブルをカウントして減らす	aCounter.subtract(iterable)
カウンタから辞書を引く	aCounter.subtract(aDict)
カウンタからマッピングを引く	aCounter.subtract(aDict)
カウンタの項目を増やす	aCounter[element] += 1
カウンタの項目を一つ増やす	aCounter[element] += 1
カウンタの値を増やす	aCounter[element] += 1
カウンタの項目のカウント	aCounter[element]
カウンタの項目のカウントを使う	aCounter[element]
カウンタの項目の出現回数を使う	aCounter[element]
カウンタの文字列のカウント	aCounter[element]
カウンタの全数	aCounter.total()
カウンタの項目一覧	aCounter.keys()
カウンタのキー一覧	aCounter.keys()
カウンタの文字列一覧を見る	aCounter.keys()
カウンタの値一覧	aCounter.keys()
カウンタの項目を列挙する	aCounter.keys()
カウンタの項目数	len(aCounter)
カウンタの項目数を求める	len(aCounter)
カウンタをリセットする	aCounter.clear()
カウンタのユニークな項目を列挙する	list(aCounter)
カウンタをリストに変換する	list(aCounter)
カウンタを集合に変換する	set(aCounter)
カウンタを辞書に変換する	dict(aCounter)
カウンタのキーとカウントを列挙する	aCounter.items()
カウンタのキーと出現回数を列挙する	aCounter.items()
ペアリストpairsからカウンタを作る	collections.Counter(dict(pairs))
ペアリストpairsからカウンタを構築する	collections.Counter(dict(pairs))
カウンタからゼロカウントを取り除く	+aCounter
カウンタからゼロカウントを取り出す	+aCounter
カウンタの正の数のみ残す	+aCounter
カウンタ同士で積集合	aCounter & aCounter2
カウンタ同士で共通部分を計算する	aCounter & aCounter2
カウンタ同士で共通部分	aCounter & aCounter2
カウンタ間で積集合	aCounter & aCounter2
二つのカウンタの共通する要素	aCounter & aCounter2
二つのカウンタの共通するデータ	aCounter & aCounter2
２つのカウンタの共通する要素	aCounter & aCounter2
カウンタ同士で積集合演算する	aCounter & aCounter2
カウンタ同士で共通部分演算する	aCounter & aCounter2
カウンタ同士でユニオン	aCounter | aCounter2
カウンタのユニオン	aCounter | aCounter2
カウンタ間でユニオン	aCounter | aCounter2
二つのカウンタのいずれかに含まれる要素	aCounter | aCounter2
二つのカウンタのいずれかに含まれる要素を求める	aCounter | aCounter2
カウンタ同士でユニオン演算する	aCounter | aCounter2
カウンタ同士で和集合演算する	aCounter | aCounter2
名前付きタプルを定義する	C = collections.namedtuple('クラス名', プロパティ名)
クラスが名前付きタプルか調べる	issubclass(C, tuple)
クラスは名前付きタプル	issubclass(C, tuple)
名前付きタプルをパラメータからインスタンス化する	C._make(パラメータ)
オブジェクトが名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプル	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプル型か調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
名前付きタプルを辞書に変換する	aNamedTupleObject._asdict()
空のチェーンマップ	collections.ChainMap()
空の階層化マップ	collections.ChainMap()
辞書をチェーンマップに変換する	collections.ChainMap(aDict)
辞書を階層化する	collections.ChainMap(aDict)
辞書をネスト化する	collections.ChainMap(aDict)
二つの辞書をチェーンする	collections.ChainMap(aDict, aDict2)
２つのマッピングをチェーンする	collections.ChainMap(aDict, aDict2)
二つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
２つのタプルを階層化する	collections.ChainMap(aDict, aDict2)
二つのタプルをネスト化する	collections.ChainMap(aDict, aDict2)
２つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
日付を使う	import datetime
日付を用いる	import datetime
時間を使う	import time
時間を使用する	import time
本日の日付時刻	datetime.datetime.now()
本日のタイムスタンプを算出する	datetime.datetime.now()
year年の日付時刻	datetime.datetime(year=year, month=1, day=1)
year年の日付時刻をオブジェクト化する	datetime.datetime(year=year, month=1, day=1)
year年を日付時刻に変換する	datetime.datetime(year=year, month=1, day=1)
year年day月の日付時刻	datetime.datetime(year=year, month=month, day=1)
year年day月を日付時刻に変換する	datetime.datetime(year=year, month=month, day=1)
year年month月day日の日付時刻	datetime.datetime(year=year, month=month, day=day)
year年month月day日のタイムスタンプをオブジェクト化する	datetime.datetime(year=year, month=month, day=day)
year年month月day日の日付時刻をオブジェクト化する	datetime.datetime(year=year, month=month, day=day)
year年month月day日を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day)
year年month月day日を日付時刻にする	datetime.datetime(year=year, month=month, day=day)
year年month月day日hour時の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時minute分の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分のタイムスタンプ	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分をタイムスタンプにする	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
datetimeをインスタンス化する	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時刻から日付時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時間からタイムスタンプ	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時刻からタイムスタンプ	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時刻から日付時刻を生成する	datetime.datetime(年, 月, 日, 時, 分, 秒)
エポック秒を日付時刻に変換する	datetime.datetime.fromtimestamp(timestamp)
エポック秒を日付時刻にする	datetime.datetime.fromtimestamp(timestamp)
ISO書式の文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO書式の文字列から日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO8601形式の文字列をタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列をISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からISO書式として日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からformatのパターンで日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
文字列からformatのパターンとして日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
文字列からformatのパターンで日付時刻にする	datetime.datetime.strptime(日付の書かれた文字列, format)
formatパターンの文字列を日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
formatパターンの文字列をタイムスタンプに変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
本日の日付時刻	datetime.datetime.today()
本日のタイムスタンプ	datetime.datetime.today()
現在のタイムスタンプ	datetime.datetime.today()
本日のローカルなタイムスタンプ	datetime.datetime.today()
日付時刻データをエポック秒に変換する	aDatetime.timestamp()
日付時刻データをエポック秒にする	aDatetime.timestamp()
日付時刻データを浮動小数点数に変換する	aDatetime.timestamp()
日付時刻データのタイムゾーン	aDatetime.timetz()
タイムスタンプデータのタイムゾーン	aDatetime.timetz()
日付時刻データの日付	aDatetime.date()
タイムスタンプデータの日付	aDatetime.date()
日付時刻データの時刻	aDatetime.time()
year年の日付	datetime.date(year=year, month=1, day=1)
year年を日付に変換する	datetime.date(year=year, month=1, day=1)
year年month月の日付	datetime.date(year=year, month=month, day=1)
year年month月を日付に変換する	datetime.date(year=year, month=month, day=1)
year年month月day日の日付	datetime.date(year=year, month=month, day=day)
year年month月day日を日付に変換する	datetime.date(year=year, month=month, day=day)
本日の日付	datetime.date.today()
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
昨日の日付を見る	datetime.date.today() - datetime.timedelta(days=1)
日付時刻データの年数	aDatetime.year
日付時刻データの年数を使う	aDatetime.year
日付時刻データが何年か知る	aDatetime.year
日付データの年数	aDate.year
日付データが何年か知る	aDate.year
本日の年数	datetime.datetime.today().year
今日の年数	datetime.datetime.today().year
今日の年数を見る	datetime.datetime.today().year
本日が何年か知る	datetime.datetime.today().year
日付時刻データの月数	aDatetime.month
タイムスタンプデータの月数	aDatetime.month
日付時刻データが何月か知る	aDatetime.month
日付データの月数	aDate.month
日付データが何月か知る	aDate.month
本日の月数	datetime.datetime.today().month
現在の月数	datetime.datetime.today().month
本日が何月か知る	datetime.datetime.today().month
今日が何月か知る	datetime.datetime.today().month
日付時刻データの日数	aDatetime.day
タイムスタンプデータの日数	aDatetime.day
日付時刻データが何日か知る	aDatetime.day
タイムスタンプデータが何日か知る	aDatetime.day
日付データの日数	aDate.day
日付データが何日か知る	aDate.day
本日の日数	datetime.datetime.today().day
現在の日数を使う	datetime.datetime.today().day
今日の日数を見る	datetime.datetime.today().day
本日が何日か知る	datetime.datetime.today().day
今日が何日か知る	datetime.datetime.today().day
日付時刻データの曜日を整数で使う	aDatetime.weekday()
日付時刻データの曜日を使う	aDatetime.weekday()
日付時刻データの曜日を見る	aDatetime.weekday()
日付時刻データが何曜日か知る	aDatetime.weekday()
タイムスタンプデータが何曜日か知る	aDatetime.weekday()
日付データの曜日を整数で使う	aDate.weekday()
日付データが何曜日か知る	aDate.weekday()
本日の曜日を整数で使う	datetime.datetime.today().weekday()
今日の曜日を見る	datetime.datetime.today().weekday()
今日の曜日を整数で使う	datetime.datetime.today().weekday()
本日が何曜日か知る	datetime.datetime.today().weekday()
本日は何曜日か知る	datetime.datetime.today().weekday()
日付時刻データが月曜日か調べる	aDatetime.weekday() == 0
日付時刻データが月曜日か確認する	aDatetime.weekday() == 0
日付時刻データが月曜日か判定する	aDatetime.weekday() == 0
日付データが月曜日か調べる	aDate.weekday() == 0
日付データが月曜日	aDate.weekday() == 0
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
今日が月曜日	datetime.datetime.today().weekday() == 0
日付時刻データが火曜日か調べる	aDatetime.weekday() == 1
日付時刻データが火曜日か確認する	aDatetime.weekday() == 1
タイムスタンプデータが火曜日かどうか調べる	aDatetime.weekday() == 1
日付データが火曜日か調べる	aDate.weekday() == 1
日付データが火曜日	aDate.weekday() == 1
日付データが火曜日かどうか確認する	aDate.weekday() == 1
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
現在が火曜日かどうか調べる	datetime.datetime.today().weekday() == 1
日付時刻データが水曜日か調べる	aDatetime.weekday() == 2
タイムスタンプデータが水曜日か調べる	aDatetime.weekday() == 2
日付データが水曜日か調べる	aDate.weekday() == 2
日付データが水曜日かどうか調べる	aDate.weekday() == 2
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
今日が水曜日かどうか	datetime.datetime.today().weekday() == 2
本日が水曜日か	datetime.datetime.today().weekday() == 2
日付時刻データが木曜日か調べる	aDatetime.weekday() == 3
日付時刻データが木曜日か確認する	aDatetime.weekday() == 3
日付時刻データが木曜日	aDatetime.weekday() == 3
日付データが木曜日か調べる	aDate.weekday() == 3
本日が木曜日か調べる	datetime.datetime.today().weekday() == 3
本日が木曜日か確認する	datetime.datetime.today().weekday() == 3
本日が木曜日かどうか調べる	datetime.datetime.today().weekday() == 3
日付時刻データが金曜日か調べる	aDatetime.weekday() == 4
日付時刻データが金曜日かテストする	aDatetime.weekday() == 4
日付データが金曜日か調べる	aDate.weekday() == 4
日付データが金曜日かどうか	aDate.weekday() == 4
日付データが金曜日か	aDate.weekday() == 4
本日が金曜日か調べる	datetime.datetime.today().weekday() == 4
現在が金曜日かテストする	datetime.datetime.today().weekday() == 4
本日が金曜日	datetime.datetime.today().weekday() == 4
日付時刻データが土曜日か調べる	aDatetime.weekday() == 5
日付時刻データが土曜日かどうか調べる	aDatetime.weekday() == 5
日付データが土曜日か調べる	aDate.weekday() == 5
日付データが土曜日かどうか調べる	aDate.weekday() == 5
日付データが土曜日か	aDate.weekday() == 5
日付データが土曜日	aDate.weekday() == 5
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
日付時刻データが日曜日か調べる	aDatetime.weekday() == 6
日付時刻データが日曜日かどうか	aDatetime.weekday() == 6
日付データが日曜日か調べる	aDate.weekday() == 6
日付データが日曜日	aDate.weekday() == 6
本日が日曜日か調べる	datetime.datetime.today().weekday() == 6
本日が日曜日	datetime.datetime.today().weekday() == 6
日付時刻データをタプルに変換する	aDatetime.timetuple()
日付時刻データをタプルにする	aDatetime.timetuple()
日付データをタプルに変換する	aDate.timetuple()
本日をタプルに変換する	datetime.datetime.today().timetuple()
日付時刻データをISO形式の文字列に変換する	aDatetime.isoformat()
日付時刻データをISO書式の文字列にする	aDatetime.isoformat()
タイムスタンプデータをISO形式の文字列に変換する	aDatetime.isoformat()
タイムスタンプデータをISO書式の文字列にする	aDatetime.isoformat()
日付データをISO形式の文字列に変換する	aDate.isoformat()
日付データをISO書式の文字列にする	aDate.isoformat()
日付データをISO8601書式の文字列に変換する	aDate.isoformat()
本日をISO形式の文字列に変換する	datetime.datetime.today().isoformat()
本日をISO書式の文字列に変換する	datetime.datetime.today().isoformat()
本日をISO8601書式の文字列に変換する	datetime.datetime.today().isoformat()
日付時刻データを文字列でフォーマットして文字列に変換する	"aDatetime.strftime(""%d/%m/%y"")"
日付時刻データを文字列でフォーマットして文字列にする	"aDatetime.strftime(""%d/%m/%y"")"
日付時刻データを文字列でフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
日付時刻データを文字列としてフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
日付データを文字列でフォーマットして文字列に変換する	"aDate.strftime(""%d/%m/%y"")"
日付データを文字列でフォーマットする	"aDate.strftime(""%d/%m/%y"")"
本日を文字列でフォーマットして文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列でフォーマットして文字列にする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
今日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
日付時刻データの時間数	aDatetime.hour
タイムスタンプデータの時刻	aDatetime.hour
日付時刻データの時間	aDatetime.hour
日付時刻データが何時か知る	aDatetime.hour
タイムスタンプデータが何時か知る	aDatetime.hour
現在の時間数	datetime.date.today().hour
現在の時間数を見る	datetime.date.today().hour
現在が何時か知る	datetime.date.today().hour
日付時刻データの分数	aDatetime.minute
日付時刻データの分数を見る	aDatetime.minute
日付時刻データが何分か知る	aDatetime.minute
現在の分数	datetime.date.today().minute
現在が何分か知る	datetime.date.today().minute
日付時刻データの秒数	aDatetime.second
日付時刻データの秒数を見る	aDatetime.second
日付時刻データが何秒か知る	aDatetime.second
現在の秒数	datetime.date.today().second
現在の秒を見る	datetime.date.today().second
現在が何秒か知る	datetime.date.today().second
現在のミリ秒	int(time.time() * 1000)
現在のタイムスタンプ	int(time.time())
日付時刻データををn週間後に進める	aDatetime + datetime.timedelta(weeks=n)
日付時刻データにn週間分、加算する	aDatetime + datetime.timedelta(weeks=n)
タイムスタンプデータにn週間分、加算する	aDatetime + datetime.timedelta(weeks=n)
日付データををn週間後に進める	aDate + datetime.timedelta(weeks=n)
日付データにn週間分、加算する	aDate + datetime.timedelta(weeks=n)
日付データにn週間を加算する	aDate + datetime.timedelta(weeks=n)
日付時刻データをn週間前に戻す	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分、減算する	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分減算する	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分、引く	aDatetime - datetime.timedelta(weeks=n)
日付データをn週間前に戻す	aDate - datetime.timedelta(weeks=n)
日付データからn週間分、減算する	aDate - datetime.timedelta(weeks=n)
日付時刻データををn日後に進める	aDatetime + datetime.timedelta(days=n)
日付時刻データにn日分、加算する	aDatetime + datetime.timedelta(days=n)
タイムスタンプデータにn日分、加算する	aDatetime + datetime.timedelta(days=n)
日付データををn日後に進める	aDate + datetime.timedelta(days=n)
日付データにn日分、加算する	aDate + datetime.timedelta(days=n)
日付データにn日分、足す	aDate + datetime.timedelta(days=n)
日付時刻データをn日前に戻す	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータをn日前に戻す	aDatetime - datetime.timedelta(days=n)
日付時刻データからn日分、減算する	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータからn日分、減らす	aDatetime - datetime.timedelta(days=n)
日付データをn日前に戻す	aDate - datetime.timedelta(days=n)
日付データからn日分、減算する	aDate - datetime.timedelta(days=n)
日付時刻データををn時間後に進める	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間分、加算する	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間を加算する	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間分加算する	aDatetime + datetime.timedelta(hours=n)
日付データををn時間後に進める	aDate + datetime.timedelta(hours=n)
日付データにn時間分、加算する	aDate + datetime.timedelta(hours=n)
日付時刻データをn時間前に戻す	aDatetime - datetime.timedelta(hours=n)
日付時刻データからn時間分、減算する	aDatetime - datetime.timedelta(hours=n)
タイムスタンプデータからn時間分減らす	aDatetime - datetime.timedelta(hours=n)
タイムスタンプデータからn時間分引く	aDatetime - datetime.timedelta(hours=n)
日付データをn時間前に戻す	aDate - datetime.timedelta(hours=n)
日付データからn時間分、減算する	aDate - datetime.timedelta(hours=n)
日付時刻データををn分後に進める	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分分、加算する	aDatetime + datetime.timedelta(minutes=n)
タイムスタンプデータにn分分加える	aDatetime + datetime.timedelta(minutes=n)
タイムスタンプデータにn分分、加算する	aDatetime + datetime.timedelta(minutes=n)
日付データををn分後に進める	aDate + datetime.timedelta(minutes=n)
日付データにn分分、加算する	aDate + datetime.timedelta(minutes=n)
日付データにn分を加算する	aDate + datetime.timedelta(minutes=n)
日付データにn分分、足す	aDate + datetime.timedelta(minutes=n)
日付時刻データをn分前に戻す	aDatetime - datetime.timedelta(minutes=n)
タイムスタンプデータをn分前に戻す	aDatetime - datetime.timedelta(minutes=n)
日付時刻データからn分、減算する	aDatetime - datetime.timedelta(minutes=n)
タイムスタンプデータからn分、引く	aDatetime - datetime.timedelta(minutes=n)
日付データをn分前に戻す	aDate - datetime.timedelta(minutes=n)
日付データからn分、減算する	aDate - datetime.timedelta(minutes=n)
日付データからn分、減らす	aDate - datetime.timedelta(minutes=n)
日付時刻データををn秒後に進める	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分、加算する	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分、足す	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分加算する	aDatetime + datetime.timedelta(seconds=n)
日付データををn秒後に進める	aDate + datetime.timedelta(seconds=n)
日付データにn秒分、加算する	aDate + datetime.timedelta(seconds=n)
日付データにn秒を加算する	aDate + datetime.timedelta(seconds=n)
日付データにn秒分加算する	aDate + datetime.timedelta(seconds=n)
日付時刻データをn秒前に戻す	aDatetime - datetime.timedelta(seconds=n)
日付時刻データをn秒前にする	aDatetime - datetime.timedelta(seconds=n)
日付時刻データからn秒分、減算する	aDatetime - datetime.timedelta(seconds=n)
タイムスタンプデータからn秒分、減算する	aDatetime - datetime.timedelta(seconds=n)
日付時刻データからn秒分減算する	aDatetime - datetime.timedelta(seconds=n)
日付データをn秒前に戻す	aDate - datetime.timedelta(seconds=n)
日付データからn秒分、減算する	aDate - datetime.timedelta(seconds=n)
日付時刻データが日付時刻データより前か調べる	aDatetime < aDatetime2
タイムスタンプデータがタイムスタンプデータより前か調べる	aDatetime < aDatetime2
日付時刻データが日付時刻データより先か調べる	aDatetime < aDatetime2
日付データが日付データより前か調べる	aDate < aDate2
日付データが日付データより前か	aDate < aDate2
日付データが日付データより前	aDate < aDate2
日付時刻データが日付時刻データより後ろか調べる	aDatetime > aDatetime2
タイムスタンプデータが日付時刻データより後ろかどうか調べる	aDatetime > aDatetime2
日付時刻データは日付時刻データより後ろ	aDatetime > aDatetime2
日付時刻データがタイムスタンプデータよりあと	aDatetime > aDatetime2
日付データが日付データより後ろか調べる	aDate > aDate2
日付データが日付データよりあと	aDate > aDate2
日付データが日付データよりあとか調べる	aDate > aDate2
日付時刻データが日付時刻データと同時か調べる	aDatetime == aDatetime2
日付時刻データはタイムスタンプデータと同時	aDatetime == aDatetime2
日付時刻データは日付時刻データと同時かどうか調べる	aDatetime == aDatetime2
日付データが日付データと同時か調べる	aDate == aDate2
日付時刻データと日付時刻データの時間差	aDatetime - aDatetime2
タイムスタンプデータとタイムスタンプデータの時間差	aDatetime - aDatetime2
日付データと日付データの時間差	aDate - aDate2
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差を秒で計算する	(aDatetime - aDatetime2).total_seconds()
タイムスタンプデータと日付時刻データの時間差を秒数で算出する	(aDatetime - aDatetime2).total_seconds()
日付時刻データとタイムスタンプデータの時間差を秒で計算する	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差は何秒か知る	(aDatetime - aDatetime2).total_seconds()
日付時刻データとタイムスタンプデータの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
タイムスタンプデータと日付時刻データの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()
日付データと日付データの時間差を秒数で計算する	(aDate - aDate2).total_seconds()
日付データと日付データの時間差が何秒か知る	(aDate - aDate2).total_seconds()
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()//60
タイムスタンプデータと日付時刻データの時間差を秒で算出する	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差を秒で計算する	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差は何分か知る	(aDatetime - aDatetime2).total_seconds()//60
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()//60
日付データと日付データの時間差を秒数で算出する	(aDate - aDate2).total_seconds()//60
日付データと日付データの時間差が何分か知る	(aDate - aDate2).total_seconds()//60
空の辞書	{}
空のマップを生成する	{}
空のマップ	{}
変数名をキーとして、辞書	dict(name=element)
変数名を項目名として、マップ	dict(name=element)
辞書のキーの値	aDict[key]
辞書のキーを列挙する	list(aDict)
タプルのキーを列挙する	list(aDict)
辞書のキー一覧	list(aDict)
マップの項目名一覧	list(aDict)
辞書の項目名一覧	list(aDict)
辞書の項目数	len(aDict)
辞書の全項目をクリアする	aDict.clear()
マッピングの全をクリアする	aDict.clear()
マッピングを空にする	aDict.clear()
タプルの全をクリアする	aDict.clear()
辞書をコピーする	aDict.copy()
マップを複製する	aDict.copy()
マッピングを浅くコピーする	aDict.copy()
辞書の浅いコピーを作る	aDict.copy()
タプルのコピーを作る	aDict.copy()
タプルの浅いコピーを生成する	aDict.copy()
辞書の浅いコピーを生成する	aDict.copy()
辞書からキーの値	aDict.get(key)
マッピングからキーの値	aDict.get(key)
辞書から項目名の値	aDict.get(key)
辞書のキーに対応した値	aDict.get(key)
マッピングのキーに対応した値	aDict.get(key)
辞書からキーの値をエラーなく得る	aDict.get(key, None)
辞書から項目名の値をエラーなく得る	aDict.get(key, None)
エラーなく辞書からキーの値を得る	aDict.get(key, None)
辞書からキーの値か、もしくは要素を得る	aDict.get(key, element)
辞書からキーの値かもしくは要素を得る	aDict.get(key, element)
マップからキーの値か、もしくは要素を得る	aDict.get(key, element)
キーが辞書に存在するか調べる	key in aDict
キーが辞書に存在しているかどうか判定する	key in aDict
キーが辞書に存在するかどうか確認する	key in aDict
項目名が辞書にあるかどうか確認する	key in aDict
キーが辞書上で定義済みか調べる	key in aDict
項目名が辞書上で定義済みか調べる	key in aDict
辞書上で項目名が定義済みか	key in aDict
項目名がタプル上で定義済みか確認する	key in aDict
キーが辞書に存在するか調べる	key not in aDict
キーがマッピングにある	key not in aDict
キーがタプルに存在しているか調べる	key not in aDict
キーがマップに存在しているか確認する	key not in aDict
キーが辞書上で未定義か調べる	key not in aDict
項目名が辞書上でまだ定義されていないか調べる	key not in aDict
キーが辞書上でまだ定義されていない	key not in aDict
辞書のキーとその値を列挙する	aDict.items()
マッピングのキーとその値を列挙する	aDict.items()
辞書のキーとその値をペアとして取り出す	aDict.items()
タプルのキーとその値をペアとして取り出す	aDict.items()
辞書の項目名とその項目をペアとして取り出す	aDict.items()
辞書のキーとその項目をペアとして取り出す	aDict.items()
辞書のキーを列挙する	aDict.keys()
辞書の項目名を列挙する	aDict.keys()
辞書のキーの一覧	aDict.keys()
辞書の項目名の一覧	aDict.keys()
マッピングのキーの一覧	aDict.keys()
辞書の値を列挙する	aDict.values()
辞書の値の一覧	aDict.values()
マッピングの値の一覧を得る	aDict.values()
要素が辞書の値として含まれているか調べる	element in aDict.values()
マッピングの値として要素が含まれている	element in aDict.values()
要素が辞書の値に含まれていないか調べる	element not in aDict.values()
辞書の値に要素が含まれていない	element not in aDict.values()
要素が辞書の値に含まれていないかどうか調べる	element not in aDict.values()
辞書の値に要素は含まれていないか	element not in aDict.values()
辞書のキーを要素に設定する	aDict[key] = element
マッピングの項目名を要素に設定する	aDict[key] = element
マッピングのキーを要素に設定する	aDict[key] = element
辞書に要素をキーとして加える	aDict[key] = element
辞書に要素を項目名として加える	aDict[key] = element
キーが辞書に存在しないとき、要素を追加する	aDict.setdefault(key, element)
キーがマッピングに存在しない時要素を追加する	aDict.setdefault(key, element)
マップに項目名が存在しない時、要素を追加する	aDict.setdefault(key, element)
辞書に項目名が存在しないとき、要素を追加する	aDict.setdefault(key, element)
辞書に辞書の項目を更新する	aDict.update(aDict2)
マッピングに別のタプルの項目を加えて、更新する	aDict.update(aDict2)
辞書に辞書のエントリを更新する	aDict.update(aDict2)
タプルにマッピングの項目を更新する	aDict.update(aDict2)
辞書にキーワード引数で更新する	aDict.update(**kwargs)
マッピングにキーワード引数として加えて、更新する	aDict.update(**kwargs)
キーワード引数でタプルに追加する	aDict.update(**kwargs)
ふたつの辞書を合体する	aDict | aDict2
辞書からキーで指定された項目をポップする	aDict.pop(key)
辞書からキーで指定した項目をポップする	aDict.pop(key)
辞書からキーで指定された項目を取り出す	aDict.pop(key)
辞書から最後の項目をポップする	aDict.popitem()
最後に追加した項目を辞書からポップする	aDict.popitem()
最後に追加した値を辞書からポップする	aDict.popitem()
辞書のキーと値を入れ替える	{v: k for k, v in aDict.items()}
辞書の項目名と値を入れ替える	{v: k for k, v in aDict.items()}
二つのリストから辞書	dict(zip(aList, aList2))
2つのリストから辞書を作る	dict(zip(aList, aList2))
２つのリストから辞書を作る	dict(zip(aList, aList2))
辞書を浅くコピーする	dict(aDict)
マッピングを浅くコピーする	dict(aDict)
マップをコピーする	dict(aDict)
辞書のコピー	dict(aDict)
マッピングのコピー	dict(aDict)
辞書の内部もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
辞書の値もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
osモジュールをインポートする	import os
ファイルパスのセパレータ記号	os.sep
ファイル名のセパレータ記号	os.sep
現在の作業ディレクトリ	os.getcwd()
現在の作業ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
filepathにカレント作業ディレクトリを変更する	os.chdir(os.dirname(filepath))
UNIXコマンドtextを実行する	os.system(text)
ファイルのファイル名	os.path.basename(filepath)
ファイルからファイル名を使う	os.path.basename(filepath)
ファイルから拡張子付きのファイル名を取り出す	os.path.basename(filepath)
ファイルからファイル名を取り出す	os.path.basename(filepath)
ファイルの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルの拡張子なしのファイル名	os.path.splitext(os.path.basename(filepath))[0]
ファイルパスの拡張子なしのファイル名を見る	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を取り出す	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を求める	os.path.splitext(os.path.basename(filepath))[0]
ファイルの拡張子	os.path.splitext(filepath)[1].lstrip('.')
ファイルの拡張子をtextに変更する	os.path.splitext(filepath)[0] + text
ファイルのディレクトリ名	os.path.dirname(filepath)
ファイルパスのディレクトリ名を使う	os.path.dirname(filepath)
ファイルからディレクトリ名を使う	os.path.dirname(filepath)
ファイルパスからディレクトリ名を求める	os.path.dirname(filepath)
ファイルからフォルダ名を使う	os.path.dirname(filepath)
ファイルの絶対パス	os.path.abspath(filepath)
ファイルを絶対パスに変換する	os.path.abspath(filepath)
ファイルを絶対パスにする	os.path.abspath(filepath)
ファイルを絶対ファイルパスに変換する	os.path.abspath(filepath)
ファイルをディレクトリ名とファイル名に分割する	os.path.split(filepath)
ファイルをベース名と拡張子に分割する	os.path.splitext(filepath)
ファイルとfilenameを結合する	os.path.join(filepath, filename)
ファイルが存在するか調べる	os.path.exists(filepath)
ファイルが存在しないか調べる	not os.path.exists(filepath)
ファイルが存在しないかどうか調べる	not os.path.exists(filepath)
ファイルがない	not os.path.exists(filepath)
ファイルが存在しない	not os.path.exists(filepath)
ファイルのファイルサイズ	os.path.get_size(filepath)
スクリプトファイルの絶対パス	os.path.abspath(__file__)
スクリプトファイルの絶対パスを求める	os.path.abspath(__file__)
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのディレクトリパスを見る	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのディレクトリ名を求める	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルと同じディレクトリのファイルのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
ファイルをオープンする]	open(filepath)
ファイルパスを開く]	open(filepath)
ファイルを開く]	open(filepath)
ファイルからの入力ストリームを使う	open(filepath)
ファイルパスの入力ストリームを使う	open(filepath)
ファイルの入力ストリームを使う	open(filepath)
ファイルパスからのストリームを使う	open(filepath)
ファイルからストリームを読み込み、fileとする	file = open(filepath)
ファイルからストリームを読み込みfileとする	file = open(filepath)
ファイルからストリームをオープンして]、fileとする	file = open(filepath)
ファイルからストリームを開き]、fileとする	file = open(filepath)
ファイルからストリームを開いて]、fileとする	file = open(filepath)
ファイルからストリームを開いて]fileとする	file = open(filepath)
ファイルを読み込みモードでオープンする]	open(filepath, mode='r')
ファイルパスを読み込みモードとしてオープンする]	open(filepath, mode='r')
読み込みモードでファイルをオープンする]	open(filepath, mode='r')
ファイルを読み込みできるようにオープンする]	open(filepath, mode='r')
ファイルパスを読み込みできるようにオープンする]	open(filepath, mode='r')
ファイルをオープンして]、読み込みストリームを使う	open(filepath, mode='r')
ファイルパスをオープンして]読み込みストリームを使う	open(filepath, mode='r')
ファイルを開いて]、読み込みストリームを使う	open(filepath, mode='r')
ファイルをバイナリモードでオープンする]	open(filepath, mode='rb')
ファイルパスをバイナリモードでオープンする]	open(filepath, mode='rb')
バイナリモードとしてファイルパスをオープンする]	open(filepath, mode='rb')
バイナリモードでファイルをオープンする]	open(filepath, mode='rb')
ファイルをバイナリできるようにオープンする]	open(filepath, mode='rb')
ファイルをバイナリできるように開く]	open(filepath, mode='rb')
ファイルをオープンして]、バイナリストリームを使う	open(filepath, mode='rb')
ファイルをオープンして]バイナリストリームを使う	open(filepath, mode='rb')
ファイルパスをオープンして]、バイナリストリームを使う	open(filepath, mode='rb')
ファイルを書き込みモードでオープンする]	open(filepath, mode='w')
ファイルを書き込みモードとしてオープンする]	open(filepath, mode='w')
ファイルパスを書き込みモードでオープンする]	open(filepath, mode='w')
ファイルを書き込みできるようにオープンする]	open(filepath, mode='w')
書き込みできるようにファイルを開く]	open(filepath, mode='w')
ファイルをオープンして]、書き込みストリームを使う	open(filepath, mode='w')
ファイルをオープンして]書き込みストリームを使う	open(filepath, mode='w')
ファイルを開いて]書き込みストリームを使う	open(filepath, mode='w')
ファイルパスをオープンして]書き込みストリームを見る	open(filepath, mode='w')
ファイルをバイナリ書き込みモードでオープンする]	open(filepath, mode='wb')
ファイルをバイナリ書き込みモードを用いてオープンする]	open(filepath, mode='wb')
ファイルをバイナリ書き込み用にオープンする]	open(filepath, mode='wb')
ファイルパスをバイナリ書き込みモードで開く]	open(filepath, mode='wb')
ファイルをバイナリ書き込みできるようにオープンする]	open(filepath, mode='wb')
ファイルをオープンして]、バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルをオープンして]バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルを追加モードでオープンする]	open(filepath, mode='a')
追加モードとしてファイルをオープンする]	open(filepath, mode='a')
追加用にファイルをオープンする]	open(filepath, mode='a')
ファイルパスを追加モードで開く]	open(filepath, mode='a')
ファイルを追加できるようにオープンする]	open(filepath, mode='a')
ファイルパスを追加できるように開く]	open(filepath, mode='a')
ファイルをオープンして]、追加ストリームを使う	open(filepath, mode='a')
ファイルを開いて]追加ストリームを使う	open(filepath, mode='a')
ファイルをオープンして]追加ストリームを使う	open(filepath, mode='a')
ファイルを開いて]、追加ストリームを使う	open(filepath, mode='a')
ファイルを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
ファイルパスを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
ファイルを読み込み用にオープンして]、fとする	f = open(filepath, mode='r')
ファイルパスを読み込み用に開いて]、fとする	f = open(filepath, mode='r')
ファイルから読み込みストリームをオープンして]、fとする	f = open(filepath, mode='r')
ファイルをバイナリモードでオープンして]、fとする	f = open(filepath, mode='rb')
バイナリ用にファイルを開き]、fとする	f = open(filepath, mode='rb')
ファイルパスをバイナリモードで開いて]、fとする	f = open(filepath, mode='rb')
バイナリモードを使ってファイルをオープンして]、fとする	f = open(filepath, mode='rb')
ファイルからバイナリストリームをオープンして]、fとする	f = open(filepath, mode='rb')
ファイルを書き込みモードでオープンして]、fとする	f = open(filepath, mode='w')
ファイルを書き込みモードを用いてオープンして]fとする	f = open(filepath, mode='w')
ファイルを書き込み用にオープンして]、fとする	f = open(filepath, mode='w')
ファイルパスを書き込みモードで開いて]、fとする	f = open(filepath, mode='w')
ファイルから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
ファイルをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
ファイルをバイナリ書き込みモードで開き]、fとする	f = open(filepath, mode='wb')
バイナリ書き込みモードを用いてファイルを開いて]、fとする	f = open(filepath, mode='wb')
ファイルパスをバイナリ書き込みモードで開いて]、fとする	f = open(filepath, mode='wb')
ファイルからバイナリ書き込みストリームをオープンして]、fとする	f = open(filepath, mode='wb')
ファイルパスからバイナリ書き込みストリームを開いて]、fとする	f = open(filepath, mode='wb')
ファイルを追加モードでオープンして]、fとする	f = open(filepath, mode='a')
ファイルを追加モードとしてオープンして]、fとする	f = open(filepath, mode='a')
ファイルを追加モードを用いてオープンして]、fとする	f = open(filepath, mode='a')
ファイルから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
ファイルパスから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
＜オプション＞読み込みモードに設定する	mode = 'r'
＜オプション＞読み込み用に設定する	mode = 'r'
＜オプション＞読み込みモードを使う	mode = 'r'
＜オプション＞バイナリモードに設定する	mode = 'rb'
＜オプション＞バイナリモードに変更する	mode = 'rb'
＜オプション＞バイナリモードを使う	mode = 'rb'
＜オプション＞書き込みモードに設定する	mode = 'w'
＜オプション＞書き込みモードを使う	mode = 'w'
＜オプション＞バイナリ書き込みモードに設定する	mode = 'wb'
＜オプション＞バイナリ書き込みモードを使う	mode = 'wb'
＜オプション＞追加モードに設定する	mode = 'a'
＜オプション＞追加モードを使う	mode = 'a'
ファイルをUTF8でオープンする]	open(filepath, encoding='utf-8')
UTF8でファイルをオープンする]	open(filepath, encoding='utf-8')
ファイルパスをUTF8でオープンする]	open(filepath, encoding='utf-8')
ファイルをSJISでオープンする]	open(filepath, encoding='shift_jis')
ファイルパスをSJISでオープンする]	open(filepath, encoding='shift_jis')
ファイルをEUCでオープンする]	open(filepath, encoding='euc_jp')
EUCでファイルをオープンする]	open(filepath, encoding='euc_jp')
ファイルパスをEUCを使って開く]	open(filepath, encoding='euc_jp')
ファイルをBOM付きでオープンする]	open(filepath, encoding='utf_8_sig')
BOM付きでファイルをオープンする]	open(filepath, encoding='utf_8_sig')
ファイルを文字コードtextでオープンする]	open(filepath, encoding=text)
ファイルパスを文字コードtextとしてオープンする]	open(filepath, encoding=text)
文字コードtextでファイルを開く]	open(filepath, encoding=text)
ファイルを文字列の示すエンコーディングでオープンする]	open(filepath, encoding=s)
ファイルを文字列の示すエンコーディングとしてオープンする]	open(filepath, encoding=s)
ファイルをUTF8で書き込み用にオープンする]	open(filepath, mode='w', encoding='utf-8')
ファイルをUTF8を使って書き込み用にオープンする]	open(filepath, mode='w', encoding='utf-8')
UTF8でファイルパスを書き込みできるようにオープンする]	open(filepath, mode='w', encoding='utf-8')
ファイルをUTF8で書き込み用に開く]	open(filepath, mode='w', encoding='utf-8')
ファイルをSJISで書き込み用にオープンする]	open(filepath, mode='w', encoding='shift_jis')
書き込み用にファイルパスをSJISでオープンする]	open(filepath, mode='w', encoding='shift_jis')
ファイルをSJISを使って書き込みできるようにオープンする]	open(filepath, mode='w', encoding='shift_jis')
ファイルをEUCで書き込み用にオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルをEUCで書き込みできるようにオープンする]	open(filepath, mode='w', encoding='euc_jp')
書き込み用にファイルパスをEUCでオープンする]	open(filepath, mode='w', encoding='euc_jp')
書き込み用にEUCでファイルをオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルをBOM付きで書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
書き込み用にファイルパスをBOM付きで開く]	open(filepath, mode='w', encoding='utf_8_sig')
ファイルパスを書き込みできるようにBOM付きで開く]	open(filepath, mode='w', encoding='utf_8_sig')
ファイルを文字コードtextで書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
ファイルを文字コードtextとして書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
ファイルを文字コードtextを用いて書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
書き込みできるように文字コードtextでファイルをオープンする]	open(filepath, mode='w', encoding=text)
ファイルを文字列の示すエンコーディングで書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
ファイルを文字列の示すエンコーディングとして書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
ファイルを文字列の示すエンコーディングを用いて書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
既存のファイルをUTF8で追加できるようにオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルをUTF8として追加できるように開く]	open(filepath, mode='a', encoding='utf-8')
ファイルを追加できるようにUTF8を使ってオープンする]	open(filepath, mode='a', encoding='utf-8')
UTF8で追加できるようにファイルパスをオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルパスをSJISを用いて追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルパスをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルをSJISとして追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルをEUCで追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
ファイルパスをEUCとして追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルパスをEUCとして追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
BOM付きで追加できるようにファイルパスを開く]	open(filepath, mode='a', encoding='utf_8_sig')
既存のファイルパスをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
BOM付きとしてファイルを追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
既存のファイルを文字コードtextで追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルパスを文字コードtextで追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
追加できるようにファイルを文字コードtextでオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルを文字列の示すエンコーディングで追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
文字列の示す文字コードで既存のファイルパスを追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
既存のファイルを追加できるように文字列の示す文字コードでオープンする]	open(filepath, mode='a', encoding=s)
既存のファイルを文字列の示すエンコーディングを使って追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
＜オプション＞エンコーディングをUTF8に設定する	encoding = 'utf-8'
＜オプション＞文字コードをUTF8に設定する	encoding = 'utf-8'
＜オプション＞UTF8を使う	encoding = 'utf-8'
＜オプション＞エンコーディングをSJISに設定する	encoding = 'shift_jis'
＜オプション＞SJISを使う	encoding = 'shift_jis'
＜オプション＞エンコーディングをEUCに設定する	encoding = 'euc_jp'
＜オプション＞文字コードをEUCに設定する	encoding = 'euc_jp'
＜オプション＞EUCを使う	encoding = 'euc_jp'
＜オプション＞エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
＜オプション＞BOM付きを使う	encoding = 'utf_8_sig'
＜オプション＞エンコーディングを文字コードtextに設定する	encoding = text
＜オプション＞文字コードtextを使う	encoding = text
＜オプション＞文字コードtextを用いる	encoding = text
＜オプション＞エンコーディングを文字列の示すエンコーディングに設定する	encoding = s
＜オプション＞エンコーディングを文字列の示すエンコーディングに変更する	encoding = s
＜オプション＞エンコーディングを文字列の示す文字コードにする	encoding = s
＜オプション＞文字列の示すエンコーディングを使う	encoding = s
＜オプション＞文字列の示す文字コードを使う	encoding = s
＜オプション＞文字列の示すエンコーディングを使用する	encoding = s
＜オプション＞バッファリングを無効にする	buffering = 0
＜オプション＞バッファリングのサイズを設定する	buffering = 4096
＜オプション＞バッファのサイズを設定する	buffering = 4096
＜オプション＞バッファリングのサイズを大きくする	buffering = 4096
＜オプション＞エラーがあるとき、例外を発生させるように設定する	errors = 'strict'
＜オプション＞エラーがあるとき、例外を発生させるように指定する	errors = 'strict'
＜オプション＞エラーを無視するように設定する	errors = 'ignore'
＜オプション＞エラーを無視する	errors = 'ignore'
＜オプション＞改行コードをUNIXに設定する	newline = '\n'
＜オプション＞改行コードを旧Macに設定する	newline = '\r'
＜オプション＞改行コードをWindowsに設定する	newline = '\r\n'
＜オプション＞改行コードを動作環境依存に設定する	newline = None
ファイルをクローズする	f.close()
ファイルを全部、読み込む	f.read()
ファイルを全て読み込む	f.read()
ファイルから1文字、読み込む	f.read(1)
入力ストリームから1文字、読み込む	f.read(1)
入力ストリームから1文字、読む	f.read(1)
ファイルからn文字、読み込む	f.read(n)
入力ストリームからnバイト読み込む	f.read(n)
入力ストリームからnバイト、読む	f.read(n)
ファイル全体を行単位で分割して読み込む	f.readlines()
ファイル全体をリストとして読み込む	f.readlines()
入力ストリーム全体を行分割して読み込む	f.readlines()
ファイル全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
ストリーム全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
ファイルを一行ずつ読み込む	f.readline()
入力ストリームを一行ずつ読み込む	f.readline()
ファイルを改行を取り除いて一行ずつ読み込む	f.readline()
改行を取り除いてファイルを一行ずつ読む	f.readline()
ファイルに文字列を書き込む	f.write(s)
ファイルにxを文字列に変換して書き込む	f.write(str(x))
ファイルにxを文字列に変換して書く	f.write(str(x))
実数が正の数か調べる	x > 0
実数が正の数	x > 0
実数が正かどうか調べる	x > 0
実数が負の数か調べる	x < 0
数が負	x < 0
実数が負の数	x < 0
実数を二乗する	x ** 2
実数を2乗する	x ** 2
実数の二乗	x ** 2
浮動小数点数の二乗を求める	x ** 2
実数を三乗する	x ** 3
数を三乗する	x ** 3
実数の三乗	x ** 3
実数の３乗を算出する	x ** 3
数の三乗	x ** 3
整数の３乗を求める	x ** 3
実数をn乗する	x ** n
実数のn乗	x ** n
浮動小数点数のn乗	x ** n
実数に実数を加える	x + y
浮動小数点数に浮動小数点数を加算する	x + y
実数から実数を引く	x - y
実数を実数から引く	x - y
浮動小数点数から実数を引く	x - y
実数に実数を掛ける	x * y
実数に浮動小数点数をかける	x * y
実数を浮動小数点数にかける	x * y
実数を実数で割る	x / y
実数で実数を割る	x / y
実数を実数で割って、切り捨てる	x // y
実数を実数で除算して、切り捨てる	x // y
実数を実数で除算して、小数点以下を切り捨てる	x // y
実数を実数で整数除算する	x // y
浮動小数点数を実数で整数除算する	x // y
浮動小数点数を数で整数除算する	x // y
実数で数を整数除算する	x // y
実数を実数で割った余り	x % y
浮動小数点数を浮動小数点数で割った余り	x % y
浮動小数点数を実数で割った余り	x % y
実数を整数に変換する	int(x)
実数を文字列に変換する	str(x)
実数の複素数	complex(x)
実数を複素数に変換する	complex(x)
実数を複素数にする	complex(x)
実部と虚部から複素数	complex(x, y)
商と余りを同時に計算する	divmod(x, y)
実数のn乗	pow(x, n)
数のn乗を求める	pow(x, n)
実数のn乗を求める	pow(x, n)
実数のn乗の実数剰余	pow(x, n, y)
実数のn乗して実数による余り	pow(x, n, y)
浮動小数点数のn乗して実数による余り	pow(x, n, y)
実数の小数点以下を丸める	round(x)
数の小数点を丸める	round(x)
実数を小数点以下第一位で丸める	round(x, 1)
数を小数点以下第一位で丸める	round(x, 1)
浮動小数点数を小数点第一位で丸める	round(x, 1)
実数を小数点以下で丸める	round(x, n)
実数を十の位で丸める	round(x, -1)
数を十の位で丸める	round(x, -1)
実数を百の位で丸める	round(x, -2)
実数を千の位で丸める	round(x, -3)
実数を万の位で丸める	round(x, -4)
数を万の位で丸める	round(x, -4)
Pythonのバージョン	sys.version
浮動小数点数の最大値	sys.float_info.max
浮動小数点数の最小値	sys.float_info.min
floatの最小値	sys.float_info.min
計算機イプシロン	sys.float_info.epsilon
実数が整数か調べる	x.is_integer()
浮動小数点数が整数か	x.is_integer()
実数が整数	x.is_integer()
実数が整数かどうか	x.is_integer()
実数を十六進表記の文字列に変換する	x.hex()
実数を十六進表記の文字列にする	x.hex()
数を十六進表記の文字列に変換する	x.hex()
十六進表記の文字列を浮動小数点数に変換する	float.fromhex(十六進表記の文字列)
十六進表記の文字列を浮動小数点数にする	float.fromhex(十六進表記の文字列)
有理数を使う	import fractions
有理数モジュールをインポートする	import fractions
有理数を使用する	import fractions
分子n、分母mの有理数を作る	fractions.Fraction(numerator=n, denominator=m)
分子n分母mの有理数を作成する	fractions.Fraction(numerator=n, denominator=m)
n割るmの有理数表現	fractions.Fraction(numerator=n, denominator=m)
分子と分母から有理数を作る	fractions.Fraction(分子, 分母)
分子と分母から有理数を用意する	fractions.Fraction(分子, 分母)
分子割る分母	fractions.Fraction(分子, 分母)
有理数の分子	q.numerator
有理数の分母	q.denominator
有理数を分母の最大値を指定して近似する	q.limit_denominator(max_denominator=1000000)
浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
n進文字列を整数に変換する	int(s, n)
二進文字列を整数に変換する	int(s, 2)
二進数文字列を整数に変換する	int(s, 2)
八進文字列を整数に変換する	int(s, 8)
十六進文字列を整数に変換する	int(s, 16)
十六進文字列を整数にする	int(s, 16)
n進文字列をバイト列に変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進数文字列をバイナリに変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進文字列をbytesizeバイトのバイナリに変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
二進文字列をバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
二進文字列をbytesizeバイトのバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
2進文字列をバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
2進文字列をバイナリに変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
八進文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
8進数文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
八進文字列をバイト列にする	int(s, 8).to_bytes(length=bytesize, byteorder='big')
八進文字列をbytesizeバイトのバイト列にする	int(s, 8).to_bytes(length=bytesize, byteorder='big')
十六進文字列をバイト列に変換する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
十六進文字列をbytesizeバイトのバイナリにする	int(s, 16).to_bytes(length=bytesize, byteorder='big')
十六進文字列をバイト列にする	int(s, 16).to_bytes(length=bytesize, byteorder='big')
整数nの二進表現	bin(n)
nの2進数表現を使う	bin(n)
整数nの2進数表現を使う	bin(n)
nの二進数表現を見る	bin(n)
整数nを二進表現に変換する	bin(n)
整数nを二進数表記に変換する	bin(n)
整数nを二進表現にする	bin(n)
整数nの八進表現	oct(n)
整数nの八進表記	oct(n)
nの8進表記	oct(n)
nの八進表現	oct(n)
整数nを八進表現に変換する	oct(n)
整数nを8進表現に変換する	oct(n)
nを八進リテラルに変換する	oct(n)
整数nを八進数表現に変換する	oct(n)
整数nの十六進表現	hex(n)
整数nの16進表現	hex(n)
nの十六進数表現	hex(n)
整数nを十六進表現に変換する	hex(n)
nを16進表現に変換する	hex(n)
整数nを十六進数表現にする	hex(n)
nを十六進表現に変換する	hex(n)
整数nの二進文字列	bin(n)[2:]
nの二進数文字列を使う	bin(n)[2:]
nの2進文字列	bin(n)[2:]
nの二進文字列	bin(n)[2:]
整数nを二進文字列に変換する	bin(n)[2:]
整数nの八進文字列	oct(n)[2:]
整数nの八進数文字列	oct(n)[2:]
整数nの8進文字列を使う	oct(n)[2:]
整数nを八進文字列に変換する	oct(n)[2:]
nを8進文字列に変換する	oct(n)[2:]
整数nの十六進文字列	hex(n)[2:]
整数nの十六進文字列を求める	hex(n)[2:]
整数nの16進数文字列を求める	hex(n)[2:]
整数nを十六進文字列に変換する	hex(n)[2:]
nを十六進数文字列にする	hex(n)[2:]
整数nのビット長	n.bit_length()
整数nのバイト長	(n.bit_length() + 7) // 8
整数nのバイト長を調べる	(n.bit_length() + 7) // 8
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
整数nをバイト列にする	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
整数nを符号付きでバイト列にする	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
整数nをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
符号なしで整数nをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
整数nをバイト列にする	n.to_bytes(length=bytesize, byteorder='big')
nをバイナリに変換する	n.to_bytes(length=bytesize, byteorder='big')
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
符号付きで整数nを長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
整数nを符号付きで長さn2のバイナリにする	n.to_bytes(length=bytesize, byteorder='big', signed=True)
nにn2を加える	n + n2
nプラスn2	n + n2
nプラスn2を計算する	n + n2
nとn2の和	n + n2
nからn2を引く	n - n2
nマイナスn2	n - n2
nとn2の差	n - n2
nにn2をかける	n * n2
nかけるn2	n * n2
nとn2の積	n * n2
nをn2で割る	n / n2
nわるn2	n / n2
nとn2の商	n / n2
n2分のn	n / n2
nをn2で整数除算する	n // n2
nのn2乗	n ** n2
nの二乗	n ** 2
nの2乗	n ** 2
nの三乗	n ** 3
nの3乗	n ** 3
nの三乗を求める	n ** 3
nをn2で割った余り	n % n2
nをn2で割った結果の切り上げ	(n + n2 - 1) // n2
nをn2で割った結果の切り上げを求める	(n + n2 - 1) // n2
n割るn2を切り上げる	(n + n2 - 1) // n2
n割るn2の切り上げ	(n + n2 - 1) // n2
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
nとn2の論理積	n & n2
nとn2のビット積を求める	n & n2
nとn2のビット積	n & n2
nとn2の論理和	n | n2
nとn2の排他的論理和	n ^ n2
nとn2のXOR	n ^ n2
nをn2だけ左シフトする	n << n2
nをn2だけ右シフトする	n >> n2
nをn2だけ増加させる	n += n2
nにn2を足して代入する	n += n2
nとn2の値を足してnに代入する	n += n2
nをn2だけ減少させる	n -= n2
nをn2だけ小さくする	n -= n2
nからn2の値を引いてnに代入する	n -= n2
nからn2の値を引いてnにする	n -= n2
nをn2倍にする	n *= n2
nにn2をかけた値をnに代入する	n *= n2
nをn2乗に増やす	n **= n2
nをn2分の一にする	n /= n2
nを半分にする	n /= 2
nを切り捨てながらn2分の一にする	n //= n2
整数nをn2分の一にする	n //= n2
整数nをn2分の１にする	n //= n2
nを切り捨てながら半分にする	n //= 2
整数nを半分にする	n //= 2
nをn2で割った余りをnに代入する	n %= n2
nとn2が等しいか調べる	n == n2
nとn2が同じ値か調べる	n == n2
nがn2と等しいか調べる	n == n2
nはn2と等しいか	n == n2
nがn2と等しいかどうか確認する	n == n2
nがn2か調べる	n == n2
nがn2かどうか	n == n2
nがn2より大きいか調べる	n > n2
nがn2より大きいか判定する	n > n2
nがn2よりも大きいか調べる	n > n2
nがn2よりも大きい	n > n2
nがn2よりも大きいか	n > n2
nがn2より小さいか調べる	n < n2
nがn2より小さいか確認する	n < n2
nがn2よりも小さいか調べる	n < n2
nがn2よりも小さい	n < n2
nがn2以上か調べる	n >= n2
nがn2以下か調べる	n <= n2
nがn2以下か確認する	n <= n2
nがn2以下	n <= n2
nがn2未満、またはn3以上か調べる	n < n2 or n >= n3
nがn2未満、もしくはn3以上かどうか調べる	n < n2 or n >= n3
nがn2未満、もしくはn3以上か調べる	n < n2 or n >= n3
nがn2以下、または、n3以上か調べる	n <= n2 or n >= n3
nがn2以下、または、n3以上かどうか	n <= n2 or n >= n3
nがn2以下、または、n3以上	n <= n2 or n >= n3
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
n2がn以上かつ、n3以下か	n <= n2 and n2 <= n3
n2がnより大きく、かつ、n3未満か調べる	n < n2 and n2 < n3
n2がnより大きく、かつ、n3未満か	n < n2 and n2 < n3
n2がnより大きくかつn3未満	n < n2 and n2 < n3
n2がnより大きく、かつ、n3未満	n < n2 and n2 < n3
nが偶数か調べる	n % 2 == 0
nが偶数	n % 2 == 0
nが偶数かどうか	n % 2 == 0
nが2で割り切れるか調べる	n % 2 == 0
nが奇数か調べる	n % 2 == 1
nが奇数	n % 2 == 1
nが2で割り切れないか調べる	n % 2 == 1
nが2で割り切れないかどうか調べる	n % 2 == 1
nが2で割り切れないか確認する	n % 2 == 1
nが3の倍数か調べる	n % 3 == 0
nが3の倍数	n % 3 == 0
nが3で割り切れるか調べる	n % 3 == 0
nが5の倍数か調べる	n % 5 == 0
nが5の倍数	n % 5 == 0
nが5で割り切れるか調べる	n % 5 == 0
nが5で割り切れるかどうか調べる	n % 5 == 0
nが5で割り切れる	n % 5 == 0
nがn2の倍数か調べる	n % n2 == 0
nがn2の倍数かどうか調べる	n % n2 == 0
nがn2で割り切れるか調べる	n % n2 == 0
nがn2で割り切れるか確認する	n % n2 == 0
nがn2で割り切れる	n % n2 == 0
nがn2の倍数でないか調べる	n % n2 != 0
nがn2の倍数でないかどうか調べる	n % n2 != 0
nがn2で割り切れないか調べる	n % n2 != 0
nがn2で割り切れないかどうか調べる	n % n2 != 0
nがn2で割り切れないか判定する	n % n2 != 0
nが正の数か調べる	n > 0
nが正の整数	n > 0
nが正の数かどうかテストする	n > 0
nが負の数か調べる	n < 0
nが一桁の数か調べる	-9 <= n <= 9
nが一桁の数	-9 <= n <= 9
nが一桁の整数かどうか調べる	-9 <= n <= 9
nが-9以上、9以下か調べる	-9 <= n <= 9
nが-9以上9以下	-9 <= n <= 9
nが一桁の数か調べる	0 <= n <= 9
nが一桁の数かどうか	0 <= n <= 9
nが一桁の数	0 <= n <= 9
整数nがリストのどれかか調べる	n in aList
nはリストの一つかどうか調べる	n in aList
nがリストのどれかか調べる	n in aList
整数nがセットのどれかか調べる	n in aSet
nがセットのどれか	n in aSet
整数nがセットのひとつか調べる	n in aSet
整数nがセットのいづれかか調べる	n in aSet
整数nがタプルのどれかか調べる	n in aTuple
整数nがタプルのいづれかか調べる	n in aTuple
整数nはタプルのどれかか調べる	n in aTuple
整数nが配列のどれかか調べる	n in aArray
整数nは配列のいづれかか調べる	n in aArray
整数nが配列の一つか	n in aArray
整数nは配列のどれかか	n in aArray
nが1、もしくは2か調べる	n == 1 or n == 2
nが1、もしくは2か確認する	n == 1 or n == 2
nが1、もしくは2	n == 1 or n == 2
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
nが1、もしくは2、もしくは3に等しい	n == 1 or n == 2 or n == 3
nの桁数	len(str(n))
nが何桁か	len(str(n))
nの各桁の総和	sum(map(int, str(n)))
nの各桁の総和を求める	sum(map(int, str(n)))
xが一桁の数か調べる	-9 <= x <= 9
xが一桁の数	-9 <= x <= 9
xが-9以上、9以下か調べる	-9 <= x <= 9
xが-9以上、9以下かどうか	-9 <= x <= 9
xが-9以上9以下かテストする	-9 <= x <= 9
xが一桁の正の数か調べる	0 <= x <= 9
xが一桁の正の数	0 <= x <= 9
xが1、もしくは2か調べる	x == 1 or x == 2
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
xが1、もしくは2もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
itertoolsモジュールをインポートする	import itertools
nの無限数列	itertools.repeat(n)
nの無限な整数リスト	itertools.repeat(n)
nの無限なリスト	itertools.repeat(n)
nが無限に続く数列	itertools.repeat(n)
nが無限に続くリスト	itertools.repeat(n)
文字列が無限に繰り返すイテラブル	itertools.repeat(element)
文字列が無限に続くイテラブル	itertools.repeat(element)
無限に文字列が繰り返す列	itertools.repeat(element)
文字列が無限に繰り返す列	itertools.repeat(element)
文字列の無限イテラブル	itertools.repeat(element)
オブジェクトの無限のイテラブル	itertools.repeat(element)
文字列がn回繰り返すイテラブル	itertools.repeat(element, n)
n回オブジェクトが繰り返すイテラブルを得る	itertools.repeat(element, n)
オブジェクトがn回繰り返す列	itertools.repeat(element, n)
文字列がn回繰り返す列を求める	itertools.repeat(element, n)
無限にカウントアップする	itertools.count()
無限に数え上げるする	itertools.count()
いつまでもカウントアップする	itertools.count()
0から始まる無限数列	itertools.count()
無限数列を求める	itertools.count()
nから無限にカウントアップする	itertools.count(start=n)
nから無限に数え上げるする	itertools.count(start=n)
nからstep間隔で無限にカウントアップする	itertools.count(start=n, step=step)
nからstep間隔でいつまでも数え上げるする	itertools.count(start=n, step=step)
rangeの無限バージョン	itertools.count(start=n, step=step)
nから無限にカウントダウンする	itertools.count(start=n, step=-1)
イテラブルを無限に繰り返す	itertools.cycle(iterable)
列を無限に繰り返す	itertools.cycle(iterable)
列を周期的に繰り返す	itertools.cycle(iterable)
イテラブルを累加する	itertools.accumulate(iterable)
シーケンスを累加する	itertools.accumulate(iterable)
イテラブルを累加したイテラブル	itertools.accumulate(iterable)
リストを累加した列を得る	itertools.accumulate(iterable)
イテラブルを累加した列を得る	itertools.accumulate(iterable)
イテラブルを累積する	itertools.accumulate(iterable, operator.mul)
イテラブルを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
シーケンスを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
配列を累積したイテラブル	itertools.accumulate(iterable, operator.mul)
イテラブルとイテラブルを連結する	itertools.chain(iterable, iterable2)
列とシーケンスをチェインする	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続ける	itertools.chain(iterable, iterable2)
シーケンスにリストを続ける	itertools.chain(iterable, iterable2)
シーケンスに配列を続ける	itertools.chain(iterable, iterable2)
イテラブルにリストを続ける	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続けたイテラブル	itertools.chain(iterable, iterable2)
シーケンスに列を続けたイテラブルを得る	itertools.chain(iterable, iterable2)
列に列を続けた列を得る	itertools.chain(iterable, iterable2)
列にイテラブルを続けたイテラブル	itertools.chain(iterable, iterable2)
selectorsでマスクされたイテラブルの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
イテラブルの各要素に対して、predicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
列の各要素に対してpredicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
イテラブルの各要素に対して、predicateFuncがTrueであればその要素を出力する	itertools.takewhile(predicateFunc, iterable)
イテラブルの各要素に対してpredicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真になる列の要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真になるイテラブルの要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真とならないイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真とならない列の要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncを適用したときTrueとなるシーケンスの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncを適用したとき真となるイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真になる列の要素	itertools.dropwhile(predicateFunc, iterable)
イテラブルとイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
イテラブルと列をペアのリストにする	itertools.zip_longest(iterable, iterable2)
リストとイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
イテラブルとリストをペアのリストにする	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルをペアリングする	itertools.zip_longest(iterable, iterable2)
列とイテラブルをzipする	itertools.zip_longest(iterable, iterable2)
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルの直積	itertools.product(iterable, iterable2)
イテラブルとイテラブルの直積を求める	itertools.product(iterable, iterable2)
イテラブルと列のデカルト積	itertools.product(iterable, iterable2)
イテラブルを2回あわせた直積	itertools.product(iterable, repeat=2)
リストを2回あわせた直積を求める	itertools.product(iterable, repeat=2)
列を2回あわせたデカルト積	itertools.product(iterable, repeat=2)
イテラブルの全順列	itertools.permutations(iterable)
イテラブルの長さnの順列	itertools.permutations(iterable, n)
イテラブルの長さnの順列を得る	itertools.permutations(iterable, n)
列の長さnの順列	itertools.permutations(iterable, n)
イテラブルのコンビネーション	itertools.combinations(iterable, n)
シーケンスの組み合せ	itertools.combinations(iterable, n)
イテラブルの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
列の重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
イテラブルの重複コンビネーションを得る	itertools.combinations_with_replacement(iterable, n)
JSONを使う	import json
JSONを用いる	import json
JSON形式の文字列を辞書に変換する	json.loads(jsonString)
JSON形式の文字列をデータに変換する	json.loads(jsonString)
JSON形式の文字列を読み込む	json.loads(jsonString)
JSON形式のバイト列を辞書に変換する	json.loads(b.decode('unicode-escape'))
JSON形式のバイト列を辞書にする	json.loads(b.decode('unicode-escape'))
JSON形式の文字列をデータに変換する	json.loads(b.decode('unicode-escape'))
JSONファイルのファイル入力を辞書に変換する	json.load(fin)
JSONファイルのファイルを辞書にする	json.load(fin)
JSONファイルの入力を辞書に変換する	json.load(fin)
JSONファイルのfをデータに変換する	json.load(fin)
JSONフォーマットのfをデータに変換する	json.load(fin)
JSONファイルのファイル入力を読み込んで、dataとする	data = json.load(fin)
辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False)
辞書をJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False)
インデント付きで辞書を文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
マッピングをインデント付きで文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書を改行付きで文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
改行付きでタプルを文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
マッピングをJSON形式のインデント幅nの文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント幅nのJSONフォーマットの文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで、辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで、辞書をJSONフォーマットの文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nでタプルをJSONフォーマットの文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで辞書をJSONフォーマットの文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をソートしてJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書をソートしてJSONフォーマットの文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書を並べ直してJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書をJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
辞書をJSON形式で出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
タプルをJSON形式でファイルに保存する	json.dump(aDict, fout, ensure_ascii=False)
タプルをJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
空列	[]
空のリスト	[]
空のタプル	()
空の組	()
要素ひとつのタプル	(element,)
要素ひとつのタプルを作る	(element,)
bとn2から成るペア	(n, n2)
要素ひとつのりスト	[element]
n個の要素があるリスト	[element] * n
長さnのリスト	[0] * n
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
n×n2の二次元リスト	[[0] * n for _ in range(n2)]
n×n2の二次元リストを作る	[[0] * n for _ in range(n2)]
リストをタプルに変換する	tuple(aList)
リストを組に変換する	tuple(aList)
リストをイミュータブルにする	tuple(aList)
タプルをリストに変換する	list(aTuple)
タプルをミュータブルにする	list(aTuple)
リストの長さ	len(aList)
タプルの長さ	len(aTuple)
組の要素数を使う	len(aTuple)
組の長さ	len(aTuple)
リストが空か調べる	len(aList) == 0
リストが空かどうか	len(aList) == 0
リストが空でないか調べる	len(aList) != 0
リストとリストを連結する	aList + aList2
タプルとタプルを連結する	aTuple + aTuple2
リストをn倍する	aList * n
リストをn回、連結する	aList * n
リストをn回、結合する	aList * n
タプルをn倍する	aTuple * n
タプルをn回、連結する	aTuple * n
リストの先頭	aList[0]
リストの最初の要素を見る	aList[0]
タプルの先頭	aTuple[0]
組の先頭を使う	aTuple[0]
組の最初の要素を使う	aTuple[0]
リストの末尾	aList[-1]
リストの末尾を求める	aList[-1]
タプルの末尾	aTuple[-1]
組の最後	aTuple[-1]
リストのn番目の	aList[n]
リストのn番目のの要素	aList[n]
タプルのn番目の	aTuple[n]
リストの先頭を取り除く	aList[1:]
リストの先頭を除く	aList[1:]
タプルの先頭を取り除く	aTuple[1:]
タプルの最初を除く	aTuple[1:]
タプルの先頭を除く	aTuple[1:]
リストの先頭のn要素を取り除く	aList[n:]
リストの最初のn要素を取り除く	aList[n:]
リストのn番目以降の部分を取り出す	aList[n:]
リストのn番目以降の要素を取り出す	aList[n:]
タプルの先頭のn要素を取り除く	aTuple[n:]
タプルの先頭のn要素を捨てる	aTuple[n:]
タプルの最初のn要素を取り除く	aTuple[n:]
タプルのn番目以降の部分を取り出す	aTuple[n:]
組のn番目以降の部分を抽出する	aTuple[n:]
組のn番目以降の要素を得る	aTuple[n:]
リストの末尾を取り除く	aList[:-1]
リストの末尾を除く	aList[:-1]
リストの最後を除く	aList[:-1]
タプルの末尾を取り除く	aTuple[:-1]
組の最後を除く	aTuple[:-1]
組の末尾を捨てる	aTuple[:-1]
リストの末尾のn要素を取り除く	aList[:-n]
リストの最後のn要素を捨てる	aList[:-n]
リストの最後のn要素を除く	aList[:-n]
リストの末尾からn番目以前の部分を取り出す	aList[:-n]
リストの最後からn番目以前の要素を得る	aList[:-n]
タプルの末尾のn要素を取り除く	aTuple[:-n]
タプルの末尾のn要素を除く	aTuple[:-n]
組の末尾のn要素を除く	aTuple[:-n]
タプルの最後のn要素を取り除く	aTuple[:-n]
タプルの末尾からn番目以前の部分を取り出す	aTuple[:-n]
組の最後からn番目以前の部分を得る	aTuple[:-n]
リストの要素を逆順にする	aList[::-1]
リストを逆順にする	aList[::-1]
タプルの要素を逆順にする	aTuple[::-1]
タプルを逆順にする	aTuple[::-1]
リストをひとつ置きに取り出す	aList[::2]
タプルをひとつ置きに取り出す	aTuple[::2]
組をひとつ置きに得る	aTuple[::2]
リストのn番目からn2番目までの部分	aList[n:n2]
リストのn番目からn2番目までの部分を取り出す	aList[n:n2]
タプルのn番目からn2番目までの部分	aTuple[n:n2]
タプルのn番目からn2番目の部分を取り出す	aTuple[n:n2]
タプルのn番目からn2番目までを抽出する	aTuple[n:n2]
0からnまでのスライス	slice(n)
nからn2までのスライス	slice(n, n2)
nからn2までのstepごとによるスライス	slice(n, n2, step)
リストの合計値	sum(aList)
リストの合計値を求める	sum(aList)
タプルの合計値	sum(aTuple)
リストの中の最小値	min(aList)
リストの中の一番小さい値を算出する	min(aList)
リストの中の一番小さい値	min(aList)
タプルの中の最小値	min(aTuple)
組の中の最小値	min(aTuple)
組の中の最小値を求める	min(aTuple)
リストの中の最大値	max(aList)
タプルの中の最大値	max(aTuple)
タプルの中の最も大きい値	max(aTuple)
タプルの中の一番大きい値	max(aTuple)
リストの平均値	sum(aList)/len(aList)
タプルの平均値	sum(aTuple)/len(aTuple)
タプルの平均	sum(aTuple)/len(aTuple)
リストの長さだけ繰り返す	range(len(aList))
リストの要素数だけ繰り返す	range(len(aList))
n個の数値イテラブル	range(n)
n回の数値イテラブル	range(n)
0からnの範囲	range(n)
nからn2の範囲	range(n, n2)
n個の整数列	list(range(n))
0から始まるn個の整数列	list(range(n))
0からnまでの整数列	list(range(n+1))
0からnまでの整数列を作る	list(range(n+1))
1からnまでの整数列	list(range(1, n+1))
1からnまでの整数リスト	list(range(1, n+1))
nからn2までの整数列	list(range(n, n2+1))
nからn2までの整数列を求める	list(range(n, n2+1))
nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1, 2))
nからn2までのひとつ飛ばしの整数列を作る	list(range(n, n2+1, 2))
nからn2までの一つ置きの整数列	list(range(n, n2+1, 2))
nまでの偶整数列	list(range(2, n, 2))
nまでの奇整数列	list(range(1, n, 2))
リストに文字列を追加する	aList.append(element)
リストに要素を追加する	aList.append(element)
リストにリストを追加する	aList.extend(aList2)
リストにリストを展開する	aList.extend(aList2)
リストの最後にリストを展開する	aList.extend(aList2)
リストにリストを追加して拡張する	aList.extend(aList2)
リストにリストを追加し、広げる	aList.extend(aList2)
リストにリストを追加し、拡張する	aList.extend(aList2)
リストのn番目に文字列を挿入する	aList.insert(n, element)
リストの末尾から要素をポップする	aList.pop()
リストの最後から要素をポップする	aList.pop()
リストの末尾から値をポップする	aList.pop()
リストの末尾から要素を取り除く	aList.pop()
aListn番目から要素をポップする	aList.pop(n)
リストの全ての要素をクリアにする	aList.clear()
リストのすべての要素をクリアにする	aList.clear()
リストの全要素を空にする	aList.clear()
リストの全要素をクリアにする	aList.clear()
リストから文字列を取り除く	aList.remove(element)
リストからオブジェクトを除く	aList.remove(element)
リストからオブジェクトを捨てる	aList.remove(element)
リストのn番目の要素を削除する	del aList[n]
リストのn番目を削除する	del aList[n]
文字列がリストの要素か調べる	element in aList
オブジェクトがリストの要素かどうか確認する	element in aList
文字列はリストの要素か	element in aList
文字列がリストに含まれるか調べる	element in aList
文字列がリストに含まれるか	element in aList
文字列はリストに含まれるかどうか調べる	element in aList
オブジェクトがリストに含まれるか調べる	element in aList
文字列がタプルの要素か調べる	element in aTuple
オブジェクトはタプルの要素か	element in aTuple
文字列がタプルに含まれるか調べる	element in aTuple
オブジェクトが組に含まれる	element in aTuple
オブジェクトがタプルに含まれるか判定する	element in aTuple
文字列はタプルに含まれる	element in aTuple
文字列がリストの要素でないか調べる	element not in aList
オブジェクトがリストの要素でないかどうか調べる	element not in aList
オブジェクトがリストの要素でないか調べる	element not in aList
文字列がリストに含まれないか調べる	element not in aList
文字列はリストに含まれないか	element not in aList
文字列がリストに含まれない	element not in aList
文字列がタプルの要素でないか調べる	element not in aTuple
文字列はタプルの要素でない	element not in aTuple
文字列は組の要素でない	element not in aTuple
文字列がタプルの要素でないかどうか調べる	element not in aTuple
文字列がタプルに含まれないか調べる	element not in aTuple
文字列がタプルに含まれないかどうか調べる	element not in aTuple
オブジェクトがタプルに含まれないかどうか調べる	element not in aTuple
リストの文字列が最初に見つかるインデックス	aList.index(element)
リストの最初の文字列を探す	aList.index(element)
タプルの文字列が最初に見つかるインデックス	aTuple.index(element)
タプルの文字列が最初に見つかる位置	aTuple.index(element)
組のオブジェクトが最初に見つかる場所	aTuple.index(element)
タプルの文字列が最初に見つかる場所を使う	aTuple.index(element)
タプルの最初の文字列を探す	aTuple.index(element)
タプル中の最初の文字列を探す	aTuple.index(element)
リストの要素をソートする	sorted(aList)
リストの値をソートする	sorted(aList)
リストの要素を並べる	sorted(aList)
タプルの要素をソートする	sorted(aTuple)
タプルをソートする	sorted(aTuple)
タプルの値をソートする	sorted(aTuple)
組をソートする	sorted(aTuple)
リストの要素を昇順にソートする	sorted(aList, reverse=False)
リストの値を小さい順にソートする	sorted(aList, reverse=False)
リストの要素を小さい順に並べ直す	sorted(aList, reverse=False)
リストの要素を昇順に並べる	sorted(aList, reverse=False)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=False)
組の要素を昇順にソートする	sorted(aTuple, reverse=False)
小さい順にタプルをソートする	sorted(aTuple, reverse=False)
リストの要素を昇順にソートする	sorted(aList, reverse=True)
リストの要素を小さい方から並べる	sorted(aList, reverse=True)
リストを昇順に並べる	sorted(aList, reverse=True)
リストの値を小さい順に並べる	sorted(aList, reverse=True)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=True)
タプルの要素を昇順に並べる	sorted(aTuple, reverse=True)
組の要素を小さい順にソートする	sorted(aTuple, reverse=True)
昇順にタプルをソートする	sorted(aTuple, reverse=True)
リストの文字列の位置をエラーなく使う	aList.index(element) if element in aList else -1
リストの文字列の位置をエラーなく見る	aList.index(element) if element in aList else -1
エラーなくリストの文字列の位置を求める	aList.index(element) if element in aList else -1
リストの各要素を関数に適用した結果でソートする	sorted(aList, key=func)
リストの各値を関数に適用した結果で並べる	sorted(aList, key=func)
タプルの各要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
組の要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
リストを複製する	aList.copy()
リストを反転する	reversed(aList)
リストをリバースする	reversed(aList)
タプルを反転する	reversed(aTuple)
リスト内の要素が全て真か調べる	all(aList)
リストが全て真	all(aList)
リストが全て真か	all(aList)
リスト中の要素が全て真かどうか調べる	all(aList)
タプル内の要素が全て真か調べる	all(aTuple)
組内の要素が全て真かどうか調べる	all(aTuple)
タプル内の要素が全て真	all(aTuple)
タプルが全て真	all(aTuple)
リスト内の要素が少なくともひとつ真か調べる	any(aList)
リスト内の要素が少なくともひとつ真	any(aList)
リスト内の要素が少なくとも一つ真か確認する	any(aList)
リスト内の要素が少なくともひとつ真かどうかテストする	any(aList)
タプル内の要素が少なくともひとつ真か調べる	any(aTuple)
タプル内の要素が少なくともひとつ真かどうか	any(aTuple)
タプル内の要素が少なくともひとつ真かどうか調べる	any(aTuple)
組内の要素は少なくともひとつ真か	any(aTuple)
リストを引数として展開して表示する	print(*aList)
リストを引数として展開してプリントする	print(*aList)
タプルを引数として展開して表示する	print(*aTuple)
タプルを順に表示する	print(*aTuple)
組を引数として展開して表示する	print(*aTuple)
リストを引数として展開して表示する	print(*aList, sep=',')
リストをカンマ区切りで表示する	print(*aList, sep=',')
タプルを引数として展開して表示する	print(*aTuple, sep=',')
二次元リストをフラット化する	sum(aList)
２次元リストをフラット化する	sum(aList)
二次元タプルをフラット化する	sum(aTuple)
二次元タプルをflattenする	sum(aTuple)
リストをナンバリングする	enumerate(aList)
タプルをナンバリングする	enumerate(aTuple)
組を番号付けする	enumerate(aTuple)
リストをnからナンバリングする	enumerate(aList, start=n)
タプルをnからナンバリングする	enumerate(aTuple, start=n)
タプルをnから番号付けする	enumerate(aTuple, start=n)
組をnからナンバリングする	enumerate(aTuple, start=n)
イテラブルのそれぞれを関数でフィルタする	filter(func, iterable)
列を関数でフィルタする	filter(func, iterable)
イテラブルのそれぞれを関数でフィルタする	map(func, iterable)
リストを関数でフィルタする	map(func, iterable)
mathをインポートする	import math
mathモジュールをインポートする	import math
実数の平方根	math.sqrt(x)
ルートを求める	math.sqrt(x)
実数のルートを計算する	math.sqrt(x)
実数の平方根を求める	math.sqrt(x)
実数の天井	math.ceil(x)
天井を求める	math.ceil(x)
実数以上の最小の整数	math.ceil(x)
実数を切り上げて整数に変換する	math.ceil(x)
小数点数を切り上げて整数に変換する	math.ceil(x)
実数を切り上げる	math.ceil(x)
実数の床	math.floor(x)
小数点数の床	math.floor(x)
小数点数の床を算出する	math.floor(x)
小数点数の床を計算する	math.floor(x)
実数以下の最大の整数	math.floor(x)
小数点数以下の最大の整数を求める	math.floor(x)
実数を切り下げて整数に変換する	math.floor(x)
実数を切り下げる	math.floor(x)
自然数の最大公約数	math.gcd(n, n2)
整数の最大公約数	math.gcd(n, n2)
自然数の最大公約数を算出する	math.gcd(n, n2)
自然数最小公倍数	math.lcm(n, n2)
整数最小公倍数	math.lcm(n, n2)
自然数LCM	math.lcm(n, n2)
自然数最小公倍数を求める	math.lcm(n, n2)
三自然数の最大公約数	math.gcd(n, n2, n3)
３自然数の最大公約数を計算する	math.gcd(n, n2, n3)
三自然数の最大公約数を求める	math.gcd(n, n2, n3)
3自然数の最大公約数を求める	math.gcd(n, n2, n3)
三自然数の最小公倍数	math.lcm(n, n2, n3)
３自然数の最小公倍数	math.lcm(n, n2, n3)
nとkのコンビネーション	math.comb(n, k)
nとkのnCk	math.comb(n, k)
nとkのコンビネーションを計算する	math.comb(n, k)
n個の集まりからk個重複なく選ぶ方法	math.comb(n, k)
n個の集まりからk個重複なく選ぶ方法を求める	math.comb(n, k)
異なるn個のものからk個選ぶ場合の数	math.comb(n, k)
数値の符号を同じにする	math.copysign(x, x2)
数値の符号をコピーにする	math.copysign(x, x2)
実数の絶対値	math.fabs(x)
小数点数の絶対値を算出する	math.fabs(x)
自然数の階乗	math.factorial(n)
実数の仮数	math.frexp(x)[0]
実数の仮数を求める	math.frexp(x)[0]
実数の指数	math.frexp(x)[1]
実数の指数部	math.frexp(x)[1]
二つの浮動小数点数が十分に近いか調べる	math.isclose(x, x2)
２つの浮動小数点数は近似値か調べる	math.isclose(x, x2)
２つの浮動小数点数が十分に近いか調べる	math.isclose(x, x2)
２つの浮動小数点数が十分に近いか確認する	math.isclose(x, x2)
実数が有限か調べる	math.isfinite(x)
実数が有限か確認する	math.isfinite(x)
実数が無限大か調べる	math.isinf(x)
実数が無限大か	math.isinf(x)
実数は無限大か	math.isinf(x)
実数は無限大	math.isinf(x)
実数がNaNか調べる	math.isnan(x)
実数がNaNかどうか調べる	math.isnan(x)
実数がNaN	math.isnan(x)
実数の小数部	math.modf(x)[0]
実数の整数部	math.modf(x)[1]
実数の整数部を求める	math.modf(x)[1]
自然数の順列の総数	math.perm(n)
自然数個からk個取り出したときの順列の総数	math.perm(n, k)
自然数個からk個取り出したときの並べ方の総数	math.perm(n, k)
自然数個のものからk個取り出したときの並べ方の総数	math.perm(n, k)
整数個のものからk個取り出したときの並べ方の総数	math.perm(n, k)
整数個のものからk個取り出したときの並べ方を求める	math.perm(n, k)
実数を実数で割った剰余	math.remainder(x, x2)
実数を実数で割った剰余を求める	math.remainder(x, x2)
eの実数乗	math.exp(x)
eの乗数	math.exp(x)
実数の自然対数	math.log(x)
自然対数	math.log(x)
kを底とする実数の対数	math.log(x, k)
小数点数のkを底とする対数	math.log(x, k)
浮動小数点数のkを底とする対数	math.log(x, k)
kを底とする対数	math.log(x, k)
実数のk進対数	math.log(x, k)
k進対数	math.log(x, k)
実数の二進対数	math.log2(x)
浮動小数点数のバイナリ対数	math.log2(x)
実数のバイナリ対数	math.log2(x)
2を底とする実数の対数	math.log2(x)
2を底とする実数の対数を求める	math.log2(x)
実数の常用対数	math.log10(x)
小数点数の常用対数を求める	math.log10(x)
実数の常用対数を求める	math.log10(x)
10を底とする実数の対数	math.log10(x)
10を底とする実数の対数を算出する	math.log10(x)
実数の余弦	math.cos(x)
実数のcos	math.cos(x)
余弦	math.cos(x)
実数の正弦	math.sin(x)
実数の正弦を求める	math.sin(x)
正弦	math.sin(x)
実数の正接	math.tan(x)
tan	math.tan(x)
小数点数の正接を計算する	math.tan(x)
小数点数の正接を算出する	math.tan(x)
実数の逆余弦	math.acos(x)
実数の逆余弦を求める	math.acos(x)
逆余弦を計算する	math.acos(x)
実数の余弦の逆数	math.acos(x)
実数のコサインの逆数	math.acos(x)
浮動小数点数の余弦の逆数	math.acos(x)
実数の逆正弦	math.asin(x)
実数のアークサイン	math.asin(x)
実数の正弦の逆数	math.asin(x)
小数点数の正弦の逆数を計算する	math.asin(x)
小数点数の正弦の逆数を求める	math.asin(x)
実数の逆正接	math.atan(x)
逆正接を求める	math.atan(x)
小数点数の逆正接を算出する	math.atan(x)
実数の正接の逆数	math.atan(x)
実数のタンジェントの逆数を求める	math.atan(x)
ラジアンの角度	math.degrees(x)
実数の角度	math.degrees(x)
角度のラジアン	math.radians(degree)
角度のラジアンを算出する	math.radians(degree)
実数の逆双曲線余弦	math.acosh(x)
小数点数の逆双曲線余弦を求める	math.acosh(x)
実数の逆双曲線余弦を求める	math.acosh(x)
実数の双曲線余弦の逆数	math.acosh(x)
実数のハイパボリック・コサインの逆数	math.acosh(x)
実数の逆双曲線正弦	math.asinh(x)
小数点数の逆双曲線正弦	math.asinh(x)
実数の逆双曲線正弦を計算する	math.asinh(x)
実数の双曲線正弦の逆数	math.asinh(x)
実数の双曲線正弦の逆数を求める	math.asinh(x)
ハイパボリック・サインの逆数	math.asinh(x)
実数の逆双曲線正接	math.atanh(x)
実数の双曲線正接の逆数	math.atanh(x)
小数点数のハイパボリック・タンジェントの逆数を計算する	math.atanh(x)
実数の双曲線余弦	math.cosh(x)
実数のハイパボリック・コサインを計算する	math.cosh(x)
実数のハイパボリック・コサインを求める	math.cosh(x)
浮動小数点数の双曲線余弦を計算する	math.cosh(x)
実数の双曲線正弦	math.sinh(x)
浮動小数点数の双曲線正弦	math.sinh(x)
実数のハイパボリック・サイン	math.sinh(x)
実数の双曲線正弦を求める	math.sinh(x)
実数の双曲線正接	math.tanh(x)
二点間のユークリッド距離	math.dist(point, point2)
ユークリッド距離	math.dist(point, point2)
実数とyの斜辺	math.hypot(x, y)
原点から(実数,y)の距離	math.hypot(x, y)
原点から(実数,y)の距離を求める	math.hypot(x, y)
ガンマ関数	math.gamma(x)
ガンマ関数を使用する	math.gamma(x)
ガンマ関数の値	math.gamma(x)
ガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
円周率	math.pi
ネイピア数	math.e
無限大	math.inf
無限大を使用する	math.inf
NaN	math.nan
NaNを使用する	math.nan
グラフを描画する準備をする	from sympy import N
プロットを描く準備をする	from sympy import N
プロットをプロットする	from sympy import N
グラフを使う準備をする	from sympy import N
綺麗なグラフを描画する準備をする	import seaborn as sns
綺麗なグラフを使う準備をする	import seaborn as sns
見やすいグラフを用いる準備をする	import seaborn as sns
綺麗なプロットを使う準備をする	import seaborn as sns
見やすいプロットを使う	import seaborn as sns
グラフの見栄えを綺麗にする	import seaborn as sns
グラフを綺麗にする	import seaborn as sns
グラフの描画を見やすくする	import seaborn as sns
プロットを見やすくする	import seaborn as sns
グラフの見栄えを良くする	import seaborn as sns
プロットの見栄えを良くする	import seaborn as sns
seabornのデフォルトを適用する	sns.set()
seabornのデフォルトスタイルを適用する	sns.set()
デフォルトを適用する	sns.set()
グラフの見栄えをデフォルトでいい感じに設定する	sns.set()
デフォルトでグラフをいい感じに設定する	sns.set()
グラフの見栄えをデフォルトでイイ感じに設定する	sns.set()
プロットの見た目をデフォルトでいい感じに設定する	sns.set()
グラフの用途を論文に設定する	sns.set(context='paper')
論文にグラフを変更する	sns.set(context='paper')
グラフの目的を論文に指定する	sns.set(context='paper')
グラフを論文用に設定する	sns.set(context='paper')
グラフの用途を画面に設定する	sns.set(context='notebook')
グラフを画面に設定する	sns.set(context='notebook')
画面にプロットの用途を設定する	sns.set(context='notebook')
グラフを画面用に設定する	sns.set(context='notebook')
グラフの用途をスライドに設定する	sns.set(context='talk')
グラフの用途をスライドに変更する	sns.set(context='talk')
グラフの目的をスライドに指定する	sns.set(context='talk')
グラフをスライド用に設定する	sns.set(context='talk')
プレゼン用にグラフを設定する	sns.set(context='talk')
グラフの用途をポスターに設定する	sns.set(context='poster')
ポスターにグラフの用途を指定する	sns.set(context='poster')
ポスターにプロットの用途を設定する	sns.set(context='poster')
プロットの用途をポスターに設定する	sns.set(context='poster')
グラフをポスター用に設定する	sns.set(context='poster')
グラフの色を濃くする	sns.set(pallete='deep')
グラフの色を全般的に濃くする	sns.set(pallete='deep')
プロットの色を濃くする	sns.set(pallete='deep')
グラフを濃くする	sns.set(pallete='deep')
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
プロットのカラーパレットを全般的に濃くする	sns.set(pallete='deep')
カラーパレットを濃くする	sns.set(pallete='deep')
グラフの色を淡くする	sns.set(pallete='muted')
グラフを全般的に淡くする	sns.set(pallete='muted')
プロットの色使いを淡くする	sns.set(pallete='muted')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
グラフの色テーマを淡くする	sns.set(pallete='muted')
プロットの色テーマを淡くする	sns.set(pallete='muted')
グラフの色をパステル調にする	sns.set(pallete='pastel')
グラフをパステル調にする	sns.set(pallete='pastel')
グラフのカラーパレットをパステル調にする	sns.set(pallete='pastel')
グラフの色テーマをパステル調にする	sns.set(pallete='pastel')
グラフのパレットを全般的にパステル調にする	sns.set(pallete='pastel')
グラフの色を暗くする	sns.set(pallete='dark')
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
色を全般的に暗くする	sns.set(pallete='dark')
グラフの色テーマを暗くする	sns.set(pallete='dark')
グラフの色を明るくする	sns.set(pallete='bright')
プロットを明るくする	sns.set(pallete='bright')
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
グラフの色を全般的に明るくする	sns.set(pallete='bright')
グラフの色を色差別なくする	sns.set(pallete='colorblind')
グラフのカラーパレットを全般的に色差別なくする	sns.set(pallete='colorblind')
グラフの色を全般的に色差別なくする	sns.set(pallete='colorblind')
グラフを色差別なくする	sns.set(pallete='colorblind')
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
プロットの全般的に色を色差別なくする	sns.set(pallete='colorblind')
プロットのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
グラフの全般的にカラーパレットを色差別なくする	sns.set(pallete='colorblind')
グラフの描画で濃いカラーパレットを使う	sns.set(pallete='deep')
グラフの描画で濃いカラーパレットを用いる	sns.set(pallete='deep')
プロットの描画で濃い色を使う	sns.set(pallete='deep')
濃いカラーパレットをグラフの描画で使う	sns.set(pallete='deep')
グラフの描画で淡いカラーパレットを使う	sns.set(pallete='muted')
グラフの描画で淡いカラーパレットを用いる	sns.set(pallete='muted')
淡いカラーパレットをグラフの描画で使う	sns.set(pallete='muted')
淡いパレットをプロットの描画で用いる	sns.set(pallete='muted')
グラフの描画でパステル調のカラーパレットを使う	sns.set(pallete='pastel')
グラフの描画でパステル調の色テーマを使う	sns.set(pallete='pastel')
プロットの描画でパステル調のカラーパレットを使う	sns.set(pallete='pastel')
グラフの描画で暗いカラーパレットを使う	sns.set(pallete='dark')
グラフの描画で暗い色を使う	sns.set(pallete='dark')
暗いカラーパレットをグラフの描画で使う	sns.set(pallete='dark')
プロットの描画で暗いカラーパレットを使う	sns.set(pallete='dark')
グラフの描画で明るいカラーパレットを使う	sns.set(pallete='bright')
プロットの描画で明るい色を使う	sns.set(pallete='bright')
明るいカラーパレットをグラフの描画で使う	sns.set(pallete='bright')
グラフの描画で色差別ないカラーパレットを使う	sns.set(pallete='colorblind')
色差別ないパレットをグラフの描画で用いる	sns.set(pallete='colorblind')
グラフの描画で色差別ない色を使う	sns.set(pallete='colorblind')
グラフのカラーパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
プロットのパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
プロットのカラーパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
グラフのカラーパレットをpalleteNameに設定する	sns.set(pallete=palleteName)
グラフのカラーパレットをpalleteNameに指定する	sns.set(pallete=palleteName)
グラフで用いるカラーパレットをpalleteNameに設定する	sns.set(pallete=palleteName)
グラフで使う色をpalleteNameに変更する	sns.set(pallete=palleteName)
グラフで使うフォントをfontNameに指定する	sns.set(font=fontName)
グラフの中のフォントをfontNameに設定する	sns.set(font=fontName)
グラフの中のフォントをfontNameに変更する	sns.set(font=fontName)
グラフで日本語を表示できるようにする	sns.set(font='IPAexGothic')
グラフで日本語を表示可能なようにする	sns.set(font='IPAexGothic')
日本語をグラフで表示できるようにする	sns.set(font='IPAexGothic')
日本語フォントをプロットで使えるようにする	sns.set(font='IPAexGothic')
グラフの中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
グラフの中の日本語表示を利用可能にする	sns.set(font='IPAexGothic')
グラフのフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
プロットのフォントを日本語表示に指定する	sns.set(font='IPAexGothic')
グラフのフォントを日本語に指定する	sns.set(font='IPAexGothic')
グラフの文字化けを防ぐ	sns.set(font='IPAexGothic')
文字化けを防ぐ	sns.set(font='IPAexGothic')
グラフの背景色を暗くする	sns.set(style='darkgrid')
グラフのグリッドを暗くする	sns.set(style='darkgrid')
グラフの背景色を暗くする	sns.set(style='darkgrid')
グラフのグリッドを暗くする	sns.set(style='darkgrid')
グラフの背景色を白くする	sns.set(style='whitegrid')
グラフのタイトルをuntitledに設定する	plt.title(untitled)
グラフで使うタイトルをuntitledに設定する	plt.title(untitled)
グラフのタイトルを設定する	plt.title(untitled)
グラフのサイズを横width縦heightに設定する	plt.figure(figsize=(width, height))
グラフのサイズを設定する	plt.figure(figsize=(width, height))
プロットの大きさを設定する	plt.figure(figsize=(width, height))
グラフのサイズを変更する	plt.figure(figsize=(width, height))
グラフの横軸のラベルをuntitledに設定する	plt.xlabel(untitled)
グラフの横軸のラベルをuntitledに変更する	plt.xlabel(untitled)
グラフのx座標の軸ラベルをuntitledにする	plt.xlabel(untitled)
プロットのx軸の軸ラベルをuntitledに設定する	plt.xlabel(untitled)
グラフの横軸にuntitledというラベルを付ける	plt.xlabel(untitled)
グラフの横軸にuntitledという名前をつける	plt.xlabel(untitled)
グラフの横軸にラベルをつける	plt.xlabel(untitled)
横軸に説明を付ける	plt.xlabel(untitled)
グラフの中の縦軸のラベルをuntitledに設定する	plt.ylabel(untitled)
グラフで用いるy軸のラベルをuntitledに設定する	plt.ylabel(untitled)
グラフの中の縦軸の軸ラベルをuntitledに設定する	plt.ylabel(untitled)
グラフの中の縦軸にuntitledというラベルを付ける	plt.ylabel(untitled)
グラフの中のy軸にラベルを付ける	plt.ylabel(untitled)
グラフの中の縦軸に名前をつける	plt.ylabel(untitled)
グラフで使用する縦軸にuntitledという名前を付ける	plt.ylabel(untitled)
グラフにグリッド線を入れる	plt.grid(True)
グラフにグリッド線を描画する	plt.grid(True)
グラフに目盛り線を付ける	plt.grid(True)
グリッド線をグラフに入れる	plt.grid(True)
グラフに凡例を入れる	plt.legend()
グラフに凡例を描画する	plt.legend()
グラフに凡例を文字列と文字列と入れる	plt.legend([s, s2])
プロットに凡例を文字列と文字列と入れる	plt.legend([s, s2])
凡例をプロットに文字列と文字列と表示する	plt.legend([s, s2])
データラベルを文字列と文字列と入れる	plt.legend([s, s2])
グラフの凡例の位置を指定する	plt.legend(loc=(x, y))
プロットの補足の位置を指定する	plt.legend(loc=(x, y))
グラフのデータラベルの位置を指定する	plt.legend(loc=(x, y))
グラフの凡例の位置を(x,y)に設定する	plt.legend(loc=(x, y))
グラフのデータラベルの場所を(x,y)に設定する	plt.legend(loc=(x, y))
プロットのデータラベルの場所を(x,y)に設定する	plt.legend(loc=(x, y))
グラフ中の(x,y)の位置に凡例を入れる	plt.legend(loc=(x, y))
凡例をグラフ中の(x,y)の位置に入れる	plt.legend(loc=(x, y))
グラフ中の(x,y)の場所にデータラベルを描画する	plt.legend(loc=(x, y))
最適な位置に凡例を入れる	plt.legend(loc='best')
グラフの中に枠なしの凡例を入れる	plt.legend(frameon=False)
枠なしのデータラベルをグラフの中に描画する	plt.legend(frameon=False)
枠なしのデータラベルをグラフの中に加える	plt.legend(frameon=False)
プロットの中に枠なしの凡例を描画する	plt.legend(frameon=False)
折れ線グラフを描画する	plt.plot(xdata, ydata)
リストとリストの折れ線グラフを描画する	plt.plot(xdata, ydata)
配列とリストの折れ線グラフをプロットする	plt.plot(xdata, ydata)
リストと配列の折れ線グラフを描画する	plt.plot(xdata, ydata)
リストとリストを折れ線グラフで描画する	plt.plot(xdata, ydata)
リストとリストを折れ線で描く	plt.plot(xdata, ydata)
リストと配列を折れ線で描く	plt.plot(xdata, ydata)
イテラブルと配列を折れ線グラフで描画する	plt.plot(xdata, ydata)
リストを縦軸、リストを横軸と指定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
リストをy座標、リストをx軸と指定して、折れ線グラフをプロットする	plt.plot(xdata, ydata)
配列を縦軸、イテラブルを横軸と指定して、折れ線を描画する	plt.plot(xdata, ydata)
リストをy軸、リストを横軸と設定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
リストの変化を折れ線グラフで描画する	plt.plot(range(len(xdata)), xdata)
イテラブルの推移を折れ線グラフにプロットする	plt.plot(range(len(xdata)), xdata)
リストの変化を折れ線に描画する	plt.plot(range(len(xdata)), xdata)
リストを横軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
リストを横軸と指定して、折れ線グラフを描く	plt.plot(range(len(xdata)), xdata)
データ列を横軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
リストをx軸と指定して、折れ線グラフをプロットする	plt.plot(range(len(xdata)), xdata)
データフレームのカラムとカラムを折れ線グラフで描画する	plt.plot(df[col], df[col2])
データフレームのカラムとカラムを折れ線グラフを使って描画する	plt.plot(df[col], df[col2])
データフレームのカラムとカラムを折れ線グラフとして描画する	plt.plot(df[col], df[col2])
透明度alphaの折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=alpha)
アルファalphaの折れ線を描く	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaの折れ線グラフをプロットする	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaの折れ線をプロットする	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフの透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフのアルファをalphaに変更する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを透明度alphaで描画する	plt.plot(xdata, ydata, alpha=alpha)
リストとデータ列の折れ線グラフを透明度alphaでプロットする	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaでリストとリストの折れ線を描画する	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaでデータ列と配列の折れ線を描画する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを描画して、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
イテラブルとリストの折れ線グラフをプロットして、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
リストと配列の折れ線を描画し、、アルファをalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
イテラブルとリストの折れ線グラフをプロットして、透明度をalphaに変更する	plt.plot(xdata, ydata, alpha=alpha)
グラフで使える色名の一覧	matplotlib.colors.cnames
グラフで利用可能な色名の一覧	matplotlib.colors.cnames
折れ線グラフの色を文字列に設定する	plt.plot(xdata, ydata, color=s)
折れ線の色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
リストとイテラブルの折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
配列とリストの折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
文字列の色で配列とデータ列の折れ線グラフをプロットする	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描画して、色を文字列に設定する	plt.plot(xdata, ydata, color=s)
配列とイテラブルの折れ線グラフを描画し、、色を文字列に指定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描画し、、色を文字列に変更する	plt.plot(xdata, ydata, color=s)
リストとイテラブルの折れ線グラフを描画して色を文字列に設定する	plt.plot(xdata, ydata, color=s)
折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
折れ線グラフの色をカラーコードに指定する	plt.plot(xdata, ydata, color=rgb)
折れ線の色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフをカラーコードで描画する	plt.plot(xdata, ydata, color=rgb)
カラーコードで数列とリストの折れ線グラフを描く	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線をカラーコードで描画する	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフを描画して、その色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
リストとリストについての折れ線グラフを描いて、その色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
データ列とリストの折れ線グラフを描画してその色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
データ列と配列の折れ線グラフを描画し、、色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
破線グラフの色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
破線グラフの色を濃いにセットする	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストについて破線グラフを描画して、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストと配列の破線グラフを描画して、色を濃いにする	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストと配列について破線グラフを描画し、色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
数列とリストについて破線グラフを描画し、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
破線グラフの色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
破線グラフの色を淡いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとリストについて破線グラフを描画して、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
数列とリストについて破線グラフを描画して、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストと配列の破線グラフを描画し、、その色を淡いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとイテラブルの破線グラフを描画して、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
破線グラフの色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとリストについて破線グラフを描画して、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
データ列とリストの破線グラフを描画し、、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
データ列と数列について破線グラフを描画し、色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとデータ列について破線グラフを描画して、その色をパステル調のにセットする	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
破線グラフの色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
破線グラフの色を暗いに指定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストについて破線グラフを描画して、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストの破線グラフをプロットして、色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
データ列とリストの破線グラフを描画し、、色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
破線グラフの色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
破線グラフの色を明るいに変更する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
破線グラフの色を明るいに指定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフを描画して、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストと数列の破線を描画して、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
データ列とイテラブルについて破線グラフをプロットし、、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
配列とイテラブルの破線を描画して、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
破線グラフの色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
破線グラフの色を色差別ないにセットする	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストとリストについて破線グラフを描画して、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストとイテラブルの破線グラフを描画してその色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
配列とリストについて破線グラフをプロットして、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストとリストについて破線グラフを描画してその色を色差別ないに変更する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線グラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線グラフを描画し、、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線グラフをプロットして、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストとリストについて濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストと数列について濃い色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストと配列について濃い色の折れ線グラフをプロットして、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deep')
データ列と配列について濃い色の折れ線グラフをプロットして、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deep')
淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画し、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画し、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストとリストについて淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
配列とリストについて淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストとリストについて淡い色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
配列とリストについて淡い色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
パステル調の色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
パステル調の色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='pastel')
パステル調の色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとリストについてパステル調の色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとリストについてパステル調の色の折れ線を描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストと配列についてパステル調の色の折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとリストについてパステル調の色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとリストについて暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとデータ列について暗い色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストと配列について暗い色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとイテラブルについて暗い色の折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストとリストについて明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
データ列とリストについて明るい色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='bright')
配列とリストについて明るい色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストとイテラブルについて明るい色の折れ線グラフを描いて、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='bright')
色差別ない色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線グラフを描いて、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストとリストについて色差別ない色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストと数列について色差別ない色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストと配列について色差別ない色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
散布図に濃い色のマーカーを使う	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deep')
散布図を濃い色のマーカーとして描画する	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='deep')
リストとリストについての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
リストとリストについての散布図を濃い色で描く	plt.plot(xdata, ydata, c='deep')
配列とデータ列についての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
リストとリストについて散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
リストとリストの散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
配列とリストの散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
リストと配列について散布図を描いてマーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
散布図に淡い色のマーカーを使う	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='muted')
淡い色として散布図を描く	plt.plot(xdata, ydata, c='muted')
散布図を淡い色のマーカーで描画する	plt.plot(xdata, ydata, c='muted')
淡い色を用いて散布図を描く	plt.plot(xdata, ydata, c='muted')
リストとリストについての散布図を淡い色で描画する	plt.plot(xdata, ydata, c='muted')
淡い色でリストとリストについての散布図を描画する	plt.plot(xdata, ydata, c='muted')
リストと配列についての散布図を淡い色を用いて描画する	plt.plot(xdata, ydata, c='muted')
配列とイテラブルについての散布図を淡い色で描画する	plt.plot(xdata, ydata, c='muted')
リストとリストについて散布図を描画して、マーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
イテラブルとリストについて散布図を描画して色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
リストと配列について散布図を描いてマーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
配列とリストについて散布図を描いて、マーカーの色を淡いに変更する	plt.plot(xdata, ydata, c='muted')
散布図にパステル調の色のマーカーを使う	plt.plot(xdata, ydata, c='pastel')
散布図にパステル調の色のマーカーを用いる	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='pastel')
リストとリストについての散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色でリストと配列についての散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色としてリストとリストについての散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色を使ってリストとリストの散布図を描く	plt.plot(xdata, ydata, c='pastel')
リストとリストについて散布図を描画して、マーカーの色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
リストとリストについて散布図を描画して色をパステル調のにセットする	plt.plot(xdata, ydata, c='pastel')
リストと数列の散布図を描画して、色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
配列とリストについて散布図を描画して、マーカーの色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
散布図に暗い色のマーカーを使う	plt.plot(xdata, ydata, c='dark')
散布図に暗い色のマーカーを使用する	plt.plot(xdata, ydata, c='dark')
暗い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dark')
散布図を暗い色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='dark')
リストとリストについての散布図を暗い色で描画する	plt.plot(xdata, ydata, c='dark')
暗い色でリストと配列についての散布図をプロットする	plt.plot(xdata, ydata, c='dark')
データ列とリストについての散布図を暗い色で描画する	plt.plot(xdata, ydata, c='dark')
リストとデータ列についての散布図を暗い色としてプロットする	plt.plot(xdata, ydata, c='dark')
リストとリストについて散布図を描画して、マーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
配列とデータ列の散布図を描いて、マーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
配列とリストについて散布図を描いて、マーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
リストとデータ列について散布図を描画して、マーカーの色を暗いにセットする	plt.plot(xdata, ydata, c='dark')
散布図に明るい色のマーカーを使う	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='bright')
リストとリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
配列とリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
データ列とリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
明るい色を使ってリストとリストについての散布図を描画する	plt.plot(xdata, ydata, c='bright')
リストとリストについて散布図を描画して、マーカーの色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
リストとデータ列について散布図を描画して、色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
イテラブルとリストについて散布図を描いて、色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
配列とリストについて散布図を描画して、マーカーの色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
散布図に色差別ない色のマーカーを使う	plt.plot(xdata, ydata, c='colorblind')
散布図に色差別ない色のマーカーを使用する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色として散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
リストとリストについての散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
イテラブルと数列についての散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
リストとリストについての散布図を色差別ない色で描く	plt.plot(xdata, ydata, c='colorblind')
リストとデータ列についての散布図を色差別ない色でプロットする	plt.plot(xdata, ydata, c='colorblind')
リストとリストについて散布図を描画して、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
データ列とリストの散布図を描き、、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
リストと配列の散布図を描いて、マーカーの色を色差別ないに変更する	plt.plot(xdata, ydata, c='colorblind')
リストと数列の散布図を描画して、マーカーの色を色差別ないに変更する	plt.plot(xdata, ydata, c='colorblind')
濃い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色を用いて散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストとリストについての散布図を濃い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
重なりを見やすく濃い色として数列とリストの散布図を描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストとリストの散布図を濃い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
配列とリストの散布図を濃い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
淡い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
散布図を重なりを見やすく淡い色のマーカーで描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
淡い色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
重なりを見やすく淡い色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='muted', alpha=0.5)
リストとリストについての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
データ列とリストについての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
数列と配列についての散布図を淡い色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
配列とリストについての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
パステル調の色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色のマーカーで重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
重なりを見やすくパステル調の色を使って散布図を描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストとリストについての散布図をパステル調の色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色で重なりを見やすくリストとリストの散布図を描く	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色で重なりを見やすくデータ列とイテラブルについての散布図を描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストとデータ列の散布図をパステル調の色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
暗い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色のマーカーを用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
重なりを見やすく散布図を暗い色のマーカーで描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
重なりを見やすく散布図を暗い色のマーカーとして描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
リストとリストについての散布図を暗い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
配列とリストについての散布図を暗い色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
重なりを見やすく暗い色でイテラブルとリストの散布図を描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
明るい色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リストとリストについての散布図を明るい色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
重なりを見やすく配列と数列についての散布図を明るい色で描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
重なりを見やすく明るい色で配列と数列についての散布図を描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
色差別ない色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
リストとリストについての散布図を色差別ない色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
配列と数列についての散布図を色差別ない色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色でリストとイテラブルについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
重なりを見やすくデータ列とリストについての散布図を色差別ない色でプロットする	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
濃い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='deep')
濃い色でリストについての柱状グラフを描画する	plt.hist(xdata, color='deep')
濃い色でリストについてのヒストグラムを描く	plt.hist(xdata, color='deep')
濃い色としてイテラブルについてのヒストグラムを描く	plt.hist(xdata, color='deep')
リストを濃い色のヒストグラムで描画する	plt.hist(xdata, color='deep')
リストを濃い色の柱状図を使って描画する	plt.hist(xdata, color='deep')
配列を濃い色のヒストグラムで描画する	plt.hist(xdata, color='deep')
リストを濃い色のヒストグラムとして描画する	plt.hist(xdata, color='deep')
淡い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
淡い色を用いてリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
淡いでリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
数列についてのヒストグラムを淡い色として描画する	plt.hist(xdata, color='muted')
リストを淡い色のヒストグラムで描画する	plt.hist(xdata, color='muted')
淡い色のヒストグラムでイテラブルを描画する	plt.hist(xdata, color='muted')
イテラブルを淡い色の柱状図でプロットする	plt.hist(xdata, color='muted')
淡い色のヒストグラムでリストを描画する	plt.hist(xdata, color='muted')
パステル調の色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='pastel')
パステル調の色としてリストについてのヒストグラムを描画する	plt.hist(xdata, color='pastel')
パステル調の色でデータ列についての柱状図を描画する	plt.hist(xdata, color='pastel')
リストについての柱状図をパステル調のとしてプロットする	plt.hist(xdata, color='pastel')
リストをパステル調の色のヒストグラムで描画する	plt.hist(xdata, color='pastel')
データ列をパステル調の色のヒストグラムで描画する	plt.hist(xdata, color='pastel')
配列をパステル調の色のヒストグラムで描画する	plt.hist(xdata, color='pastel')
リストをパステル調の色の柱状グラフで描く	plt.hist(xdata, color='pastel')
暗い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='dark')
データ列についてのヒストグラムを暗いで描画する	plt.hist(xdata, color='dark')
暗いでリストについてのヒストグラムを描画する	plt.hist(xdata, color='dark')
暗い色としてヒストグラムを描画する	plt.hist(xdata, color='dark')
リストを暗い色のヒストグラムで描画する	plt.hist(xdata, color='dark')
数列を暗い色の柱状図を用いて描画する	plt.hist(xdata, color='dark')
イテラブルを暗い色のヒストグラムを用いて描く	plt.hist(xdata, color='dark')
明るい色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='bright')
明るい色でリストについての柱状図をプロットする	plt.hist(xdata, color='bright')
明るい色を用いてリストについてのヒストグラムを描く	plt.hist(xdata, color='bright')
リストを明るい色のヒストグラムで描画する	plt.hist(xdata, color='bright')
リストを明るい色のヒストグラムを用いてプロットする	plt.hist(xdata, color='bright')
リストを明るい色のヒストグラムとして描画する	plt.hist(xdata, color='bright')
色差別ない色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='colorblind')
色差別ない色で配列についてのヒストグラムをプロットする	plt.hist(xdata, color='colorblind')
色差別ない色を用いてリストについてのヒストグラムを描画する	plt.hist(xdata, color='colorblind')
リストを色差別ない色のヒストグラムで描画する	plt.hist(xdata, color='colorblind')
リストを色差別ない色の柱状図で描画する	plt.hist(xdata, color='colorblind')
色差別ない色のヒストグラムを用いて数列を描画する	plt.hist(xdata, color='colorblind')
折れ線グラフにラベルを付ける	plt.plot(xdata, ydata, label=untitled)
折れ線にラベルを付ける	plt.plot(xdata, ydata, label=untitled)
折れ線グラフのラベルをuntitledに設定する	plt.plot(xdata, ydata, label=untitled)
折れ線グラフのラベルをuntitledに変更する	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
untitledとラベル付けしてデータ列とデータ列の折れ線を描画する	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフを描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストと数列の折れ線をプロットして、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフをプロットしてuntitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
＜オプション＞線幅をnに設定する	linewidth = n
＜オプション＞の線幅をnに設定する	linewidth = n
折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線を描く	plt.plot(xdata, ydata, linewidth=n)
リストとリストで折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
リストとリストで折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n)
データ列とリストを使って折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフをリストと配列で描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
濃いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いグラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いグラフをリストとリストで描画し、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
データ列とリストで濃いグラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストと配列で濃いグラフを描き、、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
淡いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
数列とリストで淡いの折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフを配列と配列で描いて線幅をnにセットする	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストと数列を用いて淡いの折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
パステル調のグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線の線幅を指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフをリストと配列を使ってプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
暗いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの線幅を指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
リストとリストを使って暗いグラフを描いてその線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いグラフをプロットしてその線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
数列とデータ列で暗いの折れ線グラフを描いて、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
明るいグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの折れ線の線幅を指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフの線幅をnにする	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフを描き、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
データ列とデータ列で明るいグラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストとリストで明るいグラフを描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
色差別ないグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないの折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないグラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストと配列として色差別ないを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
イテラブルとリストで色差別ないグラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
濃いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いの折れ線の色をカラーコードにセットする	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストのカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
配列とリストのカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストと数列のカラーコードの濃いを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストについてカラーコードの濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストとして濃いの折れ線をプロットし、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いグラフを配列とリストとしてプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
淡いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いグラフの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストのカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストについてカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストのカラーコードの淡いを描く	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いグラフをデータ列とリストでプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストで淡いグラフを描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いグラフをリストとリストで描画し、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
パステル調のグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のグラフの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストのカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストと配列についてカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストについてカラーコードのパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストでパステル調のの折れ線グラフを描き、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
データ列とイテラブルでパステル調のグラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストでパステル調のグラフを描いて、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
暗いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いグラフの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストのカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
数列とリストについてカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストのカラーコードの暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
イテラブルとリストについてカラーコードの暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
配列と配列を用いて暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いグラフをリストと数列で描画し、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
明るいグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいグラフの色をカラーコードに変更する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストとリストのカラーコードの明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
配列とデータ列のカラーコードの明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
配列と配列のカラーコードの明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいグラフをリストとリストで描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線グラフを数列とイテラブルで描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
色差別ないグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないの折れ線の色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストのカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストと配列のカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
配列と配列のカラーコードの色差別ないグラフをプロットする	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストと数列として色差別ないの折れ線をプロットして、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないグラフを描画し、、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
数列と配列として色差別ないグラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
赤い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い濃いの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤色の濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いグラフの色を赤色に設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いグラフをリストとリストで描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの折れ線グラフをリストとリストで描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
イテラブルとリストで濃いの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤い淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとイテラブルで淡いグラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとデータ列で淡いグラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとリストで淡いの折れ線グラフを描き、、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤いパステル調のを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤いパステル調のグラフをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフの色を赤くする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストとイテラブルを使ってパステル調のグラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のの折れ線グラフをリストとリストで描き、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストと配列としてパステル調のグラフをプロットして、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い暗いの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストと数列として暗いグラフを描いて、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストとリストとして暗いの折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', color='r')
数列と数列として暗いグラフをプロットし、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤い明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='bright', color='r')
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいを配列とリストでプロットし、、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいの折れ線グラフをプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤い色差別ないをプロットする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないの折れ線の色を赤にする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
データ列とリストとして色差別ないグラフを描き、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないを配列とリストで描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないの折れ線グラフをリストと数列として描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
青色の濃いを描く	plt.plot(xdata, ydata, linestyle='deep', color='b')
濃いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
濃いグラフの色を青色に指定する	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの青い濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストと数列の青い濃いを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとデータ列の青色の濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの濃いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
数列とリストの濃いを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストと配列の濃いグラフを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
配列とリストの濃いグラフを描画してその色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
青色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
青い淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='b')
淡いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
イテラブルとリストの青色の淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストと配列の青色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの淡いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとイテラブルについて淡いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
数列と数列の淡いグラフを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの淡いを描画して、その色を青色に変更する	plt.plot(xdata, ydata, linestyle='muted', color='b')
青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青いパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のグラフの色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のグラフの色を青色に設定する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のグラフの色を青色に変更する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストの青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
配列とデータ列について青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストと配列の青いパステル調のを描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストについて青いパステル調のをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストのパステル調のグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストのパステル調のをプロットして、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
配列とリストのパステル調のを描画して、その色を青くする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
配列とリストについてパステル調のグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
青色の暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
暗いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
配列と配列の青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストと配列について青色の暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの暗いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストと配列について暗いグラフを描画してその色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
データ列とリストの暗いグラフをプロットして、その色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
青色の明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいグラフの色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいの色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
データ列と配列について青い明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
イテラブルと数列について青い明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとイテラブルについて青い明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいグラフを描き、色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいグラフを描いて、色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいをプロットして、その色を青色に設定する	plt.plot(xdata, ydata, linestyle='bright', color='b')
青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
青い色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
色差別ないグラフの色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの青い色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
データ列と数列の青い色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの色差別ないグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
データ列とリストの色差別ないグラフを描画し、、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
数列とデータ列の色差別ないグラフを描画し、その色を青くする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列とデータ列の色差別ないを描画して、その色を青くする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
濃いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
濃いの色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとデータ列の黒い濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='k')
データ列とイテラブルの黒色の濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
データ列と配列について黒色の濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの濃いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
数列とリストの濃いグラフをプロットして、その色を黒くする	plt.plot(xdata, ydata, linestyle='deep', color='k')
配列と配列の濃いを描き、、その色を黒色に設定する	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストと配列の濃いを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='deep', color='k')
黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いの色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒色に設定する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストについて黒い淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='k')
配列とリストの黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストと配列の黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの淡いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ列とリストの淡いグラフを描画してその色を黒色に設定する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ列とデータ列について淡いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
配列とリストの淡いグラフを描画して、色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
黒色のパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
黒色のパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
パステル調のグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
パステル調のの色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストの黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとデータ列の黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストと数列について黒いパステル調のグラフをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストのパステル調のグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとイテラブルのパステル調のグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストについてパステル調のグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストと数列についてパステル調のグラフを描画してその色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='k')
暗いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とイテラブルについて黒色の暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とリストについて黒い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの暗いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストについて暗いグラフを描画し、色を黒くする	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とリストの暗いグラフを描き、、その色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストについて暗いを描画し、、その色を黒色に設定する	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒色の明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒い明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
明るいグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
明るいグラフの色を黒色にセットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとデータ列について黒色の明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストと配列の黒い明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストと配列について黒い明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとイテラブルについて明るいグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいグラフを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='bright', color='k')
データ列とリストの明るいグラフを描画し、、色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
黒色の色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
黒い色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
色差別ないグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
色差別ないの色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストについて黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ列とリストの黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ列とデータ列の黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの色差別ないグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの色差別ないを描いてその色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの色差別ないグラフを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ列と配列の色差別ないを描画して色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストについて散布図を描画する	plt.scatter(xdata, ydata)
散布図をプロットする	plt.scatter(xdata, ydata)
散布図を描画する	plt.scatter(xdata, ydata)
データ列とデータ列について散布図を描画する	plt.scatter(xdata, ydata)
リストとリストについて相関を可視化する	plt.scatter(xdata, ydata)
リストとリストの相関を可視化する	plt.scatter(xdata, ydata)
散らばりを可視化する	plt.scatter(xdata, ydata)
配列とリストについて相関を可視化する	plt.scatter(xdata, ydata)
散布図のマーカーの大きさを指定する	plt.scatter(xdata, ydata, s=n)
散布図のマーカーの大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストを縦軸、リストを横軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
データ列を縦軸データ列を横軸として、大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)
リストを縦軸データ列を横軸として大きさnの散布図をプロットする	plt.scatter(xdata, ydata, s=n)
配列を縦軸、データ列を横軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストとリストについての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
大きさnでリストと配列の散布図を描く	plt.scatter(xdata, ydata, s=n)
データ列とイテラブルについての散布図を大きさnでプロットする	plt.scatter(xdata, ydata, s=n)
大きさnでデータ列とイテラブルについての散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストとリストについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
配列とリストの散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストとイテラブルについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストとリストについて散布図をプロットして、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
散布図にポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
ポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.')
ポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.')
リストとリストについて散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
配列とリストについて散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
配列とリストについて散布図をプロットして、マーカーをポイントに指定する	plt.plot(xdata, ydata, marker='.')
リストとイテラブルの散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストとリストについての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
イテラブルとリストについての散布図にポイントマーカーを描く	plt.plot(xdata, ydata, marker='.')
データ列とデータ列についての散布図にポイントマーカーを描く	plt.plot(xdata, ydata, marker='.')
リストと配列についての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
散布図に丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o')
丸マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='o')
丸マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='o')
リストとリストについて散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
配列と配列の散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストとリストについて散布図を描いて、マーカーを丸に変更する	plt.plot(xdata, ydata, marker='o')
リストと数列について散布図を描いて、マーカーを丸に変更する	plt.plot(xdata, ydata, marker='o')
リストとリストについての散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
リストと数列についての散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
散布図に三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
▲マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^')
三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^')
▲マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='^')
▲マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^')
リストとリストについて散布図を描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
データ列とリストについて散布図を描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
リストと配列について散布図を描画して、マーカーを三角にする	plt.plot(xdata, ydata, marker='^')
リストと数列について散布図を描画し、、マーカーを三角に変更する	plt.plot(xdata, ydata, marker='^')
リストとリストについての散布図に三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
配列とリストについての散布図に三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
数列とデータ列についての散布図に三角マーカーを描く	plt.plot(xdata, ydata, marker='^')
散布図に下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v')
散布図を下三角マーカーで描く	plt.plot(xdata, ydata, marker='v')
▽マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図を描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストと配列について散布図を描画し、マーカーを▼に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図をプロットして、マーカーを▽に設定する	plt.plot(xdata, ydata, marker='v')
リストとデータ列について散布図を描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
リストと配列についての散布図に下三角マーカーをプロットする	plt.plot(xdata, ydata, marker='v')
リストと数列についての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
イテラブルと配列についての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
散布図に左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
左三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='<')
左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<')
左三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='<')
左三角マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='<')
リストとリストについて散布図を描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとリストについて散布図をプロットして、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
数列と配列の散布図を描画してマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストと配列について散布図を描いてマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとリストについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
イテラブルとリストについての散布図に左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<')
データ列とデータ列についての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
散布図に右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
右三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='>')
散布図に右三角マーカーを使用する	plt.plot(xdata, ydata, marker='>')
右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>')
リストとリストについて散布図を描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
配列とリストについて散布図を描画してマーカーを右三角に変更する	plt.plot(xdata, ydata, marker='>')
配列とリストについて散布図を描画し、、マーカーを右三角に指定する	plt.plot(xdata, ydata, marker='>')
リストとデータ列について散布図を描画し、、マーカーを右三角に変更する	plt.plot(xdata, ydata, marker='>')
リストとリストについての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
数列とリストについての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
散布図にバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
散布図にバツマーカーを使用する	plt.plot(xdata, ydata, marker='x')
散布図にクロスマーカーを用いる	plt.plot(xdata, ydata, marker='x')
バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x')
クロスマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x')
クロスマーカーとして散布図を描く	plt.plot(xdata, ydata, marker='x')
リストとリストについて散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
イテラブルと配列について散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
配列と配列について散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
イテラブルとリストについて散布図を描いて、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストとリストについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
配列とリストについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
配列と配列の散布図にクロスマーカーをプロットする	plt.plot(xdata, ydata, marker='x')
散布図に大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X')
大バツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='X')
リストとリストについて散布図を描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストとデータ列について散布図をプロットして、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストと数列について散布図を描画し、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
データ列とリストについて散布図を描いて、マーカーを大バツに指定する	plt.plot(xdata, ydata, marker='X')
リストとリストについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
リストとリストについての散布図に大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X')
データ列とリストについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
散布図に四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
散布図に四角マーカーを用いる	plt.plot(xdata, ydata, marker='s')
四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s')
四角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='s')
リストとリストについて散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
リストと数列について散布図を描画して、マーカーを四角に変更する	plt.plot(xdata, ydata, marker='s')
リストと配列について散布図を描画してマーカーを四角に指定する	plt.plot(xdata, ydata, marker='s')
リストとリストについて散布図を描画し、マーカーを四角に変更する	plt.plot(xdata, ydata, marker='s')
リストとリストについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
リストとデータ列の散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
イテラブルとリストの散布図に四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s')
イテラブルとリストについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
散布図にダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
菱形マーカーを散布図に使う	plt.plot(xdata, ydata, marker='D')
ダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D')
リストとリストについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
配列と配列について散布図を描画し、、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
数列とリストについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
リストと配列について散布図を描いて、マーカーを菱形に設定する	plt.plot(xdata, ydata, marker='D')
リストとリストについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
リストと配列についての散布図に菱形マーカーを描く	plt.plot(xdata, ydata, marker='D')
数列とリストについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
散布図に星マーカーを使う	plt.plot(xdata, ydata, marker='*')
星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*')
星マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='*')
散布図を星マーカーで描画する	plt.plot(xdata, ydata, marker='*')
星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*')
リストとリストについて散布図を描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
数列とリストの散布図を描いて、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
リストとリストの散布図を描画し、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
リストとリストについて散布図を描画してマーカーを星に変更する	plt.plot(xdata, ydata, marker='*')
リストとリストについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
リストと数列の散布図に星マーカーを描く	plt.plot(xdata, ydata, marker='*')
イテラブルと数列についての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
データ列とデータ列の散布図に星マーカーを描く	plt.plot(xdata, ydata, marker='*')
散布図にカラーコードのポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図をカラーコードのポイントマーカーとして描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーで散布図を描く	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについての散布図にカラーコードのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストと数列についての散布図にカラーコードのポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーをリストとデータ列についての散布図に描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについて散布図を描画して、ポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについて散布図を描き、、ポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストと配列の散布図を描画してポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
配列とリストについて散布図を描画して、ポイントマーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図にカラーコードの丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図をカラーコードの丸マーカーで描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図をカラーコードの丸マーカーを用いて描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについての散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストと数列の散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ列とデータ列の散布図にカラーコードの丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについての散布図にカラーコードの丸マーカーを描く	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについて散布図を描画して、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ列とデータ列について散布図を描画して丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについて散布図をプロットして、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
データ列とリストの散布図を描画して、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図にカラーコードの三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの▲マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの上三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの三角マーカーを使用する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図をカラーコードの三角マーカーとして描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの上三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの△マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについての散布図にカラーコードの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストと配列についての散布図にカラーコードの▲マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストの散布図にカラーコードの△マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストの散布図にカラーコードの▲マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについて散布図を描画して、三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
配列と数列について散布図を描画し、、上三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
イテラブルとリストについて散布図をプロットして、▲マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
数列とイテラブルについて散布図を描画して、三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの▼マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの▼マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについての散布図にカラーコードの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
数列と配列についての散布図にカラーコードの下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', c=rgb)
リストと数列についての散布図にカラーコードの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
データ列とリストの散布図にカラーコードの▽マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについて散布図を描画して、下三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストの散布図をプロットして下三角マーカーの色をカラーコードにする	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについて散布図を描画して、▼マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストの散布図を描いて、▽マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図にカラーコードの左三角マーカーを使用する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについての散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとデータ列の散布図にカラーコードの左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストの散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについて散布図を描画して、左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
イテラブルと数列について散布図を描画して、左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについて散布図をプロットして、左三角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについて散布図を描画して、左三角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図にカラーコードの右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
散布図をカラーコードの右三角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについての散布図にカラーコードの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストの散布図にカラーコードの右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーをリストとリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについて散布図を描画して、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについて散布図を描画して右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
配列とリストについて散布図をプロットして、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
配列とリストについて散布図を描画して、右三角マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='>', c=rgb)
散布図にカラーコードのバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図にカラーコードのクロスマーカーを用いる	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについての散布図にカラーコードのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのクロスマーカーをリストと配列についての散布図にプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについての散布図にカラーコードのバツマーカーをプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)
配列とイテラブルの散布図にカラーコードのバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについて散布図を描画して、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストと配列の散布図をプロットして、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについて散布図を描画し、、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストの散布図を描画して、バツマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図にカラーコードの大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図にカラーコードの大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図をカラーコードの大バツマーカーとして描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図をカラーコードの大バツマーカーを用いて描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
配列とデータ列についての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
数列とリストについての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
配列とリストについての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについて散布図を描画して、大バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストと配列について散布図を描画して、大バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
数列とリストについて散布図を描画して、大バツマーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについて散布図を描き、、大バツマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図にカラーコードの四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にカラーコードの四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについての散布図にカラーコードの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
配列とリストの散布図にカラーコードの四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとデータ列の散布図にカラーコードの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについて散布図を描画して、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストと数列について散布図を描画し、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
データ列とデータ列について散布図を描画して、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについて散布図を描画して四角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にカラーコードのダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図にカラーコードの菱形マーカーを使用する	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図をカラーコードのダイアモンドマーカーを使って描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについての散布図にカラーコードのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
データ列とリストの散布図にカラーコードのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストと配列についての散布図にカラーコードの菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードの菱形マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについて散布図を描画して、ダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについて散布図を描画して菱形マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
配列とイテラブルの散布図を描画してダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図にカラーコードの星マーカーを使う	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図にカラーコードの星マーカーを使用する	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図をカラーコードの星マーカーで描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図をカラーコードの星マーカーでプロットする	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについての散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
データ列とリストについての散布図にカラーコードの星マーカーを描く	plt.plot(xdata, ydata, marker='*', c=rgb)
数列とリストの散布図にカラーコードの星マーカーを描く	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについて散布図を描画して、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
データ列とリストについて散布図を描画し、、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストと配列の散布図を描画して、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストの散布図を描き、、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図に赤いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤色のポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='.', c='r')
リストとリストについての散布図に赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーをリストと数列についての散布図に描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤色のポイントマーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='.', c='r')
リストとリストについての散布図に赤色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='r')
散布図に赤い丸マーカーを用いる	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤色の丸マーカーで描く	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤い丸マーカーでプロットする	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤い丸マーカーとしてプロットする	plt.plot(xdata, ydata, marker='o', c='r')
リストとリストについての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
赤色の丸マーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='o', c='r')
リストとリストについての散布図に赤色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図に赤い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
赤色の△マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い三角マーカーを用いる	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い三角マーカーを使用する	plt.plot(xdata, ydata, marker='^', c='r')
赤い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
赤い上三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='^', c='r')
赤色の▲マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
散布図を赤い三角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='^', c='r')
リストとリストについての散布図に赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
配列とリストの散布図に赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
配列とデータ列についての散布図に赤い上三角マーカーを描く	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='r')
赤い▼マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤い▽マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
散布図を赤い▼マーカーで描画する	plt.plot(xdata, ydata, marker='v', c='r')
散布図を赤い下三角マーカーで描画する	plt.plot(xdata, ydata, marker='v', c='r')
リストとリストについての散布図に赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤色の▼マーカーを配列とイテラブルについての散布図に描画する	plt.plot(xdata, ydata, marker='v', c='r')
リストとリストの散布図に赤い▽マーカーを描く	plt.plot(xdata, ydata, marker='v', c='r')
散布図に赤い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤色の左三角マーカーを用いる	plt.plot(xdata, ydata, marker='<', c='r')
赤色の左三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤い左三角マーカーを用いる	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
散布図を赤い左三角マーカーで描画する	plt.plot(xdata, ydata, marker='<', c='r')
赤色の左三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='<', c='r')
リストとリストについての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーをデータ列と配列の散布図に描画する	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーをイテラブルとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='<', c='r')
リストと数列の散布図に赤い左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤い右三角マーカーを用いる	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
散布図を赤い右三角マーカーとして描く	plt.plot(xdata, ydata, marker='>', c='r')
散布図を赤い右三角マーカーで描く	plt.plot(xdata, ydata, marker='>', c='r')
赤色の右三角マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='>', c='r')
リストとリストについての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
イテラブルとリストの散布図に赤い右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c='r')
データ列とリストについての散布図に赤い右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='r')
赤色のクロスマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤色のバツマーカーを用いる	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーとして散布図を描く	plt.plot(xdata, ydata, marker='x', c='r')
リストとリストについての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストと配列についての散布図に赤いバツマーカーをプロットする	plt.plot(xdata, ydata, marker='x', c='r')
数列と配列についての散布図に赤色のクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストとリストについての散布図に赤色のクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーで散布図を描く	plt.plot(xdata, ydata, marker='X', c='r')
リストとリストについての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
配列と配列の散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
配列とリストについての散布図に赤色の大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
散布図に赤い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='r')
散布図に赤色の四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='s', c='r')
リストとリストについての散布図に赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤色の四角マーカーをリストと配列についての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='r')
配列とデータ列についての散布図に赤い四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c='r')
散布図に赤いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
赤色のダイアモンドマーカーを散布図に使う	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤色のダイアモンドマーカーを用いる	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤色のダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
散布図を赤いダイアモンドマーカーで描画する	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーとして散布図を描く	plt.plot(xdata, ydata, marker='D', c='r')
リストとリストについての散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
リストと配列の散布図に赤い菱形マーカーを描く	plt.plot(xdata, ydata, marker='D', c='r')
赤い菱形マーカーをデータ列とリストについての散布図に描く	plt.plot(xdata, ydata, marker='D', c='r')
配列とリストについての散布図に赤いダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='r')
散布図に赤い星マーカーを使用する	plt.plot(xdata, ydata, marker='*', c='r')
散布図に赤い星マーカーを用いる	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='r')
赤色の星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*', c='r')
散布図を赤い星マーカーで描画する	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='*', c='r')
リストとリストについての散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
リストと配列についての散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
配列とリストの散布図に赤色の星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーをリストとリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='*', c='r')
散布図に黒いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='k')
黒いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
黒いポイントマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストとリストについての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストと数列についての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストとリストについての散布図に黒いポイントマーカーを描く	plt.plot(xdata, ydata, marker='.', c='k')
散布図に黒い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
散布図を黒色の丸マーカーで描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストとリストについての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストと数列の散布図に黒色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
黒色の丸マーカーをデータ列とリストの散布図に描画する	plt.plot(xdata, ydata, marker='o', c='k')
配列とリストについての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
散布図に黒い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒い△マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
黒い▲マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒色の三角マーカーを用いる	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='^', c='k')
黒色の上三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='^', c='k')
リストとリストについての散布図に黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
データ列とリストについての散布図に黒色の三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストとリストについての散布図に黒色の三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
イテラブルとリストの散布図に黒色の三角マーカーを描く	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='k')
散布図に黒い▽マーカーを用いる	plt.plot(xdata, ydata, marker='v', c='k')
散布図に黒い▽マーカーを使う	plt.plot(xdata, ydata, marker='v', c='k')
黒い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
散布図を黒色の▽マーカーとして描画する	plt.plot(xdata, ydata, marker='v', c='k')
黒色の▼マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
散布図を黒色の▽マーカーで描画する	plt.plot(xdata, ydata, marker='v', c='k')
リストとリストについての散布図に黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
データ列とリストについての散布図に黒い▼マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
データ列と数列の散布図に黒い下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', c='k')
リストとデータ列についての散布図に黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
散布図に黒い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒い左三角マーカーを使用する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
散布図を黒い左三角マーカーで描く	plt.plot(xdata, ydata, marker='<', c='k')
リストとリストについての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
リストとリストについての散布図に黒色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
リストとデータ列についての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='k')
散布図に黒色の右三角マーカーを用いる	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='>', c='k')
リストとリストについての散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
リストとデータ列の散布図に黒色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーをデータ列とリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='>', c='k')
散布図に黒いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒色のバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
散布図を黒いクロスマーカーで描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いクロスマーカーで散布図を描く	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='x', c='k')
リストとリストについての散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
数列とリストについての散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
リストとリストの散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒い大バツマーカーを用いる	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒色の大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストとリストについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
配列とリストについての散布図に黒色の大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストとリストについての散布図に黒色の大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c='k')
イテラブルとリストについての散布図に黒い大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒い四角マーカーを使用する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーを使って散布図を描く	plt.plot(xdata, ydata, marker='s', c='k')
黒色の四角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='s', c='k')
散布図を黒い四角マーカーで描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストとリストについての散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーをデータ列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストとデータ列についての散布図に黒色の四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒いダイアモンドマーカーを使用する	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒色のダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
黒いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
黒いダイアモンドマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
散布図を黒いダイアモンドマーカーを使って描く	plt.plot(xdata, ydata, marker='D', c='k')
リストとリストについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
配列とリストについての散布図に黒色の菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
黒色のダイアモンドマーカーを配列と数列についての散布図に描画する	plt.plot(xdata, ydata, marker='D', c='k')
数列とリストについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
散布図に黒色の星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
散布図に黒い星マーカーを用いる	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
散布図を黒い星マーカーで描画する	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
リストとリストについての散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーを配列と配列についての散布図に描画する	plt.plot(xdata, ydata, marker='*', c='k')
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
グラフにx=0の破線を設定する	plt.axvline(x=0, linestyle='dashed')
グラフに鉛直方向の破線を付ける	plt.axvline(x=0, linestyle='dashed')
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
グラフにx=0の一点鎖線を設定する	plt.axvline(x=0, linestyle='dashbot')
グラフにx=0の点線を付ける	plt.axvline(x=0, linestyle='dotted')
グラフに鉛直方向の点線を付ける	plt.axvline(x=0, linestyle='dotted')
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
グラフにx=0の実線を設定する	plt.axvline(x=0, linestyle='solid')
グラフに鉛直方向の実線をつける	plt.axvline(x=0, linestyle='solid')
にx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
グラフにy=0の破線を付ける	plt.axhline(y=0, linestyle='dashed')
にy=0の破線をつける	plt.axhline(y=0, linestyle='dashed')
グラフにy=0の破線をつける	plt.axhline(y=0, linestyle='dashed')
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
にy=0の点線をつける	plt.axhline(y=0, linestyle='dotted')
グラフに水平方向の点線を付ける	plt.axhline(y=0, linestyle='dotted')
にy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
グラフにy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
グラフに水平方向の実線をつける	plt.axhline(y=0, linestyle='solid')
グラフにy=0の実線をつける	plt.axhline(y=0, linestyle='solid')
リストに応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストとリストについてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
数列と配列についてリストの値に応じて散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
数列とリストについてリストの値に応じて散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストと数列リストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
カラーバーを描画する	plt.colorbar()
カラーバーを付ける	plt.colorbar()
カラーバーを横向きで描画する	plt.colorbar(orientation='horizontal')
カラーバーを横向きに描画する	plt.colorbar(orientation='horizontal')
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
カラーバーを水平で付ける	plt.colorbar(orientation='horizontal')
カラーバーを横向きにつける	plt.colorbar(orientation='horizontal')
リストとリストについての散布図に文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
配列と配列についての散布図に文字列という凡例用のラベルを設定する	plt.scatter(xdata, xdata, label=s)
数列とリストの散布図に文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストと配列についての散布図に文字列という補足用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描画し、、文字列という凡例用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描画し、、文字列という補足用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストの散布図を描画し、、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
ヒストグラムを描画する	plt.hist(データ列)
ヒストグラムを描く	plt.hist(データ列)
度数分布図を描画する	plt.hist(データ列)
リストのヒストグラムを描画する	plt.hist(aList)
リストのヒストグラムを描く	plt.hist(aList)
リストをヒストグラムで可視化する	plt.hist(aList)
リストを柱状グラフで可視化する	plt.hist(aList)
リストをヒストグラムとして可視化する	plt.hist(aList)
リストを度数分布図で可視化する	plt.hist(aList)
リストをヒストグラムにする	plt.hist(aList)
リストを度数分布図にする	plt.hist(aList)
配列のヒストグラムを描画する	plt.hist(aArray)
配列の度数分布図を描画する	plt.hist(aArray)
配列の度数分布図をプロットする	plt.hist(aArray)
配列をヒストグラムで可視化する	plt.hist(aArray)
配列をヒストグラムにする	plt.hist(aArray)
データフレームの列のヒストグラムを描画する	plt.hist(df[column])
データフレームの列のヒストグラムをプロットする	plt.hist(df[column])
データフレームの列の度数分布図を描く	plt.hist(df[column])
データフレームの列をヒストグラムで可視化する	plt.hist(df[column])
データフレームのカラムを度数分布図として可視化する	plt.hist(df[column])
ヒストグラムでデータフレームのカラムを可視化する	plt.hist(df[column])
データフレームの列をヒストグラムにする	plt.hist(df[column])
データフレームのカラムをヒストグラムにする	plt.hist(df[column])
データ列のヒストグラムを描画する	plt.hist(ds)
データ列のヒストグラムをプロットする	plt.hist(ds)
データ列をヒストグラムで可視化する	plt.hist(ds)
データ列を度数分布図で可視化する	plt.hist(ds)
データ列をヒストグラムにする	plt.hist(ds)
ヒストグラムを半透明にする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描画して、半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描画して半透明ににする	plt.hist(データ列, alpha=0.5)
度数分布図を描画して、半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムの透明度をxに設定する	plt.hist(データ列, alpha=x)
柱状図のアルファをxに変更する	plt.hist(データ列, alpha=x)
ヒストグラムを描画して、透明度をxに設定する	plt.hist(データ列, alpha=x)
ヒストグラムを描画し、透明度をxに指定する	plt.hist(データ列, alpha=x)
ヒストグラムを描画してxに透明度を設定する	plt.hist(データ列, alpha=x)
ヒストグラムのビン数を設定する	plt.hist(データ列, bins=n)
ヒストグラムのビン数を変更する	plt.hist(データ列, bins=n)
ビン数をnに設定してヒストグラムを描画する	plt.hist(データ列, bins=n)
ヒストグラムをビン数をnに設定してプロットする	plt.hist(データ列, bins=n)
ビンをnに設定して度数分布図をプロットする	plt.hist(データ列, bins=n)
ビン数nのヒストグラムを描画する	plt.hist(データ列, bins=n)
区間数nのヒストグラムを描く	plt.hist(データ列, bins=n)
ビンnのヒストグラムを描く	plt.hist(データ列, bins=n)
ヒストグラムを描画して、ビン数をnに設定する	plt.hist(データ列, bins=n)
柱状図を描画してビンをnに設定する	plt.hist(データ列, bins=n)
ヒストグラムを描画して、ビンをnに設定する	plt.hist(データ列, bins=n)
ヒストグラムの範囲を設定する	plt.hist(データ列, range=(start, end))
ヒストグラムの区間をする	plt.hist(データ列, range=(start, end))
ヒストグラムの範囲を指定する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendまでの範囲で描画する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendまでの範囲でプロットする	plt.hist(データ列, range=(start, end))
度数分布図をstartからendまでの範囲で描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてリストを描画する	plt.hist(データ列, range=(start, end))
startからendの間のヒストグラムを用いてリストを描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてリストをプロットする	plt.hist(データ列, range=(start, end))
startからendまでヒストグラムにする	plt.hist(データ列, range=(start, end))
ヒストグラムの描画して、正規化する	plt.hist(データ列, density=True)
ヒストグラムの描画し、、正規化する	plt.hist(データ列, density=True)
正規化されたヒストグラムを描画する	plt.hist(データ列, density=True)
正規化された柱状図を描く	plt.hist(データ列, density=True)
正規化された柱状図を描画する	plt.hist(データ列, density=True)
ヒストグラムを描画し、合計を1にする	plt.hist(データ列, density=True)
二つのデータ列を並べてヒストグラムにする	plt.hist([データ列, データ列2], color=['b', 'r'])
二つのデータ列を並べて柱状図にする	plt.hist([データ列, データ列2], color=['b', 'r'])
二つのデータ列を並べて柱状グラフにする	plt.hist([データ列, データ列2], color=['b', 'r'])
ヒストグラムを二つ並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
度数分布図を横に並べてプロットする	plt.hist([データ列, データ列2], color=['b', 'r'])
二つ並べてヒストグラムを描く	plt.hist([データ列, データ列2], color=['b', 'r'])
データ列を箱ひげ図で描画する	plt.boxplot(データ列)
データ列を箱ひげ図で描く	plt.boxplot(データ列)
データ列を箱ひげ図にする	plt.boxplot(データ列)
箱ひげ図でデータ列を可視化する	plt.boxplot(データ列)
箱髭図でデータ列を可視化する	plt.boxplot(データ列)
箱ヒゲ図でデータ列を可視化する	plt.boxplot(データ列)
二つのデータ列を並べて箱ひげ図にする	plt.boxplot([データ列, データ列2])
２つのデータ列を並べて箱ヒゲ図にする	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べて描画する	plt.boxplot([データ列, データ列2])
横に並べてボックスチャートを描画する	plt.boxplot([データ列, データ列2])
ボックスチャートを横に並べて描く	plt.boxplot([データ列, データ列2])
横に並べて箱ひげ図を描画する	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べる	plt.boxplot([データ列, データ列2])
箱ひげ図を横に並べる	plt.boxplot([データ列, データ列2])
二つのカラムを並べて箱ひげ図にする	plt.boxplot([df[column], df[column2]])
２つのカラムを並べて箱ひげ図にする	plt.boxplot([df[column], df[column2]])
2つのカラムを並べて箱ひげ図にする	plt.boxplot([df[column], df[column2]])
棒グラフを描画する	plt.bar(ラベル列, データ列)
棒グラフをプロットする	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、棒グラフを描画する	plt.bar(ラベル列, データ列)
縦棒グラフを描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、縦棒グラフを描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して縦棒を描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して縦棒を描く	plt.bar(ラベル列, データ列)
横棒グラフを描画する	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して、横棒グラフを描画する	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して横棒をプロットする	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して、横棒グラフを描く	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して、横棒グラフをプロットする	plt.barh(ラベル列, データ列)
棒グラフの色をカラーコードに設定する	plt.bar(ラベル列, データ列, color=rgb)
棒グラフの色をカラーコードに変更する	plt.bar(ラベル列, データ列, color=rgb)
棒グラフの色を変更する	plt.bar(ラベル列, データ列, color=rgb)
横棒グラフの色をカラーコードに設定する	plt.barh(ラベル列, データ列, color=rgb)
横棒グラフの色をカラーコードに変更する	plt.barh(ラベル列, データ列, color=rgb)
カラーコードに横棒の色を指定する	plt.barh(ラベル列, データ列, color=rgb)
棒グラフを積み上げにする	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
縦棒グラフを積み上げにする	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ棒グラフを描画する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ棒を描画する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
横棒グラフを積み上げにする	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ横棒グラフを描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ横棒を描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ横棒を描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ横棒グラフをプロットする	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
棒グラフを描画して、グラフ幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフをプロットして、xに幅を設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフをプロットして、棒の幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフをプロットして、xに幅を指定する	plt.bar(ラベル列, データ列, width=x)
棒グラフの幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
xに棒グラフの幅を設定する	plt.bar(ラベル列, データ列, width=x)
棒の幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒の幅をxに指定する	plt.bar(ラベル列, データ列, width=x)
横棒グラフを描画して、グラフ幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒を描画して、グラフ幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフを描いて、xにグラフ幅を設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフの幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒の幅をxにする	plt.barh(ラベル列, データ列, width=x)
xに横棒グラフの幅を変更する	plt.barh(ラベル列, データ列, width=x)
棒グラフを描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
棒を描いて、中央寄せする	plt.bar(ラベル列, データ列, align='center')
縦棒グラフを描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
縦棒グラフを描画し、、中央寄せする	plt.bar(ラベル列, データ列, align='center')
横棒グラフを描画して、中央寄せする	plt.barh(ラベル列, データ列, align='center')
複数カラムの散布図を一度に描画する	sns.pairplot(df[[column, column2, column3]])
複数カラムの散布図を一度にプロットする	sns.pairplot(df[[column, column2, column3]])
＜オプション＞アリスブルー色を使う	color = 'aliceblue'
＜オプション＞アリスブルー色を用いる	color = 'aliceblue'
＜オプション＞グラフの色をアリスブルーに設定する	color = 'aliceblue'
＜オプション＞グラフの色をアリスブルーに指定する	color = 'aliceblue'
＜オプション＞アンティークホワイト色を使う	color = 'antiquewhite'
＜オプション＞グラフの色をアンティークホワイトに設定する	color = 'antiquewhite'
＜オプション＞アクア色を使う	color = 'aqua'
＜オプション＞アクア色を使用する	color = 'aqua'
＜オプション＞アクア色を用いる	color = 'aqua'
＜オプション＞アクアを使う	color = 'aqua'
＜オプション＞グラフの色をアクアに設定する	color = 'aqua'
＜オプション＞アクアにグラフの色を設定する	color = 'aqua'
＜オプション＞グラフの色をアクアに指定する	color = 'aqua'
＜オプション＞アクアマリン色を使う	color = 'aquamarine'
＜オプション＞グラフの色をアクアマリンに設定する	color = 'aquamarine'
＜オプション＞アクアマリンにグラフの色を設定する	color = 'aquamarine'
＜オプション＞グラフの色をアクアマリンにセットする	color = 'aquamarine'
＜オプション＞紺碧色を使う	color = 'azure'
＜オプション＞紺碧色を用いる	color = 'azure'
＜オプション＞グラフの色を紺碧に設定する	color = 'azure'
＜オプション＞グラフの色を紺碧にセットする	color = 'azure'
＜オプション＞紺碧に色を設定する	color = 'azure'
＜オプション＞ベージュ色を使う	color = 'beige'
＜オプション＞グラフの色をベージュに設定する	color = 'beige'
＜オプション＞ビスク色を使う	color = 'bisque'
＜オプション＞ビスク色を用いる	color = 'bisque'
＜オプション＞グラフの色をビスクに設定する	color = 'bisque'
＜オプション＞ビスクにグラフの色を指定する	color = 'bisque'
＜オプション＞グラフの色をビスクに変更する	color = 'bisque'
＜オプション＞ブラック色を使う	color = 'black'
＜オプション＞グラフの色をブラックに設定する	color = 'black'
＜オプション＞色をブラックに設定する	color = 'black'
＜オプション＞ブランチドアーモンド色を使う	color = 'blanchedalmond'
＜オプション＞ブランチドアーモンド色を用いる	color = 'blanchedalmond'
＜オプション＞グラフの色をブランチドアーモンドに設定する	color = 'blanchedalmond'
＜オプション＞ブランチドアーモンドにグラフの色を設定する	color = 'blanchedalmond'
＜オプション＞色をブランチドアーモンドに設定する	color = 'blanchedalmond'
＜オプション＞青色を使う	color = 'blue'
＜オプション＞青を使う	color = 'blue'
＜オプション＞グラフの色を青に設定する	color = 'blue'
＜オプション＞ブルーバイオレット色を使う	color = 'blueviolet'
＜オプション＞ブルーバイオレットを使う	color = 'blueviolet'
＜オプション＞グラフの色をブルーバイオレットに設定する	color = 'blueviolet'
＜オプション＞ブルーバイオレットにグラフの色を設定する	color = 'blueviolet'
＜オプション＞ブルーバイオレットにグラフの色を変更する	color = 'blueviolet'
＜オプション＞茶色色を使う	color = 'brown'
＜オプション＞グラフの色を茶色に設定する	color = 'brown'
＜オプション＞バリーウッド色を使う	color = 'burlywood'
＜オプション＞グラフの色をバリーウッドに設定する	color = 'burlywood'
＜オプション＞バリーウッドに色を変更する	color = 'burlywood'
＜オプション＞バリーウッドにグラフの色をする	color = 'burlywood'
＜オプション＞カデットブルー色を使う	color = 'cadetblue'
＜オプション＞カデットブルー色を用いる	color = 'cadetblue'
＜オプション＞グラフの色をカデットブルーに設定する	color = 'cadetblue'
＜オプション＞シャルトリューズ色を使う	color = 'chartreuse'
＜オプション＞グラフの色をシャルトリューズに設定する	color = 'chartreuse'
＜オプション＞色をシャルトリューズに指定する	color = 'chartreuse'
＜オプション＞シャルトリューズにグラフの色をセットする	color = 'chartreuse'
＜オプション＞シャルトリューズにグラフの色を設定する	color = 'chartreuse'
＜オプション＞チョコレート色を使う	color = 'chocolate'
＜オプション＞チョコレートを使用する	color = 'chocolate'
＜オプション＞グラフの色をチョコレートに設定する	color = 'chocolate'
＜オプション＞チョコレートにグラフの色を指定する	color = 'chocolate'
＜オプション＞コーラル色を使う	color = 'coral'
＜オプション＞珊瑚色を用いる	color = 'coral'
＜オプション＞グラフの色をコーラルに設定する	color = 'coral'
＜オプション＞色をコーラルに設定する	color = 'coral'
＜オプション＞コーンフラワーブルー色を使う	color = 'cornflowerblue'
＜オプション＞グラフの色をコーンフラワーブルーに設定する	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルーにグラフの色を設定する	color = 'cornflowerblue'
＜オプション＞グラフの色をやわらかい青に設定する	color = 'cornflowerblue'
＜オプション＞コーンズシルク色を使う	color = 'cornsilk'
＜オプション＞グラフの色をコーンズシルクに設定する	color = 'cornsilk'
＜オプション＞クリムゾン色を使う	color = 'crimson'
＜オプション＞真紅色を用いる	color = 'crimson'
＜オプション＞クリムゾン色を使用する	color = 'crimson'
＜オプション＞グラフの色をクリムゾンに設定する	color = 'crimson'
＜オプション＞グラフの色を真紅に指定する	color = 'crimson'
＜オプション＞グラフの色を真紅に変更する	color = 'crimson'
＜オプション＞シアン色を使う	color = 'cyan'
＜オプション＞シアンを使用する	color = 'cyan'
＜オプション＞シアン色を用いる	color = 'cyan'
＜オプション＞グラフの色をシアンに設定する	color = 'cyan'
＜オプション＞紺色を使う	color = 'darkblue'
＜オプション＞紺色を使用する	color = 'darkblue'
＜オプション＞紺を使う	color = 'darkblue'
＜オプション＞グラフの色を紺に設定する	color = 'darkblue'
＜オプション＞グラフの色を紺にセットする	color = 'darkblue'
＜オプション＞グラフの色をダークブルーに指定する	color = 'darkblue'
＜オプション＞ダークシアン色を使う	color = 'darkcyan'
＜オプション＞ダークシアンを使う	color = 'darkcyan'
＜オプション＞グラフの色をダークシアンに設定する	color = 'darkcyan'
＜オプション＞ダークゴールデンロッド色を使う	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッドを用いる	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッドを使用する	color = 'darkgoldenrod'
＜オプション＞グラフの色をダークゴールデンロッドに設定する	color = 'darkgoldenrod'
＜オプション＞色をダークゴールデンロッドに設定する	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッドにグラフの色を設定する	color = 'darkgoldenrod'
＜オプション＞ダークグレー色を使う	color = 'darkgray'
＜オプション＞ダークグレー色を使用する	color = 'darkgray'
＜オプション＞ダークグレーを使用する	color = 'darkgray'
＜オプション＞グラフの色をダークグレーに設定する	color = 'darkgray'
＜オプション＞ダークグレーに色を設定する	color = 'darkgray'
＜オプション＞ダークグリーン色を使う	color = 'darkgreen'
＜オプション＞ダークグリーン色を用いる	color = 'darkgreen'
＜オプション＞グラフの色をダークグリーンに設定する	color = 'darkgreen'
＜オプション＞グラフの色をダークグリーンに指定する	color = 'darkgreen'
＜オプション＞ダークグレー色を使う	color = 'darkgrey'
＜オプション＞グラフの色をダークグレーに設定する	color = 'darkgrey'
＜オプション＞ダークカーキ色を使う	color = 'darkkhaki'
＜オプション＞ダークカーキを用いる	color = 'darkkhaki'
＜オプション＞ダークカーキを使用する	color = 'darkkhaki'
＜オプション＞グラフの色をダークカーキに設定する	color = 'darkkhaki'
＜オプション＞ダークカーキにグラフの色をする	color = 'darkkhaki'
＜オプション＞色をダークカーキに設定する	color = 'darkkhaki'
＜オプション＞ダークマゼンタ色を使う	color = 'darkmagenta'
＜オプション＞グラフの色をダークマゼンタに設定する	color = 'darkmagenta'
＜オプション＞色をダークマゼンタに設定する	color = 'darkmagenta'
＜オプション＞ダークマゼンタにグラフの色を設定する	color = 'darkmagenta'
＜オプション＞ダークオリーブグリーン色を使う	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーンを用いる	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーン色を用いる	color = 'darkolivegreen'
＜オプション＞グラフの色をダークオリーブグリーンに設定する	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーンにグラフの色をセットする	color = 'darkolivegreen'
＜オプション＞グラフの色をダークオリーブグリーンに指定する	color = 'darkolivegreen'
＜オプション＞ダークオレンジ色を使う	color = 'darkorange'
＜オプション＞グラフの色をダークオレンジに設定する	color = 'darkorange'
＜オプション＞ダークオレンジにグラフの色を設定する	color = 'darkorange'
＜オプション＞ダークオレンジに色を設定する	color = 'darkorange'
＜オプション＞ダークオーキッド色を使う	color = 'darkorchid'
＜オプション＞ダークオーキッドを使う	color = 'darkorchid'
＜オプション＞グラフの色をダークオーキッドに設定する	color = 'darkorchid'
＜オプション＞色をダークオーキッドに指定する	color = 'darkorchid'
＜オプション＞暗い赤色を使う	color = 'darkred'
＜オプション＞ダークレッド色を使う	color = 'darkred'
＜オプション＞グラフの色を暗い赤に設定する	color = 'darkred'
＜オプション＞暗い赤にグラフの色を設定する	color = 'darkred'
＜オプション＞色を暗い赤に変更する	color = 'darkred'
＜オプション＞ダークサーモン色を使う	color = 'darksalmon'
＜オプション＞グラフの色をダークサーモンに設定する	color = 'darksalmon'
＜オプション＞ダークサーモンにグラフの色を指定する	color = 'darksalmon'
＜オプション＞ダークシアグリーン色を使う	color = 'darkseagreen'
＜オプション＞ダークシアグリーン色を用いる	color = 'darkseagreen'
＜オプション＞グラフの色をダークシアグリーンに設定する	color = 'darkseagreen'
＜オプション＞ダークシアグリーンにグラフの色を設定する	color = 'darkseagreen'
＜オプション＞ダークスレートブルー色を使う	color = 'darkslateblue'
＜オプション＞グラフの色をダークスレートブルーに設定する	color = 'darkslateblue'
＜オプション＞ダークスラテグレー色を使う	color = 'darkslategray'
＜オプション＞ダークスラテグレー色を使用する	color = 'darkslategray'
＜オプション＞グラフの色をダークスラテグレーに設定する	color = 'darkslategray'
＜オプション＞グラフの色をダークスラテグレーに変更する	color = 'darkslategray'
＜オプション＞色をダークスラテグレーに設定する	color = 'darkslategray'
＜オプション＞ダーク・スラテグレー色を使う	color = 'darkslategrey'
＜オプション＞グラフの色をダーク・スラテグレーに設定する	color = 'darkslategrey'
＜オプション＞グラフの色をダーク・スラテグレーに指定する	color = 'darkslategrey'
＜オプション＞ダークターコイズ色を使う	color = 'darkturquoise'
＜オプション＞ダークターコイズを使う	color = 'darkturquoise'
＜オプション＞グラフの色をダークターコイズに設定する	color = 'darkturquoise'
＜オプション＞色をダークターコイズに設定する	color = 'darkturquoise'
＜オプション＞ダークバイオレット色を使う	color = 'darkviolet'
＜オプション＞グラフの色をダークバイオレットに設定する	color = 'darkviolet'
＜オプション＞ダークバイオレットにグラフの色を指定する	color = 'darkviolet'
＜オプション＞ダークバイオレットにグラフの色を変更する	color = 'darkviolet'
＜オプション＞デピンク色を使う	color = 'deeppink'
＜オプション＞グラフの色をデピンクに設定する	color = 'deeppink'
＜オプション＞色をデピンクに設定する	color = 'deeppink'
＜オプション＞グラフの色をデピンクにセットする	color = 'deeppink'
＜オプション＞グラフの色をデピンクに指定する	color = 'deeppink'
＜オプション＞ディープスカイブルー色を使う	color = 'deepskyblue'
＜オプション＞グラフの色をディープスカイブルーに設定する	color = 'deepskyblue'
＜オプション＞ディープスカイブルーにグラフの色を変更する	color = 'deepskyblue'
＜オプション＞ディムグレー色を使う	color = 'dimgray'
＜オプション＞ディムグレーを使用する	color = 'dimgray'
＜オプション＞グラフの色をディムグレーに設定する	color = 'dimgray'
＜オプション＞ディムグレーに色を設定する	color = 'dimgray'
＜オプション＞ディムグレー色を使う	color = 'dimgrey'
＜オプション＞ディムグレーを用いる	color = 'dimgrey'
＜オプション＞グラフの色をディムグレーに設定する	color = 'dimgrey'
＜オプション＞ディムグレーに色を設定する	color = 'dimgrey'
＜オプション＞ドジャーブルー色を使う	color = 'dodgerblue'
＜オプション＞グラフの色をドジャーブルーに設定する	color = 'dodgerblue'
＜オプション＞耐火レンガ色を使う	color = 'firebrick'
＜オプション＞耐火レンガ色を用いる	color = 'firebrick'
＜オプション＞グラフの色を耐火レンガに設定する	color = 'firebrick'
＜オプション＞色を耐火レンガに指定する	color = 'firebrick'
＜オプション＞色を耐火レンガにセットする	color = 'firebrick'
＜オプション＞耐火レンガに色を設定する	color = 'firebrick'
＜オプション＞フローラルホワイト色を使う	color = 'floralwhite'
＜オプション＞フローラルホワイト色を使用する	color = 'floralwhite'
＜オプション＞グラフの色をフローラルホワイトに設定する	color = 'floralwhite'
＜オプション＞色をフローラルホワイトに変更する	color = 'floralwhite'
＜オプション＞フローラルホワイトにグラフの色を設定する	color = 'floralwhite'
＜オプション＞フォレストグリーン色を使う	color = 'forestgreen'
＜オプション＞フォレストグリーンを使う	color = 'forestgreen'
＜オプション＞グラフの色をフォレストグリーンに設定する	color = 'forestgreen'
＜オプション＞フクシア色を使う	color = 'fuchsia'
＜オプション＞グラフの色をフクシアに設定する	color = 'fuchsia'
＜オプション＞グラフの色をフクシアに変更する	color = 'fuchsia'
＜オプション＞ゲインズボロ色を使う	color = 'gainsboro'
＜オプション＞ゲインズボロを用いる	color = 'gainsboro'
＜オプション＞グラフの色をゲインズボロに設定する	color = 'gainsboro'
＜オプション＞ゲインズボロにグラフの色を変更する	color = 'gainsboro'
＜オプション＞色をゲインズボロに設定する	color = 'gainsboro'
＜オプション＞ゲインズボロにグラフの色を設定する	color = 'gainsboro'
＜オプション＞ゴーストホワイト色を使う	color = 'ghostwhite'
＜オプション＞ゴーストホワイトを使う	color = 'ghostwhite'
＜オプション＞ゴーストホワイトを用いる	color = 'ghostwhite'
＜オプション＞グラフの色をゴーストホワイトに設定する	color = 'ghostwhite'
＜オプション＞ゴーストホワイトにグラフの色を設定する	color = 'ghostwhite'
＜オプション＞ゴールド色を使う	color = 'gold'
＜オプション＞グラフの色をゴールドに設定する	color = 'gold'
＜オプション＞ゴールドに色を設定する	color = 'gold'
＜オプション＞色をゴールドにする	color = 'gold'
＜オプション＞ゴールデンロッド色を使う	color = 'goldenrod'
＜オプション＞グラフの色をゴールデンロッドに設定する	color = 'goldenrod'
＜オプション＞グラフの色をゴールデンロッドにセットする	color = 'goldenrod'
＜オプション＞グレー色を使う	color = 'gray'
＜オプション＞グレーを使う	color = 'gray'
＜オプション＞グレー色を使用する	color = 'gray'
＜オプション＞グラフの色をグレーに設定する	color = 'gray'
＜オプション＞グラフの色をグレーに変更する	color = 'gray'
＜オプション＞グリーン色を使う	color = 'green'
＜オプション＞グラフの色をグリーンに設定する	color = 'green'
＜オプション＞グラフの色をグリーンに変更する	color = 'green'
＜オプション＞グラフの色をグリーンに指定する	color = 'green'
＜オプション＞グリーンイエロー色を使う	color = 'greenyellow'
＜オプション＞グリーンイエロー色を使用する	color = 'greenyellow'
＜オプション＞グリーンイエロー色を用いる	color = 'greenyellow'
＜オプション＞グラフの色をグリーンイエローに設定する	color = 'greenyellow'
＜オプション＞グレー色を使う	color = 'grey'
＜オプション＞グラフの色をグレーに設定する	color = 'grey'
＜オプション＞ハニーデュー色を使う	color = 'honeydew'
＜オプション＞ハニーデューを使用する	color = 'honeydew'
＜オプション＞グラフの色をハニーデューに設定する	color = 'honeydew'
＜オプション＞ハニーデューに色を設定する	color = 'honeydew'
＜オプション＞ハニーデューにグラフの色をセットする	color = 'honeydew'
＜オプション＞グラフの色をハニーデューにセットする	color = 'honeydew'
＜オプション＞ホットピンク色を使う	color = 'hotpink'
＜オプション＞グラフの色をホットピンクに設定する	color = 'hotpink'
＜オプション＞インディアンレッド色を使う	color = 'indianred'
＜オプション＞インディアンレッド色を用いる	color = 'indianred'
＜オプション＞グラフの色をインディアンレッドに設定する	color = 'indianred'
＜オプション＞インディアンレッドにグラフの色を設定する	color = 'indianred'
＜オプション＞インディゴ色を使う	color = 'indigo'
＜オプション＞グラフの色をインディゴに設定する	color = 'indigo'
＜オプション＞色をインディゴに設定する	color = 'indigo'
＜オプション＞インディゴにグラフの色を設定する	color = 'indigo'
＜オプション＞アイボリー色を使う	color = 'ivory'
＜オプション＞アイボリー色を用いる	color = 'ivory'
＜オプション＞アイボリーを使う	color = 'ivory'
＜オプション＞グラフの色をアイボリーに設定する	color = 'ivory'
＜オプション＞アイボリーにグラフの色を設定する	color = 'ivory'
＜オプション＞グラフの色をアイボリーにセットする	color = 'ivory'
＜オプション＞カーキ色を使う	color = 'khaki'
＜オプション＞カーキ色を用いる	color = 'khaki'
＜オプション＞グラフの色をカーキに設定する	color = 'khaki'
＜オプション＞グラフの色をカーキにする	color = 'khaki'
＜オプション＞カーキに色を変更する	color = 'khaki'
＜オプション＞ラベンダー色を使う	color = 'lavender'
＜オプション＞グラフの色をラベンダーに設定する	color = 'lavender'
＜オプション＞ラベンダーにグラフの色を変更する	color = 'lavender'
＜オプション＞ラベンダーブラッシュ色を使う	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュを使用する	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュを使う	color = 'lavenderblush'
＜オプション＞グラフの色をラベンダーブラッシュに設定する	color = 'lavenderblush'
＜オプション＞色をラベンダーブラッシュに変更する	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュにグラフの色を設定する	color = 'lavenderblush'
＜オプション＞ローングリーン色を使う	color = 'lawngreen'
＜オプション＞グラフの色をローングリーンに設定する	color = 'lawngreen'
＜オプション＞グラフの色をローングリーンに変更する	color = 'lawngreen'
＜オプション＞レモンシフォン色を使う	color = 'lemonchiffon'
＜オプション＞レモンシフォン色を用いる	color = 'lemonchiffon'
＜オプション＞グラフの色をレモンシフォンに設定する	color = 'lemonchiffon'
＜オプション＞グラフの色をレモンシフォンに変更する	color = 'lemonchiffon'
＜オプション＞レモンシフォンにグラフの色をセットする	color = 'lemonchiffon'
＜オプション＞ライトブルー色を使う	color = 'lightblue'
＜オプション＞ライトブルー色を用いる	color = 'lightblue'
＜オプション＞ライトブルー色を使用する	color = 'lightblue'
＜オプション＞グラフの色をライトブルーに設定する	color = 'lightblue'
＜オプション＞ライトブルーにグラフの色を設定する	color = 'lightblue'
＜オプション＞ライトコーラル色を使う	color = 'lightcoral'
＜オプション＞グラフの色をライトコーラルに設定する	color = 'lightcoral'
＜オプション＞色をライトコーラルに指定する	color = 'lightcoral'
＜オプション＞ライトシアン色を使う	color = 'lightcyan'
＜オプション＞ライトシアン色を使用する	color = 'lightcyan'
＜オプション＞グラフの色をライトシアンに設定する	color = 'lightcyan'
＜オプション＞色をライトシアンに設定する	color = 'lightcyan'
＜オプション＞グラフの色をライトシアンに変更する	color = 'lightcyan'
＜オプション＞ライトシアンにグラフの色を設定する	color = 'lightcyan'
＜オプション＞ライトゴールドロディイエロー色を使う	color = 'lightgoldenrodyellow'
＜オプション＞ライトゴールドロディイエロー色を用いる	color = 'lightgoldenrodyellow'
＜オプション＞グラフの色をライトゴールドロディイエローに設定する	color = 'lightgoldenrodyellow'
＜オプション＞ライトゴールドロディイエローにグラフの色をセットする	color = 'lightgoldenrodyellow'
＜オプション＞ライトグレー色を使う	color = 'lightgray'
＜オプション＞ライトグレー色を用いる	color = 'lightgray'
＜オプション＞グラフの色をライトグレーに設定する	color = 'lightgray'
＜オプション＞ライトグレーにグラフの色をセットする	color = 'lightgray'
＜オプション＞色をライトグレーに設定する	color = 'lightgray'
＜オプション＞ライトグリーン色を使う	color = 'lightgreen'
＜オプション＞グラフの色をライトグリーンに設定する	color = 'lightgreen'
＜オプション＞ライトグリーンに色を設定する	color = 'lightgreen'
＜オプション＞ライトグリーンにグラフの色を設定する	color = 'lightgreen'
＜オプション＞グラフの色をライトグリーンに指定する	color = 'lightgreen'
＜オプション＞ライトグレー色を使う	color = 'lightgrey'
＜オプション＞ライトグレー色を用いる	color = 'lightgrey'
＜オプション＞グラフの色をライトグレーに設定する	color = 'lightgrey'
＜オプション＞グラフの色をライトグレーに指定する	color = 'lightgrey'
＜オプション＞ライトグレーにグラフの色を設定する	color = 'lightgrey'
＜オプション＞淡いピンク色色を使う	color = 'lightpink'
＜オプション＞淡いピンク色色を使用する	color = 'lightpink'
＜オプション＞グラフの色を淡いピンク色に設定する	color = 'lightpink'
＜オプション＞ライトサーモン色を使う	color = 'lightsalmon'
＜オプション＞ライトサーモンを使用する	color = 'lightsalmon'
＜オプション＞グラフの色をライトサーモンに設定する	color = 'lightsalmon'
＜オプション＞グラフの色をライトサーモンに指定する	color = 'lightsalmon'
＜オプション＞ライトグリーン色を使う	color = 'lightseagreen'
＜オプション＞ライトグリーン色を用いる	color = 'lightseagreen'
＜オプション＞グラフの色をライトグリーンに設定する	color = 'lightseagreen'
＜オプション＞色をライトグリーンに設定する	color = 'lightseagreen'
＜オプション＞ライトスカイブルー色を使う	color = 'lightskyblue'
＜オプション＞グラフの色をライトスカイブルーに設定する	color = 'lightskyblue'
＜オプション＞ライトスカイブルーにグラフの色を指定する	color = 'lightskyblue'
＜オプション＞グラフの色をライトスカイブルーに変更する	color = 'lightskyblue'
＜オプション＞ライトスレイグレー色を使う	color = 'lightslategray'
＜オプション＞ライトスレイグレーを用いる	color = 'lightslategray'
＜オプション＞グラフの色をライトスレイグレーに設定する	color = 'lightslategray'
＜オプション＞グラフの色をライトスレイグレーに変更する	color = 'lightslategray'
＜オプション＞ライトスレイグレーにグラフの色を設定する	color = 'lightslategray'
＜オプション＞ライトスレイグレー色を使う	color = 'lightslategrey'
＜オプション＞グラフの色をライトスレイグレーに設定する	color = 'lightslategrey'
＜オプション＞ライトスレイグレーにグラフの色を設定する	color = 'lightslategrey'
＜オプション＞ライトスレイグレーに色を設定する	color = 'lightslategrey'
＜オプション＞ライトスチールブルー色を使う	color = 'lightsteelblue'
＜オプション＞ライトスチールブルーを使用する	color = 'lightsteelblue'
＜オプション＞グラフの色をライトスチールブルーに設定する	color = 'lightsteelblue'
＜オプション＞グラフの色をライトスチールブルーに指定する	color = 'lightsteelblue'
＜オプション＞ライトイエロー色を使う	color = 'lightyellow'
＜オプション＞グラフの色をライトイエローに設定する	color = 'lightyellow'
＜オプション＞ライトイエローに色を設定する	color = 'lightyellow'
＜オプション＞ライム色を使う	color = 'lime'
＜オプション＞グラフの色をライムに設定する	color = 'lime'
＜オプション＞色をライムに指定する	color = 'lime'
＜オプション＞ライムグリーン色を使う	color = 'limegreen'
＜オプション＞ライムグリーンを用いる	color = 'limegreen'
＜オプション＞グラフの色をライムグリーンに設定する	color = 'limegreen'
＜オプション＞グラフの色をライムグリーンに指定する	color = 'limegreen'
＜オプション＞ライムグリーンにグラフの色を設定する	color = 'limegreen'
＜オプション＞リネン色を使う	color = 'linen'
＜オプション＞グラフの色をリネンに設定する	color = 'linen'
＜オプション＞グラフの色をリネンに変更する	color = 'linen'
＜オプション＞マゼンタ色を使う	color = 'magenta'
＜オプション＞マゼンタを使う	color = 'magenta'
＜オプション＞マゼンタ色を用いる	color = 'magenta'
＜オプション＞グラフの色をマゼンタに設定する	color = 'magenta'
＜オプション＞グラフの色をマゼンタに指定する	color = 'magenta'
＜オプション＞マゼンタにグラフの色を設定する	color = 'magenta'
＜オプション＞マルーン色を使う	color = 'maroon'
＜オプション＞マルーンを使う	color = 'maroon'
＜オプション＞グラフの色をマルーンに設定する	color = 'maroon'
＜オプション＞グラフの色をマルーンに変更する	color = 'maroon'
＜オプション＞ミディアムアクアマリン色を使う	color = 'mediumaquamarine'
＜オプション＞ミディアムアクアマリン色を用いる	color = 'mediumaquamarine'
＜オプション＞グラフの色をミディアムアクアマリンに設定する	color = 'mediumaquamarine'
＜オプション＞ミディアムブルー色を使う	color = 'mediumblue'
＜オプション＞ミディアムブルーを用いる	color = 'mediumblue'
＜オプション＞グラフの色をミディアムブルーに設定する	color = 'mediumblue'
＜オプション＞色をミディアムブルーに設定する	color = 'mediumblue'
＜オプション＞ミディアムオーキッド色を使う	color = 'mediumorchid'
＜オプション＞グラフの色をミディアムオーキッドに設定する	color = 'mediumorchid'
＜オプション＞グラフの色をミディアムオーキッドに指定する	color = 'mediumorchid'
＜オプション＞ミディアムパープル色を使う	color = 'mediumpurple'
＜オプション＞グラフの色をミディアムパープルに設定する	color = 'mediumpurple'
＜オプション＞ミディアムパープルにグラフの色を設定する	color = 'mediumpurple'
＜オプション＞色をミディアムパープルに設定する	color = 'mediumpurple'
＜オプション＞ミディアムシアグリーン色を使う	color = 'mediumseagreen'
＜オプション＞グラフの色をミディアムシアグリーンに設定する	color = 'mediumseagreen'
＜オプション＞色をミディアムシアグリーンに指定する	color = 'mediumseagreen'
＜オプション＞ミディアムスレートブルー色を使う	color = 'mediumslateblue'
＜オプション＞グラフの色をミディアムスレートブルーに設定する	color = 'mediumslateblue'
＜オプション＞色をミディアムスレートブルーに指定する	color = 'mediumslateblue'
＜オプション＞ミディアムスプリンググリーン色を使う	color = 'mediumspringgreen'
＜オプション＞グラフの色をミディアムスプリンググリーンに設定する	color = 'mediumspringgreen'
＜オプション＞グラフの色をミディアムスプリンググリーンにセットする	color = 'mediumspringgreen'
＜オプション＞グラフの色をミディアムスプリンググリーンに指定する	color = 'mediumspringgreen'
＜オプション＞ミディアムターコイズ色を使う	color = 'mediumturquoise'
＜オプション＞グラフの色をミディアムターコイズに設定する	color = 'mediumturquoise'
＜オプション＞グラフの色をミディアムターコイズに指定する	color = 'mediumturquoise'
＜オプション＞ミディアムバイオレットレッド色を使う	color = 'mediumvioletred'
＜オプション＞ミディアムバイオレットレッド色を使用する	color = 'mediumvioletred'
＜オプション＞グラフの色をミディアムバイオレットレッドに設定する	color = 'mediumvioletred'
＜オプション＞グラフの色をミディアムバイオレットレッドに指定する	color = 'mediumvioletred'
＜オプション＞グラフの色をミディアムバイオレットレッドにする	color = 'mediumvioletred'
＜オプション＞ミッドナイトブルー色を使う	color = 'midnightblue'
＜オプション＞グラフの色をミッドナイトブルーに設定する	color = 'midnightblue'
＜オプション＞ミントクリーム色を使う	color = 'mintcream'
＜オプション＞ミントクリームを使う	color = 'mintcream'
＜オプション＞ミントクリーム色を用いる	color = 'mintcream'
＜オプション＞グラフの色をミントクリームに設定する	color = 'mintcream'
＜オプション＞グラフの色をミントクリームにする	color = 'mintcream'
＜オプション＞ミントクリームにグラフの色を変更する	color = 'mintcream'
＜オプション＞ミスティローズ色を使う	color = 'mistyrose'
＜オプション＞グラフの色をミスティローズに設定する	color = 'mistyrose'
＜オプション＞ミスティローズにグラフの色を設定する	color = 'mistyrose'
＜オプション＞モカシン色を使う	color = 'moccasin'
＜オプション＞モカシンを用いる	color = 'moccasin'
＜オプション＞モカシン色を使用する	color = 'moccasin'
＜オプション＞グラフの色をモカシンに設定する	color = 'moccasin'
＜オプション＞モカシンにグラフの色を指定する	color = 'moccasin'
＜オプション＞モカシンにグラフの色を設定する	color = 'moccasin'
＜オプション＞ナバホホワイト色を使う	color = 'navajowhite'
＜オプション＞ナバホホワイト色を用いる	color = 'navajowhite'
＜オプション＞グラフの色をナバホホワイトに設定する	color = 'navajowhite'
＜オプション＞グラフの色をナバホホワイトにセットする	color = 'navajowhite'
＜オプション＞ネイビー色を使う	color = 'navy'
＜オプション＞ネイビーを使用する	color = 'navy'
＜オプション＞グラフの色をネイビーに設定する	color = 'navy'
＜オプション＞オールドレース色を使う	color = 'oldlace'
＜オプション＞グラフの色をオールドレースに設定する	color = 'oldlace'
＜オプション＞オールドレースにグラフの色を設定する	color = 'oldlace'
＜オプション＞オリーブ色を使う	color = 'olive'
＜オプション＞オリーブ色を用いる	color = 'olive'
＜オプション＞グラフの色をオリーブに設定する	color = 'olive'
＜オプション＞オリーブにグラフの色を指定する	color = 'olive'
＜オプション＞オリーブに色を設定する	color = 'olive'
＜オプション＞グラフの色をオリーブに指定する	color = 'olive'
＜オプション＞オリベドラブ色を使う	color = 'olivedrab'
＜オプション＞オリベドラブを用いる	color = 'olivedrab'
＜オプション＞グラフの色をオリベドラブに設定する	color = 'olivedrab'
＜オプション＞色をオリベドラブに設定する	color = 'olivedrab'
＜オプション＞オレンジ色を使う	color = 'orange'
＜オプション＞グラフの色をオレンジに設定する	color = 'orange'
＜オプション＞色をオレンジに指定する	color = 'orange'
＜オプション＞オレンジレッド色を使う	color = 'orangered'
＜オプション＞グラフの色をオレンジレッドに設定する	color = 'orangered'
＜オプション＞グラフの色をオレンジレッドにする	color = 'orangered'
＜オプション＞オーキッド色を使う	color = 'orchid'
＜オプション＞グラフの色をオーキッドに設定する	color = 'orchid'
＜オプション＞オーキッドにグラフの色を設定する	color = 'orchid'
＜オプション＞色をオーキッドに設定する	color = 'orchid'
＜オプション＞パールゴールデンロッド色を使う	color = 'palegoldenrod'
＜オプション＞グラフの色をパールゴールデンロッドに設定する	color = 'palegoldenrod'
＜オプション＞色をパールゴールデンロッドに設定する	color = 'palegoldenrod'
＜オプション＞ペールグリーン色を使う	color = 'palegreen'
＜オプション＞ペールグリーンを使う	color = 'palegreen'
＜オプション＞グラフの色をペールグリーンに設定する	color = 'palegreen'
＜オプション＞パレットトルコイズ色を使う	color = 'paleturquoise'
＜オプション＞グラフの色をパレットトルコイズに設定する	color = 'paleturquoise'
＜オプション＞パレットトルコイズにグラフの色を設定する	color = 'paleturquoise'
＜オプション＞パールバイオレットレッド色を使う	color = 'palevioletred'
＜オプション＞パールバイオレットレッドを使う	color = 'palevioletred'
＜オプション＞パールバイオレットレッド色を用いる	color = 'palevioletred'
＜オプション＞グラフの色をパールバイオレットレッドに設定する	color = 'palevioletred'
＜オプション＞パールバイオレットレッドにグラフの色を設定する	color = 'palevioletred'
＜オプション＞パパイヤウィップ色を使う	color = 'papayawhip'
＜オプション＞パパイヤウィップ色を使用する	color = 'papayawhip'
＜オプション＞グラフの色をパパイヤウィップに設定する	color = 'papayawhip'
＜オプション＞パパイヤウィップに色を設定する	color = 'papayawhip'
＜オプション＞色をパパイヤウィップに指定する	color = 'papayawhip'
＜オプション＞パパイヤウィップにグラフの色を変更する	color = 'papayawhip'
＜オプション＞ピーチパフ色を使う	color = 'peachpuff'
＜オプション＞ピーチパフ色を用いる	color = 'peachpuff'
＜オプション＞グラフの色をピーチパフに設定する	color = 'peachpuff'
＜オプション＞グラフの色をピーチパフにセットする	color = 'peachpuff'
＜オプション＞ペルー色を使う	color = 'peru'
＜オプション＞ペルー色を使用する	color = 'peru'
＜オプション＞ペルーを使う	color = 'peru'
＜オプション＞グラフの色をペルーに設定する	color = 'peru'
＜オプション＞色をペルーに変更する	color = 'peru'
＜オプション＞ペルーにグラフの色を設定する	color = 'peru'
＜オプション＞ピンク色を使う	color = 'pink'
＜オプション＞ピンクを使う	color = 'pink'
＜オプション＞グラフの色をピンクに設定する	color = 'pink'
＜オプション＞ピンクにグラフの色をセットする	color = 'pink'
＜オプション＞ピンクに色を設定する	color = 'pink'
＜オプション＞グラフの色をピンクにセットする	color = 'pink'
＜オプション＞プラム色を使う	color = 'plum'
＜オプション＞プラム色を使用する	color = 'plum'
＜オプション＞プラムを使用する	color = 'plum'
＜オプション＞グラフの色をプラムに設定する	color = 'plum'
＜オプション＞グラフの色をプラムに変更する	color = 'plum'
＜オプション＞プラムにグラフの色を設定する	color = 'plum'
＜オプション＞パウダーブルー色を使う	color = 'powderblue'
＜オプション＞パウダーブルーを使う	color = 'powderblue'
＜オプション＞パウダーブルー色を用いる	color = 'powderblue'
＜オプション＞グラフの色をパウダーブルーに設定する	color = 'powderblue'
＜オプション＞グラフの色をパウダーブルーに変更する	color = 'powderblue'
＜オプション＞色をパウダーブルーに設定する	color = 'powderblue'
＜オプション＞パープル色を使う	color = 'purple'
＜オプション＞グラフの色をパープルに設定する	color = 'purple'
＜オプション＞色をパープルに変更する	color = 'purple'
＜オプション＞レベッカパープル色を使う	color = 'rebeccapurple'
＜オプション＞グラフの色をレベッカパープルに設定する	color = 'rebeccapurple'
＜オプション＞レベッカパープルにグラフの色を設定する	color = 'rebeccapurple'
＜オプション＞赤色を使う	color = 'red'
＜オプション＞赤を用いる	color = 'red'
＜オプション＞グラフの色を赤に設定する	color = 'red'
＜オプション＞赤にグラフの色をする	color = 'red'
＜オプション＞色を赤に設定する	color = 'red'
＜オプション＞赤に色をする	color = 'red'
＜オプション＞ロージーブラウン色を使う	color = 'rosybrown'
＜オプション＞ロージーブラウンを使う	color = 'rosybrown'
＜オプション＞グラフの色をロージーブラウンに設定する	color = 'rosybrown'
＜オプション＞色をロージーブラウンに設定する	color = 'rosybrown'
＜オプション＞ロイヤルブルー色を使う	color = 'royalblue'
＜オプション＞ロイヤルブルーを使う	color = 'royalblue'
＜オプション＞グラフの色をロイヤルブルーに設定する	color = 'royalblue'
＜オプション＞サドルブラウン色を使う	color = 'saddlebrown'
＜オプション＞サドルブラウン色を使用する	color = 'saddlebrown'
＜オプション＞グラフの色をサドルブラウンに設定する	color = 'saddlebrown'
＜オプション＞色をサドルブラウンに設定する	color = 'saddlebrown'
＜オプション＞サーモン色を使う	color = 'salmon'
＜オプション＞サーモン色を使用する	color = 'salmon'
＜オプション＞グラフの色をサーモンに設定する	color = 'salmon'
＜オプション＞色をサーモンに変更する	color = 'salmon'
＜オプション＞サーモンに色を指定する	color = 'salmon'
＜オプション＞グラフの色をサーモンに指定する	color = 'salmon'
＜オプション＞サンディーブラウン色を使う	color = 'sandybrown'
＜オプション＞サンディーブラウンを使う	color = 'sandybrown'
＜オプション＞サンディーブラウン色を用いる	color = 'sandybrown'
＜オプション＞グラフの色をサンディーブラウンに設定する	color = 'sandybrown'
＜オプション＞サンディーブラウンにグラフの色を指定する	color = 'sandybrown'
＜オプション＞シーグリーン色を使う	color = 'seagreen'
＜オプション＞シーグリーンを使用する	color = 'seagreen'
＜オプション＞グラフの色をシーグリーンに設定する	color = 'seagreen'
＜オプション＞色をシーグリーンに設定する	color = 'seagreen'
＜オプション＞シーグリーンにグラフの色を変更する	color = 'seagreen'
＜オプション＞貝殻色を使う	color = 'seashell'
＜オプション＞グラフの色を貝殻に設定する	color = 'seashell'
＜オプション＞シエナ色を使う	color = 'sienna'
＜オプション＞シエナ色を使用する	color = 'sienna'
＜オプション＞シエナを用いる	color = 'sienna'
＜オプション＞グラフの色をシエナに設定する	color = 'sienna'
＜オプション＞グラフの色をシエナに変更する	color = 'sienna'
＜オプション＞シエナにグラフの色を設定する	color = 'sienna'
＜オプション＞シルバー色を使う	color = 'silver'
＜オプション＞シルバーを用いる	color = 'silver'
＜オプション＞グラフの色をシルバーに設定する	color = 'silver'
＜オプション＞グラフの色をシルバーにセットする	color = 'silver'
＜オプション＞グラフの色をシルバーに変更する	color = 'silver'
＜オプション＞スカイブルー色を使う	color = 'skyblue'
＜オプション＞グラフの色をスカイブルーに設定する	color = 'skyblue'
＜オプション＞色をスカイブルーに設定する	color = 'skyblue'
＜オプション＞スレートブルー色を使う	color = 'slateblue'
＜オプション＞スレートブルー色を使用する	color = 'slateblue'
＜オプション＞スレートブルーを使う	color = 'slateblue'
＜オプション＞グラフの色をスレートブルーに設定する	color = 'slateblue'
＜オプション＞スレートブルーにグラフの色を設定する	color = 'slateblue'
＜オプション＞色をスレートブルーに設定する	color = 'slateblue'
＜オプション＞スラグレー色を使う	color = 'slategray'
＜オプション＞スラグレー色を用いる	color = 'slategray'
＜オプション＞グラフの色をスラグレーに設定する	color = 'slategray'
＜オプション＞スラグレーにグラフの色を設定する	color = 'slategray'
＜オプション＞スラグレー色を使う	color = 'slategrey'
＜オプション＞グラフの色をスラグレーに設定する	color = 'slategrey'
＜オプション＞スラグレーにグラフの色を指定する	color = 'slategrey'
＜オプション＞スノー色を使う	color = 'snow'
＜オプション＞スノーを使用する	color = 'snow'
＜オプション＞スノーを用いる	color = 'snow'
＜オプション＞グラフの色をスノーに設定する	color = 'snow'
＜オプション＞グラフの色をスノーにセットする	color = 'snow'
＜オプション＞グラフの色をスノーに指定する	color = 'snow'
＜オプション＞スプリンググリーン色を使う	color = 'springgreen'
＜オプション＞グラフの色をスプリンググリーンに設定する	color = 'springgreen'
＜オプション＞スプリンググリーンにグラフの色を設定する	color = 'springgreen'
＜オプション＞色をスプリンググリーンに設定する	color = 'springgreen'
＜オプション＞スチールブルー色を使う	color = 'steelblue'
＜オプション＞グラフの色をスチールブルーに設定する	color = 'steelblue'
＜オプション＞タン色を使う	color = 'tan'
＜オプション＞タン色を使用する	color = 'tan'
＜オプション＞淡い茶色を用いる	color = 'tan'
＜オプション＞グラフの色をタンに設定する	color = 'tan'
＜オプション＞グラフの色を淡い茶色に指定する	color = 'tan'
＜オプション＞青緑色を使う	color = 'teal'
＜オプション＞ティールを用いる	color = 'teal'
＜オプション＞青緑を使う	color = 'teal'
＜オプション＞グラフの色を青緑に設定する	color = 'teal'
＜オプション＞色を青緑に設定する	color = 'teal'
＜オプション＞ティールにグラフの色をする	color = 'teal'
＜オプション＞グラフの色をティールに設定する	color = 'teal'
＜オプション＞シスル色を使う	color = 'thistle'
＜オプション＞シスル色を用いる	color = 'thistle'
＜オプション＞グラフの色をシスルに設定する	color = 'thistle'
＜オプション＞シスルにグラフの色を指定する	color = 'thistle'
＜オプション＞トマト色を使う	color = 'tomato'
＜オプション＞トマト色を使用する	color = 'tomato'
＜オプション＞グラフの色をトマトに設定する	color = 'tomato'
＜オプション＞トマトにグラフの色を設定する	color = 'tomato'
＜オプション＞グラフの色をトマトに指定する	color = 'tomato'
＜オプション＞ターコイズ色を使う	color = 'turquoise'
＜オプション＞青緑色を使う	color = 'turquoise'
＜オプション＞グラフの色をターコイズに設定する	color = 'turquoise'
＜オプション＞グラフの色を青緑に設定する	color = 'turquoise'
＜オプション＞色をターコイズに設定する	color = 'turquoise'
＜オプション＞青紫色を使う	color = 'violet'
＜オプション＞青紫色を用いる	color = 'violet'
＜オプション＞バイオレット色を使う	color = 'violet'
＜オプション＞グラフの色を青紫に設定する	color = 'violet'
＜オプション＞色を青紫に設定する	color = 'violet'
＜オプション＞グラフの色を青紫に指定する	color = 'violet'
＜オプション＞小麦色色を使う	color = 'wheat'
＜オプション＞グラフの色を小麦色に設定する	color = 'wheat'
＜オプション＞グラフの色を小麦色に指定する	color = 'wheat'
＜オプション＞色を小麦色に設定する	color = 'wheat'
＜オプション＞白色を使う	color = 'white'
＜オプション＞ホワイト色を使う	color = 'white'
＜オプション＞ホワイトを用いる	color = 'white'
＜オプション＞グラフの色を白に設定する	color = 'white'
＜オプション＞白に色をセットする	color = 'white'
＜オプション＞白にグラフの色を設定する	color = 'white'
＜オプション＞ホワイトスモーク色を使う	color = 'whitesmoke'
＜オプション＞ホワイトスモークを使う	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークに設定する	color = 'whitesmoke'
＜オプション＞ホワイトスモークにグラフの色を設定する	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークに変更する	color = 'whitesmoke'
＜オプション＞黄色色を使う	color = 'yellow'
＜オプション＞黄色色を使用する	color = 'yellow'
＜オプション＞グラフの色を黄色に設定する	color = 'yellow'
＜オプション＞グラフの色を黄色に変更する	color = 'yellow'
＜オプション＞色を黄色に変更する	color = 'yellow'
＜オプション＞イエローグリーン色を使う	color = 'yellowgreen'
＜オプション＞イエローグリーンを使う	color = 'yellowgreen'
＜オプション＞イエローグリーン色を使用する	color = 'yellowgreen'
＜オプション＞グラフの色をイエローグリーンに設定する	color = 'yellowgreen'
＜オプション＞イエローグリーンにグラフの色をセットする	color = 'yellowgreen'
折れ線グラフの色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフの色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフの色をアリスブルーに指定する	plt.plot(データ列, データ列2, color='aliceblue')
アリスブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフを描画して、その色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフを描画して、その色をアリスブルーに変更する	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフを描画して、その色をアリスブルーにセットする	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフの色をアンティークホワイトに指定する	plt.plot(データ列, データ列2, color='antiquewhite')
アンティークホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
線グラフを描画して、その色をアンティークホワイトに指定する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフの色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフの色をアクアに指定する	plt.plot(データ列, データ列2, color='aqua')
アクア色の線グラフを描画する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画して、その色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画してその色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画して、その色をアクアにする	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフの色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフの色をアクアマリンに指定する	plt.plot(データ列, データ列2, color='aquamarine')
アクアマリン色の線グラフを描画する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
線グラフを描画して、色をアクアマリンにセットする	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに変更する	plt.plot(データ列, データ列2, color='aquamarine')
線グラフを描画して、その色をアクアマリンに変更する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフの色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
紺碧色の線グラフを描画する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフを描画して、その色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
線グラフを描画して、その色を紺碧にする	plt.plot(データ列, データ列2, color='azure')
折れ線グラフを描画して、色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフの色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
線グラフの色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
ベージュ色の線グラフを描画する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフを描画して、その色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフを描画してその色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフの色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフの色をビスクに指定する	plt.plot(データ列, データ列2, color='bisque')
線グラフの色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
ビスク色の線グラフを描画する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフを描画して、その色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
線グラフを描画して、色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフの色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
ブラック色の線グラフを描画する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して、その色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
線グラフを描画して、その色をブラックに指定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して、色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
線グラフの色をブランチドアーモンドに指定する	plt.plot(データ列, データ列2, color='blanchedalmond')
ブランチドアーモンド色の線グラフを描画する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフを描画して、色をブランチドアーモンドに変更する	plt.plot(データ列, データ列2, color='blanchedalmond')
線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフの色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色を青にする	plt.plot(データ列, データ列2, color='blue')
青色の線グラフを描画する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して、その色を青に設定する	plt.plot(データ列, データ列2, color='blue')
線グラフを描画してその色を青に指定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
線グラフの色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
ブルーバイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフを描画してその色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフの色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
線グラフの色を茶色に指定する	plt.plot(データ列, データ列2, color='brown')
線グラフの色をブラウンに設定する	plt.plot(データ列, データ列2, color='brown')
茶色色の線グラフを描画する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、その色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
線グラフを描画してその色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
線グラフを描画して、色をブラウンに設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフの色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
バリーウッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、その色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、色をバリーウッドにする	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、その色をバリーウッドに指定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフの色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
線グラフの色をカデットブルーに変更する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフの色をカデットブルーに指定する	plt.plot(データ列, データ列2, color='cadetblue')
カデットブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、その色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画してその色をカデットブルーに指定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、その色をカデットブルーに指定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフの色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフの色をシャルトリューズにセットする	plt.plot(データ列, データ列2, color='chartreuse')
線グラフの色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
シャルトリューズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='chartreuse')
シャルトリューズ色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して、その色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画してその色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して、その色をシャルトリューズに指定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフの色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
線グラフの色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
チョコレート色の線グラフを描画する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、その色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画してその色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、その色をチョコレートに指定する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフの色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
線グラフの色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
線グラフの色をコーラルに指定する	plt.plot(データ列, データ列2, color='coral')
コーラル色の線グラフを描画する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、その色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をコーンフラワーブルーに指定する	plt.plot(データ列, データ列2, color='cornflowerblue')
コーンフラワーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='cornflowerblue')
コーンフラワーブルー色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
線グラフを描画して色をコーンフラワーブルーに変更する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、その色をコーンフラワーブルーに変更する	plt.plot(データ列, データ列2, color='cornflowerblue')
線グラフを描画して、色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフの色をコーンズシルクに変更する	plt.plot(データ列, データ列2, color='cornsilk')
線グラフの色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
コーンズシルク色の線グラフを描画する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画して、色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
線グラフを描画して、その色をコーンズシルクに変更する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフの色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフの色を真紅に設定する	plt.plot(データ列, データ列2, color='crimson')
クリムゾン色の線グラフを描画する	plt.plot(データ列, データ列2, color='crimson')
クリムゾン色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='crimson')
真紅色の線グラフを描画する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色をクリムゾンに指定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色を真紅に設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフの色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
シアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画して、その色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
線グラフを描画してその色をシアンに変更する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画して、色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフの色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色を紺に変更する	plt.plot(データ列, データ列2, color='darkblue')
線グラフの色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
紺色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
ダークブルー色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
濃い青色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画して、その色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画して色をダークブルーに設定する	plt.plot(データ列, データ列2, color='darkblue')
線グラフを描画してその色を濃い青に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色をダークシアンに指定する	plt.plot(データ列, データ列2, color='darkcyan')
ダークシアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフを描画して、その色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフを描画して、色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
線グラフを描画してその色を濃いシアンにセットする	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
ダークゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画してその色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
線グラフを描画して色をダークゴールデンロッドに変更する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフの色をダークグレーに変更する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフの色をダークグレーにする	plt.plot(データ列, データ列2, color='darkgray')
ダークグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
線グラフを描画して、その色をダークグレーに変更する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフの色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
ダークグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、その色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
線グラフを描画して、色をダークグリーンにする	plt.plot(データ列, データ列2, color='darkgreen')
線グラフを描画して、その色をダークグリーンにセットする	plt.plot(データ列, データ列2, color='darkgreen')
線グラフを描画して、色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
線グラフの色をダークグレーに指定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフの色をダークグレーに変更する	plt.plot(データ列, データ列2, color='darkgrey')
ダークグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画して色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画してその色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフの色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフの色をダークカーキに変更する	plt.plot(データ列, データ列2, color='darkkhaki')
ダークカーキ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して、その色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して、色をダークカーキに指定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画してその色をダークカーキにする	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフの色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
ダークマゼンタ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
線グラフを描画して、色をダークマゼンタに指定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフを描画してその色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
ダークオリーブグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画してその色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフの色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフの色をダークオレンジに変更する	plt.plot(データ列, データ列2, color='darkorange')
線グラフの色をダークオレンジにする	plt.plot(データ列, データ列2, color='darkorange')
ダークオレンジ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、その色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
線グラフを描画して、その色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、その色をダークオレンジにセットする	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフの色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色をダークオーキッドに指定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色をダークオーキッドに変更する	plt.plot(データ列, データ列2, color='darkorchid')
ダークオーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフを描画してその色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
線グラフを描画して、色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフを描画して、色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
線グラフの色を暗い赤に指定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色を暗い赤に指定する	plt.plot(データ列, データ列2, color='darkred')
暗い赤色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、その色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
線グラフを描画して、その色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
線グラフを描画して、色を暗い赤にセットする	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフの色をダークサーモンにする	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフの色をダークサーモンに変更する	plt.plot(データ列, データ列2, color='darksalmon')
ダークサーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画して、その色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
線グラフを描画して、その色をダークサーモンに変更する	plt.plot(データ列, データ列2, color='darksalmon')
線グラフを描画して、色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフの色をダークシアグリーンに指定する	plt.plot(データ列, データ列2, color='darkseagreen')
ダークシアグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
線グラフを描画して色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画してその色をダークシアグリーンに指定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフの色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
ダークスレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画して、その色をダークスレートブルーにする	plt.plot(データ列, データ列2, color='darkslateblue')
線グラフを描画してその色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフの色をダークスラテグレーに指定する	plt.plot(データ列, データ列2, color='darkslategray')
線グラフの色をダークスラテグレーに指定する	plt.plot(データ列, データ列2, color='darkslategray')
ダークスラテグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して、色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
ダーク・スラテグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画して、その色をダーク・スラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフの色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフの色をダークターコイズにセットする	plt.plot(データ列, データ列2, color='darkturquoise')
ダークターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画して、その色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画して、色をダークターコイズに変更する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画して、色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画してその色をダークターコイズにセットする	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフの色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
ダークバイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画して、色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフの色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフの色をデピンクに指定する	plt.plot(データ列, データ列2, color='deeppink')
線グラフの色をデピンクに指定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフの色をデピンクに変更する	plt.plot(データ列, データ列2, color='deeppink')
デピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、その色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
線グラフを描画して、その色をデピンクに指定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、その色をデピンクにする	plt.plot(データ列, データ列2, color='deeppink')
線グラフを描画して、その色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
線グラフの色をディープスカイブルーにする	plt.plot(データ列, データ列2, color='deepskyblue')
ディープスカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフを描画してその色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
線グラフの色をディムグレーに指定する	plt.plot(データ列, データ列2, color='dimgray')
ディムグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフを描画して、色をディムグレーに変更する	plt.plot(データ列, データ列2, color='dimgray')
線グラフを描画して、その色をディムグレーにする	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフの色をディムグレーに指定する	plt.plot(データ列, データ列2, color='dimgrey')
ディムグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画してその色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画して、その色をディムグレーにする	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフの色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフの色をドジャーブルーに変更する	plt.plot(データ列, データ列2, color='dodgerblue')
線グラフの色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
ドジャーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフの色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
線グラフの色を耐火レンガに変更する	plt.plot(データ列, データ列2, color='firebrick')
耐火レンガ色の線グラフを描画する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフを描画して、その色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
線グラフの色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
線グラフの色をフローラルホワイトにする	plt.plot(データ列, データ列2, color='floralwhite')
フローラルホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画してその色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画して色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
フォレストグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフの色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフの色をフクシアに指定する	plt.plot(データ列, データ列2, color='fuchsia')
線グラフの色をフクシアにする	plt.plot(データ列, データ列2, color='fuchsia')
フクシア色の線グラフを描画する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画して、その色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画してその色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフの色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフの色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
ゲインズボロ色の線グラフを描画する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフを描画して、その色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフを描画して、色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフを描画して、色をゲインズボロに指定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフを描画して、その色をゲインズボロに指定する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフの色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
ゴーストホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフの色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールドにセットする	plt.plot(データ列, データ列2, color='gold')
ゴールド色の線グラフを描画する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して、その色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画してその色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して、その色をゴールドに指定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフの色をゴールデンロッドに変更する	plt.plot(データ列, データ列2, color='goldenrod')
ゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
線グラフを描画して色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
線グラフを描画して、その色をゴールデンロッドにセットする	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
グレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、その色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、その色をグレーに変更する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、その色をグレーに指定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフの色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフの色をグリーンに指定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフの色をグリーンにする	plt.plot(データ列, データ列2, color='green')
グリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='green')
折れ線グラフを描画して、その色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
線グラフを描画して、その色をグリーンに変更する	plt.plot(データ列, データ列2, color='green')
折れ線グラフを描画してその色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフの色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
グリーンイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
線グラフを描画してその色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフを描画して、その色をグリーンイエローにする	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフの色をグレーにする	plt.plot(データ列, データ列2, color='grey')
グレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して、その色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して、その色をグレーに変更する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して、色をグレーに変更する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフの色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
ハニーデュー色の線グラフを描画する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフを描画して、その色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフの色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
線グラフの色をホットピンクに指定する	plt.plot(データ列, データ列2, color='hotpink')
線グラフの色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
ホットピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフを描画して、その色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフを描画してその色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
線グラフを描画してその色をホットピンクに変更する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフの色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
線グラフの色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
インディアンレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、その色をインディアンレッドに指定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画してその色をインディアンレッドに指定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフの色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
インディゴ色の線グラフを描画する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画して、その色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画して、その色をインディゴに変更する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画してその色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフの色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフの色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフの色をアイボリーに変更する	plt.plot(データ列, データ列2, color='ivory')
アイボリー色の線グラフを描画する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画して、その色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画して、その色をアイボリーに指定する	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画して色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画して、その色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフの色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
線グラフの色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフの色をカーキに変更する	plt.plot(データ列, データ列2, color='khaki')
カーキ色の線グラフを描画する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、その色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画してその色をカーキに指定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフの色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
ラベンダー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画して、その色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画して、その色をラベンダーに変更する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画して色をラベンダーに指定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフの色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
線グラフの色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフの色をラベンダーブラッシュにセットする	plt.plot(データ列, データ列2, color='lavenderblush')
ラベンダーブラッシュ色の線グラフを描画する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフの色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフの色をローングリーンにする	plt.plot(データ列, データ列2, color='lawngreen')
線グラフの色をローングリーンに変更する	plt.plot(データ列, データ列2, color='lawngreen')
ローングリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画して、その色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画してその色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
線グラフを描画して、その色をローングリーンに変更する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフの色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
レモンシフォン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して、その色をレモンシフォンに指定する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して、色をレモンシフォンにセットする	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフの色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
ライトブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して、その色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して、その色をライトブルーに指定する	plt.plot(データ列, データ列2, color='lightblue')
線グラフを描画して、その色をライトブルーに指定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフの色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフの色をライトコーラルに変更する	plt.plot(データ列, データ列2, color='lightcoral')
ライトコーラル色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフを描画して、その色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
線グラフを描画してその色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフを描画して、色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフの色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
線グラフの色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
ライトシアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画してその色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
ライトゴールドロディイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
線グラフを描画して色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフを描画してその色をライトゴールドロディイエローに変更する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフの色をライトグレーに指定する	plt.plot(データ列, データ列2, color='lightgray')
ライトグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画してその色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画してその色をライトグレーに指定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
ライトグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画して、色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
線グラフを描画してその色をライトグリーンに変更する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
ライトグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画して、色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
線グラフを描画して色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフの色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフの色を淡いピンク色に変更する	plt.plot(データ列, データ列2, color='lightpink')
淡いピンク色色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して色を淡いピンク色にする	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画してその色を淡いピンク色に指定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフの色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
ライトサーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画して、その色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
線グラフを描画してその色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
線グラフを描画して、その色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画してその色をライトサーモンに指定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
ライトグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して、その色をライトグリーンに変更する	plt.plot(データ列, データ列2, color='lightseagreen')
線グラフを描画してその色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
線グラフの色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
ライトスカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して色をライトスカイブルーに指定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して、色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画してその色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフの色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフの色をライトスチールブルーに指定する	plt.plot(データ列, データ列2, color='lightsteelblue')
ライトスチールブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画してその色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
線グラフを描画してその色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフの色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフの色をライトイエローに指定する	plt.plot(データ列, データ列2, color='lightyellow')
ライトイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフを描画して、その色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフを描画してその色をライトイエローに指定する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフの色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
線グラフの色をライムに変更する	plt.plot(データ列, データ列2, color='lime')
線グラフの色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
ライム色の線グラフを描画する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して、その色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
線グラフを描画してその色をライムに指定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフの色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
ライムグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画して、その色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフの色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をリネンにセットする	plt.plot(データ列, データ列2, color='linen')
リネン色の線グラフを描画する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画して、その色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画して、その色をリネンに変更する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画して、色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
線グラフを描画して、その色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
線グラフの色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
マゼンタ色の線グラフを描画する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、その色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、その色をマゼンタに変更する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、その色をマゼンタにする	plt.plot(データ列, データ列2, color='magenta')
線グラフを描画して、その色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフの色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
マルーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、その色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、色をマルーンに指定する	plt.plot(データ列, データ列2, color='maroon')
線グラフを描画してその色をマルーンに指定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、その色をマルーンに変更する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
ミディアムアクアマリン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフを描画して色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフを描画してその色をミディアムアクアマリンに変更する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフを描画してその色をミディアムアクアマリンに指定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフの色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフの色をミディアムブルーに指定する	plt.plot(データ列, データ列2, color='mediumblue')
ミディアムブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフを描画してその色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
ミディアムオーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフの色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
線グラフの色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
ミディアムパープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフを描画して、色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフの色をミディアムシアグリーンに変更する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフの色をミディアムシアグリーンにセットする	plt.plot(データ列, データ列2, color='mediumseagreen')
ミディアムシアグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、その色をミディアムシアグリーンにセットする	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、色をミディアムシアグリーンにする	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
ミディアムスレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画して、その色をミディアムスレートブルーにする	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
線グラフの色をミディアムスプリンググリーンに変更する	plt.plot(データ列, データ列2, color='mediumspringgreen')
ミディアムスプリンググリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
線グラフを描画して、色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
線グラフを描画して色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフの色をミディアムターコイズに変更する	plt.plot(データ列, データ列2, color='mediumturquoise')
線グラフの色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
ミディアムターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、その色をミディアムターコイズに変更する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画してその色をミディアムターコイズに変更する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画してその色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフの色をミディアムバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='mediumvioletred')
ミディアムバイオレットレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフを描画して色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
ミッドナイトブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフの色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
線グラフの色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
ミントクリーム色の線グラフを描画する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画して、その色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画してその色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフの色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフの色をミスティローズに指定する	plt.plot(データ列, データ列2, color='mistyrose')
ミスティローズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、その色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、その色をミスティローズに変更する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフの色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
モカシン色の線グラフを描画する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画して、その色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画して、色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画してその色をモカシンに変更する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフの色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフの色をナバホホワイトにセットする	plt.plot(データ列, データ列2, color='navajowhite')
ナバホホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
線グラフを描画してその色をナバホホワイトにセットする	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画してその色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフの色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
ネイビー色の線グラフを描画する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、その色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、その色をネイビーにセットする	plt.plot(データ列, データ列2, color='navy')
折れ線グラフの色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
オールドレース色の線グラフを描画する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、その色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画してその色をオールドレースに変更する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフの色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
線グラフの色をオリーブに変更する	plt.plot(データ列, データ列2, color='olive')
オリーブ色の線グラフを描画する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画して、その色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画して色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
線グラフを描画して、色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフの色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフの色をオリベドラブに指定する	plt.plot(データ列, データ列2, color='olivedrab')
オリベドラブ色の線グラフを描画する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して、その色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して、色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフの色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
線グラフの色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
オレンジ色の線グラフを描画する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、その色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、その色をオレンジにセットする	plt.plot(データ列, データ列2, color='orange')
線グラフを描画して、その色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフの色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
線グラフの色をオレンジレッドに指定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフの色をオレンジレッドに指定する	plt.plot(データ列, データ列2, color='orangered')
オレンジレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、その色をオレンジレッドに変更する	plt.plot(データ列, データ列2, color='orangered')
線グラフを描画して、色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフの色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
線グラフの色をオーキッドに指定する	plt.plot(データ列, データ列2, color='orchid')
オーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、その色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、色をオーキッドに指定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
線グラフの色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
パールゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフを描画して、その色をパールゴールデンロッドに変更する	plt.plot(データ列, データ列2, color='palegoldenrod')
線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフの色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフの色をペールグリーンに指定する	plt.plot(データ列, データ列2, color='palegreen')
ペールグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、その色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、その色をペールグリーンに変更する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画してその色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、その色をペールグリーンに指定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
線グラフの色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
パレットトルコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
線グラフを描画して色をパレットトルコイズに変更する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフを描画して、色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフの色をパールバイオレットレッドにセットする	plt.plot(データ列, データ列2, color='palevioletred')
パールバイオレットレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画して、色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画して、その色をパールバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
線グラフの色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
パパイヤウィップ色の線グラフを描画する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
線グラフを描画してその色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフを描画して、色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフの色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフの色をピーチパフにする	plt.plot(データ列, データ列2, color='peachpuff')
線グラフの色をピーチパフに指定する	plt.plot(データ列, データ列2, color='peachpuff')
ピーチパフ色の線グラフを描画する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、その色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、その色をピーチパフに指定する	plt.plot(データ列, データ列2, color='peachpuff')
線グラフを描画して、色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフの色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
ペルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、その色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
線グラフを描画して、その色をペルーに変更する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、その色をペルーに指定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画してその色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフの色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
線グラフの色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
ピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して、その色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して、その色をピンクに変更する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフの色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
線グラフの色をプラムにセットする	plt.plot(データ列, データ列2, color='plum')
線グラフの色をプラムに変更する	plt.plot(データ列, データ列2, color='plum')
プラム色の線グラフを描画する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画して、その色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画して、その色をプラムに変更する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画してその色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフの色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
パウダーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
線グラフを描画して色をパウダーブルーに変更する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフの色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフの色をパープルに変更する	plt.plot(データ列, データ列2, color='purple')
パープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフを描画して、その色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
線グラフを描画して、その色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフを描画して、色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフの色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
線グラフの色をレベッカパープルに変更する	plt.plot(データ列, データ列2, color='rebeccapurple')
線グラフの色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
レベッカパープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフの色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフの色を赤に指定する	plt.plot(データ列, データ列2, color='red')
赤色の線グラフを描画する	plt.plot(データ列, データ列2, color='red')
折れ線グラフを描画して、その色を赤に設定する	plt.plot(データ列, データ列2, color='red')
線グラフを描画して、その色を赤に指定する	plt.plot(データ列, データ列2, color='red')
線グラフを描画して、色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフの色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
ロージーブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
線グラフを描画して、色をロージーブラウンに指定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフの色をロイヤルブルーに指定する	plt.plot(データ列, データ列2, color='royalblue')
線グラフの色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
ロイヤルブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフを描画してその色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフの色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
線グラフの色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフの色をサドルブラウンに変更する	plt.plot(データ列, データ列2, color='saddlebrown')
サドルブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画してその色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフの色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
サーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフを描画して、その色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
線グラフを描画して、その色をサーモンに指定する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフを描画して、その色をサーモンにする	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
線グラフの色をサンディーブラウンに変更する	plt.plot(データ列, データ列2, color='sandybrown')
線グラフの色をサンディーブラウンに指定する	plt.plot(データ列, データ列2, color='sandybrown')
サンディーブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して、その色をサンディーブラウンに変更する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフの色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
線グラフの色をシーグリーンに変更する	plt.plot(データ列, データ列2, color='seagreen')
シーグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して、その色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して色をシーグリーンに指定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画してその色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフの色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
線グラフの色を貝殻に変更する	plt.plot(データ列, データ列2, color='seashell')
線グラフの色を貝殻にセットする	plt.plot(データ列, データ列2, color='seashell')
貝殻色の線グラフを描画する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画して、その色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画して、その色を貝殻にセットする	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画してその色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフの色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフの色をシエナに変更する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフの色をシエナに指定する	plt.plot(データ列, データ列2, color='sienna')
シエナ色の線グラフを描画する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、その色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
線グラフを描画して、その色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、その色をシエナにセットする	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフの色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
線グラフの色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
シルバー色の線グラフを描画する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して、その色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフの色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
スカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフを描画して、その色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
線グラフを描画して、その色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
線グラフを描画して、その色をスカイブルーに変更する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフを描画して、色をスカイブルーに変更する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフの色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフの色をスレートブルーに変更する	plt.plot(データ列, データ列2, color='slateblue')
スレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、その色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフの色をスラグレーに指定する	plt.plot(データ列, データ列2, color='slategray')
スラグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフを描画して、色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
スラグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフを描画してその色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフを描画して、その色をスラグレーにセットする	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフの色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
線グラフの色をスノーに指定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフの色をスノーに変更する	plt.plot(データ列, データ列2, color='snow')
スノー色の線グラフを描画する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画して、その色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画してその色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画してその色をスノーに変更する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフの色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
線グラフの色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
スプリンググリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画して色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画して、その色をスプリンググリーンに指定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフの色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
スチールブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフを描画して、その色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフの色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフの色を淡い茶色に設定する	plt.plot(データ列, データ列2, color='tan')
タン色の線グラフを描画する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、その色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、色をタンに指定する	plt.plot(データ列, データ列2, color='tan')
線グラフを描画して、その色を淡い茶色に変更する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフの色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
青緑色の線グラフを描画する	plt.plot(データ列, データ列2, color='teal')
青緑色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画して、その色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画して、その色をティールにセットする	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画してその色をティールに設定する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフの色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
シスル色の線グラフを描画する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、その色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、色をシスルにセットする	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、その色をシスルに指定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフの色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
線グラフの色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
トマト色の線グラフを描画する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画して、その色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
線グラフを描画して、その色をトマトに指定する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画して、色をトマトに指定する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフの色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
ターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフを描画して、その色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
線グラフを描画して、その色をターコイズに指定する	plt.plot(データ列, データ列2, color='turquoise')
線グラフを描画して色を青緑にする	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフの色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
線グラフの色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
線グラフの色をバイオレットに設定する	plt.plot(データ列, データ列2, color='violet')
青紫色の線グラフを描画する	plt.plot(データ列, データ列2, color='violet')
バイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、その色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、その色をバイオレットに設定する	plt.plot(データ列, データ列2, color='violet')
線グラフを描画して、色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフの色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
小麦色色の線グラフを描画する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して、その色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して、色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフの色を白に設定する	plt.plot(データ列, データ列2, color='white')
白色の線グラフを描画する	plt.plot(データ列, データ列2, color='white')
白色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画して、その色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画して、色を白に設定する	plt.plot(データ列, データ列2, color='white')
線グラフを描画して、その色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフの色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
線グラフの色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
ホワイトスモーク色の線グラフを描画する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフを描画してその色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフの色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
線グラフの色を黄色にセットする	plt.plot(データ列, データ列2, color='yellow')
黄色色の線グラフを描画する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフを描画して、その色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
線グラフを描画して、その色を黄色に変更する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフの色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフの色をイエローグリーンに指定する	plt.plot(データ列, データ列2, color='yellowgreen')
イエローグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画して、その色をイエローグリーンに変更する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画して色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画してその色をイエローグリーンに指定する	plt.plot(データ列, データ列2, color='yellowgreen')
ヒストグラムの色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムの色をアリスブルーにセットする	plt.hist(データ列, color='aliceblue')
アリスブルーにヒストグラムの色を変更する	plt.hist(データ列, color='aliceblue')
アリスブルー色のヒストグラムを描画する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画して、その色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムの色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムの色をアンティークホワイトに変更する	plt.hist(データ列, color='antiquewhite')
アンティークホワイト色のヒストグラムを描画する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、その色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、色をアンティークホワイトにする	plt.hist(データ列, color='antiquewhite')
ヒストグラムの色をアクアに設定する	plt.hist(データ列, color='aqua')
アクア色のヒストグラムを描画する	plt.hist(データ列, color='aqua')
ヒストグラムを描画して、その色をアクアに設定する	plt.hist(データ列, color='aqua')
ヒストグラムの色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
アクアマリンにヒストグラムの色を設定する	plt.hist(データ列, color='aquamarine')
アクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画して、その色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
ヒストグラムの色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムの色を紺碧に変更する	plt.hist(データ列, color='azure')
紺碧にヒストグラムの色を設定する	plt.hist(データ列, color='azure')
紺碧色のヒストグラムを描画する	plt.hist(データ列, color='azure')
ヒストグラムを描画して、その色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムの色をベージュに設定する	plt.hist(データ列, color='beige')
ベージュ色のヒストグラムを描画する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、その色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、色をベージュにセットする	plt.hist(データ列, color='beige')
ヒストグラムを描画して、色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムの色をビスクに設定する	plt.hist(データ列, color='bisque')
ヒストグラムの色をビスクにする	plt.hist(データ列, color='bisque')
ビスク色のヒストグラムを描画する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して、その色をビスクに設定する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して、その色をビスクに指定する	plt.hist(データ列, color='bisque')
ヒストグラムの色をブラックに設定する	plt.hist(データ列, color='black')
ブラックにヒストグラムの色を設定する	plt.hist(データ列, color='black')
ヒストグラムの色をブラックにする	plt.hist(データ列, color='black')
ブラック色のヒストグラムを描画する	plt.hist(データ列, color='black')
ヒストグラムを描画して、その色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムを描画してその色をブラックに変更する	plt.hist(データ列, color='black')
ヒストグラムの色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ブランチドアーモンド色のヒストグラムを描画する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画して、その色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画して、色をブランチドアーモンドにする	plt.hist(データ列, color='blanchedalmond')
ヒストグラムの色を青に設定する	plt.hist(データ列, color='blue')
ヒストグラムの色を青に変更する	plt.hist(データ列, color='blue')
青色のヒストグラムを描画する	plt.hist(データ列, color='blue')
ヒストグラムを描画して、その色を青に設定する	plt.hist(データ列, color='blue')
ヒストグラムを描画してその色を青に指定する	plt.hist(データ列, color='blue')
ヒストグラムの色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ブルーバイオレットにヒストグラムの色を設定する	plt.hist(データ列, color='blueviolet')
ブルーバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画して、その色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ヒストグラムの色を茶色に設定する	plt.hist(データ列, color='brown')
茶色にヒストグラムの色を設定する	plt.hist(データ列, color='brown')
茶色色のヒストグラムを描画する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色をブラウンに設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色を茶色に変更する	plt.hist(データ列, color='brown')
ヒストグラムの色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
ヒストグラムの色をバリーウッドに変更する	plt.hist(データ列, color='burlywood')
バリーウッド色のヒストグラムを描画する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画して、その色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
ヒストグラムの色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムの色をカデットブルーに指定する	plt.hist(データ列, color='cadetblue')
カデットブルー色のヒストグラムを描画する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して、その色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して、色をカデットブルーに変更する	plt.hist(データ列, color='cadetblue')
ヒストグラムの色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムの色をシャルトリューズに変更する	plt.hist(データ列, color='chartreuse')
ヒストグラムの色を黄緑に変更する	plt.hist(データ列, color='chartreuse')
黄緑にヒストグラムの色を設定する	plt.hist(データ列, color='chartreuse')
シャルトリューズ色のヒストグラムを描画する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して、その色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して、その色をシャルトリューズに変更する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して、その色をシャルトリューズにセットする	plt.hist(データ列, color='chartreuse')
ヒストグラムの色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
チョコレート色のヒストグラムを描画する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、その色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、その色をチョコレートにセットする	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、その色をチョコレートにする	plt.hist(データ列, color='chocolate')
ヒストグラムの色をコーラルに設定する	plt.hist(データ列, color='coral')
ヒストグラムの色を珊瑚に指定する	plt.hist(データ列, color='coral')
コーラルにヒストグラムの色を設定する	plt.hist(データ列, color='coral')
コーラル色のヒストグラムを描画する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、その色をコーラルに設定する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、色をコーラルにセットする	plt.hist(データ列, color='coral')
ヒストグラムの色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
コーンフラワーブルー色のヒストグラムを描画する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をコーンフラワーブルーに変更する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をやわらかい青に設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画してその色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムの色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
コーンズシルク色のヒストグラムを描画する	plt.hist(データ列, color='cornsilk')
ヒストグラムを描画して、その色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
ヒストグラムの色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
クリムゾンにヒストグラムの色を設定する	plt.hist(データ列, color='crimson')
クリムゾン色のヒストグラムを描画する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、色を真紅に指定する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、色をクリムゾンに変更する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
ヒストグラムの色をシアンに設定する	plt.hist(データ列, color='cyan')
シアンにヒストグラムの色を設定する	plt.hist(データ列, color='cyan')
ヒストグラムの色をシアンに指定する	plt.hist(データ列, color='cyan')
シアン色のヒストグラムを描画する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、その色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムの色を紺に設定する	plt.hist(データ列, color='darkblue')
ダークブルーにヒストグラムの色を設定する	plt.hist(データ列, color='darkblue')
紺色のヒストグラムを描画する	plt.hist(データ列, color='darkblue')
ダークブルー色のヒストグラムを描画する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色をダークブルーに設定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムの色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ダークシアンにヒストグラムの色を変更する	plt.hist(データ列, color='darkcyan')
ダークシアン色のヒストグラムを描画する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、その色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、色をダークシアンに変更する	plt.hist(データ列, color='darkcyan')
ヒストグラムの色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ダークゴールデンロッドにヒストグラムの色を設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークゴールデンロッドに変更する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークゴールデンロッドに指定する	plt.hist(データ列, color='darkgoldenrod')
ダークゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、その色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、色をダークゴールデンロッドに変更する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、色をダークゴールデンロッドに指定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgray')
ヒストグラムを描画して、その色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ヒストグラムを描画して、色をダークグレーにセットする	plt.hist(データ列, color='darkgray')
ヒストグラムの色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ダークグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='darkgreen')
ダークグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、その色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、その色をダークグリーンに指定する	plt.hist(データ列, color='darkgreen')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ダークグレーにヒストグラムの色をセットする	plt.hist(データ列, color='darkgrey')
ヒストグラムの色をダークグレーに変更する	plt.hist(データ列, color='darkgrey')
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して、その色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して、色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して色をダークグレーに変更する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画してその色をダークグレーに指定する	plt.hist(データ列, color='darkgrey')
ヒストグラムの色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ダークカーキ色のヒストグラムを描画する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、その色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、その色をダークカーキに指定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムの色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ダークマゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、その色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して色をダークマゼンタに指定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画してその色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムの色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ダークオリーブグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画して、その色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画して、その色をダークオリーブグリーンに指定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムの色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ダークオレンジ色のヒストグラムを描画する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、その色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、色をダークオレンジに変更する	plt.hist(データ列, color='darkorange')
ヒストグラムの色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ダークオーキッドにヒストグラムの色を指定する	plt.hist(データ列, color='darkorchid')
ダークオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、その色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、その色をダークオーキッドに指定する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ヒストグラムの色をダークレッドにセットする	plt.hist(データ列, color='darkred')
暗い赤色のヒストグラムを描画する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色を暗い赤に指定する	plt.hist(データ列, color='darkred')
ヒストグラムの色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ダークサーモンにヒストグラムの色を設定する	plt.hist(データ列, color='darksalmon')
ダークサーモン色のヒストグラムを描画する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して、その色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して、その色をダークサーモンにセットする	plt.hist(データ列, color='darksalmon')
ヒストグラムの色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ダークシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画して、その色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画してその色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画して色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムの色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスレートブルーに変更する	plt.hist(データ列, color='darkslateblue')
ダークスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、その色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画してその色をダークスレートブルーに指定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ダークスラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画して、その色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画して、その色をダークスラテグレーに指定する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画してその色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムの色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダーク・スラテグレーに指定する	plt.hist(データ列, color='darkslategrey')
ダーク・スラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して、その色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して、色をダーク・スラテグレーに変更する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して色をダーク・スラテグレーに変更する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムの色をダークターコイズに変更する	plt.hist(データ列, color='darkturquoise')
ダークターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画してその色をダークターコイズにする	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに変更する	plt.hist(データ列, color='darkturquoise')
ヒストグラムの色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
ヒストグラムの色をダークバイオレットに指定する	plt.hist(データ列, color='darkviolet')
ダークバイオレットにヒストグラムの色を設定する	plt.hist(データ列, color='darkviolet')
ダークバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して、その色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して、その色をダークバイオレットに変更する	plt.hist(データ列, color='darkviolet')
ヒストグラムの色をデピンクに設定する	plt.hist(データ列, color='deeppink')
ヒストグラムの色をデピンクに指定する	plt.hist(データ列, color='deeppink')
デピンク色のヒストグラムを描画する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画して、その色をデピンクに設定する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画してその色をデピンクに設定する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画してその色をデピンクに指定する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画して、その色をデピンクに変更する	plt.hist(データ列, color='deeppink')
ヒストグラムの色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ディープスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、その色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画してその色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーに変更する	plt.hist(データ列, color='dimgray')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して、その色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムの色をディムグレーにセットする	plt.hist(データ列, color='dimgrey')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画して、その色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画してその色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画してその色をディムグレーに変更する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画してその色をディムグレーに指定する	plt.hist(データ列, color='dimgrey')
ヒストグラムの色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ドジャーブルー色のヒストグラムを描画する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、その色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画してその色をドジャーブルーに指定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、その色をドジャーブルーに指定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムの色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムの色を耐火レンガに指定する	plt.hist(データ列, color='firebrick')
耐火レンガ色のヒストグラムを描画する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して、その色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して、その色を耐火レンガに変更する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムの色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
フローラルホワイト色のヒストグラムを描画する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して、その色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画してその色をフローラルホワイトにセットする	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して、色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムの色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
フォレストグリーン色のヒストグラムを描画する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、その色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、その色をフォレストグリーンに変更する	plt.hist(データ列, color='forestgreen')
ヒストグラムの色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
フクシア色のヒストグラムを描画する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画して、その色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
ヒストグラムの色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゲインズボロに変更する	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゲインズボロに指定する	plt.hist(データ列, color='gainsboro')
ゲインズボロ色のヒストグラムを描画する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して、その色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ゴーストホワイト色のヒストグラムを描画する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画してその色をゴーストホワイトに指定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトにセットする	plt.hist(データ列, color='ghostwhite')
ヒストグラムの色をゴールドに設定する	plt.hist(データ列, color='gold')
ゴールド色のヒストグラムを描画する	plt.hist(データ列, color='gold')
ヒストグラムを描画して、その色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムを描画して、色をゴールドに指定する	plt.hist(データ列, color='gold')
ヒストグラムの色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画して、その色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画して、色をゴールデンロッドにセットする	plt.hist(データ列, color='goldenrod')
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='gray')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、その色をグレーに設定する	plt.hist(データ列, color='gray')
ヒストグラムを描画してその色をグレーに設定する	plt.hist(データ列, color='gray')
ヒストグラムの色をグリーンに設定する	plt.hist(データ列, color='green')
ヒストグラムの色をグリーンに指定する	plt.hist(データ列, color='green')
グリーン色のヒストグラムを描画する	plt.hist(データ列, color='green')
ヒストグラムを描画して、その色をグリーンに設定する	plt.hist(データ列, color='green')
ヒストグラムを描画して、その色をグリーンに変更する	plt.hist(データ列, color='green')
ヒストグラムを描画してその色をグリーンに設定する	plt.hist(データ列, color='green')
ヒストグラムの色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
グリーンイエロー色のヒストグラムを描画する	plt.hist(データ列, color='greenyellow')
ヒストグラムを描画して、その色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
ヒストグラムを描画して、その色をグリーンイエローに指定する	plt.hist(データ列, color='greenyellow')
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='grey')
グレーにヒストグラムの色を設定する	plt.hist(データ列, color='grey')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='grey')
ヒストグラムを描画して、その色をグレーに設定する	plt.hist(データ列, color='grey')
ヒストグラムの色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ハニーデューにヒストグラムの色を設定する	plt.hist(データ列, color='honeydew')
ハニーデュー色のヒストグラムを描画する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、色をハニーデューに変更する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに変更する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ヒストグラムの色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ホットピンク色のヒストグラムを描画する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画して、その色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムの色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
ヒストグラムの色をインディアンレッドに変更する	plt.hist(データ列, color='indianred')
インディアンレッド色のヒストグラムを描画する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドに指定する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドにセットする	plt.hist(データ列, color='indianred')
ヒストグラムの色をインディゴに設定する	plt.hist(データ列, color='indigo')
インディゴにヒストグラムの色を指定する	plt.hist(データ列, color='indigo')
ヒストグラムの色をインディゴに指定する	plt.hist(データ列, color='indigo')
インディゴ色のヒストグラムを描画する	plt.hist(データ列, color='indigo')
ヒストグラムを描画して、その色をインディゴに設定する	plt.hist(データ列, color='indigo')
ヒストグラムを描画してその色をインディゴに指定する	plt.hist(データ列, color='indigo')
ヒストグラムの色をアイボリーに設定する	plt.hist(データ列, color='ivory')
アイボリー色のヒストグラムを描画する	plt.hist(データ列, color='ivory')
ヒストグラムを描画して、その色をアイボリーに設定する	plt.hist(データ列, color='ivory')
ヒストグラムを描画してその色をアイボリーに設定する	plt.hist(データ列, color='ivory')
ヒストグラムの色をカーキに設定する	plt.hist(データ列, color='khaki')
カーキ色のヒストグラムを描画する	plt.hist(データ列, color='khaki')
ヒストグラムを描画して、その色をカーキに設定する	plt.hist(データ列, color='khaki')
ヒストグラムを描画して色をカーキに設定する	plt.hist(データ列, color='khaki')
ヒストグラムを描画して、色をカーキにする	plt.hist(データ列, color='khaki')
ヒストグラムの色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムの色をラベンダーに変更する	plt.hist(データ列, color='lavender')
ラベンダーにヒストグラムの色を変更する	plt.hist(データ列, color='lavender')
ラベンダー色のヒストグラムを描画する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、その色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、その色をラベンダーに指定する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、色をラベンダーに指定する	plt.hist(データ列, color='lavender')
ヒストグラムの色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ラベンダーブラッシュ色のヒストグラムを描画する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、その色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、その色をラベンダーブラッシュにする	plt.hist(データ列, color='lavenderblush')
ヒストグラムの色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
ヒストグラムの色をローングリーンに指定する	plt.hist(データ列, color='lawngreen')
ローングリーン色のヒストグラムを描画する	plt.hist(データ列, color='lawngreen')
ヒストグラムを描画して、その色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
ヒストグラムの色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムの色をレモンシフォンに変更する	plt.hist(データ列, color='lemonchiffon')
レモンシフォンにヒストグラムの色を指定する	plt.hist(データ列, color='lemonchiffon')
レモンシフォン色のヒストグラムを描画する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、その色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、その色をレモンシフォンに指定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムの色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ライトブルーにヒストグラムの色を変更する	plt.hist(データ列, color='lightblue')
ライトブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画して、その色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画して、色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ヒストグラムの色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ライトコーラル色のヒストグラムを描画する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに変更する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに指定する	plt.hist(データ列, color='lightcoral')
ヒストグラムの色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ライトシアン色のヒストグラムを描画する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、その色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、その色をライトシアンにする	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、色をライトシアンに指定する	plt.hist(データ列, color='lightcyan')
ヒストグラムの色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムの色をライトゴールドロディイエローにセットする	plt.hist(データ列, color='lightgoldenrodyellow')
ライトゴールドロディイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムを描画して、その色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムを描画して、その色をライトゴールドロディイエローに変更する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムを描画してその色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して、その色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画してその色をライトグレーに指定する	plt.hist(データ列, color='lightgray')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ヒストグラムの色をライトグリーンにセットする	plt.hist(データ列, color='lightgreen')
ライトグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='lightgreen')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画して、その色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ライトグレーにヒストグラムの色を指定する	plt.hist(データ列, color='lightgrey')
ヒストグラムの色をライトグレーにする	plt.hist(データ列, color='lightgrey')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、その色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、色をライトグレーに指定する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムの色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
ヒストグラムの色を淡いピンク色に変更する	plt.hist(データ列, color='lightpink')
淡いピンク色色のヒストグラムを描画する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画して、その色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画して、色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画して、色を淡いピンク色に変更する	plt.hist(データ列, color='lightpink')
ヒストグラムの色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をライトサーモンにセットする	plt.hist(データ列, color='lightsalmon')
ライトサーモン色のヒストグラムを描画する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、その色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して、その色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画してその色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムの色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
ライトスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightskyblue')
ヒストグラムを描画して、その色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
ヒストグラムを描画して色をライトスカイブルーに変更する	plt.hist(データ列, color='lightskyblue')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ヒストグラムの色をライトスレイグレーにセットする	plt.hist(データ列, color='lightslategray')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画して、その色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画してその色をライトスレイグレーに指定する	plt.hist(データ列, color='lightslategray')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスレイグレーに指定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスレイグレーに変更する	plt.hist(データ列, color='lightslategrey')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、その色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、その色をライトスレイグレーに変更する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、色をライトスレイグレーに変更する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ライトスチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムを描画して、その色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムの色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ライトイエローにヒストグラムの色を指定する	plt.hist(データ列, color='lightyellow')
ライトイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して、その色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して色をライトイエローに変更する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して、その色をライトイエローに指定する	plt.hist(データ列, color='lightyellow')
ヒストグラムの色をライムに設定する	plt.hist(データ列, color='lime')
ライム色のヒストグラムを描画する	plt.hist(データ列, color='lime')
ヒストグラムを描画して、その色をライムに設定する	plt.hist(データ列, color='lime')
ヒストグラムを描画して、その色をライムに変更する	plt.hist(データ列, color='lime')
ヒストグラムの色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ライムグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='limegreen')
ライムグリーンにヒストグラムの色を変更する	plt.hist(データ列, color='limegreen')
ライムグリーン色のヒストグラムを描画する	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して、その色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ヒストグラムの色をリネンに設定する	plt.hist(データ列, color='linen')
リネンにヒストグラムの色を設定する	plt.hist(データ列, color='linen')
リネン色のヒストグラムを描画する	plt.hist(データ列, color='linen')
ヒストグラムを描画して、その色をリネンに設定する	plt.hist(データ列, color='linen')
ヒストグラムの色をマゼンタに設定する	plt.hist(データ列, color='magenta')
マゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='magenta')
ヒストグラムを描画して、その色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムの色をマルーンに設定する	plt.hist(データ列, color='maroon')
マルーン色のヒストグラムを描画する	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、その色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムの色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ミディアムアクアマリンにヒストグラムの色を指定する	plt.hist(データ列, color='mediumaquamarine')
ミディアムアクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画して、その色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムの色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ミディアムブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画して、その色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画してその色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムの色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ミディアムオーキッドにヒストグラムの色を変更する	plt.hist(データ列, color='mediumorchid')
ミディアムオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumorchid')
ヒストグラムを描画して、その色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ヒストグラムの色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムパープルに変更する	plt.hist(データ列, color='mediumpurple')
ミディアムパープル色のヒストグラムを描画する	plt.hist(データ列, color='mediumpurple')
ヒストグラムを描画して、その色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムを描画してその色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ミディアムシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画して、その色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画して、色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムの色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ミディアムスレートブルーにヒストグラムの色を指定する	plt.hist(データ列, color='mediumslateblue')
ミディアムスレートブルーにヒストグラムの色を設定する	plt.hist(データ列, color='mediumslateblue')
ミディアムスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、その色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、その色をミディアムスレートブルーに指定する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムの色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムの色をミディアムスプリンググリーンにセットする	plt.hist(データ列, color='mediumspringgreen')
ミディアムスプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画して、その色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画してその色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画してその色をミディアムスプリンググリーンに変更する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムの色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ミディアムターコイズにヒストグラムの色を変更する	plt.hist(データ列, color='mediumturquoise')
ミディアムターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムを描画して、その色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムを描画して、色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムの色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムの色をミディアムバイオレットレッドに指定する	plt.hist(データ列, color='mediumvioletred')
ミディアムバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画して、その色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画してその色をミディアムバイオレットレッドにセットする	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画してその色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムの色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ミッドナイトブルーにヒストグラムの色を設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をミッドナイトブルーに指定する	plt.hist(データ列, color='midnightblue')
ミッドナイトブルー色のヒストグラムを描画する	plt.hist(データ列, color='midnightblue')
ヒストグラムを描画して、その色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムを描画して色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムの色をミントクリームに指定する	plt.hist(データ列, color='mintcream')
ミントクリーム色のヒストグラムを描画する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画して、その色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画して、その色をミントクリームにセットする	plt.hist(データ列, color='mintcream')
ヒストグラムの色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ミスティローズにヒストグラムの色を設定する	plt.hist(データ列, color='mistyrose')
ミスティローズ色のヒストグラムを描画する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画して、その色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画してその色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ヒストグラムの色をモカシンに設定する	plt.hist(データ列, color='moccasin')
モカシンにヒストグラムの色を変更する	plt.hist(データ列, color='moccasin')
モカシンにヒストグラムの色を設定する	plt.hist(データ列, color='moccasin')
モカシン色のヒストグラムを描画する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画して、その色をモカシンに設定する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画して色をモカシンに変更する	plt.hist(データ列, color='moccasin')
ヒストグラムの色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ナバホホワイトにヒストグラムの色を設定する	plt.hist(データ列, color='navajowhite')
ナバホホワイト色のヒストグラムを描画する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画して、その色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画して色をナバホホワイトに指定する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画して色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムの色をネイビーに設定する	plt.hist(データ列, color='navy')
ネイビーにヒストグラムの色を指定する	plt.hist(データ列, color='navy')
ヒストグラムの色をネイビーに変更する	plt.hist(データ列, color='navy')
ネイビー色のヒストグラムを描画する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、その色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、その色をネイビーに指定する	plt.hist(データ列, color='navy')
ヒストグラムの色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
オールドレースにヒストグラムの色を指定する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオールドレースに変更する	plt.hist(データ列, color='oldlace')
オールドレースにヒストグラムの色をセットする	plt.hist(データ列, color='oldlace')
オールドレース色のヒストグラムを描画する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、その色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、色をオールドレースに指定する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオリーブに設定する	plt.hist(データ列, color='olive')
オリーブにヒストグラムの色を設定する	plt.hist(データ列, color='olive')
オリーブ色のヒストグラムを描画する	plt.hist(データ列, color='olive')
ヒストグラムを描画して、その色をオリーブに設定する	plt.hist(データ列, color='olive')
ヒストグラムを描画して、色をオリーブに設定する	plt.hist(データ列, color='olive')
ヒストグラムの色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
ヒストグラムの色をオリベドラブに指定する	plt.hist(データ列, color='olivedrab')
オリベドラブにヒストグラムの色を設定する	plt.hist(データ列, color='olivedrab')
オリベドラブ色のヒストグラムを描画する	plt.hist(データ列, color='olivedrab')
ヒストグラムを描画して、その色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
ヒストグラムを描画して色をオリベドラブに指定する	plt.hist(データ列, color='olivedrab')
ヒストグラムの色をオレンジに設定する	plt.hist(データ列, color='orange')
オレンジ色のヒストグラムを描画する	plt.hist(データ列, color='orange')
ヒストグラムを描画して、その色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムを描画してその色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムの色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
オレンジレッド色のヒストグラムを描画する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して、その色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
ヒストグラムの色をオーキッドに設定する	plt.hist(データ列, color='orchid')
オーキッド色のヒストグラムを描画する	plt.hist(データ列, color='orchid')
ヒストグラムを描画して、その色をオーキッドに設定する	plt.hist(データ列, color='orchid')
ヒストグラムの色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムの色をパールゴールデンロッドに変更する	plt.hist(データ列, color='palegoldenrod')
パールゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、その色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、その色をパールゴールデンロッドに指定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画してその色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムの色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ペールグリーン色のヒストグラムを描画する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、その色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ヒストグラムの色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
パレットトルコイズ色のヒストグラムを描画する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、その色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムの色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
パールバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画して、その色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画してその色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
ヒストグラムの色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
パパイヤウィップ色のヒストグラムを描画する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、その色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、その色をパパイヤウィップに変更する	plt.hist(データ列, color='papayawhip')
ヒストグラムの色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムの色をピーチパフにセットする	plt.hist(データ列, color='peachpuff')
ピーチパフ色のヒストグラムを描画する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、その色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、その色をピーチパフに変更する	plt.hist(データ列, color='peachpuff')
ヒストグラムの色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムの色をペルーに指定する	plt.hist(データ列, color='peru')
ペルー色のヒストグラムを描画する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、その色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、その色をペルーに指定する	plt.hist(データ列, color='peru')
ヒストグラムの色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムの色をピンクに変更する	plt.hist(データ列, color='pink')
ヒストグラムの色をピンクに指定する	plt.hist(データ列, color='pink')
ピンク色のヒストグラムを描画する	plt.hist(データ列, color='pink')
ヒストグラムを描画して、その色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムを描画してその色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムを描画してその色をピンクにセットする	plt.hist(データ列, color='pink')
ヒストグラムの色をプラムに設定する	plt.hist(データ列, color='plum')
ヒストグラムの色をプラムに指定する	plt.hist(データ列, color='plum')
プラムにヒストグラムの色を設定する	plt.hist(データ列, color='plum')
プラム色のヒストグラムを描画する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、その色をプラムに設定する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、色をプラムに設定する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、色をプラムに指定する	plt.hist(データ列, color='plum')
ヒストグラムの色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
ヒストグラムの色をパウダーブルーに指定する	plt.hist(データ列, color='powderblue')
パウダーブルー色のヒストグラムを描画する	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して、その色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
ヒストグラムの色をパープルに設定する	plt.hist(データ列, color='purple')
パープルにヒストグラムの色を設定する	plt.hist(データ列, color='purple')
ヒストグラムの色をパープルにする	plt.hist(データ列, color='purple')
パープル色のヒストグラムを描画する	plt.hist(データ列, color='purple')
ヒストグラムを描画して、その色をパープルに設定する	plt.hist(データ列, color='purple')
ヒストグラムを描画してその色をパープルに変更する	plt.hist(データ列, color='purple')
ヒストグラムの色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムの色をレベッカパープルに変更する	plt.hist(データ列, color='rebeccapurple')
レベッカパープル色のヒストグラムを描画する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、その色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、色をレベッカパープルに指定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、その色をレベッカパープルに変更する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムの色を赤に設定する	plt.hist(データ列, color='red')
赤にヒストグラムの色を設定する	plt.hist(データ列, color='red')
赤にヒストグラムの色を変更する	plt.hist(データ列, color='red')
赤色のヒストグラムを描画する	plt.hist(データ列, color='red')
ヒストグラムを描画して、その色を赤に設定する	plt.hist(データ列, color='red')
ヒストグラムを描画して、その色を赤に変更する	plt.hist(データ列, color='red')
ヒストグラムの色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ロージーブラウンにヒストグラムの色をする	plt.hist(データ列, color='rosybrown')
ロージーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画して、その色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画して、その色をロージーブラウンに指定する	plt.hist(データ列, color='rosybrown')
ヒストグラムの色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ロイヤルブルーにヒストグラムの色を変更する	plt.hist(データ列, color='royalblue')
ロイヤルブルー色のヒストグラムを描画する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、その色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、その色をロイヤルブルーに指定する	plt.hist(データ列, color='royalblue')
ヒストグラムの色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムの色をサドルブラウンに変更する	plt.hist(データ列, color='saddlebrown')
サドルブラウン色のヒストグラムを描画する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画して、その色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画して、その色をサドルブラウンに指定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画してその色をサドルブラウンにセットする	plt.hist(データ列, color='saddlebrown')
ヒストグラムの色をサーモンに設定する	plt.hist(データ列, color='salmon')
サーモン色のヒストグラムを描画する	plt.hist(データ列, color='salmon')
ヒストグラムを描画して、その色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムを描画してその色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムの色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムの色をサンディーブラウンに指定する	plt.hist(データ列, color='sandybrown')
サンディーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、その色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムの色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
シーグリーン色のヒストグラムを描画する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画して、その色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画して、その色をシーグリーンに指定する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画して色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
ヒストグラムの色を貝殻に設定する	plt.hist(データ列, color='seashell')
貝殻色のヒストグラムを描画する	plt.hist(データ列, color='seashell')
ヒストグラムを描画して、その色を貝殻に設定する	plt.hist(データ列, color='seashell')
ヒストグラムを描画して、色を貝殻に設定する	plt.hist(データ列, color='seashell')
ヒストグラムの色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムの色をシエナにセットする	plt.hist(データ列, color='sienna')
シエナにヒストグラムの色を設定する	plt.hist(データ列, color='sienna')
シエナ色のヒストグラムを描画する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、その色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムを描画してその色をシエナに指定する	plt.hist(データ列, color='sienna')
ヒストグラムの色をシルバーに設定する	plt.hist(データ列, color='silver')
シルバー色のヒストグラムを描画する	plt.hist(データ列, color='silver')
ヒストグラムを描画して、その色をシルバーに設定する	plt.hist(データ列, color='silver')
ヒストグラムの色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
スカイブルーにヒストグラムの色を変更する	plt.hist(データ列, color='skyblue')
スカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して、その色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画してその色をスカイブルーに指定する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して、その色をスカイブルーにセットする	plt.hist(データ列, color='skyblue')
ヒストグラムを描画してその色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
ヒストグラムの色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
スレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、その色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、その色をスレートブルーに変更する	plt.hist(データ列, color='slateblue')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムの色をスラグレーに変更する	plt.hist(データ列, color='slategray')
スラグレーにヒストグラムの色を指定する	plt.hist(データ列, color='slategray')
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategray')
ヒストグラムを描画して、その色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、その色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画してその色をスラグレーに変更する	plt.hist(データ列, color='slategrey')
ヒストグラムの色をスノーに設定する	plt.hist(データ列, color='snow')
スノーにヒストグラムの色を設定する	plt.hist(データ列, color='snow')
スノー色のヒストグラムを描画する	plt.hist(データ列, color='snow')
ヒストグラムを描画して、その色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムの色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
スプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して、その色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して色をスプリンググリーンに変更する	plt.hist(データ列, color='springgreen')
ヒストグラムの色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
スチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、その色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画してその色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、その色をスチールブルーに変更する	plt.hist(データ列, color='steelblue')
ヒストグラムの色をタンに設定する	plt.hist(データ列, color='tan')
ヒストグラムの色を淡い茶色に変更する	plt.hist(データ列, color='tan')
タン色のヒストグラムを描画する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、その色をタンに設定する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、その色をタンに変更する	plt.hist(データ列, color='tan')
ヒストグラムの色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムの色を青緑にする	plt.hist(データ列, color='teal')
ヒストグラムの色をティールに設定する	plt.hist(データ列, color='teal')
青緑色のヒストグラムを描画する	plt.hist(データ列, color='teal')
ヒストグラムを描画して、その色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムを描画して、色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムの色をシスルに設定する	plt.hist(データ列, color='thistle')
シスル色のヒストグラムを描画する	plt.hist(データ列, color='thistle')
ヒストグラムを描画して、その色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムを描画してその色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムを描画して、色をシスルにセットする	plt.hist(データ列, color='thistle')
ヒストグラムの色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムの色をトマトに変更する	plt.hist(データ列, color='tomato')
トマト色のヒストグラムを描画する	plt.hist(データ列, color='tomato')
ヒストグラムを描画して、その色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムを描画して、色をトマトに変更する	plt.hist(データ列, color='tomato')
ヒストグラムを描画して、色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムの色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ターコイズにヒストグラムの色を変更する	plt.hist(データ列, color='turquoise')
ヒストグラムの色を青緑に設定する	plt.hist(データ列, color='turquoise')
ターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色をターコイズにセットする	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色を青緑に設定する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色を青緑に変更する	plt.hist(データ列, color='turquoise')
ヒストグラムの色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムの色をバイオレットに設定する	plt.hist(データ列, color='violet')
ヒストグラムの色を青紫にする	plt.hist(データ列, color='violet')
青紫色のヒストグラムを描画する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、色を青紫に指定する	plt.hist(データ列, color='violet')
ヒストグラムの色を小麦色に設定する	plt.hist(データ列, color='wheat')
小麦色にヒストグラムの色を設定する	plt.hist(データ列, color='wheat')
小麦色色のヒストグラムを描画する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、その色を小麦色に設定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、その色を小麦色に指定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、その色を小麦色にセットする	plt.hist(データ列, color='wheat')
ヒストグラムの色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムの色を白に指定する	plt.hist(データ列, color='white')
白にヒストグラムの色を設定する	plt.hist(データ列, color='white')
白色のヒストグラムを描画する	plt.hist(データ列, color='white')
ヒストグラムを描画して、その色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムを描画してその色をホワイトに指定する	plt.hist(データ列, color='white')
ヒストグラムの色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ホワイトスモーク色のヒストグラムを描画する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、その色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、色をホワイトスモークにセットする	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、色をホワイトスモークに指定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムの色を黄色に設定する	plt.hist(データ列, color='yellow')
黄色色のヒストグラムを描画する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して、その色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムの色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
イエローグリーン色のヒストグラムを描画する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して、その色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して、その色をイエローグリーンに変更する	plt.hist(データ列, color='yellowgreen')
折れ線グラフの色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフを描画して、色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフを描画して色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフの色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフを描画して、色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフを描画して色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフの色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフを描画して、色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフの色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフを描画して、色を白くする	plt.plot(データ列, データ列2, color='w')
線グラフを描画して色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフを描画して色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフの色を黄色くする	plt.plot(データ列, データ列2, color='y')
折れ線グラフを描画して、色を黄色くする	plt.plot(データ列, データ列2, color='y')
折れ線グラフを描画して色を黄色くする	plt.plot(データ列, データ列2, color='y')
ヒストグラムの色を赤くする	plt.hist(データ列, color='r')
ヒストグラムを描画して、色を赤くする	plt.hist(データ列, color='r')
ヒストグラムの色を青くする	plt.hist(データ列, color='b')
ヒストグラムを描画して、色を青くする	plt.hist(データ列, color='b')
ヒストグラムの色を黒くする	plt.hist(データ列, color='k')
ヒストグラムを描画して、色を黒くする	plt.hist(データ列, color='k')
ヒストグラムの色を白くする	plt.hist(データ列, color='w')
ヒストグラムを描画して、色を白くする	plt.hist(データ列, color='w')
ヒストグラムの色を黄色くする	plt.hist(データ列, color='y')
ヒストグラムを描画して、色を黄色くする	plt.hist(データ列, color='y')
赤い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='r')
青い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='b')
黒い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='k')
白い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='w')
黄色い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='y')
赤いヒストグラムを描画する	plt.hist(データ列, color='r')
青いヒストグラムを描画する	plt.hist(データ列, color='b')
黒いヒストグラムを描画する	plt.hist(データ列, color='k')
白いヒストグラムを描画する	plt.hist(データ列, color='w')
黄色いヒストグラムを描画する	plt.hist(データ列, color='y')
名前からカラーマップを使う	"plt.get_cmap(""カラーマップ名"")"
ヒストグラムをカラーマップで描画する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムをカラーマップとして描画する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムでカラーマップを使う	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
＜オプション＞グラフの種類を破線に設定する	linestyle = 'dashed'
＜オプション＞グラフの種類を破線にする	linestyle = 'dashed'
＜オプション＞グラフの種類を破線に指定する	linestyle = 'dashed'
＜オプション＞線種を破線に設定する	linestyle = 'dashed'
＜オプション＞線種を破線にセットする	linestyle = 'dashed'
＜オプション＞グラフの線種を破線に指定する	linestyle = 'dashed'
＜オプション＞グラフの種類を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞グラフの種類を一点鎖線にセットする	linestyle = 'dashbot'
＜オプション＞グラフの種類を一点鎖線に指定する	linestyle = 'dashbot'
＜オプション＞線種を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞グラフの線種を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞グラフの種類を点線に設定する	linestyle = 'dotted'
＜オプション＞線種を点線に設定する	linestyle = 'dotted'
＜オプション＞線種を点線に変更する	linestyle = 'dotted'
＜オプション＞線種を点線に指定する	linestyle = 'dotted'
＜オプション＞グラフの種類を実線に設定する	linestyle = 'solid'
＜オプション＞線種を実線に設定する	linestyle = 'solid'
＜オプション＞グラフの線種を実線にセットする	linestyle = 'solid'
＜オプション＞線種を実線にする	linestyle = 'solid'
折れ線グラフのスタイルを破線に設定する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフのスタイルを破線に指定する	plt.plot(データ列, データ列2, linestyle='dashed')
破線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフを破線で描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフのスタイルを一点鎖線に設定する	plt.plot(データ列, データ列2, linestyle='dashbot')
一点鎖線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフを一点鎖線で描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフのスタイルを点線に設定する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフを点線に設定する	plt.plot(データ列, データ列2, linestyle='dotted')
点線に折れ線グラフのスタイルを指定する	plt.plot(データ列, データ列2, linestyle='dotted')
点線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフを点線で描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフのスタイルを実線に設定する	plt.plot(データ列, データ列2, linestyle='solid')
折れ線グラフのスタイルを実線に変更する	plt.plot(データ列, データ列2, linestyle='solid')
実線に折れ線グラフのスタイルを変更する	plt.plot(データ列, データ列2, linestyle='solid')
実線グラフを描画する	plt.plot(データ列, データ列2, linestyle='solid')
折れ線グラフを実線で描画する	plt.plot(データ列, データ列2, linestyle='solid')
実線で折れ線グラフを描画する	plt.plot(データ列, データ列2, linestyle='solid')
ヒストグラムの線のスタイルを破線に設定する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線に設定する	plt.hist(データ列, linestyle='dashed')
破線にヒストグラムの線のスタイルを設定する	plt.hist(データ列, linestyle='dashed')
破線ヒストグラムを描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線で描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムの線のスタイルを一点鎖線に設定する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムの線のスタイルを一点鎖線に変更する	plt.hist(データ列, linestyle='dashbot')
一点鎖線ヒストグラムを描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムを一点鎖線で描画する	plt.hist(データ列, linestyle='dashbot')
一点鎖線でヒストグラムを描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムの線のスタイルを点線に設定する	plt.hist(データ列, linestyle='dotted')
点線にヒストグラムを設定する	plt.hist(データ列, linestyle='dotted')
ヒストグラムを点線に設定する	plt.hist(データ列, linestyle='dotted')
点線にヒストグラムの線のスタイルを設定する	plt.hist(データ列, linestyle='dotted')
点線ヒストグラムを描画する	plt.hist(データ列, linestyle='dotted')
ヒストグラムを点線で描画する	plt.hist(データ列, linestyle='dotted')
ヒストグラムの線のスタイルを実線に設定する	plt.hist(データ列, linestyle='solid')
実線ヒストグラムを描画する	plt.hist(データ列, linestyle='solid')
ヒストグラムを実線で描画する	plt.hist(データ列, linestyle='solid')
＜オプション＞マーカーをポイントに変更する	marker = '.'
＜オプション＞ポイントマーカーを使う	marker = '.'
＜オプション＞ポイントマーカーを用いる	marker = '.'
＜オプション＞ポイント印を加える	marker = '.'
＜オプション＞ポイントマーカーを描画する	marker = '.'
＜オプション＞マーカーを丸に変更する	marker = 'o'
＜オプション＞丸マーカーを使う	marker = 'o'
＜オプション＞丸マーカーを加える	marker = 'o'
＜オプション＞丸マーカーを描画する	marker = 'o'
＜オプション＞マーカーを三角に変更する	marker = '^'
＜オプション＞三角マーカーを使う	marker = '^'
＜オプション＞上三角マーカーを用いる	marker = '^'
＜オプション＞三角印を使う	marker = '^'
＜オプション＞三角マーカーを描画する	marker = '^'
＜オプション＞△マーカーを描画する	marker = '^'
＜オプション＞▲マーカーを描画する	marker = '^'
＜オプション＞マーカーを下三角に変更する	marker = 'v'
＜オプション＞印を下三角に変更する	marker = 'v'
＜オプション＞下三角マーカーを使う	marker = 'v'
＜オプション＞下三角マーカーを加える	marker = 'v'
＜オプション＞下三角印を加える	marker = 'v'
＜オプション＞下三角印を使う	marker = 'v'
＜オプション＞下三角マーカーを描画する	marker = 'v'
＜オプション＞下三角印を描画する	marker = 'v'
＜オプション＞マーカーを左三角に変更する	marker = '<'
＜オプション＞左三角マーカーを使う	marker = '<'
＜オプション＞左三角マーカーを使用する	marker = '<'
＜オプション＞左三角マーカーを描画する	marker = '<'
＜オプション＞マーカーを右三角に変更する	marker = '>'
＜オプション＞右三角マーカーを使う	marker = '>'
＜オプション＞右三角マーカーを描画する	marker = '>'
＜オプション＞マーカーをバツに変更する	marker = 'x'
＜オプション＞バツマーカーを使う	marker = 'x'
＜オプション＞クロスマーカーを使用する	marker = 'x'
＜オプション＞クロス印を用いる	marker = 'x'
＜オプション＞クロスマーカーを用いる	marker = 'x'
＜オプション＞バツマーカーを描画する	marker = 'x'
＜オプション＞マーカーを大バツに変更する	marker = 'X'
＜オプション＞大バツマーカーを使う	marker = 'X'
＜オプション＞大バツマーカーを用いる	marker = 'X'
＜オプション＞大バツ印を用いる	marker = 'X'
＜オプション＞大バツマーカーを描画する	marker = 'X'
＜オプション＞マーカーを四角に変更する	marker = 's'
＜オプション＞四角マーカーを使う	marker = 's'
＜オプション＞四角印を加える	marker = 's'
＜オプション＞四角印を使う	marker = 's'
＜オプション＞四角マーカーを描画する	marker = 's'
＜オプション＞マーカーをダイアモンドに変更する	marker = 'D'
＜オプション＞ダイアモンドマーカーを使う	marker = 'D'
＜オプション＞菱形マーカーを用いる	marker = 'D'
＜オプション＞ダイアモンドマーカーを描画する	marker = 'D'
＜オプション＞菱形マーカーを描画する	marker = 'D'
＜オプション＞マーカーを星に変更する	marker = '*'
＜オプション＞星マーカーを使う	marker = '*'
＜オプション＞星マーカーを加える	marker = '*'
＜オプション＞星マーカーを描画する	marker = '*'
折れ線グラフにポイントマーカーを使う	plt.plot(データ列, データ列2, marker='.')
折れ線グラフにポイントマーカーを加える	plt.plot(データ列, データ列2, marker='.')
折れ線グラフのマーカーをポイントにする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフのマーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
データ列を折れ線グラフに描画して、マーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに描画して、印をポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに描画して、マーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに丸マーカーを使う	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに丸マーカーを加える	plt.plot(データ列, データ列2, marker='o')
折れ線グラフのマーカーを丸にする	plt.plot(データ列, データ列2, marker='o')
折れ線グラフのマーカーを丸印にする	plt.plot(データ列, データ列2, marker='o')
データ列を折れ線グラフに描画して、マーカーを丸印にする	plt.plot(データ列, データ列2, marker='o')
データ列を折れ線グラフに描画してマーカーを丸印にする	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに三角マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに三角マーカーを使用する	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに上三角印を用いる	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに▲マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを三角にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフの印を三角にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して、マーカーを三角印にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画してマーカーを上三角にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに描画してマーカーを△にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに下三角マーカーを使う	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに下三角印を加える	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに下三角マーカーを加える	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに▼印を加える	plt.plot(データ列, データ列2, marker='v')
折れ線グラフのマーカーを下三角にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフの印を下三角にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフのマーカーを▼にする	plt.plot(データ列, データ列2, marker='v')
データ列を折れ線グラフに描画して、マーカーを下三角印にする	plt.plot(データ列, データ列2, marker='v')
データ列を折れ線グラフに描画して、マーカーを▽印にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに描画してマーカーを下三角印にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに左三角マーカーを使う	plt.plot(データ列, データ列2, marker='<')
折れ線グラフのマーカーを左三角にする	plt.plot(データ列, データ列2, marker='<')
データ列を折れ線グラフに描画して、マーカーを左三角印にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに描画してマーカーを左三角印にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに描画して、マーカーを左三角にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに描画して印を左三角印にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに右三角マーカーを使う	plt.plot(データ列, データ列2, marker='>')
折れ線グラフのマーカーを右三角にする	plt.plot(データ列, データ列2, marker='>')
データ列を折れ線グラフに描画して、マーカーを右三角印にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに描画して、マーカーを右三角にする	plt.plot(データ列, データ列2, marker='>')
データ列を折れ線グラフに描画してマーカーを右三角印にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフにバツマーカーを使う	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにバツマーカーを使用する	plt.plot(データ列, データ列2, marker='x')
折れ線グラフのマーカーをバツにする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフのマーカーをクロスにする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、マーカーをバツ印にする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、印をバツ印にする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画してマーカーをバツ印にする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフに大バツマーカーを使う	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに大バツマーカーを用いる	plt.plot(データ列, データ列2, marker='X')
折れ線グラフのマーカーを大バツにする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画して、マーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画してマーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画して、印を大バツにする	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに四角マーカーを使う	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角印を加える	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角マーカーを使用する	plt.plot(データ列, データ列2, marker='s')
折れ線グラフのマーカーを四角にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフの印を四角にする	plt.plot(データ列, データ列2, marker='s')
データ列を折れ線グラフに描画して、マーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに描画して、マーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに描画して、印を四角にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフにダイアモンドマーカーを使う	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに菱形マーカーを加える	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに菱形マーカーを使用する	plt.plot(データ列, データ列2, marker='D')
折れ線グラフにダイアモンドマーカーを加える	plt.plot(データ列, データ列2, marker='D')
折れ線グラフのマーカーをダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフのマーカーを菱形にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフの印をダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画して、マーカーをダイアモンド印にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに描画して、マーカーを菱形にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに星マーカーを使う	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに星マーカーを加える	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに星マーカーを使用する	plt.plot(データ列, データ列2, marker='*')
折れ線グラフのマーカーを星にする	plt.plot(データ列, データ列2, marker='*')
データ列を折れ線グラフに描画して、マーカーを星印にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに描画して、マーカーを星にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに描画して、印を星にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに描画して印を星印にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに赤いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
赤いポイントマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフのポイントマーカーを赤くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフのポイント印を赤くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフに赤い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフに赤い丸印を描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
赤い丸マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフの丸マーカーを赤くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフに赤い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフに赤い△マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
赤い三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの三角印を赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフに赤い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフに赤い▽印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの下三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの▽マーカーを赤色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフに赤い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフに赤い左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフの左三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフの左三角印を赤くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフに赤い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
赤い右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフの右三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフの右三角印を赤くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフに赤いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフに赤いバツ印を描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフのバツマーカーを赤くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフに赤い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフに赤い大バツ印を描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフの大バツマーカーを赤くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフの大バツ印を赤色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフに赤い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフの四角マーカーを赤くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフの四角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフに赤いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
赤い菱形マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフに赤い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフの星マーカーを赤くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフの星マーカーを赤色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフに青いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフに青いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフのポイントマーカーを青くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフに青い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
青い丸印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
青い丸マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフの丸マーカーを青くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフに青い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフに青い上三角印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの三角マーカーを青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの三角印を青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフに青い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い▼マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの下三角マーカーを青くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの下三角マーカーを青色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
青い左三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフの左三角マーカーを青くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフの左三角マーカーを青色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフに青い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフの右三角マーカーを青くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフに青いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのバツマーカーを青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのクロス印を青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのクロスマーカーを青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフに青い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフの大バツマーカーを青くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフの大バツマーカーを青色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフに青い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフの四角マーカーを青くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフの四角マーカーを青色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフに青いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフの菱形印を青くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフに青い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
青い星印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフの星マーカーを青くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフに黒いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフに黒いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフのポイントマーカーを黒くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフのポイント印を黒色にする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフに黒い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフの丸マーカーを黒くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフの丸マーカーを黒色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフに黒い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの三角マーカーを黒色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフに黒い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの下三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの▽印を黒くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフに黒い左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフの左三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフに黒い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
黒い右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフの右三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフの右三角マーカーを黒色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフに黒いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフのバツマーカーを黒くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフに黒い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
黒い大バツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフの大バツマーカーを黒くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフに黒い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフの四角マーカーを黒くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフに黒いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
黒いダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフに黒いダイアモンド印を描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフのダイアモンドマーカーを黒くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフに黒い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフの星マーカーを黒くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフの星印を黒くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフに黄色いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフに黄色いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフのポイントマーカーを黄色くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフのポイント印を黄色くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフに黄色い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフの丸マーカーを黄色くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフに黄色い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
黄色い▲マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
黄色い三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの三角マーカーを黄色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの△マーカーを黄色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフに黄色い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフに黄色い▽印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの▽マーカーを黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角印を黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフに黄色い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフに黄色い左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフの左三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフの左三角マーカーを黄色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフに黄色い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
黄色い右三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフの右三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフの右三角マーカーを黄色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフに黄色いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフに黄色いバツ印を描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフのバツマーカーを黄色くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフのクロスマーカーを黄色くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフのクロス印を黄色にする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフに黄色い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツマーカーを黄色くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフに黄色い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
黄色い四角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
黄色い四角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフの四角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフに黄色いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い菱形印を描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフのダイアモンドマーカーを黄色くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフのダイアモンド印を黄色くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
黄色い星マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフの星マーカーを黄色くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフに緑色のポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフのポイントマーカーを緑色にする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフに緑色の丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
折れ線グラフの丸マーカーを緑色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
折れ線グラフに緑色の三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の三角印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの三角印を緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの上三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
緑色の下三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
緑色の▽マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフの下三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフに緑色の左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフの左三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフに緑色の右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフに緑色の右三角印を描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフの右三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフに緑色のバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
緑色のクロスマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフのバツマーカーを緑色にする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフに緑色の大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフの大バツマーカーを緑色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフに緑色の四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフの四角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフに緑色のダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフに緑色の菱形印を描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフのダイアモンドマーカーを緑色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフに緑色の星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
折れ線グラフの星マーカーを緑色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
折れ線グラフに大きさnのポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイントマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイント印のサイズをnに指定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイントマーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフに大きさnの丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフの丸マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフの丸マーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフの丸印のサイズをnに設定する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフに大きさnの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフに大きさnの三角印を描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフにサイズnの△マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの▲マーカーの大きさをnにする	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの▲印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフに大きさnの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの▽印を描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフにサイズnの▼マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフにサイズnの下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角印のサイズをnに設定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角マーカーのサイズをnに指定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフに大きさnの左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角印の大きさをnに指定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフに大きさnの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフにサイズnの右三角印を描画する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角印の大きさをnに指定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフに大きさnのバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフに大きさnのクロスマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフにサイズnのバツ印を描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツマーカーの大きさをnにセットする	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフに大きさnの大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツマーカーの大きさをnに変更する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツ印のサイズをnに設定する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツ印の大きさをnにセットする	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフに大きさnの四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角印の大きさをnに変更する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフに大きさnのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフにサイズnの菱形マーカーを描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフに大きさnのダイアモンド印を描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフに大きさnの菱形マーカーを描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフのダイアモンドマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフの菱形マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフの菱形印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフに大きさnの星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフの星マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフに線幅nのポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイント印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフに線幅nの丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフに線幅nの丸印を描画する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフの丸マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフの丸マーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフに線幅nの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフに線幅nの▲マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの▲マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの三角マーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの上三角印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフに線幅nの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
線幅nの▼マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフの左三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフに線幅nの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
線幅nの右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフの右三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフの右三角マーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフの右三角印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフに線幅nのバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
線幅nのバツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフに線幅nのクロスマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのバツマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのクロスマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのクロスマーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフに線幅nの大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
線幅nの大バツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフの大バツマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフの大バツマーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフに線幅nの四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
線幅nの四角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角印の線幅をnにする	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角印の線幅をnに変更する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフに線幅nのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフに線幅nの星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星マーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星マーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
ベクトルの演算をする	import numpy as np
行列の演算をする	import numpy as np
行列の計算を行う	import numpy as np
行列計算を行う	import numpy as np
行列の計算をする	import numpy as np
numpyを使う	import numpy as np
numpyをインポートする	import numpy as np
＜オプション＞データ型を指定する	dtype = np.int
＜オプション＞整数型を使う	dtype = np.int
＜オプション＞データ型を指定する	dtype = np.int8
＜オプション＞８ビット整数型を使う	dtype = np.int8
＜オプション＞データ型を指定する	dtype = np.uint8
＜オプション＞符号なし８ビット整数型を使う	dtype = np.uint8
＜オプション＞符号なし８ビット整数型を用いる	dtype = np.uint8
＜オプション＞データ型を指定する	dtype = np.int16
＜オプション＞三二ビット整数型を使う	dtype = np.int16
＜オプション＞３２ビット整数型を使う	dtype = np.int16
＜オプション＞三二ビット整数型を使用する	dtype = np.int16
＜オプション＞データ型を指定する	dtype = np.int32
＜オプション＞ブール型を使う	dtype = np.int32
＜オプション＞データ型を指定する	dtype = bool
＜オプション＞複素数型を使う	dtype = bool
リストを配列に変換する	np.array(aList)
リストを配列にする	np.array(aList)
リストから配列を作る	np.array(aList)
リストからベクトルを初期化する	np.array(aList)
リストから配列を作成する	np.array(aList)
ベクトルをリストから作る	np.array(aList)
イテラブルを配列に変換する	np.array(iterable)
列を配列にする	np.array(iterable)
イテラブルから配列を作る	np.array(iterable)
シーケンスから配列を作る	np.array(iterable)
列から配列を作る	np.array(iterable)
全要素を0で初期化された配列	np.zeros(要素数)
全要素を0で初期化した配列	np.zeros(要素数)
0で全要素を初期化された配列	np.zeros(要素数)
0で全要素を初期化された行列を作る	np.zeros(要素数)
ゼロ埋めされた配列	np.zeros(要素数)
ゼロ埋めされた整数型の配列	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた整数型の配列を初期化する	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた８ビット整数型の配列	np.zeros(要素数, dtype=np.int8)
８ビット整数型のゼロ埋めされた配列を作る	np.zeros(要素数, dtype=np.int8)
ゼロ埋めされた符号なし８ビット整数型の配列	np.zeros(要素数, dtype=np.uint8)
符号なし８ビット整数型のゼロ埋めした配列を作る	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めされた符号なし８ビット整数型の配列を作る	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めされた符号なし８ビット整数型の配列を作成する	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めされた三二ビット整数型の配列	np.zeros(要素数, dtype=np.int16)
三二ビット整数型のゼロ埋めされた配列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされた三二ビット整数型の行列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされたブール型の配列	np.zeros(要素数, dtype=np.int32)
ブール型のゼロ埋めされた行列を初期化する	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされたブール型のベクトル	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされた複素数型の配列	np.zeros(要素数, dtype=bool)
ゼロ埋めした複素数型の配列	np.zeros(要素数, dtype=bool)
全要素を０で初期化された行列	np.zeros(行数, 列数)
全要素を０で初期化した行列	np.zeros(行数, 列数)
ゼロ埋めされた行列	np.zeros(行数, 列数)
全要素を０で初期化された整数型の行列	np.zeros(行数, 列数, dtype=np.int)
整数型の０で全要素を初期化された行列	np.zeros(行数, 列数, dtype=np.int)
整数型の全要素を０で初期化された行列を作る	np.zeros(行数, 列数, dtype=np.int)
０で全要素を初期化された整数型の行列	np.zeros(行数, 列数, dtype=np.int)
全要素を０で初期化された８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int8)
全要素を０で初期化された符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
０で全要素を初期化された符号なし８ビット整数型の行列を作る	np.zeros(行数, 列数, dtype=np.uint8)
全要素を０で初期化された三二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
三２ビット整数型の全要素を０で初期化された行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化された3二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化されたブール型の行列	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化された論理値型の行列を作る	np.zeros(行数, 列数, dtype=np.int32)
０で全要素を初期化された論理値型の行列を作る	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化された複素数型の行列	np.zeros(行数, 列数, dtype=bool)
０で全要素を初期化された複素数型の行列を初期化する	np.zeros(行数, 列数, dtype=bool)
０で全要素を初期化された複素数型の行列	np.zeros(行数, 列数, dtype=bool)
全要素を1で初期化された配列	np.ones(要素数, dtype=np.int)
全要素を1で初期化した行列を作成する	np.ones(要素数, dtype=np.int)
1で全要素を初期化された配列	np.ones(要素数, dtype=np.int)
全要素を1で初期化されたベクトル	np.ones(要素数, dtype=np.int)
要素が全て1の配列	np.ones(要素数, dtype=np.int)
要素が全て1の行列	np.ones(要素数, dtype=np.int)
全要素を1で初期化された行列	np.ones(行数, 列数, dtype=np.int)
全要素が1の行列	np.ones(行数, 列数, dtype=np.int)
全要素を初期値で初期化された配列	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化された配列を作成する	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化された配列を作る	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の配列	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化された行列	np.full((行数, 列数), 初期値, dtype=np.int)
全要素を初期値で初期化された行列を作る	np.full((行数, 列数), 初期値, dtype=np.int)
初期値で全要素を初期化された行列	np.full((行数, 列数), 初期値, dtype=np.int)
全要素が初期値の行列	np.full((行数, 列数), 初期値, dtype=np.int)
単位行列	np.eye(行数, 列数)
単位正方行列	np.identity(N)
未初期化の配列	np.empty(要素数, dtype=np.int)
未初期化の行列	np.empty(要素数, dtype=np.int)
未初期化の行列を作る	np.empty(要素数, dtype=np.int)
未初期化の行列を初期化する	np.empty(要素数, dtype=np.int)
未初期化の行列	np.empty((行数, 列数), dtype=np.int)
配列と同じ大きさの空配列を作る	np.empty_like(aArray)
ベクトルと同じ大きさの空ベクトルを作成する	np.empty_like(aArray)
ベクトルと同じ大きさの空配列を作る	np.empty_like(aArray)
0からNまでの配列	np.arange(N)
0からNまでの行列	np.arange(N)
0からNまでのベクトル	np.arange(N)
1からNまでの配列	np.arange(1, N+1)
1からNまでの行列	np.arange(1, N+1)
等差数列を配列に変換する	np.arange(開始値, 終端値, 等差)
等差数列を配列にする	np.arange(開始値, 終端値, 等差)
配列の次元を変形する	aArray.reshape(行数, 列数)
行列を変形する	aArray.reshape(行数, 列数)
配列を2次元1列に変形する	aArray.reshape(-1, 1)
行列を2次元1列に変形する	aArray.reshape(-1, 1)
ベクトルを縦ベクトルに変形する	aArray.reshape(-1, 1)
配列を2次元1行に変形する	aArray.reshape(1, -1)
行列を2次元1行に変形する	aArray.reshape(1, -1)
既存の配列を元に全要素が0の配列	np.zeros_like(aArray)
既存の配列を元に全要素が0の行列	np.zeros_like(aArray)
既存の行列を元に全要素が0の配列	np.zeros_like(aArray)
配列をベースに全要素が0の行列を作る	np.zeros_like(aArray)
既存の配列を元に全要素が1の配列	np.ones_like(aArray)
ベクトルを元に全要素が1の配列	np.ones_like(aArray)
配列をベースに全要素が1の配列を作る	np.ones_like(aArray)
ベクトルをベースに全要素が1の配列を作る	np.ones_like(aArray)
既存の配列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
既存の行列を元に全要素が初期値の配列を作成する	np.full_like(aArray, 初期値)
配列の全要素の値を変更する	aArray[:, :] = 指定の値
行列の全要素の値を変更する	aArray[:, :] = 指定の値
配列の全要素を指定の値にする	aArray[:, :] = 指定の値
行列の値	aArray[行番号, 列番号]
行列の値を変更する	aArray[行番号, 列番号] = 指定の値
行列の行	aArray[行番号]
配列の行	aArray[行番号]
ベクトルの行を選択する	aArray[行番号]
行列の列	aArray[:, 列番号]
配列の列を選択する	aArray[:, 列番号]
ユニークな値を要素とする配列	np.unique(aArray)
配列のユニークな値を要素とする配列を使う	np.unique(aArray)
行列のユニークな値を要素とする配列を使う	np.unique(aArray)
ユニークな値を要素とする配列を使う	np.unique(aArray)
ユニークな要素ごとの頻度	np.unique(aArray, return_counts=True)
ユニークな要素ごとの頻度を使う	np.unique(aArray, return_counts=True)
二次元リストを転置する	[list(x) for x in list(zip(*aList))]
二次元リストの転置行列	[list(x) for x in list(zip(*aList))]
二次元リストの転置行列を算出する	[list(x) for x in list(zip(*aList))]
配列を転置する	aArray.T
行列を転置する	aArray.T
行列の転置行列	aArray.T
配列の和	aArray + aArray2
配列の要素ごとに加算する	aArray + aArray2
ベクトルの各要素に加算する	aArray + aArray2
配列の差	aArray - aArray2
配列の差を計算する	aArray - aArray2
ベクトルの差を求める	aArray - aArray2
配列の差を求める	aArray - aArray2
配列のスカラー倍	aArray * n
行列のスカラー倍を計算する	aArray * n
配列のスカラー倍を計算する	aArray * n
配列の要素ごとの積	np.multiply(aArray, aArray2)
ベクトルの要素ごとの積	np.multiply(aArray, aArray2)
ベクトルの各要素の積を計算する	np.multiply(aArray, aArray2)
配列の内積	np.dot(aArray, aArray2)
行列の内積	np.dot(aArray, aArray2)
行列の内積を求める	np.dot(aArray, aArray2)
行列の行列積	np.matmul(aArray, aArray2)
行列積を求める	np.matmul(aArray, aArray2)
行列の行列積を計算する	np.matmul(aArray, aArray2)
行列の逆行列	np.linalg.inv(aArray)
行列のムーア・ペンローズの擬似逆行列	np.linalg.pinv(aArray)
行列の行列式	np.linalg.det(aArray)
行列式を求める	np.linalg.det(aArray)
行列式	np.linalg.det(aArray)
FIXME	np.linalg.eig(aArray)
配列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
配列間の各要素の最大公約数を計算する	np.gcd(aArray, aArray2)
行列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
配列間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
ベクトル間の要素ごとの最小公倍数を求める	np.lcm(aArray, aArray2)
配列間の各要素の最小公倍数を求める	np.lcm(aArray, aArray2)
配列の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
配列の形状	aArray.shape
配列の形を計算する	aArray.shape
配列のデータ型	aArray.dtype()
ベクトルのデータ型	aArray.dtype()
配列の型を計算する	aArray.dtype()
配列が何のデータ型か	aArray.dtype()
配列の次元数	aArray.ndim
行列の次元数を算出する	aArray.ndim
行列の次元数	aArray.ndim
配列が何次元か	aArray.ndim
配列を列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
ベクトルを縦方向に連結する	np.concatenate([aArray, aArray2], axis=0)
配列を縦方向に連結する	np.concatenate([aArray, aArray2], axis=0)
配列を行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
ベクトルを行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
配列の合計値	np.sum(aArray)
ベクトルの合計	np.sum(aArray)
ベクトルの合計値	np.sum(aArray)
配列の列ごとの合計値	np.sum(aArray, axis=0)
行列の列ごとの合計値	np.sum(aArray, axis=0)
配列の行ごとの合計値	np.sum(aArray, axis=1)
行列の行ごとの合計値を求める	np.sum(aArray, axis=1)
行列の行ごとの合計値	np.sum(aArray, axis=1)
配列の平均値	np.mean(aArray)
行列の平均値を算出する	np.mean(aArray)
配列の列ごとの平均値	np.mean(aArray, axis=0)
ベクトルの列ごとの平均値を求める	np.mean(aArray, axis=0)
ベクトルの列ごとの平均	np.mean(aArray, axis=0)
行列の列ごとの平均値	np.mean(aArray, axis=0)
配列の行ごとの平均値	np.mean(aArray, axis=1)
ベクトルの行ごとの平均値	np.mean(aArray, axis=1)
配列の最小値	np.min(aArray)
行列の列ごとの最小値	np.min(aArray, axis=0)
行列の行ごとの最小値	np.min(aArray, axis=1)
行列の行ごとの最小	np.min(aArray, axis=1)
行列の行ごとの最小値を求める	np.min(aArray, axis=1)
配列の最大値	np.max(aArray)
ベクトルの最大	np.max(aArray)
配列の最大	np.max(aArray)
行列の列ごとの最大値	np.max(aArray, axis=0)
ベクトルの列ごとの最大値	np.max(aArray, axis=0)
行列の行ごとの最大値	np.max(aArray, axis=1)
ベクトルの行ごとの最大値を求める	np.max(aArray, axis=1)
配列の標準偏差	np.std(aArray)
行列の標準偏差を求める	np.std(aArray)
行列の列ごとの標準偏差	np.std(aArray, axis=0)
行列の行ごとの標準偏差	np.std(aArray, axis=1)
行列の行ごとの標準偏差を求める	np.std(aArray, axis=1)
配列の行ごとの標準偏差	np.std(aArray, axis=1)
配列の分散	np.var(aArray)
ベクトルの分散	np.var(aArray)
行列の列ごとの分散	np.var(aArray, axis=0)
行列の行ごとの分散	np.var(aArray, axis=1)
行列の行ごとの分散を算出する	np.var(aArray, axis=1)
配列の累積和	np.cumsum(aArray)
行列の累積和	np.cumsum(aArray)
行列の累積和を求める	np.cumsum(aArray)
配列の累積積	np.cumprod(aArray)
配列から重複を除いた配列を作る	np.unique(aArray)
配列から重複を除いたベクトルを作る	np.unique(aArray)
配列から重複を除いた行列を作る	np.unique(aArray)
配列のユニークな要素	np.unique(aArray)
ベクトルのユニークな要素を計算する	np.unique(aArray)
配列のユニークな要素とその個数	u, counts = np.unique(aArray, return_counts=True)
配列のユニークな要素とその個数を求める	u, counts = np.unique(aArray, return_counts=True)
行列のユニークな要素とその個数	u, counts = np.unique(aArray, return_counts=True)
配列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
ベクトルのユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
配列を平坦化する	aArray.flatten()
ベクトルを平坦化する	aArray.flatten()
配列を平坦にする	aArray.flatten()
行列を平坦にする	aArray.flatten()
二つのオブジェクトが等しいか調べる	obj == obj2
２つのオブジェクトが等しいか調べる	obj == obj2
二つのオブジェクトは等しい	obj == obj2
二つのオブジェクトが同一参照か調べる	obj is obj2
二つのオブジェクトが同一参照か	obj is obj2
2つのオブジェクトが同一参照か調べる	obj is obj2
オブジェクトをデバッグ向けの文字列に変換する	repr(obj)
オブジェクトを文字列に変換する	str(obj)
オブジェクトをユーザ向けの文字列に変換する	str(obj)
オブジェクトをユーザ向けの文字列にする	str(obj)
オブジェクトのイテレータ	iter(obj)
オブジェクトをイテラブルに変換する	iter(obj)
オブジェクトをイテラブルにする	iter(obj)
文字列をバイト配列に変換する	bytearray(s)
文字列をバイト列に変換する	bytes(s)
オブジェクトのメモリビュー	memoryview(obj)
オブジェクトが関数か調べる	callable(obj)
オブジェクトが関数かどうか調べる	callable(obj)
オブジェクトが関数か	callable(obj)
オブジェクトが関数	callable(obj)
文字列を式として評価する	eval(s)
グローバル変数の一覧	globals()
オブジェクトのプロパティを削除する	delattr(obj, プロパティ名)
オブジェクトの属性を消す	delattr(obj, プロパティ名)
オブジェクトのプロパティの値	getattr(obj, プロパティ名)
オブジェクトの属性の値	getattr(obj, プロパティ名)
オブジェクトにプロパティが存在するか調べる	hasattr(obj, プロパティ名)
オブジェクトにプロパティがある	hasattr(obj, プロパティ名)
オブジェクトに属性が存在するかどうか確認する	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つか調べる	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つ	hasattr(obj, プロパティ名)
オブジェクトのプロパティの値を値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトの属性の値を値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティの値を設定する	setattr(obj, プロパティ名, 値)
オブジェクトのハッシュ値	hash(obj)
オブジェクトがあるクラスか調べる	isinstance(obj, クラス)
オブジェクトがある型か判定する	isinstance(obj, クラス)
オブジェクトは整数クラスか調べる	isinstance(obj, int)
オブジェクトが整数クラス	isinstance(obj, int)
オブジェクトが整数型	isinstance(obj, int)
オブジェクトが整数かどうか	isinstance(obj, int)
オブジェクトは浮動小数点数クラスか調べる	isinstance(obj, float)
オブジェクトが浮動小数点数かどうか調べる	isinstance(obj, float)
オブジェクトは浮動小数点数クラスかどうか調べる	isinstance(obj, float)
オブジェクトは文字列クラスか調べる	isinstance(obj, str)
オブジェクトは文字列か調べる	isinstance(obj, str)
オブジェクトは論理値クラスか調べる	isinstance(obj, bool)
オブジェクトは論理値クラスのインスタンスか判定する	isinstance(obj, bool)
オブジェクトは論理値かどうか確認する	isinstance(obj, bool)
オブジェクトはリストクラスか調べる	isinstance(obj, list)
オブジェクトはリスト型のインスタンスかどうか調べる	isinstance(obj, list)
オブジェクトはリストクラス	isinstance(obj, list)
オブジェクトはリストか確認する	isinstance(obj, list)
オブジェクトはタプルクラスか調べる	isinstance(obj, tuple)
オブジェクトはタプルクラス	isinstance(obj, tuple)
オブジェクトはタプルクラスかどうか調べる	isinstance(obj, tuple)
オブジェクトがタプルクラスか調べる	isinstance(obj, tuple)
オブジェクトは辞書クラスか調べる	isinstance(obj, dict)
オブジェクトは辞書か判定する	isinstance(obj, dict)
オブジェクトが辞書か調べる	isinstance(obj, dict)
オブジェクトが辞書かどうか調べる	isinstance(obj, dict)
オブジェクトは集合クラスか調べる	isinstance(obj, set)
オブジェクトが集合か	isinstance(obj, set)
オブジェクトは集合型	isinstance(obj, set)
オブジェクトはバイト列クラスか調べる	isinstance(obj, bytes)
オブジェクトがバイト列クラスか調べる	isinstance(obj, bytes)
オブジェクトはバイト列クラスのインスタンス	isinstance(obj, bytes)
オブジェクトはバイト列か調べる	isinstance(obj, bytes)
オブジェクトは数値か調べる	isinstance(obj, (int,float))
オブジェクトが数値か	isinstance(obj, (int,float))
オブジェクトはリストかタプルか調べる	isinstance(obj, (list)
オブジェクトがリストかタプル	isinstance(obj, (list)
オブジェクトはリストかタプルか	isinstance(obj, (list)
クラスのサブクラスか調べる	issubclass(サブクラス, クラス)
型のサブクラスかどうか調べる	issubclass(サブクラス, クラス)
クラスのサブクラス	issubclass(サブクラス, クラス)
オブジェクトのオブジェクト識別子	id(obj)
オブジェクトの固有のID	id(obj)
オブジェクトの固有のIDを求める	id(obj)
オブジェクトのポインタ	id(obj)
オブジェクトのクラス	type(obj)
データ列を使う	import pandas as pd
データ列をインポートする	import pandas as pd
データフレームの要約統計量	df.describe()
データフレームのリストカラムの要約統計量	df[aList].describe()
データフレームのリスト列の要約統計量	df[aList].describe()
データ列の要約統計量	ds.describe()
データ列の要約統計量を求める	ds.describe()
カラムの要約統計量	ds.describe()
データフレームのカラムの要約統計量	df[col].describe()
データフレームの列の要約統計量を求める	df[col].describe()
データフレームのカラムの要約統計量を求める	df[col].describe()
データフレームの平均値	df.mean()
データフレームのリストカラムの平均値	df[aList].mean()
データ列の平均値	ds.mean()
カラムの平均値	ds.mean()
データ列の平均	ds.mean()
データフレームのカラムの平均値	df[col].mean()
データフレームのカラムの平均値を求める	df[col].mean()
データフレームの中央値	df.median()
データフレームのメディアン	df.median()
データフレームのリストカラムの中央値	df[aList].median()
データフレームのリスト列の中央値	df[aList].median()
データフレームのリストカラムの中央値を算出する	df[aList].median()
データ列の中央値	ds.median()
データ列の50パーセンタイル	ds.median()
データ列のメディアン	ds.median()
データフレームのカラムの中央値	df[col].median()
データフレームの列の第二四分位数を求める	df[col].median()
データフレームの列の中央値	df[col].median()
データフレームの列のメディアン	df[col].median()
データフレームの第一四分位数	df.quantile(0.25)
データフレームの第一四分位数を求める	df.quantile(0.25)
データフレームの上位25%を求める	df.quantile(0.25)
データフレームの25パーセンタイルを求める	df.quantile(0.25)
データフレームのリストカラムの第一四分位数	df[aList].quantile(0.25)
データフレームのリスト列の第一四分位数	df[aList].quantile(0.25)
データ列の第一四分位数	ds.quantile(0.25)
データ列の25パーセンタイル	ds.quantile(0.25)
データ列の上位25%を求める	ds.quantile(0.25)
データフレームのカラムの第一四分位数	df[col].quantile(0.25)
データフレームの第三四分位数	df.quantile(0.75)
データフレームのリストカラムの第三四分位数	df[aList].quantile(0.75)
データフレームのリストカラムの下位25%	df[aList].quantile(0.75)
データ列の第三四分位数	ds.quantile(0.75)
データ列の75パーセンタイル	ds.quantile(0.75)
データフレームのカラムの第三四分位数	df[col].quantile(0.75)
データフレームのカラムの下位25%	df[col].quantile(0.75)
データフレームのpercent分位数	df.quantile(percent/100)
データフレームのリストカラムのpercent分位数	df[aList].quantile(percent/100)
データ列のpercent分位数	ds.quantile(percent/100)
データフレームのカラムのpercent分位数	df[col].quantile(percent/100)
データフレームの最頻値	df.mode()
データフレームの最頻値を求める	df.mode()
データフレームのどの値が頻出か見る	df.mode()
データフレームのリストカラムの最頻値	df[aList].mode()
データフレームのリストカラムのどの値が頻出か見る	df[aList].mode()
データフレームのリストカラムのどの値が頻出か調べる	df[aList].mode()
データフレームのリスト列のどの値が頻出か確認する	df[aList].mode()
データ列の最頻値	ds.mode()
データ列のモードを計算する	ds.mode()
データ列のモードを算出する	ds.mode()
カラムの最頻値を求める	ds.mode()
データ列のどの値が頻出か見る	ds.mode()
データ列のどの値が最も現れるか見る	ds.mode()
データフレームのカラムの最頻値	df[col].mode()
データフレームのカラムのモード	df[col].mode()
データフレームのカラムのモードを求める	df[col].mode()
データフレームのカラムのどの値が頻出か見る	df[col].mode()
データフレームのカラムのどの値が頻出か調べる	df[col].mode()
データフレームのカラムのどの値が最も現れるか調べる	df[col].mode()
データフレームの標本標準偏差	df.std()
データフレームのリストカラムの標本標準偏差	df[aList].std()
データ列の標本標準偏差	ds.std()
データ列の標準偏差	ds.std()
データフレームのカラムの標本標準偏差	df[col].std()
データフレームの母標準偏差	df.std(ddof=0)
データフレームのリストカラムの母標準偏差	df[aList].std(ddof=0)
データフレームのリスト列の母標準偏差を計算する	df[aList].std(ddof=0)
データフレームのリスト列の母標準偏差	df[aList].std(ddof=0)
データ列の母標準偏差	ds.std(ddof=0)
カラムの母標準偏差を求める	ds.std(ddof=0)
データフレームのカラムの母標準偏差	df[col].std(ddof=0)
データフレームの分散	df.var()
データフレームの分散を算出する	df.var()
データフレームがどの程度、分散しているか見る	df.var()
データフレームがどれだけ、分散しているか見る	df.var()
データフレームがどの程度分散しているか見る	df.var()
データフレームのリストカラムの分散	df[aList].var()
データフレームのリスト列の分散を求める	df[aList].var()
データフレームのリストカラムの分散を求める	df[aList].var()
データフレームのリストカラムがどの程度、分散しているか見る	df[aList].var()
データフレームのリスト列がどの程度分散しているか見る	df[aList].var()
データ列の分散	ds.var()
データ列がどの程度、分散しているか見る	ds.var()
データ列はどれだけ、分散しているか調べる	ds.var()
データ列はどの程度分散しているか見る	ds.var()
データ列がどれだけ分散しているか確認する	ds.var()
データフレームのカラムの分散	df[col].var()
データフレームのカラムの分散を求める	df[col].var()
データフレームのカラムがどの程度、分散しているか見る	df[col].var()
データフレームのカラムはどれだけ、分散しているか見る	df[col].var()
データフレームの列がどれだけ、分散しているか見る	df[col].var()
データフレームの歪度	df.kurt()
データフレームの正規分布に対する左右対称性	df.kurt()
データフレームが正規分布からどの程度、歪んでいるか見る	df.kurt()
データフレームが正規分布からどれだけ歪んでいるか見る	df.kurt()
データフレームのリストカラムの歪度	df[aList].kurt()
データフレームのリスト列の歪度を計算する	df[aList].kurt()
データフレームのリストカラムが正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
データフレームのリスト列は正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
データフレームのリストカラムは正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
データ列の歪度	ds.kurt()
データ列の正規分布に対する左右対称性	ds.kurt()
データ列が正規分布からどの程度、歪んでいるか見る	ds.kurt()
列が正規分布からどの程度、歪んでいるか見る	ds.kurt()
データフレームのカラムの歪度	df[col].kurt()
データフレームのカラムが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの列が正規分布からどの程度歪んでいるか見る	df[col].kurt()
データフレームの列が正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの尖度	df.skew()
データフレームが正規分布からどの程度、尖っているか見る	df.skew()
データフレームは正規分布からどれだけ、尖っているか確認する	df.skew()
データフレームが正規分布からどの程度尖っているか調べる	df.skew()
データフレームは正規分布からどの程度、尖っているか確認する	df.skew()
データフレームのリストカラムの尖度	df[aList].skew()
データフレームのリスト列の尖度	df[aList].skew()
データフレームのリストカラムが正規分布からどの程度、尖っているか見る	df[aList].skew()
データフレームのリストカラムが正規分布からどれだけ、尖っているか見る	df[aList].skew()
データフレームのリストカラムは正規分布からどの程度尖っているか見る	df[aList].skew()
データ列の尖度	ds.skew()
カラムの尖度を求める	ds.skew()
データ列の正規分布に対する上下広がりを求める	ds.skew()
データ列が正規分布からどの程度、尖っているか見る	ds.skew()
カラムが正規分布からどの程度、尖っているか確認する	ds.skew()
データ列は正規分布からどの程度、尖っているか確認する	ds.skew()
列が正規分布からどの程度尖っているか見る	ds.skew()
データフレームのカラムの尖度	df[col].skew()
データフレームの列の尖度	df[col].skew()
データフレームのカラムが正規分布からどの程度、尖っているか見る	df[col].skew()
データフレームのカラムが正規分布からどれだけ、尖っているか見る	df[col].skew()
データフレームのカラムが正規分布からどの程度尖っているか見る	df[col].skew()
データフレームのカラムが正規分布からどれだけ尖っているか見る	df[col].skew()
データフレームを丸める	df.round()
データフレームを整数に丸める	df.round()
データフレームのリストカラムを丸める	df[aList].round()
データフレームのリストカラムを整数に四捨五入する	df[aList].round()
データ列を丸める	ds.round()
データフレームのカラムを丸める	df[col].round()
データフレームを小数点以下n桁で丸める	df.round(n)
データフレームのリストカラムを小数点以下n桁で丸める	df[aList].round(n)
データフレームのリスト列を小数点以下n桁で丸める	df[aList].round(n)
データ列を小数点以下n桁で丸める	ds.round(n)
データ列を小数点以下n桁で四捨五入する	ds.round(n)
データフレームのカラムを小数点以下n桁で丸める	df[col].round(n)
データフレームを10の位で丸める	df.round(-1)
データフレームを10の位で四捨五入する	df.round(-1)
データフレームのリストカラムを10の位で丸める	df[aList].round(-1)
データフレームのリスト列を10の位で丸める	df[aList].round(-1)
データ列を10の位で丸める	ds.round(-1)
カラムを10の位で四捨五入する	ds.round(-1)
データフレームのカラムを10の位で丸める	df[col].round(-1)
データフレームのカラムを十の位で丸める	df[col].round(-1)
データフレームを100の位で丸める	df.round(-2)
データフレームを100の位で四捨五入する	df.round(-2)
データフレームのリストカラムを100の位で丸める	df[aList].round(-2)
データフレームのリストカラムを100の位で四捨五入する	df[aList].round(-2)
データフレームのリスト列を100の位で丸める	df[aList].round(-2)
データ列を100の位で丸める	ds.round(-2)
データフレームのカラムを100の位で丸める	df[col].round(-2)
データフレームを1000の位で丸める	df.round(-3)
データフレームのリストカラムを1000の位で丸める	df[aList].round(-3)
データフレームのリストカラムを千の位で丸める	df[aList].round(-3)
データ列を1000の位で丸める	ds.round(-3)
カラムを千の位で丸める	ds.round(-3)
データ列を1000の位で四捨五入する	ds.round(-3)
データフレームのカラムを1000の位で丸める	df[col].round(-3)
データフレームを丸めて、整数型にする	df.round().astype(int)
データフレームのリストカラムを丸めて、整数型にする	df[aList].round().astype(int)
データフレームのリストカラムを丸めて整数型にする	df[aList].round().astype(int)
データ列を丸めて、整数型にする	ds.round().astype(int)
データ列を丸めて、整数にする	ds.round().astype(int)
カラムを丸めて整数型にする	ds.round().astype(int)
データフレームのカラムを丸めて、整数型にする	df[col].round().astype(int)
データフレームのカラムを丸めて、整数にする	df[col].round().astype(int)
データフレームのカラムを丸めて整数にする	df[col].round().astype(int)
データフレームを10の位で丸めて、整数型にする	df.round(-1).astype(int)
データフレームを10の位で四捨五入して、整数型にする	df.round(-1).astype(int)
データフレームのリストカラムを10の位で丸めて、整数型にする	df[aList].round(-1).astype(int)
データフレームのリストカラムを十の位で丸めて整数にする	df[aList].round(-1).astype(int)
データフレームのリスト列を10の位で丸めて整数にする	df[aList].round(-1).astype(int)
データ列を10の位で丸めて、整数型にする	ds.round(-1).astype(int)
データ列を十の位で四捨五入して整数型にする	ds.round(-1).astype(int)
列を10の位で四捨五入して、整数型にする	ds.round(-1).astype(int)
データフレームのカラムを10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
データフレームの列を10の位で丸めて整数にする	df[col].round(-1).astype(int)
データフレームのカラムを10の位で丸めて、整数にする	df[col].round(-1).astype(int)
データフレームを100の位で丸めて、整数型にする	df.round(-2).astype(int)
データフレームを百の位で丸めて、整数型にする	df.round(-2).astype(int)
データフレームのリストカラムを100の位で丸めて、整数型にする	df[aList].round(-2).astype(int)
データフレームのリスト列を百の位で丸めて、整数にする	df[aList].round(-2).astype(int)
データフレームのリストカラムを100の位で丸めて整数にする	df[aList].round(-2).astype(int)
データ列を100の位で丸めて、整数型にする	ds.round(-2).astype(int)
データ列を100の位で四捨五入して、整数型にする	ds.round(-2).astype(int)
データ列を100の位で丸めて、整数にする	ds.round(-2).astype(int)
データフレームのカラムを100の位で丸めて、整数型にする	df[col].round(-2).astype(int)
データフレームの列を100の位で四捨五入して、整数型にする	df[col].round(-2).astype(int)
データフレームの列を100の位で四捨五入して整数型にする	df[col].round(-2).astype(int)
データフレームの列を100の位で丸めて整数にする	df[col].round(-2).astype(int)
データフレームを1000の位で丸めて、整数型にする	df.round(-3).astype(int)
データフレームのリストカラムを1000の位で丸めて、整数型にする	df[aList].round(-3).astype(int)
データフレームのリストカラムを1000の位で四捨五入して、整数型にする	df[aList].round(-3).astype(int)
データフレームのリストカラムを千の位で丸めて、整数にする	df[aList].round(-3).astype(int)
データフレームのリスト列を1000の位で丸めて整数型にする	df[aList].round(-3).astype(int)
データ列を1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
カラムを1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
データフレームのカラムを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
データフレームのカラムを1000の位で四捨五入して、整数型にする	df[col].round(-3).astype(int)
データフレームのカラムを1000の位で四捨五入して整数型にする	df[col].round(-3).astype(int)
データフレームの欠損値をxで埋める	df.fillna(x)
xでデータフレームの未入力値を埋める	df.fillna(x)
xでデータフレームの欠損値を埋める	df.fillna(x)
データフレームの欠損値をxに設定する	df.fillna(x)
データフレームの欠損値をxにする	df.fillna(x)
データフレームのリストカラムの欠損値をxで埋める	df[aList].fillna(x)
データフレームのリスト列の欠損値をxで埋める	df[aList].fillna(x)
データフレームのリストカラムのNaNをxで埋める	df[aList].fillna(x)
xでデータフレームのリストカラムのNaNを置換する	df[aList].fillna(x)
データフレームのリストカラムの欠損値をxに設定する	df[aList].fillna(x)
データフレームのリストカラムのNaNをxに設定する	df[aList].fillna(x)
データ列の欠損値をxで埋める	ds.fillna(x)
xでデータ列の欠損値を置換する	ds.fillna(x)
データ列の欠損値をxに設定する	ds.fillna(x)
データ列のNaNをxに指定する	ds.fillna(x)
データ列のNaNをxに設定する	ds.fillna(x)
カラムの欠損値をxにセットする	ds.fillna(x)
データフレームのカラムの欠損値をxで埋める	df[col].fillna(x)
データフレームのカラムの欠損値をxに設定する	df[col].fillna(x)
データフレームのカラムの欠損値をxに指定する	df[col].fillna(x)
データフレームのカラムのNaNをxに変更する	df[col].fillna(x)
データフレームの欠損値を平均値で埋める	df.fillna(df.mean())
平均値でデータフレームの未入力値を補う	df.fillna(df.mean())
データフレームの欠損値を平均値に設定する	df.fillna(df.mean())
データフレームのリストカラムの欠損値を平均値で埋める	df[aList].fillna(df[aList].mean())
データフレームのリストカラムの欠損値を平均値に設定する	df[aList].fillna(df[aList].mean())
データフレームのリスト列の未入力値を平均値に設定する	df[aList].fillna(df[aList].mean())
データフレームのリスト列の欠損値を平均値にする	df[aList].fillna(df[aList].mean())
データ列の欠損値を平均値で埋める	ds.fillna(ds.mean())
列の未入力値を平均で埋める	ds.fillna(ds.mean())
データ列の欠損値を平均で埋める	ds.fillna(ds.mean())
データ列の欠損値を平均値に設定する	ds.fillna(ds.mean())
データ列の欠損値を平均値に指定する	ds.fillna(ds.mean())
データ列の欠損値を平均に設定する	ds.fillna(ds.mean())
カラムの未入力値を平均値に設定する	ds.fillna(ds.mean())
データフレームのカラムの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
平均でデータフレームの列の欠損値を埋める	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
データフレームのカラムのNaNを平均に設定する	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均に設定する	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均値に変更する	df[col].fillna(df[col].mean())
データフレームの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
データフレームの欠損値をモードで補う	df.fillna(df.mode().iloc[0])
モードでデータフレームの欠損値を置換する	df.fillna(df.mode().iloc[0])
データフレームの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
データフレームの欠損値を最頻値に指定する	df.fillna(df.mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値で埋める	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値をモードで置換する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値をモードで埋める	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリスト列の未入力値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムのNaNをモードに設定する	df[aList].fillna(df[aList].mode().iloc[0])
データ列の欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
データ列のNaNをモードで埋める	ds.fillna(ds.mode().iloc[0])
最頻値でカラムの欠損値を埋める	ds.fillna(ds.mode().iloc[0])
最頻値でデータ列の欠損値を埋める	ds.fillna(ds.mode().iloc[0])
データ列の欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
データ列の欠損値をモードに設定する	ds.fillna(ds.mode().iloc[0])
列の欠損値を最頻値に変更する	ds.fillna(ds.mode().iloc[0])
データフレームのカラムの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値をモードで補う	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムのNaNを最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームの列の欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値を最頻値に指定する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値をモードに指定する	df[col].fillna(df[col].mode().iloc[0])
データフレームの列の欠損値を最頻値に指定する	df[col].fillna(df[col].mode().iloc[0])
データフレームの欠損値を中央値で埋める	df.fillna(df.median())
データフレームのNaNを中央値で埋める	df.fillna(df.median())
データフレームのNaNを第二四分位数で埋める	df.fillna(df.median())
データフレームの欠損値を中央値に設定する	df.fillna(df.median())
データフレームのNaNを中央値に設定する	df.fillna(df.median())
データフレームのリストカラムの欠損値を中央値で埋める	df[aList].fillna(df[aList].median())
データフレームのリストカラムの未入力値をメディアンで補う	df[aList].fillna(df[aList].median())
データフレームのリストカラムのNaNを中央値で補う	df[aList].fillna(df[aList].median())
メディアンでデータフレームのリスト列のNaNを補う	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を中央値に設定する	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を中央値に指定する	df[aList].fillna(df[aList].median())
データフレームのリスト列の欠損値を中央値に変更する	df[aList].fillna(df[aList].median())
データフレームのリスト列の欠損値を中央値に指定する	df[aList].fillna(df[aList].median())
データ列の欠損値を中央値で埋める	ds.fillna(ds.median())
第二四分位数でデータ列の欠損値を埋める	ds.fillna(ds.median())
データ列の欠損値を中央値で補う	ds.fillna(ds.median())
列の欠損値を中央値で埋める	ds.fillna(ds.median())
データ列の欠損値を中央値に設定する	ds.fillna(ds.median())
データ列の未入力値を中央値に指定する	ds.fillna(ds.median())
データ列の未入力値を中央値に設定する	ds.fillna(ds.median())
データ列の欠損値をメディアンに変更する	ds.fillna(ds.median())
データフレームのカラムの欠損値を中央値で埋める	df[col].fillna(df[col].median())
中央値でデータフレームのカラムの欠損値を置換する	df[col].fillna(df[col].median())
データフレームの列のNaNをメディアンで埋める	df[col].fillna(df[col].median())
メディアンでデータフレームの列の欠損値を埋める	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームの列の欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームの欠損値を最大値で埋める	df.fillna(df.max())
データフレームのNaNを最大値で補う	df.fillna(df.max())
データフレームの欠損値を最大値に設定する	df.fillna(df.max())
データフレームのNaNを最大値に設定する	df.fillna(df.max())
データフレームの未入力値を最大値に設定する	df.fillna(df.max())
データフレームのリストカラムの欠損値を最大値で埋める	df[aList].fillna(df[aList].max())
データフレームのリストカラムの欠損値を最大値で置換する	df[aList].fillna(df[aList].max())
最大値でデータフレームのリストカラムの欠損値を埋める	df[aList].fillna(df[aList].max())
データフレームのリストカラムの未入力値を最大値で埋める	df[aList].fillna(df[aList].max())
データフレームのリストカラムの欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
データフレームのリスト列の欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
データフレームのリストカラムの未入力値を最大値に設定する	df[aList].fillna(df[aList].max())
データフレームのリスト列の未入力値を最大値に設定する	df[aList].fillna(df[aList].max())
データ列の欠損値を最大値で埋める	ds.fillna(ds.max())
最大値でデータ列の欠損値を埋める	ds.fillna(ds.max())
最大値でデータ列のNaNを埋める	ds.fillna(ds.max())
最大値でカラムのNaNを埋める	ds.fillna(ds.max())
データ列の欠損値を最大値に設定する	ds.fillna(ds.max())
データ列の未入力値を最大値にする	ds.fillna(ds.max())
カラムの欠損値を最大値に設定する	ds.fillna(ds.max())
データフレームのカラムの欠損値を最大値で埋める	df[col].fillna(df[col].max())
データフレームのカラムの未入力値を最大値で埋める	df[col].fillna(df[col].max())
データフレームのカラムのNaNを最大値で補う	df[col].fillna(df[col].max())
データフレームのカラムの欠損値を最大値に設定する	df[col].fillna(df[col].max())
データフレームの欠損値を最小値で埋める	df.fillna(df.min())
データフレームのNaNを最小値で埋める	df.fillna(df.min())
データフレームの欠損値を最小値で置換する	df.fillna(df.min())
データフレームの欠損値を最小値に設定する	df.fillna(df.min())
データフレームのNaNを最小値に設定する	df.fillna(df.min())
データフレームのリストカラムの欠損値を最小値で埋める	df[aList].fillna(df[aList].min())
最小値でデータフレームのリストカラムの欠損値を埋める	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値で補う	df[aList].fillna(df[aList].min())
最小値でデータフレームのリストカラムの欠損値を置換する	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
データ列の欠損値を最小値で埋める	ds.fillna(ds.min())
カラムの未入力値を最小値で補う	ds.fillna(ds.min())
データ列の欠損値を最小値に設定する	ds.fillna(ds.min())
データ列の欠損値を最小値に指定する	ds.fillna(ds.min())
データ列の未入力値を最小値に設定する	ds.fillna(ds.min())
データ列のNaNを最小値に設定する	ds.fillna(ds.min())
データフレームのカラムの欠損値を最小値で埋める	df[col].fillna(df[col].min())
最小値でデータフレームのカラムの欠損値を補う	df[col].fillna(df[col].min())
データフレームのカラムの未入力値を最小値で補う	df[col].fillna(df[col].min())
データフレームのカラムの欠損値を最小値に設定する	df[col].fillna(df[col].min())
データフレームの列の欠損値を最小値に変更する	df[col].fillna(df[col].min())
データフレームのカラムの未入力値を最小値に設定する	df[col].fillna(df[col].min())
データフレームの欠損値を直前の値で埋める	df.fillna(method='ffill')
データフレームの欠損値を直前の値で置換する	df.fillna(method='ffill')
データフレームの欠損値を直前の値に設定する	df.fillna(method='ffill')
データフレームの未入力値を前の行の値に設定する	df.fillna(method='ffill')
データフレームのNaNを直前の値に設定する	df.fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムのNaNを直前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値で補う	df[aList].fillna(method='ffill')
直前の値でデータフレームのリストカラムの欠損値を埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値に設定する	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値に指定する	df[aList].fillna(method='ffill')
データフレームのリスト列のNaNを直前の値に設定する	df[aList].fillna(method='ffill')
データ列の欠損値を直前の値で埋める	ds.fillna(method='ffill')
データ列の欠損値を前の値で埋める	ds.fillna(method='ffill')
データ列の欠損値を直前の値で補う	ds.fillna(method='ffill')
データ列の欠損値を直前の値に設定する	ds.fillna(method='ffill')
データ列のNaNを直前の値に設定する	ds.fillna(method='ffill')
列の欠損値を直前の値に設定する	ds.fillna(method='ffill')
データフレームのカラムの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
直前の値でデータフレームのカラムの欠損値を補う	df[col].fillna(method='ffill')
データフレームのカラムのNaNを直前の値で置換する	df[col].fillna(method='ffill')
データフレームの列の欠損値を直前の値で補う	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値に設定する	df[col].fillna(method='ffill')
データフレームのカラムのNaNを直前の値に設定する	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値にする	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を前の行の値に設定する	df[col].fillna(method='ffill')
データフレームの欠損値を直後の値で埋める	df.fillna(method='bfill')
データフレームの未入力値を直後の値で埋める	df.fillna(method='bfill')
データフレームのNaNを直後の値で置換する	df.fillna(method='bfill')
データフレームの欠損値を直後の値に設定する	df.fillna(method='bfill')
データフレームの欠損値を後の値に指定する	df.fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値で埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を後の行の値で埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値に設定する	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値に変更する	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値に指定する	df[aList].fillna(method='bfill')
データ列の欠損値を直後の値で埋める	ds.fillna(method='bfill')
直後の値でデータ列の欠損値を置換する	ds.fillna(method='bfill')
データ列の欠損値を後の行の値で埋める	ds.fillna(method='bfill')
データ列の欠損値を直後の値に設定する	ds.fillna(method='bfill')
データ列の欠損値を後の行の値に設定する	ds.fillna(method='bfill')
データフレームのカラムの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を後の行の値で埋める	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を直後の値に設定する	df[col].fillna(method='bfill')
データフレームの列の欠損値を直後の値に増やす	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を後の値に設定する	df[col].fillna(method='bfill')
データフレームのカラムの未入力値を後の行の値に設定する	df[col].fillna(method='bfill')
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームの文字列をNaNにする	df.replace(s, np.nan)
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームの文字列を欠損値にする	df.replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリスト列の文字列をNaNにする	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリスト列の文字列を未入力値に変換する	df[aList].replace(s, np.nan)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
データ列の文字列をNaNにする	ds.replace(s, np.nan)
データ列の文字列を未入力値に変換する	ds.replace(s, np.nan)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
データ列の文字列を未入力値に変換する	ds.replace(s, np.nan)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームのカラムの文字列を欠損値にする	df[col].replace(s, np.nan)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームのカラムの文字列を欠損値にする	df[col].replace(s, np.nan)
データフレームの列の文字列を欠損値にする	df[col].replace(s, np.nan)
データフレームの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
データフレームの空文字をNaNに変換し、ドロップする	df.replace('', np.nan).dropna()
データフレームの空文字をドロップする	df.replace('', np.nan).dropna()
データフレームのリストカラムの空文字を欠損値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリストカラムの空文字を未入力値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリストカラムの空文字をドロップする	df[aList].replace('', np.nan).dropna()
データ列の空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
データ列の空文字をドロップする	ds.replace('', np.nan).dropna()
データフレームのカラムの空文字を欠損値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字を欠損値に変換しドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字をドロップする	df[col].replace('', np.nan).dropna()
データフレームの値をValueMapでまとめて置き換える	df.replace(ValueMap)
まとめてデータフレームをValueMapで置換する	df.replace(ValueMap)
ValueMapで一度にデータフレームを置換する	df.replace(ValueMap)
データフレームの値をValueMapで置き換える	df.replace(ValueMap)
データフレームのリストカラムの値をValueMapでまとめて置き換える	df[aList].replace(ValueMap)
データフレームのリストカラムの値をValueMapで一度に置換する	df[aList].replace(ValueMap)
ValueMapでデータフレームのリストカラムの値をまとめて置き換える	df[aList].replace(ValueMap)
データフレームのリスト列をValueMapでまとめて置き換える	df[aList].replace(ValueMap)
データ列の値をValueMapでまとめて置き換える	ds.replace(ValueMap)
データ列をValueMapで置き換える	ds.replace(ValueMap)
ValueMapで一度にデータ列の値を置き換える	ds.replace(ValueMap)
まとめて列をValueMapで置換する	ds.replace(ValueMap)
データフレームのカラムの値をValueMapでまとめて置き換える	df[col].replace(ValueMap)
データフレームのカラムの値をValueMapで置き換える	df[col].replace(ValueMap)
データフレームの列をValueMapで一度に変更する	df[col].replace(ValueMap)
データフレームの列の値をまとめてValueMapで変更する	df[col].replace(ValueMap)
データフレームの値を正規表現patternでまとめてreplに置き換える	df.replace(pattern, repl, regex=True)
データフレームの値を正規表現patternでまとめてreplに変更する	df.replace(pattern, repl, regex=True)
データフレームの値を正規表現でまとめて置換する	df.replace(pattern, repl, regex=True)
replに正規表現patternでまとめてデータフレームの値を置き換える	df.replace(pattern, repl, regex=True)
データフレームのリストカラムの値を正規表現patternでまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
データフレームのリストカラムの値を正規表現patternで一度に置き換える	df[aList].replace(pattern, repl, regex=True)
正規表現patternでデータフレームのリストカラムの値をまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
データフレームのリスト列の値を正規表現patternでまとめて置き換える	df[aList].replace(pattern, repl, regex=True)
データ列の値を正規表現patternでまとめてreplに置き換える	ds.replace(pattern, repl, regex=True)
replにまとめてデータ列の値を正規表現patternで置き換える	ds.replace(pattern, repl, regex=True)
replにまとめて正規表現でカラムの値を変更する	ds.replace(pattern, repl, regex=True)
データ列の値を正規表現patternでまとめて置き換える	ds.replace(pattern, repl, regex=True)
データフレームのカラムの値を正規表現patternでまとめてreplに置き換える	df[col].replace(pattern, repl, regex=True)
データフレームの列を正規表現patternでまとめてreplに置換する	df[col].replace(pattern, repl, regex=True)
データフレームのカラムを正規表現patternでまとめてreplに置き換える	df[col].replace(pattern, repl, regex=True)
データフレームのカラムを正規表現でまとめて置き換える	df[col].replace(pattern, repl, regex=True)
データフレームの値が欠損値か調べる	df.isna()
データフレームの値がNaN	df.isna()
データフレームの値が欠損値	df.isna()
データフレームのリストカラムの値が欠損値か調べる	df[aList].isna()
データフレームのリストカラムの値が欠損値か確認する	df[aList].isna()
データフレームのリストカラムの値が未入力値かどうか調べる	df[aList].isna()
データ列の値が欠損値か調べる	ds.isna()
データ列の値はNaN	ds.isna()
データ列の値が欠損値かどうか	ds.isna()
データ列の値が未入力値	ds.isna()
データフレームのカラムの値が欠損値か調べる	df[col].isna()
データフレームの列の値が欠損値	df[col].isna()
データフレームのカラムの値がNaNか調べる	df[col].isna()
データフレームのカラムの値は未入力値か調べる	df[col].isna()
データフレームの中の欠損値の合計を数える	df.isna().sum()
データフレームの中の欠損値の数を数える	df.isna().sum()
データフレームの中の未入力値の合計をカウントする	df.isna().sum()
データフレームの中にいくつ欠損値があるか数える	df.isna().sum()
データフレームの中にいくつ未入力値があるかカウントする	df.isna().sum()
データフレームのリストカラムの中の欠損値の合計を数える	df[aList].isna().sum()
データフレームのリストカラムの中の欠損値の個数を数える	df[aList].isna().sum()
データフレームのリストカラムの中の欠損値の合計を求める	df[aList].isna().sum()
データフレームのリストカラムの中の欠損値の合計をカウントする	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ欠損値があるか数える	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ欠損値があるか求める	df[aList].isna().sum()
データフレームのリストカラムの中にいくつNaNがあるか数える	df[aList].isna().sum()
データ列の中の欠損値の合計を数える	ds.isna().sum()
カラムの中のNaNの数をカウントする	ds.isna().sum()
データ列の中の未入力値の合計をカウントする	ds.isna().sum()
データ列の中にいくつ欠損値があるか数える	ds.isna().sum()
カラムの中にいくつ欠損値が存在するかカウントする	ds.isna().sum()
カラムの中にいくつ欠損値があるか数える	ds.isna().sum()
データ列の中にいくつ欠損値が含まれるか数える	ds.isna().sum()
データフレームのカラムの中の欠損値の合計を数える	df[col].isna().sum()
データフレームの列の中のNaNの数をカウントする	df[col].isna().sum()
データフレームのカラムの中の欠損値の合計を求める	df[col].isna().sum()
データフレームのカラムの中のNaNの合計を数える	df[col].isna().sum()
データフレームのカラムの中にいくつ欠損値があるか数える	df[col].isna().sum()
データフレームのカラムの中にいくつ欠損値が存在するか数える	df[col].isna().sum()
データフレームの列の中にいくつ欠損値があるか数える	df[col].isna().sum()
データフレームの中に文字列があるか調べる	df.isin([value])
データフレームの中にがある	df.isin([value])
データフレームの中にが含まれる	df.isin([value])
データフレームの中に日付データが存在するか調べる	df.isin([value])
データフレームのリストカラムの中に文字列があるか調べる	df[aList].isin([value])
データフレームのリストカラムの中に日付データがあるか確認する	df[aList].isin([value])
データフレームのリストカラムの中に文字列がある	df[aList].isin([value])
データ列の中に文字列があるか調べる	ds.isin([value])
カラムの中に日付データが含まれる	ds.isin([value])
カラムの中に文字列があるか調べる	ds.isin([value])
データフレームのカラムの中に文字列があるか調べる	df[col].isin([value])
データフレームのカラムの中に日付データがあるか調べる	df[col].isin([value])
データフレームのカラムの中に文字列があるか	df[col].isin([value])
データフレームのカラムの中に文字列があるかどうか調べる	df[col].isin([value])
データフレームの中にある文字列の合計を数える	df.isin([value]).sum()
データフレームの中にある日付データの合計を数える	df.isin([value]).sum()
データフレームの中にある文字列の数をカウントする	df.isin([value]).sum()
データフレームの中にあるの合計を求める	df.isin([value]).sum()
データフレームの中にいくつ文字列があるか数える	df.isin([value]).sum()
データフレームの中にいくつ文字列が含まれるか数える	df.isin([value]).sum()
データフレームのリストカラムの中にある文字列の合計を数える	df[aList].isin([value]).sum()
データフレームのリストカラムの中にある日付データの合計をカウントする	df[aList].isin([value]).sum()
データフレームのリストカラムの中にあるの合計を求める	df[aList].isin([value]).sum()
データフレームのリストカラムの中にある日付データの合計を数える	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつ文字列があるか数える	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつ文字列があるか求める	df[aList].isin([value]).sum()
データフレームのリスト列の中にいくつがあるか数える	df[aList].isin([value]).sum()
データ列の中にある文字列の合計を数える	ds.isin([value]).sum()
データ列の中に存在する日付データの合計を数える	ds.isin([value]).sum()
列の中にある文字列の合計をカウントする	ds.isin([value]).sum()
データ列の中に存在する文字列の合計を数える	ds.isin([value]).sum()
データ列の中にいくつ文字列があるか数える	ds.isin([value]).sum()
カラムの中にいくつ文字列が含まれるか数える	ds.isin([value]).sum()
カラムの中にいくつ文字列があるか数える	ds.isin([value]).sum()
データ列の中にいくつ日付データが存在するか求める	ds.isin([value]).sum()
データフレームのカラムの中にある文字列の合計を数える	df[col].isin([value]).sum()
データフレームのカラムの中にある文字列の合計をカウントする	df[col].isin([value]).sum()
データフレームのカラムの中にある文字列の個数を数える	df[col].isin([value]).sum()
データフレームのカラムの中にいくつ文字列があるか数える	df[col].isin([value]).sum()
データフレームのカラムの中にいくつ文字列が存在するか数える	df[col].isin([value]).sum()
データフレームの中に文字列と文字列があるか調べる	df.isin([value, value2])
データフレームの中に日付データと文字列が存在する	df.isin([value, value2])
データフレームのリストカラムの中に文字列と文字列があるか調べる	df[aList].isin([value, value2])
データフレームのリストカラムの中に文字列と日付データが存在するかどうか調べる	df[aList].isin([value, value2])
データフレームのリスト列の中に文字列と文字列が存在するか調べる	df[aList].isin([value, value2])
データ列の中に文字列と文字列があるか調べる	ds.isin([value, value2])
データ列の中に日付データと日付データがあるか調べる	ds.isin([value, value2])
データ列の中に文字列と文字列があるか	ds.isin([value, value2])
データ列の中に文字列と文字列が存在する	ds.isin([value, value2])
データフレームのカラムの中に文字列と文字列があるか調べる	df[col].isin([value, value2])
データフレームの列の中に日付データと文字列があるか調べる	df[col].isin([value, value2])
データフレームの列の中に日付データと文字列が存在する	df[col].isin([value, value2])
データフレームの中にある文字列と文字列の合計を数える	df.isin([value, value2]).sum()
データフレームの中にある文字列との合計を求める	df.isin([value, value2]).sum()
データフレームの中にある日付データと文字列の数を数える	df.isin([value, value2]).sum()
データフレームの中に文字列と文字列がいくつあるか数える	df.isin([value, value2]).sum()
データフレームの中に日付データとがいくつあるか数える	df.isin([value, value2]).sum()
データフレームの中に文字列と日付データがいくつあるか数える	df.isin([value, value2]).sum()
データフレームの中に文字列と文字列がいくつ存在するか求める	df.isin([value, value2]).sum()
データフレームのリストカラムの中にある文字列と文字列の合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に存在する文字列との合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中にある日付データとの合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に存在する文字列と文字列の合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に文字列と文字列がいくつあるか数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に文字列と文字列がいくつあるかカウントする	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に日付データとがいくつあるか数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に文字列とがいくつあるか数える	df[aList].isin([value, value2]).sum()
データ列の中にある文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
データ列の中に含まれる文字列と文字列の数を求める	ds.isin([value, value2]).sum()
データ列の中に存在する日付データと日付データの合計を数える	ds.isin([value, value2]).sum()
データ列の中に存在する文字列と文字列の合計を求める	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつあるか数える	ds.isin([value, value2]).sum()
データ列の中に文字列と日付データがいくつ存在するかカウントする	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつ存在するか数える	ds.isin([value, value2]).sum()
データ列の中にと文字列がいくつあるか数える	ds.isin([value, value2]).sum()
データフレームのカラムの中にある文字列と文字列の合計を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中にある文字列との合計を数える	df[col].isin([value, value2]).sum()
データフレームの列の中にある文字列と日付データの合計をカウントする	df[col].isin([value, value2]).sum()
データフレームのカラムの中にある日付データとの合計を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に文字列と文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に文字列と文字列がいくつあるか求める	df[col].isin([value, value2]).sum()
データフレームの列の中に日付データと文字列がいくつ含まれるか数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に文字列と文字列がいくつ存在するか数える	df[col].isin([value, value2]).sum()
二つのデータフレームを縦方向に連結する	pd.concat([df, df2])
二つの表データを縦方向に連結する	pd.concat([df, df2])
二つのデータフレームを縦方向に連結する	pd.concat([df, df2], axis=0)
縦向きに二つのデータフレームを連結する	pd.concat([df, df2], axis=0)
２つのデータフレームを縦方向に合体させる	pd.concat([df, df2], axis=0)
二つのデータフレームを横方向に連結する	pd.concat([df, df2], axis=1)
二つのデータフレームを横に連結する	pd.concat([df, df2], axis=1)
横方向に2つのデータフレームを連結する	pd.concat([df, df2], axis=1)
三つのデータフレームを縦方向に連結する	pd.concat([df, df2, df3], axis=0)
複数のデータフレームを縦方向に連結する	pd.concat([df, df2, df3], axis=0)
複数のデータフレームを縦向きに連結する	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを横方向に連結する	pd.concat([df, df2, df3], axis=1)
３つのデータフレームを横方向に合体させる	pd.concat([df, df2, df3], axis=1)
三つのデータフレームを横方向につなぐ	pd.concat([df, df2, df3], axis=1)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
表データとデータ列を横につなぐ	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を横方向に連結する	pd.concat([df, ds], axis=1)
データフレームとデータ列を連結する	pd.concat([df, ds], axis=1)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を横向きに連結する	pd.concat([df, ds], axis=1)
データフレームから最初の列を除く	df[df.columns[1:]]
データフレームから先頭の列を除く	df[df.columns[1:]]
データフレームから最後の列を除く	df[df.columns[:-1]]
最後のカラムを表データから消す	df[df.columns[:-1]]
最後の列をデータフレームから除く	df[df.columns[:-1]]
データフレームから最後の列を消す	df[df.columns[:-1]]
データフレームからn番目の列を除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
n番目のカラムをデータフレームから除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
1行だけ列をデータフレームから除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
データフレームからn番目の列を消す	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
二つのデータフレームを横方向にマージする	pd.merge(df, df2)
２つのデータフレームを横方向にマージする	pd.merge(df, df2)
二つのデータフレームを結合する	pd.merge(df, df2)
二つの表を結合する	pd.merge(df, df2)
列をキーにして二つのデータフレームを結合する	pd.merge(df, df2, on=column)
列をキーにして２つのデータフレームを結合する	pd.merge(df, df2, on=column)
列'A'と列'B'をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
二つのデータフレームを列'A'と列'B'をキーとして結合する	pd.merge(df, df2, left_on='A', right_on='B')
異なる列をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
異なるカラムをキーとして２つのデータフレームをジョインする	pd.merge(df, df2, left_on='A', right_on='B')
二つの表データを異なる列をキーとしてジョインする	pd.merge(df, df2, left_on='A', right_on='B')
列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, on=column, how='outer')
列をキーにして2つのデータフレームを外部ジョインする	pd.merge(df, df2, on=column, how='outer')
2つのデータフレームを列をキーにして外部結合する	pd.merge(df, df2, on=column, how='outer')
列をキーにして二つのデータフレームを全結合する	pd.merge(df, df2, on=column, how='outer')
列をキーにして二つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
二つのデータフレームを列をキーにして左ジョインする	pd.merge(df, df2, on=column, how='left')
列をキーとして二つのデータフレームを左ジョインする	pd.merge(df, df2, on=column, how='left')
列をキーにして二つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
列をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
二つのデータフレームをカラムをキーにして右結合する	pd.merge(df, df2, on=column, how='right')
列をキーにして二つのデータフレームを内部結合する	pd.merge(df, df2, on=column, how='inner')
２つのデータフレームを列をキーにして内部結合する	pd.merge(df, df2, on=column, how='inner')
列をキーとして2つの表データを内部結合する	pd.merge(df, df2, on=column, how='inner')
列'A'と列'B'をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
列'A'と列'B'をキーとして二つのデータフレームを全結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
2つのデータフレームを列'A'と列'B'をキーとして外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
列'A'と列'B'をキーとして２つのデータフレームを全ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
異なる列をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
異なる列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
列'A'と列'B'をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
列'A'と列'B'をキーとして二つのデータフレームを左ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
列'A'と列'B'をキーとして２つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーにして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーにして2つのデータフレームを左ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーとして2つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
列'A'と列'B'をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
二つの表データを列'A'と列'B'をキーとして右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーにして二つのデータフレームを右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして2つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
列'A'と列'B'をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
列'A'と列'B'をキーとして２つのデータフレームを内部ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーとして2つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
データフレームのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
データフレームの列をダミー変数に変換する	pd.get_dummies(df[column])
イテラブルをダミー変数に変換する	pd.get_dummies(iterable)
イテラブルをワンホット・ベクトルにする	pd.get_dummies(iterable)
イテラブルをダミー変数にする	pd.get_dummies(iterable)
リストをダミー変数に変換する	pd.get_dummies(iterable)
最初のカテゴリーを除外してデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを除外してデータフレームの列をダミー変数にする	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを除き、データフレームの列をワンホット・ベクトルにする	pd.get_dummies(df[column], drop_first=True)
NaNも加えてデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
NaNも加えてデータフレームのカラムをダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
データフレームを使う	import pandas as pd
データフレームをインポートする	import pandas as pd
データフレームを見る	df.head()
データフレームを確認する	df.head()
データフレームの先頭	df.head()
データフレームの先頭n行	df.head(n)
データフレームの最初n行	df.head(n)
データフレームの先頭n行を抽出する	df.head(n)
データフレームの先頭n行	df.head(n)
表データの上n行	df.head(n)
データフレームの末尾	df.tail()
データフレームの最後を見る	df.tail()
データフレームの末尾n行を抽出する	df.tail(n)
表データの末尾n行を抽出する	df.tail(n)
データフレームの末尾n行を取り出す	df.tail(n)
データフレームからランダムに抽出する	df.sample()
データフレームからランダムに選択する	df.sample()
データフレームからランダムに一行を選択する	df.sample()
データフレームをサンプリングする	df.sample()
データフレームからランダムにn行を抽出する	df.sample(n)
ランダムにn行をデータフレームから抽出する	df.sample(n)
データフレームからn行、サンプリングする	df.sample(n)
データフレームからn行、ランダムサンプリングする	df.sample(n)
表データからn行、サンプリングする	df.sample(n)
データフレームから重複ありでランダムにn行をサンプリングする	df.sample(n, replace=True)
データフレームの行を範囲指定して抽出する	df[start:end]
データフレームの行を抽出する	df[start:end]
データフレームの行を範囲指定して取り出す	df[start:end]
データフレームのstart行目からend行目まで抽出する	df[start:end]
データフレームのn行以降抽出する	df[n:]
データフレームのn行以降取り出す	df[n:]
データフレームのn行まで抽出する	df[:n]
データフレームのn行までを選択する	df[:n]
データフレームのn行までを抽出する	df[:n]
表データのn行目より前を抽出する	df[:n]
データフレームの指定された列を抽出する	df[column]
データフレームの指定された列を配列に変換する	df[column].values
表データの指定された列を配列に変換する	df[column].values
データフレームの指定された列を配列として抽出する	df[column].values
配列として列を抽出する	df[column].values
データフレームの指定した列を配列として抽出する	df[column].values
データフレームの指定された列をリストに変換する	df[column].values.tolist()
データフレームの指定された列をリストにする	df[column].values.tolist()
列をリストにする	df[column].values.tolist()
データフレームの指定された列をリストとして抽出する	df[column].values.tolist()
列をリストとして抽出する	df[column].values.tolist()
リストとして表の指定された列を選択する	df[column].values.tolist()
データフレームから列を一つ選択する	df[[column]]
表データからカラムを１つ選択する	df[[column]]
データフレームから列を1つ選択する	df[[column]]
データフレームから指定された列を抽出する	df[[column]]
データフレームの指定された列を選択する	df[[column]]
データフレームから指定された列だけ抽出する	df[[column]]
データフレームから列を二つ選択する	df[[column, column2]]
データフレームからカラムを二つだけ選択する	df[[column, column2]]
データフレームから指定された二つの列を抽出する	df[[column, column2]]
表データから指定された二列を選択する	df[[column, column2]]
データフレームから指定した二列を抽出する	df[[column, column2]]
データフレームから指定された二つの列だけ取り出す	df[[column, column2]]
データフレームから列を三つ選択する	df[[column, column2, column3]]
データフレームから列を３つのみ選択する	df[[column, column2, column3]]
データフレームからカラムを３つのみ選択する	df[[column, column2, column3]]
データフレームから指定された三つの列を抽出する	df[[column, column2, column3]]
データフレームから指定された三つの列を取り出す	df[[column, column2, column3]]
データフレームから指定された三つの列だけ選択する	df[[column, column2, column3]]
データフレームから指定された三列を抽出する	df[[column, column2, column3]]
データフレームから列を４つ選択する	df[[column, column2, column3, column4]]
表データから列を４つ選択する	df[[column, column2, column3, column4]]
データフレームから指定された４つの列を抽出する	df[[column, column2, column3, column4]]
データフレームから指定された４つの列を選択する	df[[column, column2, column3, column4]]
データフレームの指定された４つの列のみ抽出する	df[[column, column2, column3, column4]]
データフレームから列名を複数指定して選択する	df[columns]
データフレームの指定された列の名前一覧の列を抽出する	df[columns]
データフレームの指定したカラムの名前一覧の列だけ取り出す	df[columns]
データフレームから指定された列名一覧の列を抽出する	df[columns]
データフレームの指定された列の名前一覧の列のみ選択する	df[columns]
データフレームのn行目を抽出する	df.loc[n]
データフレームのインデックスがnの行を抽出する	df.loc[n]
データフレームの行がnの行を抽出する	df.loc[n]
データフレームの列の一覧	df.info()
データフレームの列概要	df.info()
列一覧	df.info()
データフレームの列の種類	df.info()
データフレームの列の種類を確認する	df.info()
データフレームの列の名前の一覧を使う	df.columns
列名一覧を見る	df.columns
列名の一覧を見る	df.columns
データフレームの列名の一覧を使う	df.columns
データフレームの列の名前を列挙する	df.columns
データフレームの列名を指定された列の名前一覧に置き換える	df.columns = columns
データフレームの列名を指定された名前リストに置き換える	df.columns = columns
列名を指定された列名一覧に置き換える	df.columns = columns
データフレームからカテゴリデータの列名の一覧を使う	df.select_dtypes('object').columns
表からカテゴリデータの列名リストを見る	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名リストを使う	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名を列挙する	df.select_dtypes('object').columns
データフレームから指定されたデータ型の列名の一覧	df.select_dtypes(型).columns
データフレームから指定されたデータ型の列名一覧	df.select_dtypes(型).columns
データフレームの指定されたデータ型の列名を列挙する	df.select_dtypes(型).columns
データフレームの指定したデータ型の列名を列挙する	df.select_dtypes(型).columns
列名の一覧をデータ型でフィルタする	df.select_dtypes(型).columns
データフレームのインデックスの一覧	df.index
データフレームを配列に変換する	df.values
データフレームのデータ型の一覧	df.dtypes
データフレームのデータ型の一覧を使う	df.dtypes
表データのデータ型の一覧	df.dtypes
データフレームから型リストで指定されたデータ型の列を抽出する	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型の列だけ抽出する	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型の列を除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストで指定されたデータ型のカラムを除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストで指定されたデータ型の列のみ除外する	df.select_dtypes(exclude=typeList)
データフレームからカテゴリデータの列を抽出する	df.select_dtypes('object')
データフレームからカテゴリデータのカラムを抽出する	df.select_dtypes('object')
データフレームからカテゴリデータのカラムだけ抽出する	df.select_dtypes('object')
データフレームから数値データの列を抽出する	df.select_dtypes('number')
データフレームから数値データを抽出する	df.select_dtypes('number')
データフレームから数値データの列を取り出す	df.select_dtypes('number')
データフレームから型の列を抽出する	df.select_dtypes(ty)
データフレームから型の列のみ選択する	df.select_dtypes(ty)
データフレームから型の列を取り出す	df.select_dtypes(ty)
表データから型のカラムのみ抽出する	df.select_dtypes(ty)
データフレームの各次元の大きさを見る	df.shape
データフレームのシェイプを見る	df.shape
データフレームを転置する	df.T
データフレームの行と列を入れ替える	df.T
データフレームの相関行列	df.corr()
データフレームの各列間の相関係数	df.corr()
表データの各列間の相関係数	df.corr()
データフレームの列と列の相関行列	df[[column, column2]].corr()
データフレームの列と列の各列間の相関係数を算出する	df[[column, column2]].corr()
データフレームのリスト列の相関行列	df[aList].corr()
表データのリスト列の相関行列	df[aList].corr()
データフレームのリストカラムの相関行列	df[aList].corr()
データフレームのリストで指定した列の各列間の相関係数を計算する	df[aList].corr()
ピアソン相関係数でデータフレームの相関行列	df.corr(method='pearson')
ピアソン相関係数でデータフレームの相関行列を求める	df.corr(method='pearson')
ピアソン積率相関係数としてデータフレームの相関行列を算出する	df.corr(method='pearson')
ピアソン相関係数としてデータフレームの相関行列	df.corr(method='pearson')
ピアソン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
ピアソン積率相関係数としてデータフレームの列と列の相関行列を求める	df[[column, column2]].corr(method='pearson')
ピアソン積率相関係数でデータフレームの列と列の相関行列を求める	df[[column, column2]].corr(method='pearson')
ピアソンでデータフレームのカラムと列の相関行列	df[[column, column2]].corr(method='pearson')
ピアソン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
ピアソンでデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
データフレームのリスト列の相関行列ピアソンとしてを求める	df[aList].corr(method='pearson')
ピアソン積率相関係数としてデータフレームのリストで指定された列の相関行列を計算する	df[aList].corr(method='pearson')
ケンドール相関係数でデータフレームの相関行列	df.corr(method='kendall')
ケンドール順位相関係数でデータフレームの相関行列	df.corr(method='kendall')
ケンドールを用いてデータフレームの相関行列	df.corr(method='kendall')
ケンドール相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
ケンドール相関係数でデータフレームの列と列の相関行列を計算する	df[[column, column2]].corr(method='kendall')
ケンドール相関係数でデータフレームの列とカラムの相関行列	df[[column, column2]].corr(method='kendall')
ケンドール相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
ケンドールでデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
ケンドール相関係数を用いてデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
スピアマン相関係数でデータフレームの相関行列	df.corr(method='spearman')
スピアマン順位相関係数でデータフレームの相関行列	df.corr(method='spearman')
スピアマン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
スピアマン順位相関係数でデータフレームの列と列の相関行列を求める	df[[column, column2]].corr(method='spearman')
データフレームの列と列の相関行列スピアマンでを計算する	df[[column, column2]].corr(method='spearman')
スピアマン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='spearman')
スピアマンとして表のリスト列の相関行列	df[aList].corr(method='spearman')
スピアマンでデータフレームのリスト列の相関行列を求める	df[aList].corr(method='spearman')
データフレームのリスト列の相関行列スピアマン相関係数で	df[aList].corr(method='spearman')
データフレームの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
データフレームの相関行列をヒートマップとしてグラフ化する	sns.heatmap(df.corr())
データフレームの相関行列をヒートマップを使って描画する	sns.heatmap(df.corr())
データフレームのヒートマップを描画する	sns.heatmap(df.corr())
データフレームの列と列の相関行列をヒートマップで描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列と列の相関行列をヒートマップを用いてグラフ化する	sns.heatmap(df[[column, column2]].corr())
データフレームの列と列の相関行列をヒートマップとして描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列と列の相関行列をヒートマップを使って描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列と列のヒートマップを描画する	sns.heatmap(df[[column, column2]].corr())
データフレームのリスト列の相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
データフレームのリストカラムの相関行列をヒートマップを用いてグラフ化する	sns.heatmap(df[aList].corr())
ヒートマップでデータフレームのリスト列の相関行列を描画する	sns.heatmap(df[aList].corr())
ヒートマップでデータフレームのリストで指定された列の相関行列を描画する	sns.heatmap(df[aList].corr())
データフレームのリスト列のヒートマップを描画する	sns.heatmap(df[aList].corr())
データフレームのリストで指定した列のヒートマップを描画する	sns.heatmap(df[aList].corr())
データフレームのリスト列のヒートマップをグラフ化する	sns.heatmap(df[aList].corr())
データフレームの数値をまとめて丸める	df.round()
データフレームの数値をまとめて四捨五入する	df.round()
データフレームをまとめて整数に丸める	df.round()
データフレームの数値をまとめて小数点以下n桁で丸める	df.round(n)
データフレームをまとめて小数点以下n桁で四捨五入する	df.round(n)
データフレームの列の名前を付け直す	df.rename(columns={column: name})
データフレームのカラムの名前を付け直す	df.rename(columns={column: name})
データフレームの列の名前を列から文字列に付け直す	df.rename(columns={column: name})
データフレームの列名を列から文字列に変更する	df.rename(columns={column: name})
データフレームの列を文字列にリネームする	df.rename(columns={column: name})
データフレームの列の名前をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
まとめてデータフレームのカラムの名前を文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームの列名を一度に文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームのインデックスの名前をまとめて、nameからname2に付け直す	df.rename(index={name: name2})
データフレームのインデックスの名前を、nameからname2に付け直す	df.rename(index={name: name2})
データフレームのインデックスの名前をまとめてnameからname2に付け直す	df.rename(index={name: name2})
データフレームのインデックス名を一度に、nameからname2に変更する	df.rename(index={name: name2})
データフレームの列をインデックスに設定する	df.set_index(column)
データフレームの列をインデックスに指定する	df.set_index(column)
データフレームのインデックスをリセットする	df.reset_index()
データフレームの列がxの行を抽出する	df[df[column] == x]
データフレームの列の値がxのデータを選ぶ	df[df[column] == x]
表データの列がxである行を選択する	df[df[column] == x]
データフレームの列がxでない行をフィルタする	df[df[column] == x]
データフレームの列がxでない行を消す	df[df[column] == x]
データフレームの行を条件でフィルタするには	df[(df[column] == x) & (df[column2] == x2)]
データフレームの行を条件で取り除くには	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がx、かつ列がx2であるデータを抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がxかつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がxより小さい行を抽出する	df[df[column] < x]
データフレームの列の値がxより少ない行を取り出す	df[df[column] < x]
データフレームの列の値がxより小さい行を抽出する	df[df[column] < x]
データフレームの列がxより少ない行を抽出する	df[df[column] < x]
データフレームの列がx以下の行を抽出する	df[df[column] <= x]
データフレームの列がx以下の行を選択する	df[df[column] <= x]
データフレームの列がxより大きい行を抽出する	df[df[column] > x]
データフレームの列がx以上の行を抽出する	df[df[column] >= x]
データフレームの列がx以上のデータを抽出する	df[df[column] >= x]
データフレームの列がx以上のデータを選択する	df[df[column] >= x]
データフレームの列がxより大きくx2より小さい行を抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がxより大きくx2より少ない行を抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列の値がxより多くx2より小さいデータを抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列の値がxより大きくx2より小さいデータを抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がx以上かつx2未満の行を抽出する	df[(x <= df[column]) & (df[column] < x2)]
データフレームの列がx以上かつx2未満の行を取り出す	df[(x <= df[column]) & (df[column] < x2)]
データフレームの列がリストに含まれる行を抽出する	df[df[column].isin(aList)]
データフレームの列がリストに含まれるデータを取り出す	df[df[column].isin(aList)]
データフレームの列がリストに含まれる行を選択する	df[df[column].isin(aList)]
データフレームの列が文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
表データの列で文字列が含まれる行を取り出す	df[df[column].str.contains(s)]
データフレームの列で文字列が含まれる行を取り出す	df[df[column].str.contains(s)]
データフレームの列が文字列が含まれない行を抽出する	df[not df[column].str.contains(s)]
データフレームの列が文字列が含まれないデータを抽出する	df[not df[column].str.contains(s)]
データフレームの列で文字列が含まれない行を抽出する	df[not df[column].str.contains(s)]
データフレームの列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチする行を取り出す	df[df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチするデータを抽出する	df[df[column].str.match(s)]
表データの列の文字列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチしない行を抽出する	df[not df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチしない行を取り出す	df[not df[column].str.match(s)]
データフレームの列が文字列で始まる行を抽出する	df[df[column].str.startswith(s)]
データフレームの列の文字列が文字列で始まる行を取り出す	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まる行を取り出す	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まらない行を抽出する	df[not df[column].str.startswith(s)]
データフレームの列が文字列で始まらない行を選ぶ	df[not df[column].str.startswith(s)]
データフレームの列が文字列で始まらない行を取り出す	df[not df[column].str.startswith(s)]
データフレームの列の文字列が文字列で始まらない行を抽出する	df[not df[column].str.startswith(s)]
データフレームの列が文字列で終わる行を抽出する	df[df[column].str.endswith(s)]
データフレームの列が文字列で終わるデータを取り出す	df[df[column].str.endswith(s)]
データフレームの列が文字列で終わらない行を抽出する	df[not df[column].str.endswith(s)]
データフレームの列の文字列が文字列で終わらない行を取り出す	df[not df[column].str.endswith(s)]
データフレームの欠損値が含まれる箇所に色を付ける	df.style.highlight_null()
データフレームのNaNが含まれる部分に色を付ける	df.style.highlight_null()
データフレームの欠損値がある箇所に色をつける	df.style.highlight_null()
データフレームのNaNがある箇所に	df.style.highlight_null()
データフレームのn行目を削除する	df.drop(n, axis=0)
データフレームのn行目を破壊的に削除する	df.drop(n, axis=0, inplace=True)
破壊的にデータフレームのn行目を落とす	df.drop(n, axis=0, inplace=True)
データフレームのn行目を破壊的に消す	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして更新する	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして、入れ替える	df.drop(n, axis=0, inplace=True)
データフレームの列を削除する	df.drop(column, axis=1)
データフレームの列をドロップする	df.drop(column, axis=1)
データフレームの列を破壊的に削除する	df.drop(column, axis=1, inplace=True)
破壊的にデータフレームの列を削除する	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップして、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップして更新する	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップして、入れ替える	df.drop(column, axis=1, inplace=True)
データフレームの列を削除して、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列と列を削除する	df.drop([column, column2], axis=1)
データフレームの列と列を落とす	df.drop([column, column2], axis=1)
データフレームの列の名前一覧で指定された列を削除する	df.drop(columns, axis=1)
データフレームの名前リストで指定された列をドロップする	df.drop(columns, axis=1)
データフレームの名前リストで指定された列を削除する	df.drop(columns, axis=1)
データフレームの列名一覧で指定された列を消す	df.drop(columns, axis=1)
データフレームの中の欠損値を削除する	df.dropna()
データフレームの内の欠損値を落とす	df.dropna()
データフレームの欠損値を落とす	df.dropna()
データフレームの中の欠損値がある行を削除する	df.dropna()
データフレームの中のNaNが存在する行を取り除く	df.dropna()
データフレームの重複を見る	df.duplicated()
データフレームの重複を確認する	df.duplicated()
データフレームに重複があるか見る	df.duplicated()
データフレームが重複しているか調べる	df.duplicated()
データフレームが重複しているかどうか	df.duplicated()
データフレームの重複した行をマスクする	df.duplicated()
データフレームの重複した行数のマスク	df.duplicated()
データフレームの重複する行数のマスク	df.duplicated()
データフレームの重複した行を数える	df.duplicated().sum()
データフレームの中で何行、重複するか見る	df.duplicated().sum()
表の内で何行、重複するか見る	df.duplicated().sum()
データフレームの内で何行、重複するか見る	df.duplicated().sum()
データフレームの中で何行重複するか確認する	df.duplicated().sum()
データフレームの重複した行のみを抽出する	df[df.duplicated(keep=False)]
データフレームの重複した行だけ	df[df.duplicated(keep=False)]
データフレームの重複した行のみ	df[df.duplicated(keep=False)]
データフレームの重複した行だけを取り出す	df[df.duplicated(keep=False)]
データフレームの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
データフレームの重複していない行だけを抽出する	df[not df.duplicated(keep=False)]
データフレームの中で、列の重複を見る	df.duplicated(subset=column)
データフレームの内で、列の重複を見る	df.duplicated(subset=column)
データフレームの中で、列に重複があるか見る	df.duplicated(subset=column)
データフレームで、列に重複があるか見る	df.duplicated(subset=column)
データフレームで列に重複があるか見る	df.duplicated(subset=column)
データフレームの列に重複があれば、マスクする	df.duplicated(subset=column)
データフレームの中で、列と列の重複を見る	df.duplicated(subset=[column, column2])
データフレームの中で列と列の重複を見る	df.duplicated(subset=[column, column2])
データフレームの中で、列と列に重複があるか見る	df.duplicated(subset=[column, column2])
データフレームの中で列と列に重複があるか見る	df.duplicated(subset=[column, column2])
データフレームの中で列とカラムに重複があるか見る	df.duplicated(subset=[column, column2])
データフレームの中の列と列に重複があれば、マスクする	df.duplicated(subset=[column, column2])
データフレームの中の列と列に重複があればマスクする	df.duplicated(subset=[column, column2])
データフレームから重複を削除する	df.drop_duplicates()
データフレームから重複した行を削除する	df.drop_duplicates()
データフレームから重複したデータを落とす	df.drop_duplicates()
表データから重複したデータを削除する	df.drop_duplicates()
データフレームから破壊的に重複を削除する	df.drop_duplicates(inplace=True)
データフレームからインプレイスで重複をドロップする	df.drop_duplicates(inplace=True)
データフレームから重複を破壊的に削除する	df.drop_duplicates(inplace=True)
データフレームから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
データフレームから重複したデータをドロップして、更新する	df.drop_duplicates(inplace=True)
データフレームから破壊的に重複した行を削除する	df.drop_duplicates(inplace=True)
データフレームからインプレイスで重複したデータをドロップする	df.drop_duplicates(inplace=True)
破壊的に重複したデータをデータフレームから削除する	df.drop_duplicates(inplace=True)
データフレームから重複を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複を残さず削除する	df.drop_duplicates(keep=False)
データフレームから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複したデータを残さず、ドロップする	df.drop_duplicates(keep=False)
データフレームから重複するデータを残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複するデータを残さず削除する	df.drop_duplicates(keep=False)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=column)
データフレームで、列と列の重複を削除する	df.drop_duplicates(subset=column)
データフレームの中で列と列の重複を削除する	df.drop_duplicates(subset=column)
列と列の重複を消す	df.drop_duplicates(subset=column)
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=column)
データフレームの列と列に重複があれば、消す	df.drop_duplicates(subset=column)
データフレームの中の列と列に重複があれば、消す	df.drop_duplicates(subset=column)
データフレームの中の列と列に重複があれば、ドロップする	df.drop_duplicates(subset=column)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
データフレームの内で列と列の重複を取り除く	df.drop_duplicates(subset=[column, column2])
データフレームで、列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
データフレームの中で列と列の重複を消す	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば、消す	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば消す	df.drop_duplicates(subset=[column, column2])
データフレームの列と列に重複があれば、削除する	df.drop_duplicates(subset=[column, column2])
アヤメのデータセットをロードする	sns.load_dataset('iris')
アイリスのデータセットをロードする	sns.load_dataset('iris')
データ列を使う	import pandas as pd
データ列をインポートする	import pandas as pd
Pandasで、dateStringを日付データに変換する	pd.to_datetime(dateString)
Pandasで、dateStringをタイムスタンプ型に変換する	pd.to_datetime(dateString)
dateStringを日付データに変換する	pd.to_datetime(dateString)
Pandasで、データフレームのcollを日付データに変換する	pd.to_datetime(df[col])
Pandasで、データフレームのcollをPandasの日付型に変換する	pd.to_datetime(df[col])
Pandasでデータフレームのcollをタイムスタンプ型に変換する	pd.to_datetime(df[col])
データフレームのcollをdatetime64型に変換する	pd.to_datetime(df[col])
Pandasで、データ列を日付データに変換する	pd.to_datetime(ds)
Pandasで、文字列を日付データに変換する	pd.to_datetime(s)
Pandasで、文字列をタイムスタンプにする	pd.to_datetime(s)
Pandasで文字列を日付データに変換する	pd.to_datetime(s)
Pandasで、文字列を日付データにする	pd.to_datetime(s)
Pandasで、フォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、フォーマットを用いてデータフレームのcollをタイムスタンプ型に変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、フォーマットでデータフレームのcollをPandasの日付型に変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasでデータフレームのcollをフォーマットを用いて日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、フォーマットでデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
データ列をフォーマットを使って日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで書式でデータ列をPandasの日付型に変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasでフォーマットとしてデータ列をタイムスタンプ型にする	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、フォーマットで文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットで文字列をタイムスタンプ型にする	pd.to_datetime(s, format='%Y-%m-%d')
書式で文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットで文字列を日付データにする	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットfmtでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
Pandasでフォーマットfmtでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
Pandasで、データフレームのcollをフォーマットfmtとしてdatetime64型に変換する	pd.to_datetime(df[col], format=fmt)
Pandasで、フォーマットfmtでデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
フォーマットfmtを用いてデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
Pandasで、フォーマットfmtでデータ列をタイムスタンプ型に変換する	pd.to_datetime(ds, format=fmt)
Pandasで、フォーマットfmtで文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで、フォーマットfmtとして文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで、書式fmtとして文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで文字列をフォーマットfmtとして日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで、エポック秒のデータフレームのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータフレームのcollからdatetime64型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
数値時刻のデータフレームのcollからPandasの日付型にする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータフレームのcollからタイムスタンプ型にする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、データフレームのcollのエポック秒から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、エポック秒のデータ列から日付データにする	pd.to_datetime(ds, unit='s', utc=True)
PandasでUNIX時間のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、データ列のエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、データ列のUNIX時間からタイムスタンプ型に変換する	pd.to_datetime(ds, unit='s', utc=True)
データ列のエポック秒からPandasの日付型に変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasでデータ列のエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、エポック秒の文字列から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、UNIX秒の文字列から日付データにする	pd.to_datetime(s, unit='s', utc=True)
Pandasで、UNIX時間の文字列から日付データにする	pd.to_datetime(s, unit='s', utc=True)
Pandasで、文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、文字列のエポック秒から日付データにする	pd.to_datetime(s, unit='s', utc=True)
文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、文字列のエポック秒からPandasの日付型に変換する	pd.to_datetime(s, unit='s', utc=True)
データフレームのカラムのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
データ列のタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
データフレームのカラムのタイムゾーンを文字列に設定する	df[col].tz_convert(s)
データ列のタイムゾーンを文字列に設定する	ds.tz_convert(s)
データ列のタイムゾーンを文字列に変更する	ds.tz_convert(s)
Pandasで、データフレームのカラムをインデックスにする	df.set_index(col, inplace=True)
Pandasで、日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
Pandasで、Pandasの日付型のデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
Pandasで、タイムスタンプのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
Pandasで、日付データのデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
日付データのデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、タイムスタンプのデータ列をインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、データフレームのカラムを日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
データフレームのカラムを日付データに変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データフレームのカラムをPandasの日付型に変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データ列を日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
Pandasで、データ列をPandasの日付型に変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
Pandasでデータ列をPandasの日付型に変換し、インデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
データフレームのカラムの年	df[col].dt.year
データフレームのカラムが何年か見る	df[col].dt.year
データフレームのカラムが何年か確認する	df[col].dt.year
データフレームのカラムが何年か調べる	df[col].dt.year
データ列の年	ds.dt.year
データ列が何年か見る	ds.dt.year
データ列が何年か調べる	ds.dt.year
データフレームのカラムの月	df[col].dt.month
データフレームのカラムが何月か見る	df[col].dt.month
データフレームのカラムは何月か調べる	df[col].dt.month
データフレームのカラムが何月か確認する	df[col].dt.month
データ列の月	ds.dt.month
データ列が何月か見る	ds.dt.month
データフレームのカラムの日	df[col].dt.day
データフレームのカラムの日を使う	df[col].dt.day
データフレームのカラムが何日か見る	df[col].dt.day
データフレームのカラムが何日か確認する	df[col].dt.day
データ列の日	ds.dt.day
データ列が何日か見る	ds.dt.day
データフレームのカラムの時	df[col].dt.hour
データフレームのカラムが何時か見る	df[col].dt.hour
データフレームのカラムが何時か確認する	df[col].dt.hour
データフレームのカラムは何時か見る	df[col].dt.hour
データ列の時	ds.dt.hour
データ列が何時か見る	ds.dt.hour
データ列は何時か見る	ds.dt.hour
データフレームのカラムの分	df[col].dt.minute
データフレームのカラムが何分か見る	df[col].dt.minute
データフレームのカラムが何分か確認する	df[col].dt.minute
データフレームのカラムは何分か見る	df[col].dt.minute
データ列の分	ds.dt.minute
データ列の分を見る	ds.dt.minute
データ列の分を求める	ds.dt.minute
データ列が何分か見る	ds.dt.minute
データフレームのカラムの秒	df[col].dt.second
データフレームのカラムが何秒か見る	df[col].dt.second
データフレームのカラムが何秒か確認する	df[col].dt.second
データ列の秒	ds.dt.second
データ列が何秒か見る	ds.dt.second
データ列が何秒か確認する	ds.dt.second
データフレームのカラムの曜日の名前	df[col].dt.weekday_name
データフレームのカラムの曜日	df[col].dt.weekday_name
データフレームのカラムの曜日名	df[col].dt.weekday_name
データフレームのカラムが何曜日か見る	df[col].dt.weekday_name
データ列の曜日の名前	ds.dt.weekday_name
データ列が何曜日か見る	ds.dt.weekday_name
データフレームのカラムの曜日数	df[col].dt.dayofweek
データフレームのカラムの曜日数を使う	df[col].dt.dayofweek
データフレームのカラムの曜日が何日目か見る	df[col].dt.dayofweek
データフレームのカラムの曜日が何日目か調べる	df[col].dt.dayofweek
データフレームのカラムの曜日は何日目か見る	df[col].dt.dayofweek
データフレームのカラムの曜日は何日目か調べる	df[col].dt.dayofweek
データ列の曜日数	ds.dt.dayofweek
データ列の曜日が何日目か見る	ds.dt.dayofweek
データ列の曜日は何日目か見る	ds.dt.dayofweek
表データを使う	import pandas as pd
表データを用いる	import pandas as pd
表データをインポートする	import pandas as pd
Pandasのバージョンを表示する	print(pd.__version__)
Pandasのバージョンを見る	print(pd.__version__)
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき最大列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な最大列数を減らす	pd.set_option('display.max_columns', n)
表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示できる列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数の最大値をnに指定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
データフレームをn列まで表示できるようにする	pd.set_option('display.max_columns', n)
データフレームをn列まで表示可能なようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、行数を変更する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、表示可能な最大行数をnに設定する	pd.set_option('display.max_rows', n)
データフレームを表示するとき表示できる行数をnに減らす	pd.set_option('display.max_rows', n)
データフレームを表示するとき、最大行数をnに設定する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
データフレームを表示するとき、データフレームをn行まで表示できるようにする	pd.set_option('display.max_rows', n)
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
小数点以下の表示精度を増やす	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき小数点以下をn桁にセットする	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下をn桁に設定する	pd.set_option('precision', n)
小数点以下をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
データフレームを表示するとき小数点以下n桁まで表示できるようにする	pd.set_option('precision', n)
データフレームを表示するとき小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき折り返しをしないようにする	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームを表示するとき列の最大幅をnに変更する	pd.set_option('max_colwidth', n)
データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
データフレームを表示するときヘッダー行を左寄せに指定する	pd.set_option('colheader_justify', 'left')
ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
エクセルデータからデータフレームを読み込む	pd.read_excel(filename)
からデータフレームを読む	pd.read_excel(filename)
データフレームをから読む	pd.read_excel(filename)
エクセルファイルファイルをデータフレームとして読み込む	pd.read_excel(filename)
エクセルファイルファイルをデータフレームとして読む	pd.read_excel(filename)
エクセルファイルファイルを読む	pd.read_excel(filename)
エクセルファイルファイルを読み込む	pd.read_excel(filename)
エクセルファイルファイルからエクセルファイルを読み込む	pd.read_excel(filename)
エクセルデータファイルからを読み込む	pd.read_excel(filename)
エクセルファイルをエクセルファイルファイルから読み込む	pd.read_excel(filename)
エクセルファイルをエクセルファイルファイルから読む	pd.read_excel(filename)
エクセルファイルファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルデータファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからn番目のシートを読み込む	pd.read_excel(filename, sheet_name=n)
n番目のシートをエクセルファイルファイルからデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
ファイルからnという名前のシートを読む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
ファイルのn番目のシートを読む	pd.read_excel(filename, sheet_name=n)
n番目のシートをエクセルデータファイルのデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルデータファイルから複数のシートを読む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルファイルファイルからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
nとn2のシートをエクセルファイルファイルから読み込む	pd.read_excel(filename, sheet_name=[n, n2])
nとn2のシートをファイルから読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルファイルファイルから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
ファイルから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
エクセルファイルファイルからすべてのシートを読み込む	pd.read_excel(filename, sheet_name=None)
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
CSVからデータフレームを読む	pd.read_csv(filename, sep=',')
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
CSVからデータフレームを読み込む	pd.read_csv(filename, sep=',')
CSVファイルを読み込む	pd.read_csv(filename, sep=',')
CSVファイルを読む	pd.read_csv(filename, sep=',')
CSVを読み込む	pd.read_csv(filename, sep=',')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
データフレームをTSVから読み込む	pd.read_csv(filename, sep='\t')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t')
TSVをデータフレームとして読み込む	pd.read_csv(filename, sep='\t')
データフレームとしてTSVを読み込む	pd.read_csv(filename, sep='\t')
TSVファイルをデータフレームとして読み込む	pd.read_csv(filename, sep='\t')
＜オプション＞読み込むシートの名前をnamesに設定する	sheet_name = names
＜オプション＞読み込むシートの名前をnamesに減らす	sheet_name = names
＜オプション＞のシートの名前をnamesに変更する	sheet_name = names
＜オプション＞先頭のカラムをインデックスに設定する	index_col = 0
＜オプション＞先頭列をインデックスにセットする	index_col = 0
＜オプション＞最初のカラムを行に変更する	index_col = 0
＜オプション＞n番目のカラムをインデックスに設定する	index_col = n
＜オプション＞n番目のカラムをインデックスに指定する	index_col = n
＜オプション＞インデックスを自動的な連番に設定する	index_col = None
＜オプション＞どのカラムもインデックスに設定しない	index_col = None
＜オプション＞先頭の行をヘッダに設定する	header = 0
＜オプション＞最初の行をカラムの名前に変更する	header = 0
＜オプション＞先頭の行をヘッダに指定する	header = 0
＜オプション＞ヘッダを自動的な連番に設定する	header = None
＜オプション＞カラムの名前を自動的な連番に指定する	header = None
＜オプション＞カラムの名前を連番に設定する	header = None
＜オプション＞どの行もヘッダにしない	header = None
＜オプション＞どの行もヘッダに設定しない	header = None
＜オプション＞ヘッダをnamesに設定する	header = names
＜オプション＞namesをカラムの名前に設定する	names = names
＜オプション＞namesをカラムの名前に変更する	names = names
＜オプション＞読み込む行番号をnamesで指定する	usecols = names
＜オプション＞読み込まない列番号をnamesで指定する	skiprows = names
＜オプション＞読み込まないフッタをnに設定する	skipfooter = n
TSVファイルをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
ヘッダを指定せずTSVファイルを読み込む	pd.read_csv(filename, header=None)
CSVファイルTSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
n番目のカラムを行にしてCSVTSVファイルを読み込む	pd.read_csv(filename, index_col=n)
カンマ区切りのファイルTSVをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
CSVTSVをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列TSVからn番目の列を行にしてCSVを読み込む	pd.read_csv(filename, index_col=n)
文字列TSVからカンマ区切りのファイルをn番目の列をインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスとして読む	pd.read_csv(filename, index_col=n)
TSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルをSJISで読む	pd.read_csv(filename, encoding='shift_jis')
TSVをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからCSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからSJISでCSVを読む	pd.read_csv(filename, encoding='shift_jis')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
データフレームをTSV形式のファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
データフレームをTSVファイルから読む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
JSONL形式のファイルからデータフレームを読む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルからデータフレームを読む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルを読み込む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONLファイルに保存する	df.to_excel(filename)
データフレームをエクセルファイルファイルでJSONLファイルに保存する	df.to_excel(filename)
データフレームをJSONLファイルにエクセルファイルファイルで保存する	df.to_excel(filename)
JSONLファイルにエクセルファイル形式としてデータフレームを保存する	df.to_excel(filename)
データフレームをJSONLファイルに保存する	df.to_csv(filename)
JSONLファイルにデータフレームを保存する	df.to_csv(filename)
データフレームをCSVファイルでJSONLファイルに保存する	df.to_csv(filename)
データフレームをJSONLファイルにCSV形式で書き込む	df.to_csv(filename)
データフレームをCSVファイルを用いてJSONLファイルに書き込む	df.to_csv(filename)
データフレームをJSONLファイルに保存する	df.to_csv(filename, sep='\t')
JSONLファイルにデータフレームを保存する	df.to_csv(filename, sep='\t')
データフレームをタブ区切りでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをタブ区切りとしてJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをタブ区切りを使ってJSONLファイルに書き込む	df.to_csv(filename, sep='\t')
データフレームをTSVファイルでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
JSONLファイルにTSVファイルとしてデータフレームを保存する	df.to_csv(filename, sep='\t')
データフレームをTSVファイルとしてJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをTSV形式を用いてJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをJSONLファイルにヘッダを付けずに保存する	df.to_csv(filename, header=None)
データフレームをJSONLファイルにインデックスを付けずに保存する	df.to_csv(filename, index=None)
データフレームをJSONLファイルにインデックスを付けずに書き込む	df.to_csv(filename, index=None)
データフレームを行を付けずにJSONLファイルに書き込む	df.to_csv(filename, index=None)
データフレームをJSONLファイルにBOM付きで保存する	df.to_csv(filename, encoding='utf_8_sig')
BOM付きでJSONLファイルにデータフレームを保存する	df.to_csv(filename, encoding='utf_8_sig')
データフレームをJSONLファイルにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
データフレームをSJISでJSONLファイルに書き込む	df.to_csv(filename, encoding='shift_jis')
保存するCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
書き込むCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
書き込むCSVファイルの小数点以下の桁数を指定する	df.to_csv(filename, float_format='%.3f')
データフレームをJSONLファイルに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
データフレームを小数点以下3桁までJSONLファイルに書き込む	df.to_csv(filename, float_format='%.3f')
小数点以下3桁までJSONLファイルにデータフレームを書き込む	df.to_csv(filename, float_format='%.3f')
データフレームを列の値によってグループ化する	df.groupby(column)
データフレームを列によってまとめたグループ	df.groupby(column)
データフレームを列によってまとめたグループを使う	df.groupby(column)
データフレームを列でまとめた表	df.groupby(column)
データフレームを'A'列の値によってグループ化する	df.groupby('A')
表データを'A'列の値によってグループ分けする	df.groupby('A')
データフレームを'A'列によってまとめたグループ	df.groupby('A')
データフレームを二つの列の値によってグループ化する	df.groupby(['A', 'B'])
データフレームを'A'列と'B'列でグループ化する	df.groupby(['A', 'B'])
データフレームを二つの列の値によってグループ分けする	df.groupby(['A', 'B'])
二つの列の値で表データをグループ化する	df.groupby(['A', 'B'])
データフレームを二つの列によってまとめたグループ	df.groupby(['A', 'B'])
データフレームを二つの列でまとめた表	df.groupby(['A', 'B'])
二つの列の値によってデータフレームをまとめたグループを使う	df.groupby(['A', 'B'])
データフレームを二つの列の値によってまとめた表	df.groupby(['A', 'B'])
データフレームを複数の列の値によってグループ化する	df.groupby(columns)
データフレームを複数の列の値によって集約する	df.groupby(columns)
複数の列によってデータフレームを集約する	df.groupby(columns)
複数の列の値によってデータフレームをグループ化する	df.groupby(columns)
データフレームを複数の列によってまとめたグループ	df.groupby(columns)
データフレームを列名リストでまとめたグループ	df.groupby(columns)
複数の列の値によってデータフレームをまとめたグループを使う	df.groupby(columns)
データフレームを列名リストによってまとめたグループ	df.groupby(columns)
データフレームを関数の値によってグループ化する	df.groupby(関数)
関数の値でデータフレームを集約する	df.groupby(関数)
データフレームを関数によってまとめたグループ	df.groupby(関数)
データフレームを関数によってまとめた表	df.groupby(関数)
関数によってデータフレームをまとめた表	df.groupby(関数)
データフレームを関数の値によってまとめたグループ	df.groupby(関数)
データフレームを列の値によってグループ化し、要約統計量を求める	df.groupby(column).describe()
データフレームを列の値によってグループ化し、要約統計量を計算する	df.groupby(column).describe()
データフレームを'A'列の値によってグループ化し、要約統計量を求める	df.groupby('A').describe()
データフレームを'A'列でグループ化し、要約統計量を求める	df.groupby('A').describe()
'A'列の値によってデータフレームをグループ化し、要約統計量を求める	df.groupby('A').describe()
データフレームを二つの列の値によってグループ化し、要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを二つの列の値によってグループ化し要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを二つの列の値によってグループ化し、基本統計量を求める	df.groupby(['A', 'B']).describe()
二つの列の値によってデータフレームをグループ化し、要約統計量を算出する	df.groupby(['A', 'B']).describe()
データフレームを複数の列の値によってグループ化し、要約統計量を求める	df.groupby(columns).describe()
データフレームを複数の列でグループ化し、要約統計量を求める	df.groupby(columns).describe()
複数の列の値でデータフレームをグループ化し、要約統計量を求める	df.groupby(columns).describe()
データフレームを列名リストによってグループ化し、基本統計量を求める	df.groupby(columns).describe()
データフレームを関数の値によってグループ化し、要約統計量を求める	df.groupby(関数).describe()
データフレームを関数の値によってグループ化し、記述統計量を求める	df.groupby(関数).describe()
データフレームを関数でグループ化し、記述統計量を求める	df.groupby(関数).describe()
データフレームを欠損値を含めて列の値でグループ化する	df.groupby(column, dropna=False)
データフレームを列の値で未入力値を含めて集約する	df.groupby(column, dropna=False)
列の値でデータフレームをNaNを含めてグループ化する	df.groupby(column, dropna=False)
＜オプション＞欠損値は無視する	dropna = True
＜オプション＞欠損値も無視しない	dropna = True
＜オプション＞NaNも無視しない	dropna = True
データフレームを列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
列によってデータフレームをグループ分けして、列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを列の値によって集約し、、列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを'A'列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列の値でグループ分けして列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列の値ごとにグループ化し、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを二つの列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
2つの列の値でデータフレームをグループ化し、、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを２つの列でグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを複数の列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを複数の列によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを列名リストの値によって集約し、、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを関数の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
関数の値ごとにデータフレームをグループ化し、、列挙する	[(name, group) for name, group in df.groupby(関数)]
関数によってデータフレームをグループ分けして、列挙する	[(name, group) for name, group in df.groupby(関数)]
関数の値によってデータフレームをグループ化して列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを各列毎にグループ化して、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎に集約して、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎にグループ分けして、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎に集約し、、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを列でグループ化して、それぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを列の値で集約して、各グループごとの件数を知る	df.groupby(column).size()
列の値でデータフレームをグループ化し、、各グループごとの件数を知る	df.groupby(column).size()
表データを列でグループ化してそれぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを各列毎にグループ化して、文字列というグループの個数を求める	df.groupby(column).size()[s]
表を各列毎にグループ化し、、文字列というグループの個数を求める	df.groupby(column).size()[s]
データフレームを各列毎にグループ化し、、文字列というグループの大きさを計算する	df.groupby(column).size()[s]
データフレームを各列毎に集約して、文字列というグループの個数を求める	df.groupby(column).size()[s]
データフレームのそれぞれのグループごとの合計	df.groupby(column).sum()
データフレームのグループごとの合計を計算する	df.groupby(column).sum()
データフレームのグループ毎の合計	df.groupby(column).sum()
データフレームを列によってグループ化して、それぞれのグループごとの合計を求める	df.groupby(column).sum()
データフレームを列の値によってグループ分けして、それぞれのグループごとの合計を算出する	df.groupby(column).sum()
データフレームを列によってグループ化してグループ毎の合計を求める	df.groupby(column).sum()
列の値によってデータフレームをグループ化してそれぞれのグループごとの合計を計算する	df.groupby(column).sum()
データフレームのそれぞれのグループごとの平均値	df.groupby(column).mean()
データフレームの各グループごとの平均値	df.groupby(column).mean()
データフレームを列によってグループ化して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
列によってデータフレームをグループ化してそれぞれのグループごとの平均値を計算する	df.groupby(column).mean()
データフレームを列の値によってグループ化し、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
表データを列の値で集約して、それぞれのグループごとの平均値を計算する	df.groupby(column).mean()
データフレームのそれぞれのグループごとの個数	df.groupby(column).count()
表データの各グループごとの個数を求める	df.groupby(column).count()
データフレームのグループ毎の個数	df.groupby(column).count()
データフレームを列によってグループ化して、それぞれのグループごとの個数を求める	df.groupby(column).count()
列の値によってデータフレームをグループ化して個数を求める	df.groupby(column).count()
データフレームを列の値ごとに集約して、各グループ毎の個数を求める	df.groupby(column).count()
データフレームを列にグループ化して、個数を求める	df.groupby(column).count()
データフレームのそれぞれのグループごとの最大値	df.groupby(column).max()
データフレームの各グループ毎の最大値を求める	df.groupby(column).max()
データフレームのそれぞれのグループの最大値	df.groupby(column).max()
データフレームのそれぞれのグループ毎の最大値	df.groupby(column).max()
データフレームを列によってグループ化して、それぞれのグループごとの最大値を求める	df.groupby(column).max()
データフレームを列によってグループ化して、最大値を求める	df.groupby(column).max()
データフレームを列によってグループ化してそれぞれのグループ毎の最大値を計算する	df.groupby(column).max()
データフレームのそれぞれのグループごとの最小値	df.groupby(column).min()
データフレームを列によってグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
データフレームをカラムごとにグループ化して、それぞれのグループの最小値を求める	df.groupby(column).min()
表を列によってグループ化して、グループ毎の最小値を計算する	df.groupby(column).min()
データフレームを列にグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
データフレームのそれぞれのグループごとの分散	df.groupby(column).var()
データフレームの各グループの分散	df.groupby(column).var()
データフレームのグループごとの分散を算出する	df.groupby(column).var()
データフレームを列によってグループ化して、それぞれのグループごとの分散を求める	df.groupby(column).var()
データフレームを列の値によって集約して、それぞれのグループの分散を求める	df.groupby(column).var()
データフレームを列によって集約して各グループごとの分散を計算する	df.groupby(column).var()
列によってデータフレームを集約し、、それぞれのグループごとの分散を計算する	df.groupby(column).var()
データフレームのそれぞれのグループごとの標準偏差	df.groupby(column).std()
データフレームのそれぞれのグループの標準偏差を求める	df.groupby(column).std()
表の各グループごとの標準偏差を求める	df.groupby(column).std()
データフレームを列によってグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
列の値によってデータフレームを集約し、、グループごとの標準偏差を算出する	df.groupby(column).std()
データフレームをカラムごとにグループ化して標準偏差を求める	df.groupby(column).std()
データフレームを各列と列の組み合わせ毎にグループ化して、合計を求める	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎にグループ化して、平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎に集約して平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎にグループ化して、個数を求める	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎に集計して、個数を計算する	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を計算する	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化し、、最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して、最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎に分類して、最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎に集約して、最小値を計算する	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ化して、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化し、、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎に集約して、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化して、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ化し、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ分けし、、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ分けして、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームをグループ化し、それぞれの列に対し合計を求める	df.groupby(column)[column2].sum()
データフレームをグループ化し、それぞれの列に対し合計を計算する	df.groupby(column)[column2].sum()
データフレームを各列毎にグループ化して、列の合計を求める	df.groupby(column)[column2].sum()
データフレームを各列毎にグループ化して列の合計を求める	df.groupby(column)[column2].sum()
データフレームをグループ化し、それぞれの列に対し平均値を求める	df.groupby(column)[column2].mean()
データフレームをグループ化しそれぞれの列に対し平均値を計算する	df.groupby(column)[column2].mean()
データフレームをグループ化し、各列に対し平均値を計算する	df.groupby(column)[column2].mean()
データフレームを各列毎にグループ化して、列の平均値を求める	df.groupby(column)[column2].mean()
データフレームを各列毎に集約して、列の平均値を算出する	df.groupby(column)[column2].mean()
データフレームを各列毎に集約し、、列の平均値を算出する	df.groupby(column)[column2].mean()
各列毎にデータフレームをグループ化して、列の平均値を求める	df.groupby(column)[column2].mean()
データフレームをグループ化し、それぞれの列に対し個数を求める	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化して、列の個数を求める	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化し、、列の個数を求める	df.groupby(column)[column2].count()
表を各列毎に集計して列の個数を求める	df.groupby(column)[column2].count()
各列毎にデータフレームをグループ分けして、列の個数を求める	df.groupby(column)[column2].count()
データフレームをグループ化し、それぞれの列に対し最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、列に対し最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、各列に対し最大値を計算する	df.groupby(column)[column2].max()
データフレームを各列毎にグループ化して、列の最大値を求める	df.groupby(column)[column2].max()
各カラム毎にデータフレームをグループ化して列の最大値を求める	df.groupby(column)[column2].max()
データフレームを各列毎に集約して、列の最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、それぞれの列に対し最小値を求める	df.groupby(column)[column2].min()
データフレームをグループ化し列に対し最小値を算出する	df.groupby(column)[column2].min()
データフレームをグループ化し、それぞれの列に対し最小値を算出する	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化して、列の最小値を求める	df.groupby(column)[column2].min()
各列毎にデータフレームをグループ化して、列の最小値を求める	df.groupby(column)[column2].min()
各列毎にデータフレームをグループ分けして、列の最小値を求める	df.groupby(column)[column2].min()
データフレームを各列毎に集約し、列の最小値を求める	df.groupby(column)[column2].min()
データフレームをグループ化し、それぞれの列に対し分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化しそれぞれの列に対し分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化しそれぞれの列に対し分散を計算する	df.groupby(column)[column2].var()
データフレームを各列毎にグループ化して、列の分散を求める	df.groupby(column)[column2].var()
データフレームを各列毎にグループ化して列の分散を求める	df.groupby(column)[column2].var()
データフレームを各列毎にグループ化し、、列の分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化し、それぞれの列に対し標準偏差を求める	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化して、列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームを各列毎にグループ分けして、列の標準偏差を計算する	df.groupby(column)[column2].std()
データフレームを各列毎にグループ分けして、列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームを列でグループ化して、列の要約統計量を求める	df.groupby(column).describe()[column2]
列でデータフレームをグループ化して、列の要約統計量を求める	df.groupby(column).describe()[column2]
データ列を使う	import pandas as pd
データ列を使用する	import pandas as pd
データ列をインポートする	import pandas as pd
データ列の各データ値の出現数	ds.value_counts()
データ列の各データ値の出現回数	ds.value_counts()
データ列の各値の出現数	ds.value_counts()
列の各データ値の出現数	ds.value_counts()
データ列の各データが何回出現するか見る	ds.value_counts()
データ列の各値が何回出現するか確認する	ds.value_counts()
データフレームの列の各データ値の出現数	df[col].value_counts()
データフレームの列の各値の出現数を計算する	df[col].value_counts()
データフレームの列の各データが何回出現するか見る	df[col].value_counts()
カラムの各値が何回出現するか調べる	df[col].value_counts()
データ列のユニークな値	ds.unique()
データ列のユニークな値を見る	ds.unique()
データフレームの列のユニークな値	df[col].unique()
データフレームの列のユニークな値を見る	df[col].unique()
データ列のユニークな値の個数	ds.nunique()
データ列のユニークな値の個数を見る	ds.nunique()
データ列のユニークな要素数	ds.nunique()
データフレームの列のユニークな値の個数	df[col].nunique()
列のユニークな値の個数	df[col].nunique()
データフレームの列の一意な値の個数	df[col].nunique()
データフレームの列をカテゴリデータに変換する	df[col].astype(object)
データ列をカテゴリデータに変換する	ds.astype(object)
データフレームの列の文字列長を列として使う	df[col].str.len()
データ列の文字列長を列として使う	ds.str.len()
データ列の文字列長を列として求める	ds.str.len()
データフレームの列からユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
データフレームのカラムからユニークな要素を抽出しリスト化する	df[col].unique().tolist()
データフレームのカラムからユニークな値を抽出し、リスト化する	df[col].unique().tolist()
データ列からユニークな要素を抽出し、リスト化する	ds.unique().tolist()
データ列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
データフレームの列を型に変換する	df[col] = df[col].astype(ty)
データ列をビン数nでビン分割する	pd.cut(ds, n)
ビン数nでデータ列をビン分割する	pd.cut(ds, n)
データ列をビン数nとしてビン分割する	pd.cut(ds, n)
データ列を等間隔でn個にビン分割する	pd.cut(ds, n)
列を等間隔でn個にビン分割する	pd.cut(ds, n)
n個に等間隔でデータ列をビン分割する	pd.cut(ds, n)
等間隔でデータ列をn個にビン分割する	pd.cut(ds, n)
データフレームの中の列をビン数nでビン分割する	pd.cut(df[col], n)
データフレームの中の列を分割数nでビン分割する	pd.cut(df[col], n)
分割数nでデータフレームの中の列をビニングする	pd.cut(df[col], n)
データフレームの中の列を分割数nとしてビン分割する	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個にビン分割する	pd.cut(df[col], n)
データフレームの中の列をn個にビニングする	pd.cut(df[col], n)
データフレームの中の列をn個にビン分割する	pd.cut(df[col], n)
リストをビン数nでビン分割する	pd.cut(aList, n)
リストをビン数nでビニングする	pd.cut(aList, n)
リストをビン数nとしてビンニングする	pd.cut(aList, n)
リストを等間隔でn個にビン分割する	pd.cut(aList, n)
等間隔でn個にリストをビン分割する	pd.cut(aList, n)
リストを等間隔でn個にビニングする	pd.cut(aList, n)
n個にリストをビン分割する	pd.cut(aList, n)
配列をビン数nでビン分割する	pd.cut(aArray, n)
配列をビン数nで分割する	pd.cut(aArray, n)
ビン数nで配列をビン分割する	pd.cut(aArray, n)
配列を等間隔でn個にビン分割する	pd.cut(aArray, n)
配列を等間隔でn個に分割する	pd.cut(aArray, n)
等間隔で配列をn個に分割する	pd.cut(aArray, n)
データ列をビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をビン数nでビン分割してnamesのラベルをつける	pd.cut(ds, n, labels=names)
列をビン数nで分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
列を分割数nを用いてビン分割し、、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をn個に等間隔でビニングして、namesのラベルをつける	pd.cut(ds, n, labels=names)
n個に列を分割し、、namesのラベルをつける	pd.cut(ds, n, labels=names)
列をn個に分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データフレームの中の列をビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列を分割数nとしてビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をビン数nとして分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をビン数nで分割し、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
等間隔でデータフレームの中の列をn個にビン分割し、、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個に分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
リストをビン数nでビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
分割数nでリストをビン分割してnamesのラベルをつける	pd.cut(aList, n, labels=names)
リストをビン数nでビン分割し、、namesのラベルをつける	pd.cut(aList, n, labels=names)
ビン数nでリストを分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個にビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個に等間隔でビン分割し、、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個に等間隔でビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個に分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
配列をビン数nでビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列を分割数nでビン分割してnamesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個にビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個にビンニングしてnamesのラベルをつける	pd.cut(aArray, n, labels=names)
データ列を等量でビン数nでビン分割する	pd.qcut(ds, n)
列を等量で分割数nでビニングする	pd.qcut(ds, n)
列を等量で分割数nとしてビン分割する	pd.qcut(ds, n)
データ列を等量でn個にビン分割する	pd.qcut(ds, n)
データ列を等量でn個に分割する	pd.qcut(ds, n)
n個に等量でデータ列をビン分割する	pd.qcut(ds, n)
データフレームの中の列を等量でビン数nでビン分割する	pd.qcut(df[col], n)
等しい量になるようにデータフレームの中の列をビン数nでビン分割する	pd.qcut(df[col], n)
データフレームの中の列を等量でビン数nとしてビン分割する	pd.qcut(df[col], n)
データフレームの中のカラムを等しい量になるように分割数nとして分割する	pd.qcut(df[col], n)
データフレームの中の列を等量でn個にビン分割する	pd.qcut(df[col], n)
n個に等しい量になるようにデータフレームの中の列を分割する	pd.qcut(df[col], n)
リストを等量でビン数nでビン分割する	pd.qcut(aList, n)
リストを等しい量になるようにビン数nとしてビン分割する	pd.qcut(aList, n)
リストを等しい量になるようにビン数nを用いて分割する	pd.qcut(aList, n)
等量でビン数nでリストを分割する	pd.qcut(aList, n)
リストを等量でn個にビン分割する	pd.qcut(aList, n)
リストを等量でn個に分割する	pd.qcut(aList, n)
n個に等量でリストをビン分割する	pd.qcut(aList, n)
配列を等量でビン数nでビン分割する	pd.qcut(aArray, n)
配列を等量で分割数nで分割する	pd.qcut(aArray, n)
分割数nで配列を等量でビン分割する	pd.qcut(aArray, n)
配列をビン数nで等量でビン分割する	pd.qcut(aArray, n)
配列を等量でn個にビン分割する	pd.qcut(aArray, n)
配列を等量でn個に分割する	pd.qcut(aArray, n)
配列を等量でn個にビニングする	pd.qcut(aArray, n)
配列をn個に等量で分割する	pd.qcut(aArray, n)
データ列をビン分割する	pd.cut(ds, aList)
列をビニングする	pd.cut(ds, aList)
列をビン分割する	pd.cut(ds, aList)
データ列をリストを境界値としてビン分割する	pd.cut(ds, aList)
列をリストを境界値としてビン分割する	pd.cut(ds, aList)
列をリストを境界値として分割する	pd.cut(ds, aList)
リストを境界値としてデータ列をビン分割する	pd.cut(ds, aList)
データフレームの中の列をビン分割する	pd.cut(df[col], aList)
データフレームの中の列をリストを境界値としてビン分割する	pd.cut(df[col], aList)
リストをビン分割する	pd.cut(aList, aList)
リストを分割する	pd.cut(aList, aList)
リストをリストを境界値としてビン分割する	pd.cut(aList, aList)
配列をビン分割する	pd.cut(aArray, aList)
配列をリストを境界値としてビン分割する	pd.cut(aArray, aList)
リストを境界値として配列を分割する	pd.cut(aArray, aList)
リストを境界値として配列をビン分割する	pd.cut(aArray, aList)
データ列を中央値でビン分割する	pd.qcut(ds, 2)
列を中央値で分割する	pd.qcut(ds, 2)
列を中央値でビニングする	pd.qcut(ds, 2)
データフレームの中の列を中央値でビン分割する	pd.qcut(df[col], 2)
データフレームの中の列を中央値でビニングする	pd.qcut(df[col], 2)
中央値でデータフレームの中の列を分割する	pd.qcut(df[col], 2)
データフレームの中のカラムを中央値でビン分割する	pd.qcut(df[col], 2)
リストを中央値でビン分割する	pd.qcut(aList, 2)
配列を中央値でビン分割する	pd.qcut(aArray, 2)
中央値で配列を分割する	pd.qcut(aArray, 2)
データ列を四分位数ごとにビン分割する	pd.qcut(ds, 4)
データ列を四分位数ごとに分割する	pd.qcut(ds, 4)
四分位数ごとにデータ列を分割する	pd.qcut(ds, 4)
データ列を四分位数ごとにビニングする	pd.qcut(ds, 4)
データフレームの中の列を四分位数ごとにビン分割する	pd.qcut(df[col], 4)
四分位数ごとにデータフレームの中の列をビン分割する	pd.qcut(df[col], 4)
データフレームの中のカラムを四分位数ごとにビンニングする	pd.qcut(df[col], 4)
リストを四分位数ごとにビン分割する	pd.qcut(aList, 4)
四分位数ごとにリストをビン分割する	pd.qcut(aList, 4)
配列を四分位数ごとにビン分割する	pd.qcut(aArray, 4)
配列を四分位数ごとにビンニングする	pd.qcut(aArray, 4)
データフレームを列によってソートする	df.sort_values(by=column)
データフレームを列で並べる	df.sort_values(by=column)
データフレームを'A'列によってソートする	df.sort_values(by='A')
データフレームを'A'列によって並べ直す	df.sort_values(by='A')
データフレームを'A'列で並べる	df.sort_values(by='A')
表データを'A'列によってソートする	df.sort_values(by='A')
データフレームを二つの列によってソートする	df.sort_values(by=['A', 'B'])
'A'列と'B'列によってデータフレームをソートする	df.sort_values(by=['A', 'B'])
データフレームを二つの列でソートする	df.sort_values(by=['A', 'B'])
データフレームを複数の列によってソートする	df.sort_values(by=column)
データフレームを複数の列で整列する	df.sort_values(by=column)
データフレームを複数の列を用いて整列する	df.sort_values(by=column)
データフレームを列名リストをキーにしてソートする	df.sort_values(by=column)
データフレームを列によって昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを列で昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを'A'列によって昇順にソートする	df.sort_values(by='A', ascending=True)
昇順にデータフレームを'A'列によって並べる	df.sort_values(by='A', ascending=True)
昇順にデータフレームを'A'列によって整列する	df.sort_values(by='A', ascending=True)
データフレームを二つの列によって昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを２つの列によって小さい順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
小さい順に二つの列でデータフレームをソートする	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを'A'列と'B'列を用いて昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを複数の列によって昇順にソートする	df.sort_values(by=column, ascending=True)
複数の列でデータフレームを小さい順にソートする	df.sort_values(by=column, ascending=True)
表を列名リストで昇順に並べ直す	df.sort_values(by=column, ascending=True)
データフレームを列名リストによって小さい順にソートする	df.sort_values(by=column, ascending=True)
データフレームを列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームを列を用いてによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームを列によってによって降順に整列する	df.sort_values(by=column, ascending=False)
データフレームを'A'列によってによって降順にソートする	df.sort_values(by='A', ascending=False)
降順に'A'列によってでデータフレームを並べ直す	df.sort_values(by='A', ascending=False)
データフレームを'A'列を用いてで大きい順にソートする	df.sort_values(by='A', ascending=False)
データフレームを二つの列によってによって降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
大きい順に２つの列によってで表をソートする	df.sort_values(by=['A', 'B'], ascending=False)
降順にデータフレームを'A'列と'B'列ででソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを降順に'A'列と'B'列によってによってソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを複数の列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームを降順に複数の列によってでソートする	df.sort_values(by=column, ascending=False)
大きい順にデータフレームを列名リストによってで並べ直す	df.sort_values(by=column, ascending=False)
降順にデータフレームを列名リストによってによってソートする	df.sort_values(by=column, ascending=False)
データフレームを列によってソートして、更新する	df.sort_values(by=column, inplace=True)
列を用いてデータフレームを並べて、更新する	df.sort_values(by=column, inplace=True)
データフレームを列でソートして、更新する	df.sort_values(by=column, inplace=True)
列でデータフレームをソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを列でによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを破壊的に列でによってソートする	df.sort_values(by=column, inplace=True)
データフレームを列によってによって破壊的に並べ直す	df.sort_values(by=column, inplace=True)
データフレームを'A'列によってソートして、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってソートし、、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってによって破壊的にソートする	df.sort_values(by='A', inplace=True)
破壊的にデータフレームを'A'列によってでソートする	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってで破壊的に並べ直す	df.sort_values(by='A', inplace=True)
データフレームを二つの列によってソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
二つの列でデータフレームをソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを２つの列で並べ直し、、更新する	df.sort_values(by=['A', 'B'], inplace=True)
表データを二つの列を用いて並べ直して、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列によってによって破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列でを用いて破壊的に並べ直す	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを'A'列と'B'列によってを用いて破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列によってで破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを複数の列によってソートして、更新する	df.sort_values(by=column, inplace=True)
複数の列によってデータフレームをソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列でソートして更新する	df.sort_values(by=column, inplace=True)
データフレームを列名リストでソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
破壊的に複数の列を用いてによってデータフレームをソートする	df.sort_values(by=column, inplace=True)
データフレームを列名リストでで破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを破壊的に複数の列によってを用いてソートする	df.sort_values(by=column, inplace=True)
データフレームを列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に並べて、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列を用いて昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって小さい順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって小さい順に破壊的に並べる	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に破壊的に並べ直す	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを'A'列によって昇順にソートして、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に並べて更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって小さい順に並べて更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
表データを'A'列によって小さい順に破壊的に整列する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって小さい順に破壊的に並べる	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって小さい順に破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを二つの列によって昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
表データを二つの列で昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを'A'列と'B'列で昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを'A'列と'B'列によって昇順に並べ直して、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを二つの列によって昇順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを二つの列によって小さい順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
昇順に二つの列でデータフレームを破壊的に整列する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
2つの列によって昇順に破壊的にデータフレームをソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを複数の列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
小さい順にデータフレームを複数の列によって並べて更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列名リストによって小さい順にソートし、、更新する	df.sort_values(by=column, ascending=True, inplace=True)
小さい順にデータフレームを複数の列によってソートして更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって昇順に破壊的に整列する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって破壊的に小さい順に整列する	df.sort_values(by=column, ascending=True, inplace=True)
表データを列名リストによって昇順に破壊的に並べ直す	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列によって降順に破壊的に並べる	df.sort_values(by=column, ascending=False, inplace=True)
列でデータフレームを降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
破壊的に列によって大きい順にデータフレームをソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを'A'列によって降順に破壊的にソートする	df.sort_values(by='A', ascending=False, inplace=True)
降順にデータフレームを破壊的に'A'列によってソートする	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを'A'列によって大きい順に破壊的にソートする	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを'A'列によって大きい順に破壊的に並べる	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを二つの列によって降順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
破壊的にデータフレームを二つの列によって大きい順にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
破壊的に降順にデータフレームを二つの列で整列する	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを二つの列によって破壊的に降順にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを複数の列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
破壊的に表を降順に複数の列によって整列する	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列名リストによって大きい順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
降順にデータフレームを列名リストによって破壊的に並べる	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
列によってデータフレームをソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列を用いてソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列によってソートし、、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを'A'列によってソートして、NaNを先頭にする	df.sort_values(by='A', na_position='first')
データフレームを'A'列で並べ直してNaNを先頭にする	df.sort_values(by='A', na_position='first')
'A'列によってデータフレームをソートし、、NaNを先頭に来るようにする	df.sort_values(by='A', na_position='first')
データフレームを'A'列によってソートして、NaNを先頭に来るようにする	df.sort_values(by='A', na_position='first')
データフレームを二つの列によってソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
'A'列と'B'列でデータフレームを並べて、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
二つの列によってデータフレームを並べ、NaNを先頭に来るようにする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを複数の列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを複数の列を用いてソートし、、NaNを先頭に来るようにする	df.sort_values(by=column, na_position='first')
複数の列でデータフレームをソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを複数の列によってソートして、NaNを先頭に来るようにする	df.sort_values(by=column, na_position='first')
＜オプション＞値を置き換える	inplace = True
＜オプション＞破壊的に操作する	inplace = True
＜オプション＞欠損値を先頭にする	na_position = 'first'
＜オプション＞降順にする	ascending = False
＜オプション＞昇順にする	ascending = True
データフレームを列によってソートして、上位n件を取り出す	df.sort_values(columns).head(n)
データフレームを列によって並べて、上位を取り出す	df.sort_values(columns).head(n)
データフレームを列によってソートして上の方n件を取り出す	df.sort_values(columns).head(n)
データフレームを列によってソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列を用いて整列して、下の方n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列でソートし、、下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列を用いてソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列によってソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
列によってデータフレームをソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
データフレームを列でソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
列によってデータフレームをソートし、、新しいインデックスを加える	df.sort_values(columns).reset_index()
データフレームを列によってソートして、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームを列でソートし、行を振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームをインデックスによってソートする	df.sort_index()
データフレームをインデックスによって並べ直す	df.sort_index()
データフレームを行によってソートする	df.sort_index()
インデックスで表データを並べる	df.sort_index()
データフレームをインデックスによって昇順にソートする	df.sort_index(ascending=True)
インデックスで昇順にデータフレームをソートする	df.sort_index(ascending=True)
データフレームを行によって昇順にソートする	df.sort_index(ascending=True)
データフレームをインデックスを用いて昇順にソートする	df.sort_index(ascending=True)
データフレームをインデックスによって降順でソートする	df.sort_index(ascending=False)
データフレームをインデックスで降順で整列する	df.sort_index(ascending=False)
データフレームをインデックスを用いて降順でソートする	df.sort_index(ascending=False)
データフレームを行で降順で整列する	df.sort_index(ascending=False)
FIXME:カテゴリーデータを出現頻度順にソートする	df['A'].value_counts().sort_index().index
FIXME:カテゴリーデータを出現頻度順に並べる	df['A'].value_counts().sort_index().index
乱数シードを初期化する	random.seed()
シードを初期化する	random.seed()
システム時刻で乱数を初期化する	random.seed()
乱数シードをnで初期化する	random.seed(n)
乱数生成系列をnで初期化する	random.seed(n)
乱数シードをnで固定する	random.seed(n)
nで乱数生成系列を固定する	random.seed(n)
サイコロ	random.randint(1, 6)
サイコロと同じ乱数	random.randint(1, 6)
範囲を指定して整数乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値で整数乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値で乱数を生成する	random.randint(最小値, 最大値)
等差数列から整数乱数を生成する	random.randrange(start, end, step)
等差数列から整数乱数を計算する	random.randrange(start, end, step)
等差数列から整数乱数を得る	random.randrange(start, end, step)
疑似乱数を生成する	random.random()
乱数を生成する	random.random()
乱数を得る	random.random()
最大値・最小値の範囲で一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
最大値・最小値の範囲として一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
最大値・最小値の範囲を用いて一様な疑似乱数を得る	random.uniform(最小値, 最大値)
最大値・最小値の範囲で一様な疑似乱数を求める	random.uniform(最小値, 最大値)
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
正規分布で疑似乱数を発生させる	random.normalvariate(mu=0.5, sigma=0.2)
疑似乱数を正規分布で生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均値と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
イテラブルからひとつランダムに選ぶ	random.choice(iterable)
列から一つランダムに選ぶ	random.choice(iterable)
イテラブルから一つランダムに選ぶ	random.choice(iterable)
イテラブルから1個ランダムに選ぶ	random.choice(iterable)
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
アルファベットから1文字ランダムに選ぶ	random.choice(string.ascii_uppercase)
英文字からひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
イテラブルから複数個、ランダムに選ぶ	random.choices(iterable, k=n)
イテラブルから複数個ランダムに選ぶ	random.choices(iterable, k=n)
シーケンスから複数個ランダムに選ぶ	random.choices(iterable, k=n)
列からn個、ランダムに選ぶ	random.choices(iterable, k=n)
イテラブルからサンプリングする	random.sample(iterable)
イテラブルからn個、サンプリングする	random.sample(iterable, k=n)
シーケンスからn個、サンプリングする	random.sample(iterable, k=n)
イテラブルからn要素、サンプリングする	random.sample(iterable, k=n)
イテラブルから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
イテラブルから重複なくn個ランダムに選ぶ	random.sample(iterable, k=n)
イテラブルから重複なく、n要素ランダムに選ぶ	random.sample(iterable, k=n)
リストから重複なくn個ランダムに選ぶ	random.sample(iterable, k=n)
リストをランダムにシャッフルする	random.shuffle(aList)
正規表現モジュールをインポートする	import re
正規表現を使う	import re
事前に正規表現をコンパイルする	re.compile(pattern)
正規表現を事前にコンパイルする	re.compile(pattern)
＜オプション＞ASCII文字に限定する	flag = re.ASCII
＜オプション＞大文字・小文字を無視する	flag = re.IGNORECASE
＜オプション＞複数行に対応する	flag = re.MULTILINE
事前にASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
正規表現をあらかじめASCII限定としてコンパイルする	re.compile(pattern, flag=re.ASCI)
ASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
あらかじめ正規表現をASCII限定としてコンパイルする	re.compile(pattern, flag=re.ASCI)
事前に大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
あらかじめケースを無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前に複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
正規表現を複数行対応として事前にコンパイルする	re.compile(pattern, flag=re.MULTILINE)
複数行対応として正規表現を事前にコンパイルする	re.compile(pattern, flag=re.MULTILINE)
文字列中から正規表現にマッチする文字列を探す	re.search(pattern, s)
文字列を走査し、正規表現にマッチするか見る	re.search(pattern, s)
文字列を走査し正規表現にマッチするか見る	re.search(pattern, s)
文字列中から正規表現にASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
文字列を走査し、正規表現にASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
文字列を走査し、正規表現にASCII限定としてマッチするか調べる	re.search(pattern, s, flags=re.ASCI)
文字列中から正規表現に大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し、正規表現に大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し正規表現に大文字・小文字を無視してマッチするか調べる	re.search(pattern, s, flags=re.IGNORECASE)
文字列中から正規表現に複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
文字列を走査し、正規表現に複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
文字列を走査し、パターンに複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
文字列が正規表現にマッチさせる	re.match(pattern, s)
文字列の先頭で正規表現にマッチするか見る	re.match(pattern, s)
文字列の先頭で正規表現にマッチするか確認する	re.match(pattern, s)
文字列の先頭でASCII限定として正規表現にマッチさせる	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で正規表現にASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
文字列の先頭でパターンにASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で大文字・小文字を無視して正規表現にマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
パターンに文字列の先頭で大文字・小文字を無視してマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
大文字・小文字を無視して正規表現に文字列の先頭でマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか確認する	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で複数行対応として正規表現にマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で複数行対応としてパターンにマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で正規表現に複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で正規表現に複数行対応としてマッチするか確認する	re.match(pattern, s, flags=re.MULTILINE)
文字列全体を正規表現にマッチさせる	re.fullmatch(pattern, s)
文字列全体が正規表現にマッチするか見る	re.fullmatch(pattern, s)
文字列全体が正規表現にマッチするか確認する	re.fullmatch(pattern, s)
文字列全体をASCII限定として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体が正規表現にASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体が正規表現にASCII限定としてマッチするか調べる	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体を大文字・小文字を無視して正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体を大文字・小文字を無視してパターンにマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現に大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現に大文字・小文字を無視してマッチするか確認する	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体を複数行対応として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列全体が正規表現に複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列を正規表現で分割する	re.split(pattern, s)
正規表現で文字列を区切る	re.split(pattern, s)
文字列をASCII限定として正規表現で分割する	re.split(pattern, s, flags=re.ASCI)
文字列を大文字・小文字を無視して正規表現で分割する	re.split(pattern, s, flags=re.IGNORECASE)
ケースを無視して正規表現で文字列を分割する	re.split(pattern, s, flags=re.IGNORECASE)
文字列を複数行対応として正規表現で分割する	re.split(pattern, s, flags=re.MULTILINE)
文字列を複数行対応としてパターンで区切る	re.split(pattern, s, flags=re.MULTILINE)
文字列の中の正規表現による全てのマッチを使う	re.findall(pattern, s)
文字列の中の正規表現による全マッチを見る	re.findall(pattern, s)
文字列の中で正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
文字列の中で正規表現にマッチしたすべての文字列をリストに変換する	re.findall(pattern, s)
文字列の中のASCII限定として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定として正規表現によるマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによる全てのマッチを見る	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによる全マッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストにする	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定としてパターンにマッチした全ての文字列をリストにする	re.findall(pattern, s, flags=re.ASCI)
文字列の中の大文字・小文字を無視して正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の大文字・小文字を無視してパターンによる全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の大文字・小文字を無視して正規表現による全マッチを見る	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視して正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視してパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視して正規表現にマッチしたすべての文字列をリストにする	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視してパターンにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の複数行対応として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応として正規表現による全てのマッチを求める	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応としてパターンによるすべてのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチした全文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応としてパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列を正規表現によって置き換える	re.sub(pattern, newsub, s)
文字列を正規表現によって置換する	re.sub(pattern, newsub, s)
正規表現によって文字列を置き換える	re.sub(pattern, newsub, s)
文字列中の正規表現を新しい文字列で置き換える	re.sub(pattern, newsub, s)
文字列中の正規表現を新しい文字列として置き換える	re.sub(pattern, newsub, s)
正規表現にマッチした文字列を新しい文字列で置き換える	re.sub(pattern, newsub, s)
新しい文字列でパターンにマッチした文字列を置き換える	re.sub(pattern, newsub, s)
新しい文字列で正規表現にマッチした文字列を置き換える	re.sub(pattern, newsub, s)
空の集合	set()
空セット	set()
イテラブルの集合	set(iterable)
リストの集合	set(iterable)
列からセット	set(iterable)
イテラブルから重複を取り除く	set(iterable)
列から重複を取り除く	set(iterable)
イテラブルを集合に変換する	set(iterable)
列を集合に変換する	set(iterable)
集合に要素を追加する	aSet.add(element)
値をセットに追加する	aSet.add(element)
集合にイテラブルの要素を全て追加する	aSet.update(iterable)
セットにイテラブルの要素を追加する	aSet.update(iterable)
集合にイテラブルの要素を追加する	aSet.update(iterable)
集合にイテラブルを追加更新する	aSet.update(iterable)
集合に列を追加更新する	aSet.update(iterable)
集合にシーケンスを追加更新する	aSet.update(iterable)
集合に列を追加する	aSet.update(iterable)
集合から要素を取り除く	aSet.remove(element)
集合から値を除く	aSet.remove(element)
集合から値を除去する	aSet.remove(element)
集合からエラーなく要素を取り除く	aSet.discard(element)
集合からエラーなく要素を除く	aSet.discard(element)
集合から全ての要素を取り除く	aSet.clear()
集合から全ての要素を消す	aSet.clear()
集合を空にする	aSet.clear()
ふたつの集合の共通要素だけに更新する	aSet.intersection_update(aSet2)
ふたつの集合のインターセクションだけに更新する	aSet.intersection_update(aSet2)
集合から別の集合の要素を全て取り除く	aSet.difference_update(aSet2)
集合から別の集合を除く	aSet.difference_update(aSet2)
集合から別の集合を全て取り除く	aSet.difference_update(aSet2)
集合から別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
セットから別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
集合から任意の要素を取り出す	aSet.pop()
集合から何でもいいからひとつ取り出す	aSet.pop()
セットから何でもいいからひとつ取り出す	aSet.pop()
ふたつの集合の和集合	aSet.union(aSet2)
二つの集合の和集合	aSet.union(aSet2)
ふたつの集合の積集合	aSet.intersection(aSet2)
二つの集合の積集合を計算する	aSet.intersection(aSet2)
ふたつの集合の∩を算出する	aSet.intersection(aSet2)
ふたつの集合に共通する要素からなる集合	aSet.intersection(aSet2)
ふたつの集合に共通する要素からなる集合を使う	aSet.intersection(aSet2)
ふたつのリストの積集合	list(set(aList) & set(aList2))
ふたつのリストの積集合を使う	list(set(aList) & set(aList2))
ふたつの集合の差集合	aSet.difference(aSet2)
二つの集合の差を求める	aSet.difference(aSet2)
一方に含まれ、他方に含まれない集合	aSet.difference(aSet2)
一方に含まれ他方に含まれない集合	aSet.difference(aSet2)
集合の補集合	aSet.difference(aSet2)
集合＼集合	aSet.difference(aSet2)
ふたつの集合の対称差集合	aSet.symmetric_difference(aSet2)
二つの集合の対称差集合を見る	aSet.symmetric_difference(aSet2)
ふたつの集合の対称差	aSet.symmetric_difference(aSet2)
ふたつの集合のいずれか一方だけの集合	aSet.symmetric_difference(aSet2)
要素が集合のメンバーか調べる	element in aSet
値は集合のメンバーか調べる	element in aSet
値が集合のメンバーか調べる	element in aSet
要素がセットのメンバーか調べる	element in aSet
要素が集合に含まれるか調べる	element in aSet
要素が集合に含まれるかどうか調べる	element in aSet
値が集合に含まれるか調べる	element in aSet
値は集合に含まれるか調べる	element in aSet
要素∈集合	element in aSet
値∈集合	element in aSet
要素が集合のメンバーでないか調べる	element not in aSet
要素が集合のメンバーでないか	element not in aSet
要素が集合の要素でないかどうか調べる	element not in aSet
要素が集合に含まれないか調べる	element not in aSet
要素はセットに含まれないか調べる	element not in aSet
要素が集合に含まれないかどうか	element not in aSet
値は集合に含まれないかどうか	element not in aSet
要素∉集合	element not in aSet
部分集合か調べる	aSet.issubset(aSet2)
部分集合かどうか調べる	aSet.issubset(aSet2)
ふたつの関係が部分集合か調べる	aSet.issubset(aSet2)
ふたつの関係がサブセットか調べる	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれるか調べる	aSet.issubset(aSet2)
セットの全ての要素が別の集合に含まれるか調べる	aSet.issubset(aSet2)
集合の要素が別の集合に含まれるか	aSet.issubset(aSet2)
集合の全ての要素が別のセットに含まれるか	aSet.issubset(aSet2)
真部分集合か調べる	aSet < aSet2
ふたつの関係が真下位集合か調べる	aSet < aSet2
真下位集合かどうか	aSet < aSet2
上位集合か調べる	aSet.issuperset(aSet2)
二つの関係が上位集合か調べる	aSet.issuperset(aSet2)
二つの関係が上位集合	aSet.issuperset(aSet2)
真上位集合か調べる	aSet > aSet2
真上位集合か	aSet > aSet2
真スーパーセットか調べる	aSet > aSet2
上位集合もしくは等しいか調べる	aSet > aSet2
ふたつの関係が上位集合もしくは等しいかどうか調べる	aSet > aSet2
上位集合もしくは等しいかどうか	aSet > aSet2
ふたつの集合が共通の要素を持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が共通の要素を持たない	aSet.isdisjoint(aSet2)
ふたつの集合は共通の要素を持たないかどうか	aSet.isdisjoint(aSet2)
ふたつの集合が集合と交わりを持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合がセットと交わりを持たない	aSet.isdisjoint(aSet2)
ふたつの集合は集合と交わりを持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が集合と交わりを持たない	aSet.isdisjoint(aSet2)
ふたつの集合が集合と互いに素か調べる	aSet.isdisjoint(aSet2)
ふたつの集合がセットと互いに素	aSet.isdisjoint(aSet2)
ふたつの集合が互いに素か調べる	aSet.isdisjoint(aSet2)
二つの集合は互いに素か調べる	aSet.isdisjoint(aSet2)
集合の濃度	len(aSet)
セットの濃度	len(aSet)
集合が空か調べる	len(aSet) == 0
セットが空	len(aSet) == 0
集合が空集合	len(aSet) == 0
集合が空でないか調べる	len(aSet) != 0
セットが空でないか調べる	len(aSet) != 0
セットが空でないかどうか調べる	len(aSet) != 0
集合が空集合でない	len(aSet) != 0
集合の浅いコピー	aSet.copy()
セットの浅いコピーを生成する	aSet.copy()
イテラブルのイミュータブルな集合	frozenset(iterable)
タプルのイミュータブルなセット	frozenset(iterable)
イテラブルをイミュータブルな集合に変換する	frozenset(iterable)
シーケンスをイミュータブルな集合に変換する	frozenset(iterable)
集合のイミュータブル版	frozenset(aSet)
セットのイミュータブル版	frozenset(aSet)
集合をイミュータブルなセットに変換する	frozenset(aSet)
セットをイミュータブルなセットに変換する	frozenset(aSet)
集合をイミュータブルに変換する	frozenset(aSet)
セットを更新不能に変換する	frozenset(aSet)
集合を更新不能に変換する	frozenset(aSet)
集合をリストに変換する	list(aSet)
集合をリストにする	list(aSet)
集合をタプルに変換する	tuple(aSet)
セットをタプルにする	tuple(aSet)
リストの重複を取り除く	sorted(set(aList), key=aList.index)
文字列モジュールをインポートする	import string
空文字	''
anemptystring	''
改行	'\n'
タブ	'\t'
空白	' '
空白を使う	' '
空白を見る	' '
space	' '
アルファベットの文字列	string.ascii_letters
アルファベットを全部使う	string.ascii_letters
アルファベットを全て使う	string.ascii_letters
英字を全部見る	string.ascii_letters
アルファベットの小文字列	string.ascii_lowercase
アルファベットの小文字を全部使う	string.ascii_lowercase
小文字を全て使う	string.ascii_lowercase
小文字を全部使う	string.ascii_lowercase
アルファベットの小文字を全て見る	string.ascii_lowercase
アルファベットの大文字列	string.ascii_uppercase
アルファベットの大文字を全部使う	string.ascii_uppercase
大文字を全部使う	string.ascii_uppercase
アルファベットの大文字を全て使う	string.ascii_uppercase
全ての数字	string.digits
数字を全部使う	string.digits
数字を全部見る	string.digits
全ての十六進数字	string.hexdigits
十六進数字を全部使う	string.hexdigits
十六進数字を全て求める	string.hexdigits
全ての８進数字	string.octdigits
８進数字を全部使う	string.octdigits
８進数字を全部求める	string.octdigits
八進数字を全部使う	string.octdigits
全ての句読点文字	string.punctuation
句読点文字を全部使う	string.punctuation
句読点文字を使う	string.punctuation
句点文字を全て見る	string.punctuation
全ての印字可能な文字	string.printable
全ての印字できる文字	string.printable
印字可能な文字を全部使う	string.printable
印字を全て見る	string.printable
印字できる文字を全て求める	string.printable
全ての空白文字	string.whitespace
空白文字を全部使う	string.whitespace
空白文字を全部見る	string.whitespace
空白文字を見る	string.whitespace
文字コードを文字に変換する	chr(unicode)
文字コードを文字にする	chr(unicode)
文字コードに対応する文字	chr(unicode)
文字を文字コードに変換する	ord(ch)
文字の文字コード	ord(ch)
文字のユニコードを見る	ord(ch)
文字列を文字コード列に変換する	[ord(ch) for ch in s]
文字列を全て大文字に変換する	s.upper()
文字列中の小文字を大文字に変換する	s.upper()
文字列を全て小文字に変換する	s.lower()
文字列を全て小文字にする	s.lower()
文字列中の大文字を小文字に変換する	s.lower()
文字列のケースを変換する	s.casefold()
文字列の大文字小文字を変換する	s.casefold()
文字列を全て小文字に変換する	s.casefold()
文字列を積極的に小文字に変換する	s.casefold()
文字列を文字リストに変換する	list(s)
文字列中の文字を列挙する	list(s)
文字列を空白で区切って、文字列リストに変換する	s.split()
空白で文字列を区切り、文字列リストにする	s.split()
文字列を空白で区切り、、文字列リストに変換する	s.split()
空白で文字列を区切って、列挙する	s.split()
文字列を空白で区切る	s.split()
文字列を空白で分割する	s.split()
文字列を空白で区切って、整数リストに変換する	map(int, s.split())
文字列を空白によって分割して整数リストにする	map(int, s.split())
文字列を空白を使って分割し、数列に変換する	map(int, s.split())
文字列を空白で分割して数列に変換する	map(int, s.split())
文字列を部分文字列で区切って、文字列リストに変換する	s.split(sub)
文字列を部分文字列で区切って、列挙する	s.split(sub)
セパレータで文字列を分割して、文字列リストに変換する	s.split(sub)
文字列を部分文字列で分割して、列挙する	s.split(sub)
文字列を部分文字列で区切る	s.split(sub)
文字列を部分文字列で分割する	s.split(sub)
区切りで文字列を分割する	s.split(sub)
文字列をカンマで分割して、文字列リストに変換する	s.split(',')
文字列をカンマで分割して、文字列リストにする	s.split(',')
文字列をカンマで分割し、、文字列リストに変換する	s.split(',')
文字列をカンマで区切って、列挙する	s.split(',')
文字列をカンマで分割して、列挙する	s.split(',')
文字列をカンマを用いて区切って、列挙する	s.split(',')
文字列をコロンで分割して、文字列リストに変換する	s.split(':')
文字列をコロンで分割して、文字列リストにする	s.split(':')
文字列をコロンで分割して文字列リストに変換する	s.split(':')
文字列をコロンで区切って、列挙する	s.split(':')
文字列をコロンで区切り、、列挙する	s.split(':')
文字列をコロンによって区切って、列挙する	s.split(':')
文字列をコロンで分割して、列挙する	s.split(':')
文字列をセパレータで分割して、文字列リストに変換する	s.split(sep)
区切りで文字列を分割して、文字列リストに変換する	s.split(sep)
セパレータで文字列を分割して文字列リストに変換する	s.split(sep)
文字列をセパレータで分割して、文字列リストにする	s.split(sep)
文字列をセパレータで区切って、列挙する	s.split(sep)
文字列をセパレータで分割して、列挙する	s.split(sep)
文字列を区切りで分割して、列挙する	s.split(sep)
文字列を区切りによって区切って、列挙する	s.split(sep)
文字列を改行で分割し、文字列リストに変換する	s.splitlines()
文字列を改行で分割し文字列リストにする	s.splitlines()
文字列を改行で区切る	s.splitlines()
文字列を改行で分割する	s.splitlines()
文字列を末尾から空白で区切る	s.rsplit()
文字列を後ろから空白で区切る	s.rsplit()
空白で文字列を最後から分割する	s.rsplit()
文字列を末尾から部分文字列で区切る	s.rsplit(sub)
文字列を部分文字列で最後から区切る	s.rsplit(sub)
文字列を部分文字列で末尾から区切る	s.rsplit(sub)
最後から部分文字列で文字列を分割する	s.rsplit(sub)
文字列を二分する	s.partition(sep)
文字列を二分割する	s.partition(sep)
文字列を部分文字列で二分する	s.partition(sub)
部分文字列によって文字列を二分する	s.partition(sub)
部分文字列で文字列を二分する	s.partition(sub)
文字列を最後の部分文字列で二分する	s.rpartition(sub)
文字列を最後の部分文字列で二つに分ける	s.rpartition(sub)
文字列を最後の部分文字列を使って二分する	s.rpartition(sub)
文字列を部分文字列で二分し、前半の文字列を使う	s.partition(sub)[0]
文字列を最初の部分文字列で二分し、最初の文字列を使う	s.partition(sub)[0]
最初の部分文字列で文字列を二分し、前半の文字列を使う	s.partition(sub)[0]
文字列を部分文字列で分けたときの前半の文字列	s.partition(sub)[0]
部分文字列で文字列を分割した時の前半の文字列を取り出す	s.partition(sub)[0]
文字列を最初の部分文字列で分けたときの前半の文字列	s.partition(sub)[0]
文字列を部分文字列で二分し、後半の文字列を使う	s.partition(sub)[-1]
文字列を最初の部分文字列で二分し後半の文字列を使う	s.partition(sub)[-1]
文字列を部分文字列で分けたときの後半の文字列	s.partition(sub)[-1]
文字列を部分文字列で分割した場合の後半の文字列	s.partition(sub)[-1]
文字列を最初の部分文字列で分けた時の後半の文字列	s.partition(sub)[-1]
文字列を最後の部分文字列で二分し、前半の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で二つに区切って、最初の文字列を見る	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し最初の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けたときの前半の文字列	s.rpartition(sub)[0]
文字列を最後の部分文字列で分割したときの前半の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けた時の先頭の文字列を取り出す	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し、後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二分し、残りの文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二つに区切って、後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けたときの後半の文字列	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分割した時の後半の文字列を取り出す	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けたときの残りの文字列	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分割したときの後半の文字列	s.rpartition(sub)[-1]
文字列を置き換える	s.replace(sub, newsub)
文字列を新しい文字列で置き換える	s.replace(sub, newsub)
文字列を新しい文字列によって置き換える	s.replace(sub, newsub)
文字列を別の文字列を用いて置き換える	s.replace(sub, newsub)
文字列中の部分文字列を新しい文字列に置き換える	s.replace(sub, newsub)
文字列中の部分文字列を新しい文字列に全部置き換える	s.replace(sub, newsub)
文字列中の部分文字列を文字列に置き換える	s.replace(sub, newsub)
文字列中の部分文字列を文字列に全部置き換える	s.replace(sub, newsub)
文字列に文字列中の部分文字列を置き換える	s.replace(sub, newsub)
文字列を回数を制限して置き換える	s.replace(sub, newsub, n)
文字列をn回だけ置換する	s.replace(sub, newsub, n)
文字列をn回だけ置き換える	s.replace(sub, newsub, n)
n回だけ文字列を置き換える	s.replace(sub, newsub, n)
文字列中の部分文字列を新しい文字列に回数を制限して置き換える	s.replace(sub, newsub, n)
新しい文字列に文字列中の部分文字列を回数を制限して置き換える	s.replace(sub, newsub, n)
文字列中の部分文字列を回数を制限して新しい文字列に置き換える	s.replace(sub, newsub, n)
文字列から部分文字列を全て取り除く	s.replace(sub, '')
文字列中のタブ文字を空白に置き換える	s.expandtabs(tabsize=n)
文字列中のタブ文字を空白にする	s.expandtabs(tabsize=n)
文字列の両端から空白を取り除く	s.strip()
文字列の両端から余分な空白を除去する	s.strip()
文字列の両端から余分な空白と改行を除く	s.strip()
文字列をトリムする	s.strip()
文字列の両端から部分文字列を取り除く	s.strip(sub)
文字列の先頭から空白を取り除く	s.lstrip()
文字列の先頭の空白を消す	s.lstrip()
文字列の先頭の空白を取り除く	s.lstrip()
文字列の先頭の不要な空白を除去する	s.lstrip()
文字列を左トリムする	s.lstrip()
文字列の左側から部分文字列を取り除く	s.lstrip(sub)
文字列の左端から部分文字列を取り除く	s.lstrip(sub)
文字列の左側からタブを取り除く	s.lstrip('\t')
文字列の左側からタブを消す	s.lstrip('\t')
文字列の左側から空白を取り除く	s.lstrip(' ')
文字列の右側から空白を取り除く	s.rstrip()
文字列の右側から空白を除去する	s.rstrip()
文字列を右トリムする	s.rstrip()
文字列の右側から部分文字列を取り除く	s.rstrip(sub)
文字列の右側から部分文字列を除く	s.rstrip(sub)
文字列の後ろから部分文字列を取り除く	s.rstrip(sub)
文字列の右側からタブを取り除く	s.rstrip('\t')
文字列の右側からタブを除去する	s.rstrip('\t')
文字列の右側から改行を取り除く	s.rstrip('\n')
文字列の最後から改行を除く	s.rstrip('\n')
文字列の右端から改行を除く	s.rstrip('\n')
文字列の右側から空白を取り除く	s.rstrip(' ')
文字列の右側から空白を除去する	s.rstrip(' ')
文字列をゼロ埋めする	s.zfill(文字列幅)
整数をゼロ埋めした文字列に変換する	str(n).zfill(文字列幅)
数値をゼロ埋めした文字列にする	str(n).zfill(文字列幅)
文字列をセンタリングにする	s.center(文字列幅)
文字列を左寄せにする	s.ljust(文字列幅)
文字列を右寄せにする	s.rjust(文字列幅)
文字列をキャピタライズする	s.capitalize()
文字列の先頭だけ大文字化する	s.capitalize()
文字列の大文字と小文字を交換する	s.swapcase()
文字列の大文字と小文字を逆にする	s.swapcase()
文字列のケースを入れ替える	s.swapcase()
文字列の大文字小文字を交換する	s.swapcase()
文字列が文字列リストのいづれか調べる	s in aStringList
文字列が文字列リストのいづれか	s in aStringList
文字列が文字列リストに含まれるか調べる	s in aStringList
文字列が文字列リストに含まれるかどうか判定する	s in aStringList
文字列が文字列リストにあるか調べる	s in aStringList
文字列が文字列リストに存在するかどうか調べる	s in aStringList
部分文字列か調べる	sub in s
部分文字列	sub in s
文字列中に部分文字列が含まれるか調べる	sub in s
文字列中に部分文字列が含まれる	sub in s
部分文字列が文字列中に含まれるかどうか	sub in s
文字列中に部分文字列が含まれないか調べる	sub not in s
部分文字列が文字列中に存在しないかどうか調べる	sub not in s
文字列中に部分文字列がないか調べる	sub not in s
文字列中に部分文字列が存在しないか調べる	sub not in s
文字列中から部分文字列を探す	s.find(sub)
部分文字列を文字列中から見つける	s.find(sub)
文字列の先頭から部分文字列を探す	s.find(sub)
文字列の左端から部分文字列を探す	s.find(sub)
部分文字列を文字列の先頭から見つける	s.find(sub)
文字列の開始位置以降に部分文字列が含まれるか調べる	s.find(sub, start) != -1
部分文字列が文字列の開始位置より後に含まれる	s.find(sub, start) != -1
文字列の開始位置より後に部分文字列があるかどうか	s.find(sub, start) != -1
文字列の開始位置以降に部分文字列が含まれないか調べる	s.find(sub, start) == -1
部分文字列が文字列の開始位置以降に含まれないか	s.find(sub, start) == -1
部分文字列が文字列の開始位置以降に含まれないかどうか調べる	s.find(sub, start) == -1
部分文字列が文字列の開始位置より後にない	s.find(sub, start) == -1
文字列の終了位置より前に部分文字列が含まれるか調べる	s.find(sub, 0, end) != -1
部分文字列が文字列の終了位置より前にあるか調べる	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が含まれる	s.find(sub, 0, end) != -1
文字列の終了位置以前に部分文字列が含まれるかどうか調べる	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が含まれないか調べる	s.find(sub, 0, end) == -1
文字列の終了位置より前に部分文字列が含まれない	s.find(sub, 0, end) == -1
部分文字列が文字列の終了位置より前に含まれない	s.find(sub, 0, end) == -1
文字列の開始位置と終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
部分文字列が文字列の開始位置と終了位置の間に含まれるか確認する	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が含まれる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列が含まれる	s.find(sub, start, end) != -1
部分文字列が文字列の開始位置からと終了位置の間に含まれるか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列が含まれるかどうかテストする	s.find(sub, start, end) != -1
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置番目と終了位置番目の間に部分文字列がないか	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの範囲に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの間に部分文字列が存在しないか調べる	s.find(sub, start, end) == -1
部分文字列が文字列の開始位置番目からと終了位置までの範囲にない	s.find(sub, start, end) == -1
文字列の開始位置から部分文字列を探す	s.find(sub, start)
文字列の終了位置まで部分文字列を探す	s.find(sub, 0, end)
部分文字列を範囲を指定して探す	s.find(sub, start, end)
文字列の開始位置から終了位置まで部分文字列を探す	s.find(sub, start, end)
文字列の末尾から部分文字列を探す	s.rfind(sub)
文字列の末尾から部分文字列を見つける	s.rfind(sub)
部分文字列を文字列の最後から探す	s.rfind(sub)
部分文字列を範囲を指定して探す	s.find(sub, start, end)
文字列の末尾から範囲を指定して部分文字列を探す	s.find(sub, start, end)
範囲を指定して部分文字列を文字列の末尾から探す	s.find(sub, start, end)
文字列リストを連結する	''.join(aStringList)
文字列リストを連結してひとつの文字列にする	''.join(aStringList)
文字列リストを連結して一つの文字列にする	''.join(aStringList)
文字列リストを結合してひとつの文字列にする	''.join(aStringList)
文字列リストをsepを区切りとして連結する	sep.join(aStringList)
文字列リストをsepを区切りとして結合する	sep.join(aStringList)
文字列リストをsepを区切りにしてひとつの文字列にする	sep.join(aStringList)
sepを区切りにして文字列リストをひとつの文字列にする	sep.join(aStringList)
イテラブルを文字列に変換して連結する	''.join(map(str, iterable))
列を文字列に変換して連結する	''.join(map(str, iterable))
列を文字列として一つにする	''.join(map(str, iterable))
イテラブルを文字列として連結する	''.join(map(str, iterable))
文字列リストを連結してひとつの文字列にする	''.join(map(str, iterable))
文字列リストをひとつの文字列にする	''.join(map(str, iterable))
文字列リストを一つにし、ひとつの文字列にする	''.join(map(str, iterable))
文字列リストを連結し、一つの文字列にする	''.join(map(str, iterable))
イテラブルを文字列リストに変換して、空白で連結する	' '.join(map(str, iterable))
イテラブルを文字列に変換して、空白で連結する	' '.join(map(str, iterable))
イテラブルを文字列に変換して空白によって連結する	' '.join(map(str, iterable))
列を文字列リストに変換して、空白で結合する	' '.join(map(str, iterable))
イテラブルを文字列リストに変換して、カンマで連結する	','.join(map(str, iterable))
イテラブルを文字列リストに変換してカンマで連結する	','.join(map(str, iterable))
文字列リストにイテラブルを変換してカンマで連結する	','.join(map(str, iterable))
イテラブルを文字列リストに変換して、カンマを用いて連結する	','.join(map(str, iterable))
イテラブルを文字列リストに変換して、タブで連結する	'\t'.join(map(str, iterable))
文字列リストにイテラブルを変換して、タブを用いて連結する	'\t'.join(map(str, iterable))
イテラブルを文字列リストに変換して、タブを用いて連結する	'\t'.join(map(str, iterable))
文字列リストにイテラブルを変換してタブによって連結する	'\t'.join(map(str, iterable))
イテラブルを文字列リストに変換して、'改行で連結する	'\n'.join(map(str, iterable))
文字列にイテラブルを変換して'改行で連結する	'\n'.join(map(str, iterable))
列を文字列リストに変換して、'改行によってつなげる	'\n'.join(map(str, iterable))
イテラブルを文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
列を文字列に変換して、部分文字列でつなげる	sub.join(map(str, iterable))
文字列中の部分文字列の出現をカウントする	s.count(sub)
文字列中の部分文字列の出現回数をカウントする	s.count(sub)
文字列中の部分文字列の登場	s.count(sub)
文字列中の部分文字列をカウントする	s.count(sub)
文字列中に部分文字列がいくつか含まれるか調べる	s.count(sub)
文字列の開始位置から終了位置までの範囲で部分文字列の出現をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列の出現回数をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列を数える	s.count(sub, start, end)
文字列の開始位置から終了位置の範囲で部分文字列をカウントする	s.count(sub, start, end)
文字列のの開始位置から終了位置までの間に部分文字列がいくつか含まれるか調べる	s.count(sub, start, end)
部分文字列が部分文字列で始まるか調べる	s.startswith(sub)
部分文字列が部分文字列で開始するか	s.startswith(sub)
部分文字列で部分文字列が開始するか調べる	s.startswith(sub)
文字列の接頭辞が部分文字列か調べる	s.startswith(sub)
文字列のプレフィックスは部分文字列	s.startswith(sub)
文字列の先頭は部分文字列かどうか	s.startswith(sub)
文字列の左側は部分文字列か調べる	s.startswith(sub)
文字列の開始位置以降が部分文字列で始まるか調べる	s.startswith(sub, start)
文字列の開始位置以降が部分文字列で始まるか判定する	s.startswith(sub, start)
文字列が部分文字列で終わるか調べる	s.endswith(sub)
文字列が部分文字列で終了するか調べる	s.endswith(sub)
文字列の接尾辞が部分文字列か調べる	s.endswith(sub)
文字列の末尾が部分文字列	s.endswith(sub)
文字列の末尾は部分文字列か調べる	s.endswith(sub)
文字列の末尾が部分文字列かテストする	s.endswith(sub)
文字列の接頭辞から部分文字列を取り除く	s.removeprefix(sub)
文字列の左端から部分文字列を取り除く	s.removeprefix(sub)
部分文字列を文字列の接頭辞から取り除く	s.removeprefix(sub)
文字列の接尾辞から部分文字列を取り除く	s.removesuffix(sub)
文字列の接尾辞から部分文字列を消す	s.removesuffix(sub)
文字列の末尾から部分文字列を消す	s.removesuffix(sub)
ファイル名がCSVファイルか調べる	filename.endswith('.csv')
ファイル名がCSVファイル	filename.endswith('.csv')
ファイル名がテキストファイルか調べる	filename.endswith('.txt')
ファイル名がテキストファイルかテストする	filename.endswith('.txt')
ファイル名がTSVファイルか調べる	filename.endswith('.tsv')
TSVファイルファイル名が	filename.endswith('.tsv')
ファイル名がJSONファイルか調べる	filename.endswith('.json')
ファイル名がJSONファイルかどうか調べる	filename.endswith('.json')
文字列が全て大文字か調べる	s.isupper()
文字列が全て大文字	s.isupper()
文字列が全て小文字か調べる	s.islower()
文字列が小文字かどうか調べる	s.islower()
文字列が全て小文字かどうか	s.islower()
文字列が全て数字か調べる	s.isdigit()
文字列が数字か調べる	s.isdigit()
文字列が全てアルファベットか調べる	s.isalpha()
文字列が全てアルファベット	s.isalpha()
文字列が全て英数字か調べる	s.isalnum()
文字列が英数字	s.isalnum()
文字列が全て英数字	s.isalnum()
文字列が全てアスキー文字か調べる	s.isascii()
文字列が全てアスキー文字かどうか調べる	s.isascii()
文字列が全てアスキー文字か	s.isascii()
文字列が全て空白文字からなるか調べる	s.isspace()
文字列が全て空白文字かどうか確認する	s.isspace()
文字列は全て十進数字か調べる	s.isdecimal()
文字列は十進数字	s.isdecimal()
文字列は全て数値か調べる	s.isnumeric()
文字列は全て数値	s.isnumeric()
文字列が数値か調べる	s.isnumeric()
文字列内にひとつでも大文字が含まれるか調べる	any(c.isupper() for c in s)
文字列内に大文字があるか調べる	any(c.isupper() for c in s)
ひとつでも大文字が文字列内に含まれるか判定する	any(c.isupper() for c in s)
文字列内にひとつでも小文字が含まれるか調べる	any(c.islower() for c in s)
ひとつでも小文字が文字列内に含まれるか調べる	any(c.islower() for c in s)
文字列内に小文字が含まれるか調べる	any(c.islower() for c in s)
文字列内にひとつでも小文字が含まれるかどうか調べる	any(c.islower() for c in s)
文字列内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
文字列内にひとつでも数字があるか調べる	any(c.isdigit() for c in s)
文字列内にひとつでも数字が含まれる	any(c.isdigit() for c in s)
文字列内にひとつでもアルファベットが含まれるか調べる	any(c.isalpha() for c in s)
文字列内にひとつでもアルファベットが含まれるかどうか調べる	any(c.isalpha() for c in s)
ひとつでもアルファベットが文字列内に含まれる	any(c.isalpha() for c in s)
文字列内にひとつでもアルファベットがあるかどうか調べる	any(c.isalpha() for c in s)
文字列内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
ひとつでも英数字が文字列内に含まれる	any(c.isalnum() for c in s)
文字列内にひとつでも英数字が含まれる	any(c.isalnum() for c in s)
文字列内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
文字列内に空白がある	any(c.isspace() for c in s)
文字列内にひとつでも空白が含まれるかどうか	any(c.isspace() for c in s)
文字列内にひとつでも空白が含まれるか	any(c.isspace() for c in s)
文字列内にひとつでもアスキー文字が含まれるか調べる	any(c.isascii() for c in s)
文字列内にアスキー文字が含まれる	any(c.isascii() for c in s)
文字列内にひとつでもアスキー文字が含まれる	any(c.isascii() for c in s)
文字列内にひとつでもアスキー文字があるか調べる	any(c.isascii() for c in s)
文字列中にひとつでも非大文字が含まれるか調べる	any(not c.isupper() for c in s)
非大文字が文字列中にあるかどうか調べる	any(not c.isupper() for c in s)
文字列中にひとつでも非小文字が含まれるか調べる	any(not c.islower() for c in s)
非小文字が文字列中に含まれるか調べる	any(not c.islower() for c in s)
文字列中に非小文字が含まれるかどうか調べる	any(not c.islower() for c in s)
ひとつでも非小文字が文字列中に含まれるかどうか	any(not c.islower() for c in s)
文字列中にひとつでも非数字が含まれるか調べる	any(not c.isdigit() for c in s)
文字列中に非数字が含まれるか調べる	any(not c.isdigit() for c in s)
ひとつでも非数字が文字列中に含まれる	any(not c.isdigit() for c in s)
文字列中にひとつでも非アルファベットが含まれるか調べる	any(not c.isalpha() for c in s)
文字列中にひとつでも非アルファベットが含まれるか	any(not c.isalpha() for c in s)
文字列中にひとつでも非アルファベットがあるか	any(not c.isalpha() for c in s)
文字列中にひとつでも非英数字が含まれるか調べる	any(not c.isalnum() for c in s)
文字列中にひとつでも非英数字がある	any(not c.isalnum() for c in s)
文字列中に非英数字が含まれるか調べる	any(not c.isalnum() for c in s)
文字列中にひとつでも非空白が含まれるか調べる	any(not c.isspace() for c in s)
文字列中に非空白が含まれるかどうか調べる	any(not c.isspace() for c in s)
文字列中に非空白が含まれるか	any(not c.isspace() for c in s)
文字列中にひとつでも非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
文字列中にひとつでも非ASCII文字が含まれるか	any(not c.isascii() for c in s)
ひとつでも非アスキー文字が文字列中に含まれるか調べる	any(not c.isascii() for c in s)
文字列中に非アスキー文字が含まれる	any(not c.isascii() for c in s)
文字列は全て識別子名か調べる	s.isidentifier()
文字列は識別子名か調べる	s.isidentifier()
文字列が識別子名か調べる	s.isidentifier()
文字列はPythonのキーワードか調べる	keyword.iskeyword(s)
文字列はキーワードか	keyword.iskeyword(s)
文字列はキーワードか調べる	keyword.iskeyword(s)
文字列は全て印字できるか調べる	s.isprintable()
文字列は印字できる	s.isprintable()
文字列が全て印字できるか調べる	s.isprintable()
文字列が印字できるか調べる	s.isprintable()
文字列はタイトルケースか調べる	s.istitle()
文字列はタイトルケース	s.istitle()
文字列はタイトルケースかテストする	s.istitle()
文字列はタイトルケースかどうか調べる	s.istitle()
文字列をUTF8でバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
文字列をバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
文字列をSJISでバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
文字列を文字コードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
文字列を文字コードエスケープでバイト列にする	s.encode(encoding='unicode_escape')
文字列をユニコードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
文字列をエンコーディングでバイト列に変換する	s.encode(encoding=encoding)
文字列をエンコーディングを用いてバイト列に変換する	s.encode(encoding=encoding)
文字列をエンコーディングによってバイト列に変換する	s.encode(encoding=encoding)
文字列をエンコーディングでバイト列にする	s.encode(encoding=encoding)
エラーを無視して文字列をバイト列に変換する	s.encode(errors='ignore')
文字列をエラーを無視してバイト列に変換する	s.encode(errors='ignore')
書式をargsを引数としてフォーマットする	formatText.format(*args)
テンプレートをargsを引数としてフォーマットする	formatText.format(*args)
書式を引数としてargsを文字列整形する	formatText.format(*args)
書式を辞書でフォーマットする	formatText.format_map(aDict)
書式をタプルでフォーマットする	formatText.format_map(aDict)
文字列の長さ	len(s)
文字列の長さを使う	len(s)
文字列の先頭	s[0]
文字列の最初の文字	s[0]
文字列の最初を使う	s[0]
文字列の最初	s[0]
文字列の末尾	s[-1]
文字列の後ろを使う	s[-1]
文字列のn番目	s[n]
文字列のn番目の文字	s[n]
二つの文字列は同じか調べる	s == s2
二つの文字列は同じかどうか調べる	s == s2
二つの文字列は等しくないか調べる	s != s2
２つの文字列は同じでない	s != s2
２つの文字列は等しくないか調べる	s != s2
二つの文字列は等しくないかどうか調べる	s != s2
二つの文字列を辞書順で比較する	s < s2
２つの文字列を辞書順で比較する	s < s2
辞書順で２つの文字列を比較する	s < s2
文字列が文字列より辞書順で前か調べる	s < s2
文字列は文字列より辞書順で前	s < s2
文字列が文字列より辞書順で前かどうか調べる	s < s2
文字列が文字列より辞書順で後か調べる	s > s2
文字列は文字列より辞書順で後か調べる	s > s2
文字列が文字列より辞書順で後か	s > s2
辞書順で文字列は文字列より後かどうか調べる	s > s2
二つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
2つの文字列はケースを無視して同じか	s.casefold() == s2.casefold()
二つの文字列をケースを無視して比較する	s.casefold() < s2.casefold()
2つの文字列をケースを無視して比較する	s.casefold() < s2.casefold()
文字列が片仮名か調べる	('ァ' <= ch <= 'ン')
文字列が片仮名	('ァ' <= ch <= 'ン')
文字列が片仮名か	('ァ' <= ch <= 'ン')
文字列が平仮名か調べる	('ぁ' <= ch <= 'ん')
文字列は平仮名	('ぁ' <= ch <= 'ん')
文字列がひらがなか調べる	('ぁ' <= ch <= 'ん')
文字列が平仮名か	('ぁ' <= ch <= 'ん')
文字列が漢字か調べる	('\u4E00' <= ch <= '\u9FD0')
文字列が漢字かどうか調べる	('\u4E00' <= ch <= '\u9FD0')
文字列が漢字か確認する	('\u4E00' <= ch <= '\u9FD0')
文字列に漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列中に漢字があるか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列に日本語が含まれるか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列に日本語が使われているか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列の片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列の片仮名をひらがなに変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列のカタカナを平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列の平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列のひらがなを片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
ひらがなをカタカナに変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列の全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
代数計算を使う	import sympy
代数計算ライブラリを使う	import sympy
シンボル計算モジュールを使う	import sympy
文字列をシンボルに変換する	sympy.Symbol(s)
文字列を変数に変換する	sympy.Symbol(s)
文字列を代数計算の変数に変換する	sympy.Symbol(s)
文字列の変数名を数式に変換する	sympy.Symbol(s)
文字列をシンボルにして、変数にする	z = sympy.Symbol(s)
文字列を変数化して、変数にする	z = sympy.Symbol(s)
文字列を変数にして、変数にする	z = sympy.Symbol(s)
文字列を記号にして変数にする	z = sympy.Symbol(s)
数式の変数にnを代入する	e.subs(z, n)
数式の変数に数式を代入する	e.subs(z, e2)
数式の変数を数式で置き換える	e.subs(z, e2)
数値の変数を数式で置き換える	e.subs(z, e2)
数式を展開する	sympy.expand(e)
数式の展開を行う	sympy.expand(e)
数式を因数分解する	sympy.factor(e)
数式の因数分解を行う	sympy.factor(e)
数式を簡単にする	sympy.sympify(e)
数式を簡略にする	sympy.sympify(e)
数式の簡略化を行う	sympy.sympify(e)
数式を部分分数に展開する	sympy.apart(e)
数式の部分分数化を行う	sympy.apart(e)
数式を方程式として解く	sympy.solve(e)
方程式の解	sympy.solve(e)
方程式として数式の変数の解を求める	sympy.solve(e, z)
数式の変数の解を方程式として求める	sympy.solve(e, z)
連立方程式の解を求める	sympy.solve([e, e2])
連立方程式を解く	sympy.solve([e, e2])
変数が0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
変数が0に近づくときの数値の極限値を求める	sympy.limit(e, z, 0)
変数が0に近づくときの数値の極限値を計算する	sympy.limit(e, z, 0)
変数が0に近づく場合、数式の極限値を求める	sympy.limit(e, z, 0)
変数が無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, oo)
パラメータが無限大に近づくとき、数式の極限値を求める	sympy.limit(e, z, oo)
変数が無限大に近づく場合の数式の極限値を求める	sympy.limit(e, z, oo)
変数が無限大に近づくとき、数式の極限値を求める	sympy.limit(e, z, oo)
変数がマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
パラメータがマイナス無限大に近づくときの数値の極限値を求める	sympy.limit(e, z, -oo)
パラメータがマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
数式を微分する	sympy.diff(e)
数式の微分を求める	sympy.diff(e)
数値の微分を計算する	sympy.diff(e)
変数について数式の微分を行う	sympy.diff(e, z)
数式を変数について微分する	sympy.diff(e, z)
数値を変数について微分する	sympy.diff(e, z)
数式を変数についてn階微分する	sympy.diff(e, z, n)
パラメータについて数値をn階微分する	sympy.diff(e, z, n)
数式の変数についてのn階微分を求める	sympy.diff(e, z, n)
数値のn階微分を求める	sympy.diff(e, z, n)
数式を積分する	sympy.integrate(e)
数式の積分を求める	sympy.integrate(e)
数値の積分を行う	sympy.integrate(e)
変数について数式を積分する	sympy.integrate(e, z)
変数について数式の積分を求める	sympy.integrate(e, z)
変数について数値のインテグラルを求める	sympy.integrate(e, z)
変数について数式の積分を行う	sympy.integrate(e, z)
パラメータについて数値の積分を求める	sympy.integrate(e, z)
数式の数値を求める	float(e)
数式の数値	float(e)
数式の数値を計算する	float(e)
数式を数値計算する	float(e)
数式を数値に変換する	float(e)
数値を浮動小数点数に変換する	float(e)
数式の平方根を求める	sympy.sqrt(e)
バイトオーダを知る	sys.byteorder
バイトオーダを確認する	sys.byteorder
エンコーディング	sys.getdefaultencoding()
エンコーディングを知る	sys.getdefaultencoding()
オブジェクトの参照カウント	sys.getrefcount(obj)
オブジェクトのバイトサイズ	sys.getsizeof(obj)
オブジェクトのバイト長を調べる	sys.getsizeof(obj)
現在の再帰の最大回数	sys.getrecursionlimit()
現在の再帰の上限	sys.getrecursionlimit()
何回まで再帰ができるかを	sys.getrecursionlimit()
何回まで再帰ができるかを確認する	sys.getrecursionlimit()
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
再帰の上限を上げる	sys.setrecursionlimit(1000000)
再帰の上限を増やす	sys.setrecursionlimit(1000000)
文字列を隔離する	sys.intern(s)
プラットフォームの符号付き整数の最大値	sys.maxsize
プラットフォームの整数の最大値	sys.maxsize
プラットフォームのコードポイントの最大値	sys.maxunicode
コードポイントの最大値を確認する	sys.maxunicode
プラットホームの名前	sys.platform
OSの名前を知る	sys.platform
プラットホームの名前を知る	sys.platform
プラットホームがMacOSか調べる	sys.platform.startswith('darwin')
プラットホームがMacOS	sys.platform.startswith('darwin')
実行環境はMacOS	sys.platform.startswith('darwin')
プラットホームがLinuxか調べる	sys.platform.startswith('linux')
実行環境がLinux	sys.platform.startswith('linux')
プラットホームがWindowsか調べる	sys.platform.startswith('win32')
プラットホームがWindowsかどうか調べる	sys.platform.startswith('win32')
プラットホームはウィンドウズ	sys.platform.startswith('win32')
OSがウィンドウズか調べる	sys.platform.startswith('win32')
コマンドライン引数	sys.argv
スクリプトの名前	sys.argv[0]
スクリプトの名前を調べる	sys.argv[0]
スクリプト名	sys.argv[0]
プログラムのファイルの名前	sys.argv[0]
スクリプトのファイルの名前	sys.argv[0]
最初のコマンド引数	sys.argv[1]
コマンドの第一引数を知る	sys.argv[1]
コマンドの第一引数を確める	sys.argv[1]
第一引数で指定されたファイルの名前	sys.argv[1]
第二コマンド引数	sys.argv[1]
第２コマンド引数	sys.argv[1]
コマンドの第二引数を知る	sys.argv[1]
第二引数で指定されたファイルの名前	sys.argv[1]
第２引数のファイルの名前	sys.argv[1]
第二引数で指定されたファイル名	sys.argv[1]
コマンド引数の一覧	sys.argv[1:]
コマンド引数を列挙する	sys.argv[1:]
コマンドラインフラグの状態	sys.flags
コマンドフラグの状態	sys.flags
モジュールを検索するパス	sys.path
Pythonパスの一覧	sys.path
モジュールを検索するパスにディレクトリを追加する	sys.path.append(dir)
をモジュールを検索するパスに追加する	sys.path.append(dir)
モジュールを検索するパスにを追加する	sys.path.append(dir)
Pythonパスにディレクトリを追加する	sys.path.append(dir)
ディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.path.dirname(__file__), dir))
ロードされたモジュールの一覧	sys.modules
ロードされたモジュールを列挙する	sys.modules
ロードしたモジュールの一覧	sys.modules
現在のモジュール	sys.modules[__name__]
自分自身をモジュールとして	sys.modules[__name__]
自分自身をモジュールとしてを得る	sys.modules[__name__]
現在処理中の例外を情報	sys.exc_info()
現在実行中の例外を情報	sys.exc_info()
実行時の標準出力の出力先がターミナルか調べる	sys.stdout.isatty()
標準出力の出力先がターミナルかどうか調べる	sys.stdout.isatty()
実行時の標準出力の出力先がターミナルかどうか調べる	sys.stdout.isatty()
実行時の標準出力の出力先がターミナルか調べる	os.isatty(sys.stdin.fileno())
実行時の標準出力の出力先がターミナル	os.isatty(sys.stdin.fileno())
実行時に標準出力がパイプか調べる	not sys.stdout.isatty()
実行時に標準出力がパイプ	not sys.stdout.isatty()
Pythonインタプリタの実行ファイルの絶対パス	sys.executable
Pythonインタプリタの実行ファイルの絶対パスを知る	sys.executable
標準入力を得る	sys.stdin
標準入力を	sys.stdin
標準入力を使う	sys.stdin
オプションで、出力先を標準出力に設定する	file = sys.stdout
オプションで、出力先を標準出力に指定する	file = sys.stdout
オプションで、標準出力に出力する	file = sys.stdout
オプションで、標準出力を使う	file = sys.stdout
オプションで、標準出力を用いる	file = sys.stdout
オプションで、標準出力を出力にする	file = sys.stdout
オプションで、出力先を標準エラーに設定する	file = sys.stderr
オプションで、出力先を標準エラーに指定する	file = sys.stderr
オプションで、出力先を標準エラーに変更する	file = sys.stderr
オプションで、標準エラーに出力する	file = sys.stderr
オプションで、標準エラーを使う	file = sys.stderr
オプションで、標準エラーを使用する	file = sys.stderr
オプションで、標準エラーを出力にする	file = sys.stderr
オプションで標準エラーを出力にする	file = sys.stderr
オプションで、出力先をファイルに設定する	file = sys.open(filename, 'w')
オプションで出力先をファイルに設定する	file = sys.open(filename, 'w')
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
オプションで、ファイルを使う	file = sys.open(filename, 'w')
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
標準出力を得る	sys.stdout
標準出力	sys.stdout
標準出力を使う	sys.stdout
標準エラーを得る	sys.stderr
標準エラーを使う	sys.stderr
標準エラー	sys.stderr
エラーを出力する	sys.stderr
標準入力から1文字だけ読む	sys.stdin.read(1)
標準入力から1文字読む	sys.stdin.read(1)
標準入力から1行だけ読む	sys.stdin.readline()
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
標準入力から1行分改行なしで読み込む	sys.stdin.readline().rstrip()
1行だけ改行を取り除いて標準入力から読み込む	sys.stdin.readline().rstrip()
標準入力から1行分改行なしで読む	sys.stdin.readline().rstrip()
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
標準出力のバッファをフラッシュする	sys.stdout.flush()
プログラムの実行を強制的に終了する	sys.exit()
プログラムの実行を即座に終了する	sys.exit()
プログラムの実行をここで終了する	sys.exit()
プログラムの実行を正しく終了する	sys.exit(0)
実行を正常に終了する	sys.exit(0)
プログラムの実行を異常終了する	sys.exit(1)
プログラムの実行をエラーとして終了する	sys.exit(1)
