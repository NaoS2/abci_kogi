ゼロ埋めされた整数型の配列	np.zeros(要素数, dtype=np.int)
ヒストグラムの色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
データフレームの列と列の相関行列をヒートマップで描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列がxより小さい行を抽出する	df[df[column] < x]
イテラブルを文字列リストに変換して、カンマで連結する	','.join(map(str, iterable))
横棒グラフを白色で描画する	plt.barh(データ列x, データ列y, color='white')
横棒グラフをディムグレー色で描画する	plt.barh(データ列x, データ列y, color='dimgray')
集合から任意の要素を取り出す	aSet.pop()
リストの要素をスワップする	aList[i], aList[j] = aList[j], aList[i]
option: マーカーの色をデピンクにする	markerfacecolor = 'deeppink'
散布図をロージーブラウン色で描画する	plt.scatter(データ列x, データ列y, color='rosybrown')
ファイルから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
棒グラフの色をミディアムブルーにする	plt.bar(データ列x, データ列y, color='mediumblue')
ファイルを追加モードでオープンして]、fとする	f = open(filepath, mode='a')
折れ線グラフをピンク色で描画する	plt.plot(データ列x, データ列y, color='pink')
横棒グラフをライトグリーン色で描画する	plt.barh(データ列x, データ列y, color='lightgreen')
整数nを半分にする	n //= 2
n割るmの有理数表現	fractions.Fraction(numerator=n, denominator=m)
データフレームの平均と信頼区間を描画する	sns.pairplot(hue='カテゴリ列', data=df)
オーキッド色のヒストグラムを描画する	plt.hist(データ列, color='orchid')
グラフの描画で濃くカラーパレットを使う	sns.set(pallete='deep')
棒グラフをオーキッド色で描画する	plt.bar(データ列x, データ列y, color='orchid')
リッジ回帰分析の準備をする	model = sklearn.linear_model.Ridge(alpha=正則化項)
ヒストグラムの色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
ダークグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkgreen')
year年day月を日付時刻に変換する	datetime.datetime(year=year, month=month, day=1)
散布図に黒い下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v', c='k')
折れ線グラフをライトグリーン色で描画する	plt.plot(データ列x, データ列y, color='lightgreen')
フローラルホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='floralwhite')
データフレームのリストカラムの中にある文字列と文字列の合計を数える	df[aList].isin([value, value2]).sum()
xを整数に変換する	int(x)
文字列中のタブ文字を空白に置き換える	s.expandtabs(tabsize=n)
棒グラフをディープスカイブルー色で描画する	plt.bar(データ列x, データ列y, color='deepskyblue')
データフレームを各列毎にグループ化して、列の分散を求める	df.groupby(column)[column2].var()
パープル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='purple')
棒グラフを赤くする	plt.bar(データ列x, データ列y, color='r')
ヒストグラムを紺碧色で描画する	plt.hist(データ列, color='azure')
シーグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='seagreen')
配列の最小値	np.min(aArray)
折れ線グラフを赤い一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='r')
ダークオーキッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkorchid')
二進文字列を整数に変換する	int(s, 2)
リストとリストについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', c='k')
日付時刻データと日付時刻データの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
アンティークホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='antiquewhite')
タプルのn番目の	aTuple[n]
散布図の色をサドルブラウンにする	plt.scatter(データ列x, データ列y, color='saddlebrown')
ライトグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightseagreen')
ヒストグラムをダークオレンジ色で描画する	plt.hist(データ列, color='darkorange')
散布図の色を赤にする	plt.scatter(データ列x, データ列y, color='red')
横棒グラフを赤色で描画する	plt.barh(データ列x, データ列y, color='red')
option: ミディアムスレートブルー色を使う	color = 'mediumslateblue'
スチールブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='steelblue')
ファイルから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
折れ線グラフの四角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='k')
折れ線グラフを赤い点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='r')
文字列の開始位置から部分文字列を探す	s.find(sub, start)
散布図の色をゴールドにする	plt.scatter(データ列x, データ列y, color='gold')
nが5で割り切れるか調べる	n % 5 == 0
option: ダイアモンドマーカーを使う	marker = 'D'
データフレームの列がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
option: マーカーの色をベージュにする	markerfacecolor = 'beige'
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgrey')
ミディアムアクアマリン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumaquamarine')
横棒グラフを小麦色色で描画する	plt.barh(データ列x, データ列y, color='wheat')
データフレームを列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
折れ線グラフの下三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='b')
データフレームのリストカラムの値が欠損値か調べる	df[aList].isna()
折れ線グラフに黒いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='k')
四角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='s')
データフレームの先頭n行	df.head(n)
ヒストグラムのビン数を設定する	plt.hist(データ列, bins=区関数)
棒グラフの色をレベッカパープルにする	plt.bar(データ列x, データ列y, color='rebeccapurple')
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()
左三角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='<')
データ列の推移を折れ線グラフにする	plt.plot(range(len(データ列)), データ列)
日付データにn秒分、加算する	aDate + datetime.timedelta(seconds=n)
横軸の目盛を非表示にする	plt.xticks([])
半透明の点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', alpha=0.5)
リストとリストについての散布図にバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x')
ファイルを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
カーキ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='khaki')
option: ディープスカイブルー色を使う	color = 'deepskyblue'
文字列の無限イテラブル	itertools.repeat(element)
耐火レンガ色のヒストグラムを描画する	plt.hist(データ列, color='firebrick')
文字列をシアンでプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
クラスのサブクラスか調べる	issubclass(サブクラス, クラス)
データ列の日	ds.dt.day
ダークカーキ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkkhaki')
データフレームのリストカラムの標本標準偏差	df[aList].std()
棒グラフの色をライトゴールドロディイエローにする	plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')
データフレームをグループ化し、それぞれの列に対し標準偏差を求める	df.groupby(column)[column2].std()
横棒グラフの色をグレーにする	plt.barh(データ列x, データ列y, color='grey')
option: バリーウッド色を使う	color = 'burlywood'
縦軸の目盛を整数のみにする	plt.yticks(np.arange(最小値, 最大値, 間隔))
データフレームのカラムの値が欠損値か調べる	df[col].isna()
データフレームを複数の列によってソートして、更新する	df.sort_values(by=column, inplace=True)
リストのn番目以降の部分を取り出す	aList[n:]
折れ線グラフをコーンフラワーブルー色で描画する	plt.plot(データ列x, データ列y, color='cornflowerblue')
ライトシアン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightcyan')
グラフの用途を論文に設定する	sns.set(context='paper')
日付データにn週間分、加算する	aDate + datetime.timedelta(weeks=n)
Pandasで、フォーマットfmtで文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
ヒストグラムをダークオリーブグリーン色で描画する	plt.hist(データ列, color='darkolivegreen')
ダークオーキッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkorchid')
データフレームのインデックスがnの行を抽出する	df.loc[n]
散布図をスカイブルー色で描画する	plt.scatter(データ列x, データ列y, color='skyblue')
nとn2が等しいか調べる	n == n2
サドルブラウン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='saddlebrown')
ダークカーキ色のヒストグラムを描画する	plt.hist(データ列, color='darkkhaki')
ヒストグラムをダークグレー色で描画する	plt.hist(データ列, color='darkgrey')
Pandasで、フォーマットfmtでデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
オーキッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='orchid')
option: プラム色を使う	color = 'plum'
折れ線グラフの色をゴールドに設定する	plt.plot(データ列x, データ列y, color='gold')
日付データをn分前に戻す	aDate - datetime.timedelta(minutes=n)
折れ線グラフをインディゴ色で描画する	plt.plot(データ列x, データ列y, color='indigo')
集合にイテラブルの要素を全て追加する	aSet.update(iterable)
散布図の色をアンティークホワイトにする	plt.scatter(データ列x, データ列y, color='antiquewhite')
折れ線グラフをペルー色で描画する	plt.plot(データ列x, データ列y, color='peru')
配列と同じ大きさの空配列を作る	np.empty_like(aArray)
0からN未満までの配列	np.arange(N)
データフレームを列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
青い破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='b')
ヒストグラムの線の種類を破線に設定する	plt.hist(データ列, linestyle='dashed')
year年month月day日hour時minute分の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
データフレームをJSONLファイルに保存する	df.to_excel(filename)
棒グラフをライトグレー色で描画する	plt.bar(データ列x, データ列y, color='lightgrey')
データフレームのpercent分位数	df.quantile(percent/100)
スラグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='slategrey')
折れ線グラフの色をローングリーンに設定する	plt.plot(データ列x, データ列y, color='lawngreen')
横棒グラフを青色で描画する	plt.barh(データ列x, データ列y, color='blue')
aListn番目から要素をポップする	aList.pop(n)
n個の整数列	list(range(n))
数式を変数についてn階微分する	sympy.diff(e, z, n)
散布図のバツマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='r')
配列の内積	np.dot(aArray, aArray2)
option: オレンジレッド色を使う	color = 'orangered'
イテラブルをカウンタに変換する	collections.Counter(iterable)
折れ線グラフをリネン色で描画する	plt.plot(データ列x, データ列y, color='linen')
散布図の色をミディアムパープルにする	plt.scatter(データ列x, データ列y, color='mediumpurple')
辞書のキーを要素に設定する	aDict[key] = element
茶色色の線グラフを描画する	plt.plot(データ列x, データ列y, color='brown')
文字列の変数名を数式に変換する	sympy.Symbol(s)
実数の二進対数	math.log2(x)
黒いバツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x', c='k')
データ列の値が正規分布にしたがって発生する確率を求める	scipy.stats.norm.pdf(データ列, loc=平均値, scale=標準偏差)
ヒストグラムの色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
リストとリストについての散布図に黒い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', c='k')
エラーを無視して文字列をバイト列に変換する	s.encode(errors='ignore')
Pythonインタプリタの実行ファイルの絶対パス	sys.executable
option: ダークサーモン色を使う	color = 'darksalmon'
nからn2までのstepごとによるスライス	slice(n, n2, step)
データフレームを丸めて、整数型にする	df.round().astype(int)
ホワイトスモーク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='whitesmoke')
ヒストグラムをダークサーモン色で描画する	plt.hist(データ列, color='darksalmon')
横棒グラフの色をオレンジにする	plt.barh(データ列x, データ列y, color='orange')
散布図に赤い三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^', c='r')
コマンドの第二引数を知る	sys.argv[1]
option: ミディアムアクアマリン色を使う	color = 'mediumaquamarine'
オリーブ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='olive')
散布図をライトグリーン色で描画する	plt.scatter(データ列x, データ列y, color='lightgreen')
オリベドラブ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='olivedrab')
横棒グラフをホットピンク色で描画する	plt.barh(データ列x, データ列y, color='hotpink')
データフレームを1000の位で丸めて、整数型にする	df.round(-3).astype(int)
横棒グラフの色をダークターコイズにする	plt.barh(データ列x, データ列y, color='darkturquoise')
実数の双曲線正弦	math.sinh(x)
option: グラフの色をサドルブラウンに設定する	color = 'saddlebrown'
データフレームの欠損値を最大値で埋める	df.fillna(df.max())
横棒グラフの色をアリスブルーにする	plt.barh(データ列x, データ列y, color='aliceblue')
棒グラフの色をインディアンレッドにする	plt.bar(データ列x, データ列y, color='indianred')
データフレームのカラムの時	df[col].dt.hour
ライトグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightgreen')
プログラムの実行を強制的に終了する	sys.exit()
折れ線グラフの色をカデットブルーに設定する	plt.plot(データ列x, データ列y, color='cadetblue')
現在のミリ秒	int(time.time() * 1000)
正規化されたヒストグラムを描画する	plt.hist(データ列, density=True)
棒グラフの色をダークグリーンにする	plt.bar(データ列x, データ列y, color='darkgreen')
日付時刻データが何年か知る	aDatetime.year
カーキ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='khaki')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列x, データ列y, color='lightgrey')
ラベンダー色のヒストグラムを描画する	plt.hist(データ列, color='lavender')
散布図の色をシーグリーンにする	plt.scatter(データ列x, データ列y, color='seagreen')
データ列の第一四分位数	ds.quantile(0.25)
横棒グラフをダークオーキッド色で描画する	plt.barh(データ列x, データ列y, color='darkorchid')
紺色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkblue')
イテラブルを文字列リストに変換して、'改行で連結する	'\n'.join(map(str, iterable))
データフレームの列の名前一覧で指定された列を削除する	df.drop(columns, axis=1)
option: マーカーの色を青にする	markerfacecolor = 'blue'
横棒グラフをシャルトリューズ色で描画する	plt.barh(データ列x, データ列y, color='chartreuse')
リストとリストについて散布図を描画して、マーカーをバツに設定する	plt.plot(データ列x, データ列y, marker='x')
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
ヒストグラムの線の種類を一点鎖線に設定する	plt.hist(データ列, linestyle='dashbot')
折れ線グラフをオリベドラブ色で描画する	plt.plot(データ列x, データ列y, color='olivedrab')
ポイント印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='.')
日付時刻データのタイムゾーン	aDatetime.timetz()
横棒グラフをゲインズボロ色で描画する	plt.barh(データ列x, データ列y, color='gainsboro')
ヒストグラムをペルー色で描画する	plt.hist(データ列, color='peru')
箱ひげ図にラベルを付ける	plt.boxplot([データ列, データ列], labels=['A', 'B'])
散布図の色をスラグレーにする	plt.scatter(データ列x, データ列y, color='slategrey')
グラフにy=0の破線を付ける	plt.axhline(y=0, linestyle='dashed')
グラフのx軸とy軸の比率を等しくする	plt.axis('equals')
多次元データを多次元尺度構成法でパステル調に次元に次元削減する	sklearn.manifold.MSD(n_components=N).fit_transform(多次元データ)
year年month月day日の日付	datetime.date(year=year, month=month, day=day)
棒グラフをダーク・スラテグレー色で描画する	plt.bar(データ列x, データ列y, color='darkslategrey')
集合を空にする	aSet.clear()
折れ線グラフの色をダークスレートブルーに設定する	plt.plot(データ列x, データ列y, color='darkslateblue')
実数を二乗する	x ** 2
エクセルファイルファイルから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
オレンジレッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='orangered')
ヒストグラムの色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をオリーブに設定する	plt.hist(データ列, color='olive')
リストの要素を昇順にソートする	sorted(aList, reverse=True)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
棒グラフの色をホワイトスモークにする	plt.bar(データ列x, データ列y, color='whitesmoke')
データフレームの行を条件でフィルタするには	df[(df[column] == x) & (df[column2] == x2)]
折れ線グラフを色付きの実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='#800080')
横棒グラフをターコイズ色で描画する	plt.barh(データ列x, データ列y, color='turquoise')
データフレームのカラムを100の位で丸めて、整数型にする	df[col].round(-2).astype(int)
折れ線グラフのマーカーを四角にする	plt.plot(データ列x, データ列y, marker='s')
ロバストな線形クラス分類の準備をする	model = sklearn.linear_model.HuberClassifier()
赤い大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X', c='r')
ヒストグラムをディムグレー色で描画する	plt.hist(データ列, color='dimgrey')
リストをイミュータブルにする	tuple(aList)
行列の行列式	np.linalg.det(aArray)
方程式の解	sympy.solve(e)
リストに文字列を追加する	aList.append(element)
オレンジレッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='orangered')
ファイル名がTSVファイルか調べる	filename.endswith('.tsv')
グレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='grey')
xの小数点以下'2'桁までをプリントする	print(':.2f'.format(x))
青い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='b')
棒グラフの色をコーンズシルクにする	plt.bar(データ列x, データ列y, color='cornsilk')
データフレームのカラムの歪度	df[col].kurt()
横棒グラフをベージュ色で描画する	plt.barh(データ列x, データ列y, color='beige')
option: マーカーの色をパールバイオレットレッドにする	markerfacecolor = 'palevioletred'
折れ線グラフに黒い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='k')
文字列をISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
折れ線グラフにポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.')
サイコロ	random.randint(1, 6)
option: ライトゴールドロディイエロー色を使う	color = 'lightgoldenrodyellow'
散布図をグリーン色で描画する	plt.scatter(データ列x, データ列y, color='green')
辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False)
棒グラフをグリーン色で描画する	plt.bar(データ列x, データ列y, color='green')
棒グラフをシエナ色で描画する	plt.bar(データ列x, データ列y, color='sienna')
折れ線グラフをダークオリーブグリーン色で描画する	plt.plot(データ列x, データ列y, color='darkolivegreen')
データフレームをJSONLファイルにヘッダを付けずに保存する	df.to_csv(filename, header=None)
散布図の丸マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='o', markeredgewidth=2.5)
大バツ印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='X')
日付時刻データが何曜日か知る	aDatetime.weekday()
データフレームのカラムの中に文字列があるか調べる	df[col].isin([value])
辞書の値を列挙する	aDict.values()
リストが空でないか調べる	len(aList) != 0
option: サンディーブラウン色を使う	color = 'sandybrown'
折れ線グラフをロイヤルブルー色で描画する	plt.plot(データ列x, データ列y, color='royalblue')
棒グラフをハニーデュー色で描画する	plt.bar(データ列x, データ列y, color='honeydew')
ドジャーブルー色のヒストグラムを描画する	plt.hist(データ列, color='dodgerblue')
バイオリン図を描画する	sns.violinplot(x='カテゴリ列', y='列', data=df)
option: マーカーの色をダークマゼンタにする	markerfacecolor = 'darkmagenta'
ダークオレンジ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkorange')
折れ線グラフをミディアムバイオレットレッド色で描画する	plt.plot(データ列x, データ列y, color='mediumvioletred')
棒グラフをダークシアグリーン色で描画する	plt.bar(データ列x, データ列y, color='darkseagreen')
赤いポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.', c='r')
貝殻色の散布図を描画する	plt.scatter(データ列x, データ列y, color='seashell')
データフレームを列でグループ化して、列の要約統計量を求める	df.groupby(column).describe()[column2]
連立方程式の解を求める	sympy.solve([e, e2])
アクアマリン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='aquamarine')
散布図の色をミッドナイトブルーにする	plt.scatter(データ列x, データ列y, color='midnightblue')
折れ線グラフの三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='r')
ヒストグラムの色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
スノー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='snow')
クラス分類の再現率を求める	sklearn.metrics.recall_score(正解データ列, 予測データ列)
option: セパレータを文字列にする	sep = s
ヒストグラムの色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
レベッカパープル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='rebeccapurple')
イテラブルにイテラブルを続けたイテラブル	itertools.chain(iterable, iterable2)
データ列の年	ds.dt.year
リストとリストについて散布図を描画して、マーカーを星に設定する	plt.plot(データ列x, データ列y, marker='*')
ヒストグラムを耐火レンガ色で描画する	plt.hist(データ列, color='firebrick')
イテラブルとイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
文字列の開始位置以降に部分文字列が含まれるか調べる	s.find(sub, start) != -1
折れ線グラフをダーク・スラテグレー色で描画する	plt.plot(データ列x, データ列y, color='darkslategrey')
辞書をコピーする	aDict.copy()
ライトグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightgrey')
option: 貝殻色を使う	color = 'seashell'
ガウス過程で回帰分析を行う	model = sklearn.gaussian_process.GaussianProcessRegressor()
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
標準出力を使う	sys.stdout
乱数の行列	np.random.random((行数, 列数))
グリッド線を赤くする	plt.grid(color='r')
ダークサーモン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darksalmon')
option: 改行しない	end = ''
ヒストグラムを白くする	plt.hist(データ列, color='w')
折れ線グラフの色をナバホホワイトに設定する	plt.plot(データ列x, データ列y, color='navajowhite')
データフレームを列によってグループ化して、それぞれのグループごとの合計を求める	df.groupby(column).sum()
データフレームの列がリストに含まれる行を抽出する	df[df[column].isin(aList)]
グリーンイエロー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='greenyellow')
スプリンググリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='springgreen')
グラフの凡例を表示する	plt.legend()
棒グラフをオレンジレッド色で描画する	plt.bar(データ列x, データ列y, color='orangered')
シエナ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='sienna')
データフレームを列によってソートする	df.sort_values(by=column)
棒グラフを茶色色で描画する	plt.bar(データ列x, データ列y, color='brown')
ヒストグラムの色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
棒グラフをフクシア色で描画する	plt.bar(データ列x, データ列y, color='fuchsia')
データフレームを複数の列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
本日の日付時刻	datetime.datetime.today()
棒グラフの色をネイビーにする	plt.bar(データ列x, データ列y, color='navy')
棒グラフをディムグレー色で描画する	plt.bar(データ列x, データ列y, color='dimgrey')
データフレームの各次元の大きさを見る	df.shape
ヒストグラムの色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.')
option: フローラルホワイト色を使う	color = 'floralwhite'
ヒストグラムを小麦色色で描画する	plt.hist(データ列, color='wheat')
散布図の色をターコイズにする	plt.scatter(データ列x, データ列y, color='turquoise')
option: グラフの色をシアンに設定する	color = 'cyan'
二つの浮動小数点数が十分に近いか調べる	math.isclose(x, x2)
データ列のノルムを揃える	"sklearn.preprocessing.Normalizer(norm=""l2"").fit_transform(データ列)"
ゼロ埋めされた８ビット整数型の配列	np.zeros(要素数, dtype=np.int8)
データ列の欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
データフレームのカラムのpercent分位数	df[col].quantile(percent/100)
データフレームのヒストグラムを横に並べて、可視化する	sns.displot(df, x='列名', col='カテゴリ名')
日付時刻データをn分前に戻す	aDatetime - datetime.timedelta(minutes=n)
リストとリストについて散布図を描画して、左三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='<', c=rgb)
文字列の両端から部分文字列を取り除く	s.strip(sub)
ナバホホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='navajowhite')
option: どのカラムもインデックスに設定しない	index_col = None
標準正規分布の確率密度関数	scipy.stats.norm.pdf(x)
option: グラフの色をオールドレースに設定する	color = 'oldlace'
折れ線グラフをラベンダー色で描画する	plt.plot(データ列x, データ列y, color='lavender')
ミディアムブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumblue')
オリーブ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='olive')
option: バツマーカーを描画する	marker = 'x'
xの印字可能な文字列	ascii(x)
散布図をミディアムスレートブルー色で描画する	plt.scatter(データ列x, データ列y, color='mediumslateblue')
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=column)
アイボリー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='ivory')
日付時刻データが金曜日か調べる	aDatetime.weekday() == 4
散布図の色をパレットトルコイズにする	plt.scatter(データ列x, データ列y, color='paleturquoise')
折れ線グラフをミディアムブルー色で描画する	plt.plot(データ列x, データ列y, color='mediumblue')
ヒストグラムの色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
部分的最小二乗回帰モデルを作る	model = sklearn.cross_decomposition.PLSRegression(n_components=10)
横棒グラフの色をパールゴールデンロッドにする	plt.barh(データ列x, データ列y, color='palegoldenrod')
実数の双曲線正接の逆数	math.atanh(x)
xの小数点以下'4'桁までの文字列に変換する	':.4f'.format(x)
本日が何年か知る	datetime.datetime.today().year
文字列をUTF8でバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
イテラブルを累加する	itertools.accumulate(iterable)
0からnまでの整数列	list(range(n+1))
整数nを八進文字列に変換する	oct(n)[2:]
文字列中の部分文字列を文字列に置き換える	s.replace(sub, newsub)
シーグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='seagreen')
リストをビン分割する	pd.cut(aList, aList)
nからn2までのスライス	slice(n, n2)
散布図を紺碧色で描画する	plt.scatter(データ列x, データ列y, color='azure')
ファイルを読み込みできるようにオープンする]	open(filepath, mode='r')
データフレームのポイントプロットを描画する	sns.pairplot(hue='カテゴリ列', data=df)
棒グラフをシアン色で描画する	plt.bar(データ列x, データ列y, color='cyan')
ヒストグラムをラベンダー色で描画する	plt.hist(データ列, color='lavender')
nの無限数列	itertools.repeat(n)
折れ線グラフの色をライトスチールブルーに設定する	plt.plot(データ列x, データ列y, color='lightsteelblue')
日付時刻データが日付時刻データより前か調べる	aDatetime < aDatetime2
ダークオーキッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkorchid')
ゴーストホワイト色のヒストグラムを描画する	plt.hist(データ列, color='ghostwhite')
二つのデータフレームを縦方向に連結する	pd.concat([df, df2])
散布図をライトブルー色で描画する	plt.scatter(データ列x, データ列y, color='lightblue')
リストの重複を取り除く	sorted(set(aList), key=aList.index)
散布図の色をイエローグリーンにする	plt.scatter(データ列x, データ列y, color='yellowgreen')
ヒストグラムの色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
本日の月数	datetime.datetime.today().month
データ列の中に文字列と文字列があるか調べる	ds.isin([value, value2])
データを外れ値に頑健な標準化を行う	sklearn.preprocessing.RobustScaler().fit_transform(データ)
折れ線グラフの色をハニーデューに設定する	plt.plot(データ列x, データ列y, color='honeydew')
データフレームの列が文字列で始まらない行を抽出する	df[not df[column].str.startswith(s)]
折れ線グラフの色をミントクリームに設定する	plt.plot(データ列x, データ列y, color='mintcream')
集合の濃度	len(aSet)
横棒グラフをブラック色で描画する	plt.barh(データ列x, データ列y, color='black')
ヒストグラムでデータ列を可視化する	plt.hist(データ列)
辞書の項目数	len(aDict)
散布図に黒いダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D', c='k')
マルーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='maroon')
横棒グラフをディープスカイブルー色で描画する	plt.barh(データ列x, データ列y, color='deepskyblue')
Pandasで、日付データのデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
実行時の標準出力の出力先がターミナルか調べる	os.isatty(sys.stdin.fileno())
ペールグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='palegreen')
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
データフレームを'A'列によってソートして、更新する	df.sort_values(by='A', inplace=True)
散布図の四角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='k')
散布図の色を小麦色にする	plt.scatter(データ列x, データ列y, color='wheat')
option: グラフの色をアリスブルーに設定する	color = 'aliceblue'
TSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
散布図に赤い下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v', c='r')
棒グラフの色をカーキにする	plt.bar(データ列x, データ列y, color='khaki')
データフレームの各カテゴリごとの散布図に回帰直線を加える	sns.regplot(x='列名', y='列名', hue='カテゴリ列', data=df)
データフレームのカラムのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
散布図をバリーウッド色で描画する	plt.scatter(データ列x, データ列y, color='burlywood')
青い散布図を描画する	plt.scatter(データ列x, データ列y, color='b')
文字列の先頭で正規表現にASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
オブジェクトは論理値クラスか調べる	isinstance(obj, bool)
散布図の左三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='<', markersize=2.0)
日付時刻データをn時間前に戻す	aDatetime - datetime.timedelta(hours=n)
文字列の開始位置からと終了位置までの間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
実数の余弦の逆数	math.acos(x)
option: マーカーの色をダークカーキにする	markerfacecolor = 'darkkhaki'
option: 星マーカーを使う	marker = '*'
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(データ列x, データ列y, color='cornflowerblue')
ゲインズボロ色のヒストグラムを描画する	plt.hist(データ列, color='gainsboro')
散布図をオレンジ色で描画する	plt.scatter(データ列x, データ列y, color='orange')
option: グラフの色をミディアムターコイズに設定する	color = 'mediumturquoise'
文字列をカンマで区切って、列挙する	s.split(',')
データフレームのリストカラムの空文字をドロップする	df[aList].replace('', np.nan).dropna()
option: マーカーの色をオールドレースにする	markerfacecolor = 'oldlace'
Pandasで、フォーマットfmtでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
シアン色のヒストグラムを描画する	plt.hist(データ列, color='cyan')
折れ線グラフに青いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='b')
option: マーカーの色をミディアムアクアマリンにする	markerfacecolor = 'mediumaquamarine'
棒グラフの色をリネンにする	plt.bar(データ列x, データ列y, color='linen')
散布図をピンク色で描画する	plt.scatter(データ列x, データ列y, color='pink')
option: グラフの色をマルーンに設定する	color = 'maroon'
option: マーカーの色をプラムにする	markerfacecolor = 'plum'
option: マーカーの色をオレンジにする	markerfacecolor = 'orange'
ファイルからディレクトリ名を使う	os.path.dirname(filepath)
折れ線グラフの丸マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='o', markeredgewidth=2.5)
ピンク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='pink')
半透明の破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed', alpha=0.5)
散布図の色をオリベドラブにする	plt.scatter(データ列x, データ列y, color='olivedrab')
option: マーカーの色をダーク・スラテグレーにする	markerfacecolor = 'darkslategrey'
棒グラフの色をアンティークホワイトにする	plt.bar(データ列x, データ列y, color='antiquewhite')
オリベドラブ色のヒストグラムを描画する	plt.hist(データ列, color='olivedrab')
文字列を改行で分割し、文字列リストに変換する	s.splitlines()
集合から全ての要素を取り除く	aSet.clear()
説明変数と目的変数でモデルを学習する	model.fit(説明変数, 目的変数)
整数nの八進表現	oct(n)
ライトスチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightsteelblue')
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
横棒グラフをカーキ色で描画する	plt.barh(データ列x, データ列y, color='khaki')
整数nを八進表現に変換する	oct(n)
破線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='dashed')
option: マルーン色を使う	color = 'maroon'
折れ線グラフの四角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='s', markeredgewidth=2.5)
標準出力を得る	sys.stdout
ペルー色のヒストグラムを描画する	plt.hist(データ列, color='peru')
折れ線グラフの色をデピンクに設定する	plt.plot(データ列x, データ列y, color='deeppink')
折れ線グラフをインディアンレッド色で描画する	plt.plot(データ列x, データ列y, color='indianred')
option: グラフの色をシャルトリューズに設定する	color = 'chartreuse'
option: 配列のデータ型を指定する	dtype = np.int16
横棒グラフをパールゴールデンロッド色で描画する	plt.barh(データ列x, データ列y, color='palegoldenrod')
星印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='*')
グラフにy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategray')
青いヒストグラムを描画する	plt.hist(データ列, color='b')
円周率	math.pi
ライトイエロー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightyellow')
折れ線グラフをブランチドアーモンド色で描画する	plt.plot(データ列x, データ列y, color='blanchedalmond')
オリベドラブ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='olivedrab')
ラベンダー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lavender')
デピンク色のヒストグラムを描画する	plt.hist(データ列, color='deeppink')
日付時刻データををn時間後に進める	aDatetime + datetime.timedelta(hours=n)
ブランチドアーモンド色のヒストグラムを描画する	plt.hist(データ列, color='blanchedalmond')
option: マーカーの色をシアンにする	markerfacecolor = 'cyan'
インディアンレッド色のヒストグラムを描画する	plt.hist(データ列, color='indianred')
暗い赤色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkred')
辞書のキーとその値をペアとして取り出す	aDict.items()
散布図に赤い四角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='r')
nからn2の値を引いてnに代入する	n -= n2
折れ線グラフの色をアイボリーに設定する	plt.plot(データ列x, データ列y, color='ivory')
日付時刻データををn分後に進める	aDatetime + datetime.timedelta(minutes=n)
折れ線グラフの色をロージーブラウンに設定する	plt.plot(データ列x, データ列y, color='rosybrown')
散布図をミディアムオーキッド色で描画する	plt.scatter(データ列x, データ列y, color='mediumorchid')
折れ線グラフをイエローグリーン色で描画する	plt.plot(データ列x, データ列y, color='yellowgreen')
折れ線グラフをダークカーキ色で描画する	plt.plot(データ列x, データ列y, color='darkkhaki')
ヒストグラムの色をプラムに設定する	plt.hist(データ列, color='plum')
折れ線グラフの線の種類を点線に設定する	plt.plot(データ列x, データ列y, linestyle='dotted')
データフレームを二つの列によって昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
文字列中の部分文字列の出現をカウントする	s.count(sub)
散布図の四角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='#800080')
ヒストグラムを白色で描画する	plt.hist(データ列, color='white')
辞書に要素をキーとして加える	aDict[key] = element
ハニーデュー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='honeydew')
ヒストグラムをミディアムオーキッド色で描画する	plt.hist(データ列, color='mediumorchid')
散布図をグリーンイエロー色で描画する	plt.scatter(データ列x, データ列y, color='greenyellow')
ファイルを書き込みモードでオープンする]	open(filepath, mode='w')
ターコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='turquoise')
横棒グラフをダークグリーン色で描画する	plt.barh(データ列x, データ列y, color='darkgreen')
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
折れ線グラフのポイントマーカーを青くする	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='b')
フォレストグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='forestgreen')
ダークカーキ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkkhaki')
日付データの日数	aDate.day
データフレームの列に重複があれば、マスクする	df.duplicated(subset=column)
箱ひげ図を二つ並べて描画する	plt.boxplot([データ列, データ列])
データフレームを二つの列の値によってグループ化し、要約統計量を求める	df.groupby(['A', 'B']).describe()
option: グラフの色をライトゴールドロディイエローに設定する	color = 'lightgoldenrodyellow'
要素∈集合	element in aSet
option: 切片を算出しない	fit_intercept = False
行列の逆行列	np.linalg.inv(aArray)
両端キューの末尾にイテラブルの各要素を追加する	deq.extend(iterable)
データフレームの欠損値を直後の値で埋める	df.fillna(method='bfill')
option: ミントクリーム色を使う	color = 'mintcream'
折れ線グラフの左三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='b')
赤色の散布図を描画する	plt.scatter(データ列x, データ列y, color='red')
リストとリストについての散布図にrgbの大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', c=rgb)
折れ線グラフをピーチパフ色で描画する	plt.plot(データ列x, データ列y, color='peachpuff')
option: 追加モードに設定する	mode = 'a'
散布図の色をロイヤルブルーにする	plt.scatter(データ列x, データ列y, color='royalblue')
option: 整数型を使う	dtype = np.int
データフレームから列を一つ選択する	df[[column]]
日付時刻データからn分、減算する	aDatetime - datetime.timedelta(minutes=n)
xの小数点以下'1'桁までをプリントする	print(':.1f'.format(x))
キーが辞書上で定義済みか調べる	key in aDict
nから無限にカウントアップする	itertools.count(start=n)
データフレームをグループ化して、ヒストグラムで可視化する	sns.histplot(df, x='列名', hue='カテゴリ名')
ヒストグラムの色をブラックに設定する	plt.hist(データ列, color='black')
折れ線グラフの色をパープルに設定する	plt.plot(データ列x, データ列y, color='purple')
散布図をオレンジレッド色で描画する	plt.scatter(データ列x, データ列y, color='orangered')
ゲインズボロ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='gainsboro')
散布図の色をタンにする	plt.scatter(データ列x, データ列y, color='tan')
ライトブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightblue')
ヒストグラムをネイビー色で描画する	plt.hist(データ列, color='navy')
データフレームのカラムの中の欠損値の合計を数える	df[col].isna().sum()
ヒストグラムをスラグレー色で描画する	plt.hist(データ列, color='slategray')
散布図を黄色くする	plt.scatter(データ列x, データ列y, color='y')
ヒストグラムの色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
二つの文字列をカンマで区切ってプリントする	print(value, value2, sep=',')
折れ線グラフの色をスプリンググリーンに設定する	plt.plot(データ列x, データ列y, color='springgreen')
実部と虚部から複素数	complex(x, y)
折れ線グラフのバツマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='x', markeredgewidth=2.5)
折れ線グラフに青い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='b')
nが何桁か	len(str(n))
列をキーにして二つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
散布図の右三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='b')
nとn2の論理積	n & n2
nが5の倍数か調べる	n % 5 == 0
option: グラフの色をオレンジに設定する	color = 'orange'
文字列の開始位置以降に部分文字列が含まれないか調べる	s.find(sub, start) == -1
ドジャーブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='dodgerblue')
散布図をゴールデンロッド色で描画する	plt.scatter(データ列x, データ列y, color='goldenrod')
黒いポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.', c='k')
データ列が何年か見る	ds.dt.year
データフレームのカラムの曜日数	df[col].dt.dayofweek
クラス分類の適合率を求める	sklearn.metrics.precision_score(正解データ列, 予測データ列)
データフレームを各列毎にグループ化して、列の最小値を求める	df.groupby(column)[column2].min()
辞書からキーの値をエラーなく得る	aDict.get(key, None)
Pandasで、フォーマットでデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
nとn2の値を足してnに代入する	n += n2
ファイルの拡張子	os.path.splitext(filepath)[1].lstrip('.')
現在のモジュール	sys.modules[__name__]
散布図の色をオールドレースにする	plt.scatter(データ列x, データ列y, color='oldlace')
日付データが金曜日か調べる	aDate.weekday() == 4
棒グラフの色をスラグレーにする	plt.bar(データ列x, データ列y, color='slategrey')
横棒グラフの色をトマトにする	plt.barh(データ列x, データ列y, color='tomato')
折れ線グラフをゲインズボロ色で描画する	plt.plot(データ列x, データ列y, color='gainsboro')
nがn2で割り切れないか調べる	n % n2 != 0
棒グラフの色をバリーウッドにする	plt.bar(データ列x, データ列y, color='burlywood')
option: グラフの色をプラムに設定する	color = 'plum'
横棒グラフの色をオーキッドにする	plt.barh(データ列x, データ列y, color='orchid')
散布図を白色で描画する	plt.scatter(データ列x, データ列y, color='white')
散布図に黒い下三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='k')
散布図の色をオリーブにする	plt.scatter(データ列x, データ列y, color='olive')
グリッドの線の種類を破線に変更する	plt.grid(linestyle='dashed')
データフレームのカラムの曜日の名前	df[col].dt.weekday_name
十六進文字列を整数に変換する	int(s, 16)
データ列の中に文字列と文字列がいくつあるか数える	ds.isin([value, value2]).sum()
パールバイオレットレッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='palevioletred')
横棒グラフの色をシーグリーンにする	plt.barh(データ列x, データ列y, color='seagreen')
ヒストグラムを半透明にする	plt.hist(データ列x, alpha=0.5)
ファイルをバイナリできるようにオープンする]	open(filepath, mode='rb')
二次元リストを転置する	[list(x) for x in list(zip(*aList))]
散布図のマーカーの大きさを指定する	plt.scatter(データ列x, データ列y, s=n)
option: マーカーの色をアクアにする	markerfacecolor = 'aqua'
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
配列は何次元か調べる	aArray.ndim
折れ線グラフの色をライムグリーンに設定する	plt.plot(データ列x, データ列y, color='limegreen')
option: グリーンイエロー色を使う	color = 'greenyellow'
グラフを画像ファイルとして保存する	plt.savefig('foo.png')
データフレームを各列と列の組み合わせ毎にグループ化して、合計を求める	df.groupby([column, column2], as_index=False).sum()
横棒グラフの色をブラックにする	plt.barh(データ列x, データ列y, color='black')
散布図をパープル色で描画する	plt.scatter(データ列x, データ列y, color='purple')
システム時刻で乱数を初期化する	random.seed()
nがn2の倍数でないか調べる	n % n2 != 0
折れ線グラフをパウダーブルー色で描画する	plt.plot(データ列x, データ列y, color='powderblue')
ヒストグラムをダークオーキッド色で描画する	plt.hist(データ列, color='darkorchid')
データフレームを二つの列によってによって降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
オプションで、標準エラーに出力する	file = sys.stderr
青色の線グラフを描画する	plt.plot(データ列x, データ列y, color='blue')
文字列の開始位置と終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
横棒グラフをパレットトルコイズ色で描画する	plt.barh(データ列x, データ列y, color='paleturquoise')
実数が無限大か調べる	math.isinf(x)
黄色いグリッド線を引く	plt.grid(color='y')
ビスク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='bisque')
データフレームを二つの列によって昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
既存のファイルを文字コードtextで追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
ヒストグラムの色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
棒グラフをホワイトスモーク色で描画する	plt.bar(データ列x, データ列y, color='whitesmoke')
シエナ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='sienna')
スピアマンの相関係数を求める	scipy.stats.spearmanr(データ列, データ列2)
文字列の先頭でASCII限定として正規表現にマッチさせる	re.match(pattern, s, flags=re.ASCI)
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategray')
折れ線グラフをパープル色で描画する	plt.plot(データ列x, データ列y, color='purple')
整数nの八進文字列	oct(n)[2:]
データ列の分散	ds.var()
横棒グラフの色をダークオーキッドにする	plt.barh(データ列x, データ列y, color='darkorchid')
ガンマ関数の値	math.gamma(x)
リネン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='linen')
オブジェクトは辞書クラスか調べる	isinstance(obj, dict)
フローラルホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='floralwhite')
日付時刻データの年数	aDatetime.year
オブジェクトのハッシュ値	hash(obj)
ユニークな要素ごとの頻度	np.unique(aArray, return_counts=True)
option: ダークスラテグレー色を使う	color = 'darkslategray'
棒グラフを白色で描画する	plt.bar(データ列x, データ列y, color='white')
アンティークホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='antiquewhite')
option: マーカーの色をラベンダーにする	markerfacecolor = 'lavender'
マルーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='maroon')
黄色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='yellow')
データフレームのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
散布図を黄色色で描画する	plt.scatter(データ列x, データ列y, color='yellow')
散布図のマーカーを四角にする	plt.scatter(データ列x, データ列y, marker='s')
散布図をダークシアグリーン色で描画する	plt.scatter(データ列x, データ列y, color='darkseagreen')
横棒グラフの色をサンディーブラウンにする	plt.barh(データ列x, データ列y, color='sandybrown')
三変数の最小値	min(x, y, z)
xが1、もしくは2か調べる	x == 1 or x == 2
データフレームの母標準偏差	df.std(ddof=0)
文字列をシアンにする	f'\033[36m{value}\033[0m'
散布図の色をライムグリーンにする	plt.scatter(データ列x, データ列y, color='limegreen')
option: グラフの色を紺に設定する	color = 'darkblue'
散布図のマーカーを三角にする	plt.scatter(データ列x, データ列y, marker='^')
赤い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='r')
ファイルをBOM付きで書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
折れ線グラフの色をダークマゼンタに設定する	plt.plot(データ列x, データ列y, color='darkmagenta')
散布図に赤いダイアモンドマーカーを描画する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='r')
TSVファイルをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
グリッド線	plt.grid(color='#800080')
オブジェクトは浮動小数点数クラスか調べる	isinstance(obj, float)
乱数シードをnで固定する	random.seed(n)
実数の常用対数	math.log10(x)
文字列の末尾	s[-1]
コーンフラワーブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cornflowerblue')
option: バイナリ書き込みモードに設定する	mode = 'wb'
データフレームのリストカラムの欠損値を最小値で埋める	df[aList].fillna(df[aList].min())
option: バッファリングのサイズを設定する	buffering = 4096
実線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='solid')
横棒グラフの色をライトグレーにする	plt.barh(データ列x, データ列y, color='lightgrey')
青紫色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='violet')
実数がNaNか調べる	math.isnan(x)
option: マーカーの色をダークサーモンにする	markerfacecolor = 'darksalmon'
棒グラフの色をスチールブルーにする	plt.bar(データ列x, データ列y, color='steelblue')
ライトゴールドロディイエロー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')
散布図をダークターコイズ色で描画する	plt.scatter(データ列x, データ列y, color='darkturquoise')
グレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='gray')
折れ線グラフを半透明の実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', alpha=0.5)
棒グラフをサンディーブラウン色で描画する	plt.bar(データ列x, データ列y, color='sandybrown')
箱ひげ図を描画して、平均線を加える	plt.boxplot(データ列, meanline=True)
折れ線グラフをライトスカイブルー色で描画する	plt.plot(データ列x, データ列y, color='lightskyblue')
ヒストグラムをオーキッド色で描画する	plt.hist(データ列, color='orchid')
散布図をグレー色で描画する	plt.scatter(データ列x, データ列y, color='grey')
棒グラフの横幅を調整する	plt.bar(ラベル列, データ列, width=0.5)
日付データが木曜日か調べる	aDate.weekday() == 3
横棒グラフをアクア色で描画する	plt.barh(データ列x, データ列y, color='aqua')
ヒストグラムをライトグリーン色で描画する	plt.hist(データ列, color='lightgreen')
横棒グラフを淡いピンク色色で描画する	plt.barh(データ列x, データ列y, color='lightpink')
パウダーブルー色のヒストグラムを描画する	plt.hist(データ列, color='powderblue')
ライムグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='limegreen')
折れ線グラフをダークシアグリーン色で描画する	plt.plot(データ列x, データ列y, color='darkseagreen')
折れ線グラフの色をゴーストホワイトに設定する	plt.plot(データ列x, データ列y, color='ghostwhite')
リネン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='linen')
データフレームのリストカラムの第一四分位数	df[aList].quantile(0.25)
横棒グラフの色を赤にする	plt.barh(データ列x, データ列y, color='red')
数字を全部使う	string.digits
横棒グラフをリネン色で描画する	plt.barh(データ列x, データ列y, color='linen')
ライトスカイブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightskyblue')
サドルブラウン色のヒストグラムを描画する	plt.hist(データ列, color='saddlebrown')
ブラック色の線グラフを描画する	plt.plot(データ列x, データ列y, color='black')
散布図の色をアクアにする	plt.scatter(データ列x, データ列y, color='aqua')
両端キューの長さを制限する	collections.deque(maxlen=n)
文字列を部分文字列で二分する	s.partition(sub)
option: 小麦色色を使う	color = 'wheat'
積み上げ棒グラフを描画する	plt.bar(ラベル列, データ列, bottom=データ列y, color='#800080')
ベージュ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='beige')
散布図をローングリーン色で描画する	plt.scatter(データ列x, データ列y, color='lawngreen')
横棒グラフの色をライトゴールドロディイエローにする	plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')
正則化付き線形回帰分析の準備をする	model = sklearn.linear_model.ElasticNet()
ピーチパフ色のヒストグラムを描画する	plt.hist(データ列, color='peachpuff')
ヒストグラムをグレー色で描画する	plt.hist(データ列, color='grey')
インディゴ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='indigo')
データ列の欠損値を中央値で埋める	ds.fillna(ds.median())
option: グリーン色を使う	color = 'green'
ヒストグラムを青くする	plt.hist(データ列, color='b')
option: マーカーの色をモカシンにする	markerfacecolor = 'moccasin'
配列の標準偏差	np.std(aArray)
nまでの偶整数列	list(range(2, n, 2))
ヒストグラムをダークグレー色で描画する	plt.hist(データ列, color='darkgray')
ケンドール相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
option: アリスブルー色を使う	color = 'aliceblue'
グリッドを実線にする	plt.grid(linestyle='solid')
数式を数値計算する	float(e)
散布図のマーカーを左三角にする	plt.scatter(データ列x, データ列y, marker='<')
データフレームを関数の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
青緑色の散布図を描画する	plt.scatter(データ列x, データ列y, color='teal')
ロードされたモジュールの一覧	sys.modules
数式を変数について微分する	sympy.diff(e, z)
実数の整数部	math.modf(x)[1]
イテラブルから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
横棒グラフを黄色色で描画する	plt.barh(データ列x, データ列y, color='yellow')
ディムグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='dimgrey')
両端キューをデキューする	deq.popleft()
文字の文字コード	ord(ch)
データフレームの重複した行を数える	df.duplicated().sum()
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')
実数が整数か調べる	x.is_integer()
日付データをn日前に戻す	aDate - datetime.timedelta(days=n)
ゴールデンロッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='goldenrod')
散布図に三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='^')
option: トマト色を使う	color = 'tomato'
横棒グラフをパウダーブルー色で描画する	plt.barh(データ列x, データ列y, color='powderblue')
ヒストグラムをダークシアン色で描画する	plt.hist(データ列, color='darkcyan')
option: グラフの色をローングリーンに設定する	color = 'lawngreen'
文字を文字コードに変換する	ord(ch)
本日が何月か知る	datetime.datetime.today().month
データフレームのカラムの平均値	df[col].mean()
データフレームのカラムの中に文字列と文字列があるか調べる	df[col].isin([value, value2])
横棒グラフをフォレストグリーン色で描画する	plt.barh(データ列x, データ列y, color='forestgreen')
横棒グラフの色をミディアムアクアマリンにする	plt.barh(データ列x, データ列y, color='mediumaquamarine')
散布図をミディアムパープル色で描画する	plt.scatter(データ列x, データ列y, color='mediumpurple')
三角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='^')
文字列モジュールをインポートする	import string
棒グラフをシーグリーン色で描画する	plt.bar(データ列x, データ列y, color='seagreen')
リストとリストを連結する	aList + aList2
辞書をカウンタに変換する	collections.Counter(aDict)
日付データをn秒前に戻す	aDate - datetime.timedelta(seconds=n)
option: チョコレート色を使う	color = 'chocolate'
確率的勾配降下で回帰分析を行う	model = sklearn.linear_model.SGDRegressor()
全ての空白文字	string.whitespace
折れ線グラフをライトゴールドロディイエロー色で描画する	plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')
アンティークホワイト色のヒストグラムを描画する	plt.hist(データ列, color='antiquewhite')
横棒グラフをサドルブラウン色で描画する	plt.barh(データ列x, データ列y, color='saddlebrown')
散布図をマゼンタ色で描画する	plt.scatter(データ列x, データ列y, color='magenta')
散布図をアンティークホワイト色で描画する	plt.scatter(データ列x, データ列y, color='antiquewhite')
リストとリストについての散布図に赤い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', c='r')
ヒストグラムの色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
チョコレート色の線グラフを描画する	plt.plot(データ列x, データ列y, color='chocolate')
散布図をライトコーラル色で描画する	plt.scatter(データ列x, データ列y, color='lightcoral')
データフレームのカラムの欠損値を直後の値に設定する	df[col].fillna(method='bfill')
棒グラフをアクア色で描画する	plt.bar(データ列x, データ列y, color='aqua')
折れ線グラフの色をオレンジに設定する	plt.plot(データ列x, データ列y, color='orange')
ライトグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightgreen')
データフレームのカラムを散布図にする	sns.scatterplot(data=df, x='列名', y='列名')
散布図の色をライトグリーンにする	plt.scatter(データ列x, データ列y, color='lightseagreen')
option: マーカーの色をクリムゾンにする	markerfacecolor = 'crimson'
フローラルホワイト色のヒストグラムを描画する	plt.hist(データ列, color='floralwhite')
シルバー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='silver')
ゼロ埋めされた配列	np.zeros(要素数)
横棒グラフの色をダークマゼンタにする	plt.barh(データ列x, データ列y, color='darkmagenta')
バツ印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='x')
option: マーカーの色をスプリンググリーンにする	markerfacecolor = 'springgreen'
データフレームのカラムの欠損値を最小値に設定する	df[col].fillna(df[col].min())
n進文字列を整数に変換する	int(s, n)
option: n番目のカラムをインデックスに設定する	index_col = n
横棒グラフの色をミッドナイトブルーにする	plt.barh(データ列x, データ列y, color='midnightblue')
データ列の出現頻度を可視化する	plt.hist(データ列)
棒グラフの色を紺にする	plt.bar(データ列x, データ列y, color='darkblue')
散布図をミディアムシアグリーン色で描画する	plt.scatter(データ列x, データ列y, color='mediumseagreen')
データフレームを二つの列によって昇順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
シアン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='cyan')
ヒストグラムの色をマルーンに設定する	plt.hist(データ列, color='maroon')
散布図の色をダークオリーブグリーンにする	plt.scatter(データ列x, データ列y, color='darkolivegreen')
nが2で割り切れるか調べる	n % 2 == 0
option: 書き込みモードに設定する	mode = 'w'
データフレームのカラムがどの程度、分散しているか見る	df[col].var()
白い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='w')
Pandasのバージョンを見る	print(pd.__version__)
データフレームを10の位で丸めて、整数型にする	df.round(-1).astype(int)
イテラブルを無限に繰り返す	itertools.cycle(iterable)
リストとリストについての散布図に黒い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', c='k')
チョコレート色のヒストグラムを描画する	plt.hist(データ列, color='chocolate')
nがn2で割り切れるか調べる	n % n2 == 0
グラフのフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
現在の秒数	datetime.date.today().second
ヒストグラムをミディアムバイオレットレッド色で描画する	plt.hist(データ列, color='mediumvioletred')
文字列をシアンでプリントする	print(f'\033[36m{value}\033[0m')
ライトグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightgrey')
棒グラフをサドルブラウン色で描画する	plt.bar(データ列x, データ列y, color='saddlebrown')
黒い四角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='s', c='k')
データフレームのカラムを並べて箱ひげ図にする	plt.boxplot([df['カラム'], df['カラム']])
横棒グラフをスレートブルー色で描画する	plt.barh(データ列x, データ列y, color='slateblue')
ダークバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='darkviolet')
リストとリストについての散布図に文字列という凡例用のラベルを付ける	plt.scatter(データ列x, データ列y, label=s)
散布図に赤い大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X', c='r')
タン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='tan')
イエローグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='yellowgreen')
データフレームの欠損値を中央値で埋める	df.fillna(df.median())
横棒グラフをスチールブルー色で描画する	plt.barh(データ列x, データ列y, color='steelblue')
イテラブルを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
散布図をスラグレー色で描画する	plt.scatter(データ列x, データ列y, color='slategray')
棒グラフの色を青紫にする	plt.bar(データ列x, データ列y, color='violet')
データフレームのリストカラムの中に文字列と文字列があるか調べる	df[aList].isin([value, value2])
棒グラフの色をスプリンググリーンにする	plt.bar(データ列x, データ列y, color='springgreen')
赤い右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>', c='r')
実数の正接の逆数	math.atan(x)
オブジェクトのプロパティの値	getattr(obj, プロパティ名)
折れ線グラフの色をレモンシフォンに設定する	plt.plot(データ列x, データ列y, color='lemonchiffon')
実数とyの斜辺	math.hypot(x, y)
横棒グラフの色をミディアムターコイズにする	plt.barh(データ列x, データ列y, color='mediumturquoise')
散布図の色をパパイヤウィップにする	plt.scatter(データ列x, データ列y, color='papayawhip')
円グラフにラベルを付ける	plt.pie(データ列, startangle=90, labels=ラベル列)
配列の合計値	np.sum(aArray)
ライトコーラル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightcoral')
option: グラフの色をダーク・スラテグレーに設定する	color = 'darkslategrey'
文字列中の部分文字列をカウントする	s.count(sub)
パレットトルコイズ色のヒストグラムを描画する	plt.hist(データ列, color='paleturquoise')
nからn2の範囲	range(n, n2)
折れ線グラフをシーグリーン色で描画する	plt.plot(データ列x, データ列y, color='seagreen')
棒グラフをスラグレー色で描画する	plt.bar(データ列x, データ列y, color='slategray')
データフレームを複数の列の値によってグループ化し、要約統計量を求める	df.groupby(columns).describe()
棒グラフの色をグリーンイエローにする	plt.bar(データ列x, データ列y, color='greenyellow')
辞書に辞書の項目を更新する	aDict.update(aDict2)
散布図をミッドナイトブルー色で描画する	plt.scatter(データ列x, データ列y, color='midnightblue')
データフレームのリストカラムの欠損値を中央値に設定する	df[aList].fillna(df[aList].median())
散布図をチョコレート色で描画する	plt.scatter(データ列x, データ列y, color='chocolate')
ヒストグラムをレベッカパープル色で描画する	plt.hist(データ列, color='rebeccapurple')
散布図の色をライトスレイグレーにする	plt.scatter(データ列x, データ列y, color='lightslategrey')
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(データ列x, データ列y, color='darkslategray')
印字可能な文字を全部使う	string.printable
マルーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='maroon')
日付データからn日分、減算する	aDate - datetime.timedelta(days=n)
下三角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='v')
散布図をホットピンク色で描画する	plt.scatter(データ列x, データ列y, color='hotpink')
散布図をシルバー色で描画する	plt.scatter(データ列x, データ列y, color='silver')
折れ線グラフをホットピンク色で描画する	plt.plot(データ列x, データ列y, color='hotpink')
スノー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='snow')
散布図の色をシルバーにする	plt.scatter(データ列x, データ列y, color='silver')
グラフを描画する準備をする	import matplotlib.pyplot as plt
文字列が文字列より辞書順で前か調べる	s < s2
折れ線グラフをディープスカイブルー色で描画する	plt.plot(データ列x, データ列y, color='deepskyblue')
棒グラフをミディアムアクアマリン色で描画する	plt.bar(データ列x, データ列y, color='mediumaquamarine')
名前付きタプルをパラメータからインスタンス化する	C._make(パラメータ)
データ列の尖度	ds.skew()
折れ線グラフをアリスブルー色で描画する	plt.plot(データ列x, データ列y, color='aliceblue')
データフレームを'A'列によってソートして、NaNを先頭にする	df.sort_values(by='A', na_position='first')
ファイルのファイルサイズ	os.path.get_size(filepath)
データフレームを各グループごとに散布図にする	sns.scatterplot(data=df, x='列名', y='列名', hue='カテゴリ列')
ダークシアグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkseagreen')
散布図に赤い三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='r')
コーンフラワーブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cornflowerblue')
棒グラフの色をシエナにする	plt.bar(データ列x, データ列y, color='sienna')
option: マーカーの色をシーグリーンにする	markerfacecolor = 'seagreen'
現在のタイムスタンプ	int(time.time())
インディアンレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='indianred')
色付きの一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='#800080')
散布図の色をペールグリーンにする	plt.scatter(データ列x, データ列y, color='palegreen')
散布図に星マーカーを使う	plt.scatter(データ列x, データ列y, marker='*')
タプルの先頭を取り除く	aTuple[1:]
事前に複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
ヒストグラムの色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムの色をターコイズに設定する	plt.hist(データ列, color='turquoise')
文字列の開始位置から終了位置までの範囲で部分文字列の出現をカウントする	s.count(sub, start, end)
折れ線グラフをマルーン色で描画する	plt.plot(データ列x, データ列y, color='maroon')
散布図をダークスレートブルー色で描画する	plt.scatter(データ列x, データ列y, color='darkslateblue')
データフレームから重複ありでランダムにn行をサンプリングする	df.sample(n, replace=True)
散布図の大バツマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='k')
データフレームの列を目的変数にする	目的変数 = df['列名']
要素∉集合	element not in aSet
データフレームのリストカラムの欠損値を直前の値で埋める	df[aList].fillna(method='ffill')
白いグリッド線を引く	plt.grid(color='w')
横棒グラフをミッドナイトブルー色で描画する	plt.barh(データ列x, データ列y, color='midnightblue')
グラフからグリッド線を消す	plt.grid(False)
折れ線グラフに青い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='b')
option: インデックスを自動的な連番に設定する	index_col = None
ゲインズボロ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='gainsboro')
ダークオリーブグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkolivegreen')
要素が集合に含まれないか調べる	element not in aSet
棒グラフの色をスカイブルーにする	plt.bar(データ列x, データ列y, color='skyblue')
散布図にrgbのダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D', c=rgb)
横棒グラフの色をライトスレイグレーにする	plt.barh(データ列x, データ列y, color='lightslategray')
黒い下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v', c='k')
破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed')
耐火レンガ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='firebrick')
スラグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='slategrey')
散布図に黒い大バツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='k')
グラフ中の(x,y)の位置に凡例を表示する	plt.legend(loc=(x, y))
スプリンググリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='springgreen')
コーンズシルク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cornsilk')
モカシン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='moccasin')
異なる列をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
ファイルパスのセパレータ記号	os.sep
文字列は全て識別子名か調べる	s.isidentifier()
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
事前に大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
データ列間の平方根平均二乗誤差を求める	np.sqrt(sklearn.metrics.mean_squared_error(データ列, データ列2))
入力から二つの文字列を読む	A, B = map(str, input().split())
散布図の色をレモンシフォンにする	plt.scatter(データ列x, データ列y, color='lemonchiffon')
データ列の中の欠損値の合計を数える	ds.isna().sum()
散布図にrgbのバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x', c=rgb)
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
縦軸の目盛の表示を変更する	plt.yticks(目盛りの値リスト)
散布図に黒い三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='k')
現在の分数	datetime.date.today().minute
横棒グラフをライトゴールドロディイエロー色で描画する	plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')
文字列の中の正規表現による全てのマッチを使う	re.findall(pattern, s)
折れ線グラフをパールゴールデンロッド色で描画する	plt.plot(データ列x, データ列y, color='palegoldenrod')
データフレームから指定された４つの列を抽出する	df[[column, column2, column3, column4]]
グラフの描画で色差別なくカラーパレットを使う	sns.set(pallete='colorblind')
横棒グラフの色をピーチパフにする	plt.barh(データ列x, データ列y, color='peachpuff')
リストとリストについての散布図に赤いバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', c='r')
文字列の開始位置からと終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
リストとリストについての散布図にrgbの四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', c=rgb)
データフレームをグループ化し、それぞれの列に対し個数を求める	df.groupby(column)[column2].count()
実数の小数部	math.modf(x)[0]
棒グラフをターコイズ色で描画する	plt.bar(データ列x, データ列y, color='turquoise')
option: グラフの色をシルバーに設定する	color = 'silver'
リストとリストについて散布図を描画して、マーカーを右三角に設定する	plt.plot(データ列x, データ列y, marker='>')
ライムグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='limegreen')
折れ線グラフの色をシアンに設定する	plt.plot(データ列x, データ列y, color='cyan')
散布図をインディアンレッド色で描画する	plt.scatter(データ列x, データ列y, color='indianred')
二変数の最小値	min(x, y)
散布図のマーカーをポイントにする	plt.scatter(データ列x, データ列y, marker='.')
文字列を青色でプリントする	print(f'\033[34m{value}\033[0m')
散布図の色をアイボリーにする	plt.scatter(データ列x, データ列y, color='ivory')
折れ線グラフの色を貝殻に設定する	plt.plot(データ列x, データ列y, color='seashell')
アリスブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='aliceblue')
折れ線グラフの左三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='#800080')
グラフの補助目盛を有効にする	plt.minorticks_on()
リストとリストについての散布図に三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^')
日付時刻データが日曜日か調べる	aDatetime.weekday() == 6
サーモン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='salmon')
ブルーバイオレット色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='blueviolet')
文字列の中の複数行対応として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列リストを連結してひとつの文字列にする	''.join(aStringList)
データフレームのリストカラムのどの値が頻出か見る	df[aList].mode()
棒グラフの色をゴールドにする	plt.bar(データ列x, データ列y, color='gold')
ヒストグラムの色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
エポック秒を日付時刻に変換する	datetime.datetime.fromtimestamp(timestamp)
グリッド線	plt.grid(linestyle='--')
第二コマンド引数	sys.argv[1]
option: エンコーディングをUTF8に設定する	encoding = 'utf-8'
xを文字列に変換する	str(x)
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
実数を切り上げて整数に変換する	math.ceil(x)
散布図の色をスプリンググリーンにする	plt.scatter(データ列x, データ列y, color='springgreen')
本日が金曜日か調べる	datetime.datetime.today().weekday() == 4
現在が何分か知る	datetime.date.today().minute
option: グラフの色をロージーブラウンに設定する	color = 'rosybrown'
横棒グラフをビスク色で描画する	plt.barh(データ列x, データ列y, color='bisque')
アイボリー色のヒストグラムを描画する	plt.hist(データ列, color='ivory')
option: グラフの色をダークオーキッドに設定する	color = 'darkorchid'
横棒グラフの色をナバホホワイトにする	plt.barh(データ列x, データ列y, color='navajowhite')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
棒グラフをライトブルー色で描画する	plt.bar(データ列x, データ列y, color='lightblue')
日付時刻データが何月か知る	aDatetime.month
散布図に赤い四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s', c='r')
文字列はPythonのキーワードか調べる	keyword.iskeyword(s)
option: マーカーの色をパープルにする	markerfacecolor = 'purple'
茶色色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='brown')
ペルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='peru')
Pandasで、データフレームのカラムをインデックスにする	df.set_index(col, inplace=True)
折れ線グラフをネイビー色で描画する	plt.plot(データ列x, データ列y, color='navy')
横棒グラフをダークゴールデンロッド色で描画する	plt.barh(データ列x, データ列y, color='darkgoldenrod')
日付時刻データが何分か知る	aDatetime.minute
option: グラフの色をグレーに設定する	color = 'grey'
x,yの複素数	complex(x, y)
データ列を使う	import pandas as pd
ヒストグラムの色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
文字列が文字列より辞書順で後か調べる	s > s2
データフレームの尖度	df.skew()
棒グラフをパープル色で描画する	plt.bar(データ列x, データ列y, color='purple')
散布図のマーカーを丸にする	plt.scatter(データ列x, データ列y, marker='o')
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=column)
棒グラフをダークオリーブグリーン色で描画する	plt.bar(データ列x, データ列y, color='darkolivegreen')
kを底とする実数の対数	math.log(x, k)
散布図を紺色で描画する	plt.scatter(データ列x, データ列y, color='darkblue')
データフレームのリストカラムを10の位で丸めて、整数型にする	df[aList].round(-1).astype(int)
文字列を最後の部分文字列で分けたときの前半の文字列	s.rpartition(sub)[0]
タプルとタプルを連結する	aTuple + aTuple2
option: グラフの色をバリーウッドに設定する	color = 'burlywood'
散布図の色をデピンクにする	plt.scatter(データ列x, データ列y, color='deeppink')
折れ線グラフをミントクリーム色で描画する	plt.plot(データ列x, データ列y, color='mintcream')
option: ダークカーキ色を使う	color = 'darkkhaki'
散布図の色をマルーンにする	plt.scatter(データ列x, データ列y, color='maroon')
円グラフを真円にする	plt.axis('equals')
棒グラフを黒くする	plt.bar(データ列x, データ列y, color='k')
ライムグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='limegreen')
横棒グラフの色をグリーンイエローにする	plt.barh(データ列x, データ列y, color='greenyellow')
データフレームから重複した行を削除する	df.drop_duplicates()
横棒グラフをラベンダーブラッシュ色で描画する	plt.barh(データ列x, データ列y, color='lavenderblush')
ヒストグラムの色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
折れ線グラフをミディアムシアグリーン色で描画する	plt.plot(データ列x, データ列y, color='mediumseagreen')
横棒グラフの色をハニーデューにする	plt.barh(データ列x, データ列y, color='honeydew')
整数nがセットのどれかか調べる	n in aSet
文字列を赤色でプリントする	print(f'\033[31m{value}\033[0m')
横棒グラフをスラグレー色で描画する	plt.barh(データ列x, データ列y, color='slategrey')
データフレームの欠損値を直前の値に設定する	df.fillna(method='ffill')
文字列を太字にする	f'\033[1m{value}\033[0m'
ローングリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lawngreen')
折れ線グラフをライム色で描画する	plt.plot(データ列x, データ列y, color='lime')
名前付きタプルを辞書に変換する	aNamedTupleObject._asdict()
耐火レンガ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='firebrick')
イテラブルとイテラブルをペアリングする	itertools.zip_longest(iterable, iterable2)
文字列は全て印字できるか調べる	s.isprintable()
行列の行ごとの最小値	np.min(aArray, axis=1)
option: ライトブルー色を使う	color = 'lightblue'
オレンジレッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='orangered')
散布図にバツマーカーを使う	plt.scatter(データ列x, データ列y, marker='x')
データ列を10の位で丸める	ds.round(-1)
散布図のマーカーをダイアモンドにする	plt.scatter(データ列x, データ列y, marker='D')
棒グラフを淡いピンク色色で描画する	plt.bar(データ列x, データ列y, color='lightpink')
貝殻色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='seashell')
スプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='springgreen')
グリーンイエロー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='greenyellow')
両端キューの要素を左にn個分ローテンションする	deq.rotate(-n)
円グラフを時計回りに描画する	plt.pie(データ列, startangle=90, counterclock=False)
ヒストグラムの色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
日付データを文字列でフォーマットする	"aDate.strftime(""%d/%m/%y"")"
option: アンティークホワイト色を使う	color = 'antiquewhite'
データフレームの空文字をドロップする	df.replace('', np.nan).dropna()
option: マーカーの色をマルーンにする	markerfacecolor = 'maroon'
配列のユニークな要素	np.unique(aArray)
折れ線グラフをミディアムオーキッド色で描画する	plt.plot(データ列x, データ列y, color='mediumorchid')
エクセルファイルファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
グラフの背景色を暗くする	sns.set(style='darkgrid')
散布図に青い下三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='b')
option: 複数行に対応する	flag = re.MULTILINE
ヒストグラムの範囲を設定する	plt.hist(データ列, range=(start, end))
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(データ列x, データ列y, color='lightskyblue')
option: ミディアムブルー色を使う	color = 'mediumblue'
列名の一覧をデータ型でフィルタする	df.select_dtypes(型).columns
横棒グラフの色をライトスカイブルーにする	plt.barh(データ列x, データ列y, color='lightskyblue')
カーキ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='khaki')
option: マーカーを丸に変更する	marker = 'o'
ライトスカイブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightskyblue')
文字列を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
データフレームの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
二つのリストから辞書	dict(zip(aList, aList2))
ファイルをバイナリモードでオープンして]、fとする	f = open(filepath, mode='rb')
プラットホームがWindowsか調べる	sys.platform.startswith('win32')
横棒グラフをコーンフラワーブルー色で描画する	plt.barh(データ列x, データ列y, color='cornflowerblue')
散布図のダイアモンドマーカーを青くする	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='b')
散布図の色をベージュにする	plt.scatter(データ列x, データ列y, color='beige')
ライトグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightgray')
文字列がリストの要素でないか調べる	element not in aList
散布図に黒い右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>', c='k')
折れ線グラフを赤色で描画する	plt.plot(データ列x, データ列y, color='red')
横棒グラフの色をローングリーンにする	plt.barh(データ列x, データ列y, color='lawngreen')
配列の列ごとの合計値	np.sum(aArray, axis=0)
散布図に赤い左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<', c='r')
折れ線グラフをグレー色で描画する	plt.plot(データ列x, データ列y, color='gray')
横棒グラフをアンティークホワイト色で描画する	plt.barh(データ列x, データ列y, color='antiquewhite')
リストとリストについての散布図に星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*')
ミディアムスプリンググリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumspringgreen')
文字列の右側からタブを取り除く	s.rstrip('\t')
散布図にバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x')
option: 文字列をセパレータで使う	sep = s
ラベンダーブラッシュ色のヒストグラムを描画する	plt.hist(データ列, color='lavenderblush')
ダークシアン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkcyan')
折れ線グラフの丸マーカーを青くする	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='b')
データ列の偏りを対数変換する	np.log(データ列)
散布図に青い三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='b')
option: グラフの色をサンディーブラウンに設定する	color = 'sandybrown'
タプルの要素を昇順にソートする	sorted(aTuple, reverse=True)
コマンドライン引数	sys.argv
コマンドの第一引数を知る	sys.argv[1]
文字列を部分文字列で二分し、前半の文字列を使う	s.partition(sub)[0]
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
散布図の色をサンディーブラウンにする	plt.scatter(データ列x, データ列y, color='sandybrown')
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='r')
文字列の中の大文字・小文字を無視して正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
スピアマン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='spearman')
option: グラフの色をミントクリームに設定する	color = 'mintcream'
リストとリストについての散布図にrgbの左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', c=rgb)
データフレームを列によってグループ化して、それぞれのグループごとの個数を求める	df.groupby(column).count()
データフレームをにバイオリン図で可視化する	sns.violinplot(x='カテゴリ列', y='列', data=df)
散布図に赤い大バツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='r')
nがn2以下か調べる	n <= n2
option: グラフの色を青に設定する	color = 'blue'
グリッド線を黄色くする	plt.grid(color='y')
折れ線グラフをターコイズ色で描画する	plt.plot(データ列x, データ列y, color='turquoise')
ヒストグラムをスチールブルー色で描画する	plt.hist(データ列, color='steelblue')
ダーク・スラテグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkslategrey')
option: マーカーの色をグレーにする	markerfacecolor = 'gray'
未初期化の行列	np.empty((行数, 列数), dtype=np.int)
option: 改行コードをUNIXに設定する	newline = '\n'
ヒストグラムの色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムの色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
横棒グラフの色をカデットブルーにする	plt.barh(データ列x, データ列y, color='cadetblue')
文字列を隔離する	sys.intern(s)
ゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='goldenrod')
異なるn個のものからk個選ぶ場合の数	math.comb(n, k)
色名とカラーコードの対応表を使う	matplotlib.colors.cnames
データフレームの数値をまとめて丸める	df.round()
カウンタを低頻出方から列挙する	aCounter.most_common()[::-1]
データ列を10の位で丸めて、整数型にする	ds.round(-1).astype(int)
棒グラフの色をダークオーキッドにする	plt.bar(データ列x, データ列y, color='darkorchid')
JSONLファイルを読み込む	pd.read_json(filename, orient='records', lines=True)
グラフにグリッド線を入れる	plt.grid(True)
現在が何時か知る	datetime.date.today().hour
横棒グラフをダークマゼンタ色で描画する	plt.barh(データ列x, データ列y, color='darkmagenta')
ホットピンク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='hotpink')
option: 文字列の示すエンコーディングを使う	encoding = s
option: マーカーの色をアクアマリンにする	markerfacecolor = 'aquamarine'
横棒グラフの色をライトグリーンにする	plt.barh(データ列x, データ列y, color='lightgreen')
散布図をカデットブルー色で描画する	plt.scatter(データ列x, データ列y, color='cadetblue')
折れ線グラフに右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>')
散布図をピーチパフ色で描画する	plt.scatter(データ列x, データ列y, color='peachpuff')
option: パウダーブルー色を使う	color = 'powderblue'
option: 線を太くする	linewidth = 3.0
データフレームの指定された列を配列として抽出する	df[column].values
option: グラフの色をペルーに設定する	color = 'peru'
折れ線グラフの色をシスルに設定する	plt.plot(データ列x, データ列y, color='thistle')
ヒストグラムをタン色で描画する	plt.hist(データ列, color='tan')
配列が何のデータ型か調べる	aArray.dtype()
棒グラフの色をダークスラテグレーにする	plt.bar(データ列x, データ列y, color='darkslategray')
行列の行	aArray[行番号]
日付データの月数	aDate.month
本日の日数	datetime.datetime.today().day
整数nをn2分の一にする	n //= n2
文字列中にひとつでも非空白が含まれるか調べる	any(not c.isspace() for c in s)
ライトゴールドロディイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightgoldenrodyellow')
イテラブルの長さnの順列	itertools.permutations(iterable, n)
データ列の欠損値を最大値に設定する	ds.fillna(ds.max())
折れ線グラフをミディアムスレートブルー色で描画する	plt.plot(データ列x, データ列y, color='mediumslateblue')
マゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='magenta')
集合にイテラブルを追加更新する	aSet.update(iterable)
ヒストグラムを黄色色で描画する	plt.hist(データ列, color='yellow')
option: マーカーの色をライトイエローにする	markerfacecolor = 'lightyellow'
折れ線グラフを半透明の破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', alpha=0.5)
赤色の線グラフを描画する	plt.plot(データ列x, データ列y, color='red')
散布図の大バツマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='#800080')
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
option: バツマーカーを使う	marker = 'x'
option: マーカーの色をグリーンにする	markerfacecolor = 'green'
option: オリーブ色を使う	color = 'olive'
文字列のn番目	s[n]
リストの要素をソートする	sorted(aList)
ヒストグラムをフローラルホワイト色で描画する	plt.hist(データ列, color='floralwhite')
文字列中に部分文字列が含まれるか調べる	sub in s
カウンタをリセットする	aCounter.clear()
xが真か調べる	bool(x)
散布図をスチールブルー色で描画する	plt.scatter(データ列x, データ列y, color='steelblue')
option: グラフの色をライトシアンに設定する	color = 'lightcyan'
option: マーカーの色をダークシアグリーンにする	markerfacecolor = 'darkseagreen'
改行	'\n'
縦棒グラフを描画する	plt.bar(ラベル列, データ列)
オブジェクトのメモリビュー	memoryview(obj)
データフレームから散布図を作り、回帰直線を加える	sns.regplot(data=df, x='列名', y='列名')
文字コードを文字に変換する	chr(unicode)
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列x, データ列y, color='slategrey')
ヒストグラムの色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
フクシア色のヒストグラムを描画する	plt.hist(データ列, color='fuchsia')
整数nを十六進表現に変換する	hex(n)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=False)
棒グラフの色をブランチドアーモンドにする	plt.bar(データ列x, データ列y, color='blanchedalmond')
棒グラフをライム色で描画する	plt.bar(データ列x, データ列y, color='lime')
ダークオーキッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkorchid')
折れ線グラフの色をブラックに設定する	plt.plot(データ列x, データ列y, color='black')
行列の行ごとの最大値	np.max(aArray, axis=1)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
二つのデータフレームを横方向にマージする	pd.merge(df, df2)
文字列がリストに含まれるか調べる	element in aList
イテラブルからカウンタを作る	collections.Counter(iterable)
折れ線グラフをグリーンイエロー色で描画する	plt.plot(データ列x, データ列y, color='greenyellow')
リストの末尾から要素をポップする	aList.pop()
リストの要素を昇順にソートする	sorted(aList, reverse=False)
散布図をスラグレー色で描画する	plt.scatter(データ列x, データ列y, color='slategrey')
紺色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkblue')
データフレームのカラムの中にある文字列と文字列の合計を数える	df[col].isin([value, value2]).sum()
リストとリストについての散布図に右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>')
パープル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='purple')
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
辞書のキーを列挙する	aDict.keys()
色付きの破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='#800080')
散布図をシスル色で描画する	plt.scatter(データ列x, データ列y, color='thistle')
ヒストグラムの色をペルーに設定する	plt.hist(データ列, color='peru')
三つのデータフレームを縦方向に連結する	pd.concat([df, df2, df3], axis=0)
散布図をアクアマリン色で描画する	plt.scatter(データ列x, データ列y, color='aquamarine')
ファイルを改行を取り除いて一行ずつ読み込む	f.readline()
棒グラフの色を暗い赤にする	plt.bar(データ列x, データ列y, color='darkred')
datetimeをインスタンス化する	datetime.datetime(年, 月, 日, 時, 分, 秒)
option: 紺色を使う	color = 'darkblue'
散布図の色をインディアンレッドにする	plt.scatter(データ列x, データ列y, color='indianred')
xが-9以上、9以下か調べる	-9 <= x <= 9
改行なしに二つの文字列をプリントする	print(value, value2, end='')
ヒストグラムを描画して、ビン数を設定する	plt.hist(データ列, bins=区関数)
横棒グラフをライトスカイブルー色で描画する	plt.barh(データ列x, データ列y, color='lightskyblue')
ラベンダーブラッシュ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lavenderblush')
二次元タプルをフラット化する	sum(aTuple)
ピーチパフ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='peachpuff')
散布図をホワイトスモーク色で描画する	plt.scatter(データ列x, データ列y, color='whitesmoke')
両端キューの末尾	deq[-1]
折れ線グラフの色を青緑に設定する	plt.plot(データ列x, データ列y, color='teal')
散布図に四角マーカーを使う	plt.scatter(データ列x, データ列y, marker='s')
ライムグリーン色のヒストグラムを描画する	plt.hist(データ列, color='limegreen')
折れ線グラフの色をグリーンに設定する	plt.plot(データ列x, データ列y, color='green')
データフレームから指定された二つの列を抽出する	df[[column, column2]]
option: マーカーの色をスカイブルーにする	markerfacecolor = 'skyblue'
折れ線グラフをスラグレー色で描画する	plt.plot(データ列x, データ列y, color='slategray')
データフレームを二つの列によってによって破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
ハニーデュー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='honeydew')
プログラムのファイルの名前	sys.argv[0]
option: マーカーの色をゲインズボロにする	markerfacecolor = 'gainsboro'
変数について数式の積分を求める	sympy.integrate(e, z)
xを整数に変換する	int(x)
ファイルを絶対パスに変換する	os.path.abspath(filepath)
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(データ列x, データ列y, color='mediumseagreen')
nを否定する	not n
option: ミディアムバイオレットレッド色を使う	color = 'mediumvioletred'
折れ線グラフをスノー色で描画する	plt.plot(データ列x, データ列y, color='snow')
option: ダークゴールデンロッド色を使う	color = 'darkgoldenrod'
赤い四角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='s', c='r')
横棒グラフを黄色くする	plt.barh(データ列x, データ列y, color='y')
最初のプログラムを書く	print('Hello World')
横棒グラフの色をダークオリーブグリーンにする	plt.barh(データ列x, データ列y, color='darkolivegreen')
散布図の色をダークカーキにする	plt.scatter(データ列x, データ列y, color='darkkhaki')
nとkのコンビネーション	math.comb(n, k)
データフレームを'A'列によって昇順にソートして、更新する	df.sort_values(by='A', ascending=True, inplace=True)
ライトグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgreen')
グラフ描画でカーネル密度推定を使う	sns.kdeplot(x='列名', hue='カテゴリ列', data=df)
散布図のマーカーを黒くする	plt.scatter(データ列x, データ列y, markerfacecolor='k')
Pandasで、フォーマットで文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
リストとリストについての散布図にrgbのポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', c=rgb)
プログラムの実行を正しく終了する	sys.exit(0)
黒い丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o', c='k')
折れ線グラフをディムグレー色で描画する	plt.plot(データ列x, データ列y, color='dimgrey')
xを浮動小数点数に変換する	float(x)
データフレームから型リストで指定されたデータ型の列を除外する	df.select_dtypes(exclude=typeList)
option: ミディアムシアグリーン色を使う	color = 'mediumseagreen'
行列の値	aArray[行番号, 列番号]
ディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.path.dirname(__file__), dir))
棒グラフの色をスラグレーにする	plt.bar(データ列x, データ列y, color='slategray')
ロージーブラウン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='rosybrown')
ラジアンの角度	math.degrees(x)
両端キューの大きさ	len(deq)
option: グラフの色をグリーンに設定する	color = 'green'
折れ線グラフの右三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='r')
グラフの描画で淡くカラーパレットを使う	sns.set(pallete='muted')
ヒストグラムの色をライムに設定する	plt.hist(データ列, color='lime')
リストを等量でn個にビン分割する	pd.qcut(aList, n)
散布図に赤い下三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='r')
ライトグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightgray')
データ列を100の位で丸める	ds.round(-2)
二つの文字列を改行で区切ってプリントする	print(value, value2, sep='\n')
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(データ列x, データ列y, color='mediumslateblue')
TSVファイルからCSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
折れ線グラフの大バツマーカーの色を変更する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='#800080')
散布図をアクア色で描画する	plt.scatter(データ列x, データ列y, color='aqua')
文字列全体を複数行対応として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
nがn2と等しいか調べる	n == n2
データフレームの全カラムの相関を可視化する	sns.pairplot(df)
棒グラフの色をダークシアグリーンにする	plt.bar(データ列x, データ列y, color='darkseagreen')
棒グラフをゴールデンロッド色で描画する	plt.bar(データ列x, データ列y, color='goldenrod')
散布図を暗い赤色で描画する	plt.scatter(データ列x, データ列y, color='darkred')
nが2で割り切れないか調べる	n % 2 == 1
ライトブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightblue')
日付データをタプルに変換する	aDate.timetuple()
ヒストグラムの色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
スプリンググリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='springgreen')
横棒グラフをラベンダー色で描画する	plt.barh(データ列x, データ列y, color='lavender')
データ列をリストを境界値としてビン分割する	pd.cut(ds, aList)
option: グラフの色をロイヤルブルーに設定する	color = 'royalblue'
ヒストグラムの色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
データフレームのカラムの秒	df[col].dt.second
折れ線グラフをダークスレートブルー色で描画する	plt.plot(データ列x, データ列y, color='darkslateblue')
平均値付き箱ひげ図を描画する	plt.boxplot(データ列, showmeans=True)
0からnの範囲	range(n)
折れ線グラフに青い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='b')
スクリプトファイルと同じディレクトリのファイルのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
イテラブルをダミー変数に変換する	pd.get_dummies(iterable)
option: マーカーの色をゴールデンロッドにする	markerfacecolor = 'goldenrod'
折れ線グラフの色をリネンに設定する	plt.plot(データ列x, データ列y, color='linen')
データフレームの散布図をグループ化して横に並べる	sns.relplot(data=df, x='列名', y='列名', hue='カテゴリ列', col='カテゴリ列')
データフレームを列によってグループ化して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
option: セパレータを改行にする	sep = '\n'
棒グラフの色をダークオレンジにする	plt.bar(データ列x, データ列y, color='darkorange')
折れ線グラフの大バツマーカーを赤くする	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='r')
ダークグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgray')
データフレームを二つの列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
文字列をマゼンタにする	f'\033[35m{value}\033[0m'
カウンタの最頻出な項目	aCounter.most_common()[0]
横棒グラフの色をフォレストグリーンにする	plt.barh(データ列x, データ列y, color='forestgreen')
折れ線グラフをフクシア色で描画する	plt.plot(データ列x, データ列y, color='fuchsia')
赤い三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^', c='r')
サポートベクター分類モデルを作る	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
折れ線グラフの色をライムに設定する	plt.plot(データ列x, データ列y, color='lime')
JSONファイルのファイル入力を辞書に変換する	json.load(fin)
データフレームの中の列をビン数nでビン分割する	pd.cut(df[col], n)
アルファベットの大文字列	string.ascii_uppercase
丸印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='o')
ロージーブラウン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='rosybrown')
二つの文字列を文字列で区切ってプリントする	print(value, value2, sep=s)
ヒストグラムをダークマゼンタ色で描画する	plt.hist(データ列, color='darkmagenta')
横棒グラフの色を白にする	plt.barh(データ列x, データ列y, color='white')
ミントクリーム色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mintcream')
イテラブルを2回あわせた直積	itertools.product(iterable, repeat=2)
スレートブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='slateblue')
データフレームを'A'列の値によってグループ化し、要約統計量を求める	df.groupby('A').describe()
実数以下の最大の整数	math.floor(x)
データ列をカテゴリデータに変換する	ds.astype(object)
データ列がどの程度、分散しているか見る	ds.var()
横棒グラフの色を青緑にする	plt.barh(データ列x, データ列y, color='teal')
棒グラフの色をミディアムアクアマリンにする	plt.bar(データ列x, データ列y, color='mediumaquamarine')
アルファベットの小文字を全部使う	string.ascii_lowercase
文字列が文字列リストのいづれか調べる	s in aStringList
折れ線グラフの色をベージュに設定する	plt.plot(データ列x, データ列y, color='beige')
赤い星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*', c='r')
データフレームの標本標準偏差	df.std()
ライトイエロー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightyellow')
NaNも加えてデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
グラフのサイズを設定する	plt.figure(figsize=(横幅, 高さ))
横棒グラフをライトイエロー色で描画する	plt.barh(データ列x, データ列y, color='lightyellow')
イテラブルからサンプリングする	random.sample(iterable)
ミスティローズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mistyrose')
option: マーカーの色をグリーンイエローにする	markerfacecolor = 'greenyellow'
モデルの予測値と実測値を散布図に描く	plt.scatter(目的変数, model.predict(説明変数))
実数を切り下げる	math.floor(x)
タン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='tan')
ヒストグラムの色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムの色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
nをn2分の一にする	n /= n2
横棒グラフの色をタンにする	plt.barh(データ列x, データ列y, color='tan')
option: 左三角マーカーを使う	marker = '<'
カウンタの正の数のみ残す	+aCounter
保存するCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
option: リネン色を使う	color = 'linen'
折れ線グラフを紺色で描画する	plt.plot(データ列x, データ列y, color='darkblue')
nからstep間隔で無限にカウントアップする	itertools.count(start=n, step=step)
ヒストグラムの色をシスルに設定する	plt.hist(データ列, color='thistle')
option: グラフの色をライトグリーンに設定する	color = 'lightseagreen'
棒グラフをフォレストグリーン色で描画する	plt.bar(データ列x, データ列y, color='forestgreen')
option: マーカーを下三角に変更する	marker = 'v'
ヒストグラムの色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
横棒グラフをスノー色で描画する	plt.barh(データ列x, データ列y, color='snow')
イテラブルとイテラブルの直積	itertools.product(iterable, iterable2)
option: グラフの色を紺碧に設定する	color = 'azure'
変数について数式の微分を行う	sympy.diff(e, z)
オールドレース色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='oldlace')
三自然数の最大公約数	math.gcd(n, n2, n3)
文字列をコロンで区切って、列挙する	s.split(':')
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
option: マーカーの色をローングリーンにする	markerfacecolor = 'lawngreen'
データ列の推移を折れ線グラフで可視化する	plt.plot(range(len(データ列)), データ列)
数式を積分する	sympy.integrate(e)
スノー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='snow')
ミントクリーム色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mintcream')
ヒストグラムをライトイエロー色で描画する	plt.hist(データ列, color='lightyellow')
横棒グラフをコーンズシルク色で描画する	plt.barh(データ列x, データ列y, color='cornsilk')
ミッドナイトブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='midnightblue')
棒グラフの色を紺碧にする	plt.bar(データ列x, データ列y, color='azure')
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
データフレームのリストカラムの欠損値を直後の値で埋める	df[aList].fillna(method='bfill')
散布図をスレートブルー色で描画する	plt.scatter(データ列x, データ列y, color='slateblue')
折れ線グラフの下三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='v', markeredgewidth=2.5)
モデルの当てはまりの良さを求める	sklearn.metrics.r2_score(目的変数, model.predict(説明変数))
棒グラフの色をフォレストグリーンにする	plt.bar(データ列x, データ列y, color='forestgreen')
横棒グラフをレベッカパープル色で描画する	plt.barh(データ列x, データ列y, color='rebeccapurple')
二進文字列をバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
option: マーカーをバツに変更する	marker = 'x'
散布図をパパイヤウィップ色で描画する	plt.scatter(データ列x, データ列y, color='papayawhip')
棒グラフの色をスレートブルーにする	plt.bar(データ列x, データ列y, color='slateblue')
散布図のマーカーの大きさをnに設定する	plt.scatter(データ列x, データ列y, s=n)
カデットブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cadetblue')
日付時刻データが水曜日か調べる	aDatetime.weekday() == 2
二つのデータフレームを結合する	pd.merge(df, df2)
ライトイエロー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightyellow')
日付時刻データの時刻	aDatetime.time()
カウンタを集合に変換する	set(aCounter)
バリーウッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='burlywood')
折れ線グラフの三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='^', markeredgewidth=2.5)
折れ線グラフの色をグレーに設定する	plt.plot(データ列x, データ列y, color='grey')
データ列の欠損値を直前の値に設定する	ds.fillna(method='ffill')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
リネン色のヒストグラムを描画する	plt.hist(データ列, color='linen')
option: 欠損値は無視する	dropna = True
散布図の色をライトシアンにする	plt.scatter(データ列x, データ列y, color='lightcyan')
データフレームのリストカラムの値を正規表現patternでまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
ベージュ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='beige')
ブルーバイオレット色の散布図を描画する	plt.scatter(データ列x, データ列y, color='blueviolet')
棒グラフを青色で描画する	plt.bar(データ列x, データ列y, color='blue')
グラフの色を暗くする	sns.set(pallete='dark')
モデルの残差を求める	目的変数 - model.predict(説明変数)
横棒グラフをローングリーン色で描画する	plt.barh(データ列x, データ列y, color='lawngreen')
ローングリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lawngreen')
棒グラフの色を青緑にする	plt.bar(データ列x, データ列y, color='teal')
散布図のマーカーを右三角にする	plt.scatter(データ列x, データ列y, marker='>')
バリーウッド色のヒストグラムを描画する	plt.hist(データ列, color='burlywood')
棒グラフの色をパールゴールデンロッドにする	plt.bar(データ列x, データ列y, color='palegoldenrod')
棒グラフをピーチパフ色で描画する	plt.bar(データ列x, データ列y, color='peachpuff')
nをn2で割った余りをnに代入する	n %= n2
スラグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='slategray')
部分集合か調べる	aSet.issubset(aSet2)
データ列を1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
折れ線グラフの大バツマーカーを青くする	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='b')
横棒グラフの色をコーラルにする	plt.barh(データ列x, データ列y, color='coral')
option: グラフの種類を破線に設定する	linestyle = 'dashed'
option: マーカーの色をダークシアンにする	markerfacecolor = 'darkcyan'
スピアマン相関係数でデータフレームの相関行列	df.corr(method='spearman')
option: タン色を使う	color = 'tan'
カウンタの上位を列挙する	aCounter.most_common(k)
データフレームのリストカラムの中に文字列があるか調べる	df[aList].isin([value])
option: ネイビー色を使う	color = 'navy'
データフレームのリストカラムの欠損値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
option: グラフの色をディムグレーに設定する	color = 'dimgrey'
グリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='green')
散布図の色をハニーデューにする	plt.scatter(データ列x, データ列y, color='honeydew')
ヒストグラムをホットピンク色で描画する	plt.hist(データ列, color='hotpink')
リストとリストについての散布図にrgbのダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', c=rgb)
散布図に赤いマーカーを描画する	plt.scatter(データ列x, データ列y, markerfacecolor='r')
横棒グラフの色をアクアにする	plt.barh(データ列x, データ列y, color='aqua')
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
カラーバーを横向きで描画する	plt.colorbar(orientation='horizontal')
ヒストグラムを茶色色で描画する	plt.hist(データ列, color='brown')
主成分分析を行う	model = sklearn.decomposition.PCA(n_components=n)
日付データが日付データより前か調べる	aDate < aDate2
ヒストグラムをスノー色で描画する	plt.hist(データ列, color='snow')
predicateFuncが真となるイテラブルの要素	itertools.takewhile(predicateFunc, iterable)
データ列間の平均二乗誤差を求める	sklearn.metrics.mean_squared_error(データ列, データ列2)
変数名をキーとして、辞書	dict(name=element)
文字列中にひとつでも非英数字が含まれるか調べる	any(not c.isalnum() for c in s)
option: マーカーの色をライトグリーンにする	markerfacecolor = 'lightseagreen'
データ列の欠損値をxで埋める	ds.fillna(x)
タン色のヒストグラムを描画する	plt.hist(データ列, color='tan')
アイボリー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='ivory')
散布図をロイヤルブルー色で描画する	plt.scatter(データ列x, データ列y, color='royalblue')
option: 三角マーカーを描画する	marker = '^'
option: グラフの色をダークスラテグレーに設定する	color = 'darkslategray'
実数の逆余弦	math.acos(x)
データ列のユニークな値	ds.unique()
データ列を等間隔でn個にビン分割する	pd.cut(ds, n)
option: スプリンググリーン色を使う	color = 'springgreen'
ヒストグラムの色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
棒グラフをオリベドラブ色で描画する	plt.bar(データ列x, データ列y, color='olivedrab')
グローバル変数の一覧	globals()
グラフの用途をポスターに設定する	sns.set(context='poster')
ミディアムスレートブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumslateblue')
0からnまでのスライス	slice(n)
文字列の終了位置より前に部分文字列が含まれるか調べる	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が含まれないか調べる	s.find(sub, 0, end) == -1
棒グラフをダークサーモン色で描画する	plt.bar(データ列x, データ列y, color='darksalmon')
配列を転置する	aArray.T
棒グラフの色をシスルにする	plt.bar(データ列x, データ列y, color='thistle')
マゼンタ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='magenta')
カウンタの項目を増やす	aCounter[element] += 1
option: グラフの色をミッドナイトブルーに設定する	color = 'midnightblue'
データフレームの中に文字列と文字列があるか調べる	df.isin([value, value2])
文字列が全て空白文字からなるか調べる	s.isspace()
コーンズシルク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='cornsilk')
散布図をダークオレンジ色で描画する	plt.scatter(データ列x, データ列y, color='darkorange')
白い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='w')
散布図の下三角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='k')
二つの配列を列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
リストとリストについて散布図を描画して、ポイントマーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='.', c=rgb)
散布図の色をミディアムシアグリーンにする	plt.scatter(データ列x, データ列y, color='mediumseagreen')
ディムグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='dimgray')
整数nのバイト長	(n.bit_length() + 7) // 8
ライトグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightseagreen')
横棒グラフをダークオリーブグリーン色で描画する	plt.barh(データ列x, データ列y, color='darkolivegreen')
タプルの平均値	sum(aTuple)/len(aTuple)
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
シャルトリューズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='chartreuse')
散布図の色をオレンジにする	plt.scatter(データ列x, データ列y, color='orange')
全要素を初期値で初期化した配列	np.full(要素数, 初期値, dtype=np.int)
nをn2で割る	n / n2
option: 複素数型を使う	dtype = bool
棒グラフの色をインディゴにする	plt.bar(データ列x, データ列y, color='indigo')
棒グラフの色を黄色にする	plt.bar(データ列x, データ列y, color='yellow')
棒グラフの色をレモンシフォンにする	plt.bar(データ列x, データ列y, color='lemonchiffon')
散布図の大バツマーカーを青くする	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='b')
ヒストグラムをオリベドラブ色で描画する	plt.hist(データ列, color='olivedrab')
文字列の末尾から範囲を指定して部分文字列を探す	s.find(sub, start, end)
データフレームを各列毎にグループ化して、文字列というグループを使う	df.groupby(column).get_group(s)
ラベンダーブラッシュ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lavenderblush')
ファイルをBOM付きでオープンする]	open(filepath, encoding='utf_8_sig')
ヒストグラムの色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
横棒グラフをフクシア色で描画する	plt.barh(データ列x, データ列y, color='fuchsia')
ライトスチールブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightsteelblue')
option: グラフの色をレベッカパープルに設定する	color = 'rebeccapurple'
データフレームの最頻値	df.mode()
分子割る分母	fractions.Fraction(分子, 分母)
オールドレース色のヒストグラムを描画する	plt.hist(データ列, color='oldlace')
散布図をグレー色で描画する	plt.scatter(データ列x, データ列y, color='gray')
散布図の色をスチールブルーにする	plt.scatter(データ列x, データ列y, color='steelblue')
全要素を０で初期化した行列	np.zeros(行数, 列数)
グレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='grey')
赤色のヒストグラムを描画する	plt.hist(データ列, color='red')
option: マーカーの色をラベンダーブラッシュにする	markerfacecolor = 'lavenderblush'
散布図を貝殻色で描画する	plt.scatter(データ列x, データ列y, color='seashell')
配列をリストを境界値としてビン分割する	pd.cut(aArray, aList)
option: 三角マーカーを使う	marker = '^'
横棒グラフの色をライトコーラルにする	plt.barh(データ列x, データ列y, color='lightcoral')
データフレームのリストカラムの欠損値を平均値に設定する	df[aList].fillna(df[aList].mean())
option: パールゴールデンロッド色を使う	color = 'palegoldenrod'
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
リストを縦軸、リストを横軸として、大きさnの散布図を描画する	plt.scatter(データ列x, データ列y, s=n)
option: マーカーの線幅を変更する	markeredgewidth = 2.5
データ列をビン数nでビン分割する	pd.cut(ds, n)
日付データが水曜日か調べる	aDate.weekday() == 2
ダークスレートブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkslateblue')
散布図を小麦色色で描画する	plt.scatter(データ列x, データ列y, color='wheat')
ヒストグラムの色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
横棒グラフをグリーンイエロー色で描画する	plt.barh(データ列x, データ列y, color='greenyellow')
折れ線グラフの透明度を設定する	plt.plot(データ列x, データ列y, alpha=0.5)
折れ線グラフの色をダークオーキッドに設定する	plt.plot(データ列x, データ列y, color='darkorchid')
option: オールドレース色を使う	color = 'oldlace'
ミディアムブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumblue')
横棒グラフをネイビー色で描画する	plt.barh(データ列x, データ列y, color='navy')
散布図の色をダークシアンにする	plt.scatter(データ列x, データ列y, color='darkcyan')
散布図をラベンダー色で描画する	plt.scatter(データ列x, データ列y, color='lavender')
オリベドラブ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='olivedrab')
データフレームをグループ化し、それぞれの列に対し最小値を求める	df.groupby(column)[column2].min()
折れ線グラフをオリーブ色で描画する	plt.plot(データ列x, データ列y, color='olive')
ファイルからストリームをオープンして]、fileとする	file = open(filepath)
ヒストグラムをスプリンググリーン色で描画する	plt.hist(データ列, color='springgreen')
折れ線グラフをクリムゾン色で描画する	plt.plot(データ列x, データ列y, color='crimson')
データ列の標本標準偏差	ds.std()
折れ線グラフの丸マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='#800080')
リストを引数として展開して表示する	print(*aList, sep=',')
option: グラフの色をアクアに設定する	color = 'aqua'
棒グラフをダークマゼンタ色で描画する	plt.bar(データ列x, データ列y, color='darkmagenta')
オレンジ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='orange')
データ列の欠損値を直後の値で埋める	ds.fillna(method='bfill')
option: グラフの色をマゼンタに設定する	color = 'magenta'
パールバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='palevioletred')
文字列を白色でプリントできる文字列に変換する	f'\033[37m{value}\033[0m'
ヒストグラムをオレンジレッド色で描画する	plt.hist(データ列, color='orangered')
チョコレート色の散布図を描画する	plt.scatter(データ列x, データ列y, color='chocolate')
option: スラッシュをセパレータで使う	sep = '/'
ファイルからn文字、読み込む	f.read(n)
グラフの縦軸を対数に変更する	plt.yscale('log')
棒グラフの色をゲインズボロにする	plt.bar(データ列x, データ列y, color='gainsboro')
Pandasで、日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
ヒストグラムの色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
散布図の色をリネンにする	plt.scatter(データ列x, データ列y, color='linen')
整数nの十六進文字列	hex(n)[2:]
配列の和	aArray + aArray2
ライトシアン色のヒストグラムを描画する	plt.hist(データ列, color='lightcyan')
名前付きタプルを定義する	C = collections.namedtuple('クラス名', プロパティ名)
日付時刻データををn日後に進める	aDatetime + datetime.timedelta(days=n)
データフレームを列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
折れ線グラフを白色で描画する	plt.plot(データ列x, データ列y, color='white')
nが-9以上、9以下か調べる	-9 <= n <= 9
データフレームが重複しているか調べる	df.duplicated()
リストをビン数nでビン分割する	pd.cut(aList, n)
10を底とする実数の対数	math.log10(x)
散布図の色をラベンダーブラッシュにする	plt.scatter(データ列x, データ列y, color='lavenderblush')
リストとリストについての散布図にダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D')
リストの要素を逆順にする	aList[::-1]
折れ線グラフを青い点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='b')
ヒストグラムをオレンジ色で描画する	plt.hist(データ列, color='orange')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(データ列x, データ列y, color='deepskyblue')
option: マーカーの色を茶色にする	markerfacecolor = 'brown'
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(データ列x, データ列y, color='darkslategrey')
散布図の星マーカーを青くする	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='b')
ファイルをUTF8でオープンする]	open(filepath, encoding='utf-8')
折れ線グラフの大バツマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='X', markersize=2.0)
ダーク・スラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategrey')
データフレームをJSONLファイルにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
棒グラフをライトコーラル色で描画する	plt.bar(データ列x, データ列y, color='lightcoral')
配列の次元数	aArray.ndim
データフレームからカテゴリデータの列名の一覧を使う	df.select_dtypes('object').columns
棒グラフをパールバイオレットレッド色で描画する	plt.bar(データ列x, データ列y, color='palevioletred')
配列の次元を変形する	aArray.reshape(行数, 列数)
タン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='tan')
文字列を正規表現によって置き換える	re.sub(pattern, newsub, s)
全ての８進数字	string.octdigits
データフレームの中の列をリストを境界値としてビン分割する	pd.cut(df[col], aList)
データフレームの列を説明変数にする	説明変数 = df[['列名', '列名2']]
eの乗数	math.exp(x)
有理数の分母	q.denominator
predicateFuncが真となるイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o')
パープル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='purple')
データ列の離れ具合を可視化する	sns.residplot(x=データ列, y=データ列)
横棒グラフをペールグリーン色で描画する	plt.barh(データ列x, データ列y, color='palegreen')
データフレームのリストカラムの欠損値を直前の値に設定する	df[aList].fillna(method='ffill')
散布図の色をマゼンタにする	plt.scatter(データ列x, データ列y, color='magenta')
イテラブルを累積する	itertools.accumulate(iterable, operator.mul)
rgbの星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*', c=rgb)
折れ線グラフを青紫色で描画する	plt.plot(データ列x, データ列y, color='violet')
散布図のポイントマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='r')
データを標準化する	sklearn.preprocessing.StandardScaler().fit_transform(データ)
日付時刻データが土曜日か調べる	aDatetime.weekday() == 5
データフレームのカラムの要約統計量	df[col].describe()
イテラブルの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
二次元リストをフラット化する	sum(aList)
データフレームのカラムの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
ヒストグラムの色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
サーモン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='salmon')
実数の三乗	x ** 3
横棒グラフの色をオレンジレッドにする	plt.barh(データ列x, データ列y, color='orangered')
折れ線グラフを青い実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='b')
折れ線グラフを青色で描画する	plt.plot(データ列x, データ列y, color='blue')
option: マーカーの色をマゼンタにする	markerfacecolor = 'magenta'
ヒストグラムをライトスレイグレー色で描画する	plt.hist(データ列, color='lightslategrey')
日付時刻データと日付時刻データの時間差	aDatetime - aDatetime2
散布図の色をブルーバイオレットにする	plt.scatter(データ列x, データ列y, color='blueviolet')
n2がnより大きく、かつ、n3未満か調べる	n < n2 and n2 < n3
部分文字列を範囲を指定して探す	s.find(sub, start, end)
モカシン色のヒストグラムを描画する	plt.hist(データ列, color='moccasin')
黒い大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X', c='k')
アンサンブル学習で回帰分析を行う	sklearn.ensemble.VotingRegressor()
横棒グラフを茶色色で描画する	plt.barh(データ列x, データ列y, color='brown')
棒グラフをネイビー色で描画する	plt.bar(データ列x, データ列y, color='navy')
option: ライトイエロー色を使う	color = 'lightyellow'
棒グラフの色を青にする	plt.bar(データ列x, データ列y, color='blue')
文字列をシンボルにして、変数にする	z = sympy.Symbol(s)
year年の日付時刻	datetime.datetime(year=year, month=1, day=1)
ファイル名がCSVファイルか調べる	filename.endswith('.csv')
散布図の色をグレーにする	plt.scatter(データ列x, データ列y, color='grey')
散布図に黒い左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<', c='k')
文字列中の平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
データフレームの列の名前をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
スノー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='snow')
データフレームの列がxでない行をフィルタする	df[df[column] == x]
ピンク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='pink')
データフレームの指定された列を配列に変換する	df[column].values
小麦色色のヒストグラムを描画する	plt.hist(データ列, color='wheat')
データフレームの列のユニークな値	df[col].unique()
ナバホホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='navajowhite')
ファイルを文字列の示すエンコーディングでオープンする]	open(filepath, encoding=s)
option: マーカーの色を貝殻にする	markerfacecolor = 'seashell'
日付データの曜日を整数で使う	aDate.weekday()
棒グラフをベージュ色で描画する	plt.bar(データ列x, データ列y, color='beige')
青い点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='b')
文字列の先頭で複数行対応として正規表現にマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
option: マーカーの色をミディアムオーキッドにする	markerfacecolor = 'mediumorchid'
本日が日曜日か調べる	datetime.datetime.today().weekday() == 6
Pandasで、データフレームのcollのエポック秒から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
折れ線グラフをシャルトリューズ色で描画する	plt.plot(データ列x, データ列y, color='chartreuse')
option: オリベドラブ色を使う	color = 'olivedrab'
option: 黄色色を使う	color = 'yellow'
折れ線グラフの色をグレーに設定する	plt.plot(データ列x, データ列y, color='gray')
整数nのビット長	n.bit_length()
乱数で要素を埋めた配列	np.random.random(N)
xとyの商と余りを同時に求める	divmod(x, y)
横棒グラフをトマト色で描画する	plt.barh(データ列x, データ列y, color='tomato')
オブジェクトのプロパティの値を値に設定する	setattr(obj, プロパティ名, 値)
散布図のポイントマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='k')
ロイヤルブルー色のヒストグラムを描画する	plt.hist(データ列, color='royalblue')
ダーク・スラテグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkslategrey')
散布図をダークカーキ色で描画する	plt.scatter(データ列x, データ列y, color='darkkhaki')
ピアソン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
散布図をダークグリーン色で描画する	plt.scatter(データ列x, データ列y, color='darkgreen')
データフレームを複数の列によってまとめたグループ	df.groupby(columns)
ミディアムパープル色のヒストグラムを描画する	plt.hist(データ列, color='mediumpurple')
option: グラフの種類を一点鎖線に設定する	linestyle = 'dashbot'
散布図をコーンズシルク色で描画する	plt.scatter(データ列x, データ列y, color='cornsilk')
折れ線グラフをロージーブラウン色で描画する	plt.plot(データ列x, データ列y, color='rosybrown')
カウンタ同士でユニオン	aCounter | aCounter2
散布図の色をシスルにする	plt.scatter(データ列x, データ列y, color='thistle')
ペールグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='palegreen')
折れ線グラフをダークオーキッド色で描画する	plt.plot(データ列x, データ列y, color='darkorchid')
散布図を青色で描画する	plt.scatter(データ列x, データ列y, color='blue')
リストとリストについての散布図にrgbの三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', c=rgb)
折れ線グラフのバツマーカーを黒くする	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='k')
棒グラフをダークゴールデンロッド色で描画する	plt.bar(データ列x, データ列y, color='darkgoldenrod')
データ列の第三四分位数	ds.quantile(0.75)
データ列が正規分布に従うか仮説検定する	scipy.stats.shapiro(データ列)
散布図の色をレベッカパープルにする	plt.scatter(データ列x, データ列y, color='rebeccapurple')
両端キューが空でないか調べる	len(deq) != 0
オプションで、標準エラーを使う	file = sys.stderr
JSONLファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
データフレームの中で何行、重複するか見る	df.duplicated().sum()
棒グラフの色をダークシアンにする	plt.bar(データ列x, データ列y, color='darkcyan')
option: マーカーの色を青紫にする	markerfacecolor = 'violet'
等間隔の配列を作る＼	np.arange(開始値, 終了値, 等差)
ホットピンク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='hotpink')
表データをインポートする	import pandas as pd
三角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='^')
折れ線グラフのマーカーを丸にする	plt.plot(データ列x, データ列y, marker='o')
折れ線グラフを黄色色で描画する	plt.plot(データ列x, データ列y, color='yellow')
多次元データを主成分分析でパステル調に次元に次元削減する	sklearn.decomposition.PCA(n_components=N).fit_transform(多次元データ)
棒グラフをペルー色で描画する	plt.bar(データ列x, データ列y, color='peru')
ライトグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightgray')
ヒストグラムと勾配ブースティングで回帰分析を行う	model = sklearn.ensemble.HistGradientBoostingRegressor()
ヒストグラムをターコイズ色で描画する	plt.hist(データ列, color='turquoise')
淡いピンク色色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightpink')
散布図のダイアモンドマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='D', markeredgewidth=2.5)
イテラブルをイミュータブルな集合に変換する	frozenset(iterable)
データをL2ノルムで正規化する	"sklearn.preprocessing.Normalizer(norm=""l2"").fit_transform(データ列)"
ヒストグラムをコーラル色で描画する	plt.hist(データ列, color='coral')
データ列からユニークな要素を抽出し、リスト化する	ds.unique().tolist()
赤色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='red')
棒グラフの色をオリーブにする	plt.bar(データ列x, データ列y, color='olive')
横棒グラフをサーモン色で描画する	plt.barh(データ列x, データ列y, color='salmon')
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()//60
ロバストな線形回帰分析の準備をする	model = sklearn.linear_model.HuberRegressor()
横棒グラフをダークバイオレット色で描画する	plt.barh(データ列x, データ列y, color='darkviolet')
折れ線グラフをカデットブルー色で描画する	plt.plot(データ列x, データ列y, color='cadetblue')
ヒストグラムベースの勾配ブースティング回帰木を作る	model = sklearn.ensemble.HistGradientBoostingRegressor()
option: マーカーの色をドジャーブルーにする	markerfacecolor = 'dodgerblue'
横棒グラフを青くする	plt.barh(データ列x, データ列y, color='b')
紺碧色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='azure')
散布図を青緑色で描画する	plt.scatter(データ列x, データ列y, color='teal')
option: モカシン色を使う	color = 'moccasin'
リストを四分位数ごとにビン分割する	pd.qcut(aList, 4)
ライトスレイグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightslategrey')
ヒストグラムを二つ並べて描画する	plt.hist([データ列, データ列], color=['b', 'r'])
棒グラフの色をラベンダーにする	plt.bar(データ列x, データ列y, color='lavender')
ダークゴールデンロッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkgoldenrod')
データフレームからカテゴリデータの列を抽出する	df.select_dtypes('object')
文字列をゼロ埋めする	s.zfill(文字列幅)
データ列が正規分布からどの程度、尖っているか見る	ds.skew()
標準出力のバッファをフラッシュする	sys.stdout.flush()
ターコイズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='turquoise')
スカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='skyblue')
折れ線グラフをブラック色で描画する	plt.plot(データ列x, データ列y, color='black')
option: 線の種類を点線に設定する	linestyle = 'dotted'
空の両端キュー	collections.deque()
日付データにn分分、加算する	aDate + datetime.timedelta(minutes=n)
文字列を白色でプリントする	print(f'\033[37m{value}\033[0m')
ラベンダー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lavender')
リストの末尾	aList[-1]
空のリスト	[]
option: ライトサーモン色を使う	color = 'lightsalmon'
棒グラフをデピンク色で描画する	plt.bar(データ列x, データ列y, color='deeppink')
デピンク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='deeppink')
option: グラフの色をダークサーモンに設定する	color = 'darksalmon'
データフレームの列が文字列で始まる行を抽出する	df[df[column].str.startswith(s)]
リストとリストについての散布図に黒い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', c='k')
数式を部分分数に展開する	sympy.apart(e)
データフレームから指定されたデータ型の列名の一覧	df.select_dtypes(型).columns
ミディアムアクアマリン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumaquamarine')
ディムグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='dimgrey')
散布図をインディゴ色で描画する	plt.scatter(データ列x, データ列y, color='indigo')
横棒グラフをハニーデュー色で描画する	plt.barh(データ列x, データ列y, color='honeydew')
クラス分類の予測精度を見る	混同行列 = sklearn.metrics.confusion_matrix(正解データ列, 予測データ列)
option: グラフの色をパープルに設定する	color = 'purple'
グラフの色を色差別なくする	sns.set(pallete='colorblind')
ヒストグラムの色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='b')
ランダムフォレストで回帰分析を行う	model = sklearn.ensemble.RandomForestRegressor()
文字列を左トリムする	s.lstrip()
ヒストグラムをグリーン色で描画する	plt.hist(データ列, color='green')
折れ線グラフの色を耐火レンガに設定する	plt.plot(データ列x, データ列y, color='firebrick')
実数を小数点以下で丸める	round(x, n)
ダークマゼンタ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkmagenta')
横棒グラフの色をバリーウッドにする	plt.barh(データ列x, データ列y, color='burlywood')
リストとリストについての散布図にrgbの下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', c=rgb)
データを最大値と最小値で正規化する	sklearn.preprocessing.MinMaxScaler().fit_transform(データ)
option: マーカーの色をフクシアにする	markerfacecolor = 'fuchsia'
文字列中から正規表現にASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
棒グラフの色をディムグレーにする	plt.bar(データ列x, データ列y, color='dimgrey')
ライトスチールブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightsteelblue')
文字列をASCII限定として正規表現で分割する	re.split(pattern, s, flags=re.ASCI)
グラフの色を明るくする	sns.set(pallete='bright')
ガウス過程回帰モデルを作る	model = sklearn.gaussian_process.GaussianProcessRegressor()
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列x, データ列y, color='darkgray')
リストとリストについて散布図を描画して、大バツマーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='X', c=rgb)
option: グラフの種類を点線に設定する	linestyle = 'dotted'
正規分布による確率密度関数	scipy.stats.norm.pdf(x, loc=平均値, scale=標準偏差)
散布図の左三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='r')
option: アクアマリン色を使う	color = 'aquamarine'
横棒グラフの色をディムグレーにする	plt.barh(データ列x, データ列y, color='dimgrey')
全要素を０で初期化した整数型の行列	np.zeros(行数, 列数, dtype=np.int)
モデルを当てはめる	model.fit(説明変数, 目的変数)
ゼロ埋めされた符号なし８ビット整数型の配列	np.zeros(要素数, dtype=np.uint8)
リストとリストについてリストの値に応じて、散布図の色を変える	plt.scatter(データ列x, データ列y, c=aList, cmap='Blues')
散布図の色をライトスチールブルーにする	plt.scatter(データ列x, データ列y, color='lightsteelblue')
棒グラフをローングリーン色で描画する	plt.bar(データ列x, データ列y, color='lawngreen')
散布図に黒い三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^', c='k')
散布図をベージュ色で描画する	plt.scatter(データ列x, データ列y, color='beige')
ランダムフォレストでクラス分類を行う	model = sklearn.ensemble.RandomForestClassifier()
赤い下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v', c='r')
整数乱数で要素を埋めた配列	np.random.randint(開始値, 終了値, N)
横棒グラフの色をシエナにする	plt.barh(データ列x, データ列y, color='sienna')
横棒グラフをライトスレイグレー色で描画する	plt.barh(データ列x, データ列y, color='lightslategray')
ライトグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgray')
折れ線グラフをサンディーブラウン色で描画する	plt.plot(データ列x, データ列y, color='sandybrown')
グリッドの線の種類を点線に変更する	plt.grid(linestyle='dotted')
折れ線グラフの色をタンに設定する	plt.plot(データ列x, データ列y, color='tan')
データフレームのリストカラムの要約統計量	df[aList].describe()
ミディアムターコイズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumturquoise')
データフレームのカラムの空文字を欠損値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
散布図をスノー色で描画する	plt.scatter(データ列x, データ列y, color='snow')
散布図の左三角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='k')
横棒グラフをインディゴ色で描画する	plt.barh(データ列x, データ列y, color='indigo')
option: ダークマゼンタ色を使う	color = 'darkmagenta'
棒グラフの色を小麦色にする	plt.bar(データ列x, データ列y, color='wheat')
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(データ列x, データ列y, color='blanchedalmond')
散布図をビスク色で描画する	plt.scatter(データ列x, データ列y, color='bisque')
棒グラフをライトスレイグレー色で描画する	plt.bar(データ列x, データ列y, color='lightslategray')
改行なしに文字列をプリントする	print(value, end='')
散布図に右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>')
option: ダークオレンジ色を使う	color = 'darkorange'
ダークサーモン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darksalmon')
year年を日付に変換する	datetime.date(year=year, month=1, day=1)
散布図の色をピンクにする	plt.scatter(データ列x, データ列y, color='pink')
option: 読み込まないフッタをnに設定する	skipfooter = n
option: 丸マーカーを使う	marker = 'o'
ダークバイオレット色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkviolet')
折れ線グラフに黒い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='k')
乱数シードをnで初期化する	random.seed(n)
イテラブルを配列に変換する	np.array(iterable)
散布図の色をオーキッドにする	plt.scatter(データ列x, データ列y, color='orchid')
タプルを展開してプリントする	print(*aTuple)
データフレームの列の種類	df.info()
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()
option: 改行コードをWindowsに設定する	newline = '\r\n'
列をキーにして二つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
option: グラフの色をライトスレイグレーに設定する	color = 'lightslategray'
横棒グラフをプラム色で描画する	plt.barh(データ列x, データ列y, color='plum')
データフレームの列をインデックスに設定する	df.set_index(column)
データフレームのリストカラムを1000の位で丸める	df[aList].round(-3)
集合の補集合	aSet.difference(aSet2)
option: グラフの色をダークシアンに設定する	color = 'darkcyan'
小麦色色の線グラフを描画する	plt.plot(データ列x, データ列y, color='wheat')
データ列の値が欠損値か調べる	ds.isna()
データフレームのカラムの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
棒グラフの色を貝殻にする	plt.bar(データ列x, データ列y, color='seashell')
アンティークホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='antiquewhite')
フクシア色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='fuchsia')
日付データをn時間前に戻す	aDate - datetime.timedelta(hours=n)
ヒストグラムをレモンシフォン色で描画する	plt.hist(データ列, color='lemonchiffon')
コマンドラインフラグの状態	sys.flags
黄色い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='y')
棒グラフの色をカデットブルーにする	plt.bar(データ列x, データ列y, color='cadetblue')
year年month月day日hour時minute分を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
ふたつの集合に共通する要素からなる集合	aSet.intersection(aSet2)
option: グラフの色をホワイトスモークに設定する	color = 'whitesmoke'
option: グラフの色をリネンに設定する	color = 'linen'
ミディアムアクアマリン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumaquamarine')
散布図の色をダークグリーンにする	plt.scatter(データ列x, データ列y, color='darkgreen')
n個の集まりからk個重複なく選ぶ方法	math.comb(n, k)
散布図を赤くする	plt.scatter(データ列x, データ列y, color='r')
ハローワールドとプリントする	print('Hello World')
散布図に黒いダイアモンドマーカーを描画する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='k')
ディープスカイブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='deepskyblue')
折れ線グラフを青い一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='b')
行列の列	aArray[:, 列番号]
折れ線グラフをレベッカパープル色で描画する	plt.plot(データ列x, データ列y, color='rebeccapurple')
option: グラフの色をドジャーブルーに設定する	color = 'dodgerblue'
リストとリストについての散布図に黒い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', c='k')
散布図の色を白にする	plt.scatter(データ列x, データ列y, color='white')
xを論理値に変換する	bool(x)
横棒グラフをライムグリーン色で描画する	plt.barh(データ列x, データ列y, color='limegreen')
棒グラフの色をグレーにする	plt.bar(データ列x, データ列y, color='grey')
ヒストグラムをディムグレー色で描画する	plt.hist(データ列, color='dimgray')
折れ線グラフに赤い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='r')
パウダーブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='powderblue')
折れ線グラフの色をライトブルーに設定する	plt.plot(データ列x, データ列y, color='lightblue')
リストをひとつ置きに取り出す	aList[::2]
シルバー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='silver')
ミディアムスレートブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumslateblue')
イテラブルのコンビネーション	itertools.combinations(iterable, n)
option: ラベンダー色を使う	color = 'lavender'
データフレームを各列と列の組み合わせ毎にグループ化して、平均値を求める	df.groupby([column, column2], as_index=False).mean()
散布図に赤い左三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='r')
データ列の中にある文字列の合計を数える	ds.isin([value]).sum()
散布図のマーカーを大バツにする	plt.scatter(データ列x, データ列y, marker='X')
棒グラフをサーモン色で描画する	plt.bar(データ列x, データ列y, color='salmon')
線形モデルの切片	model.intercept_
option: グラフの色をカデットブルーに設定する	color = 'cadetblue'
横棒グラフの色をデピンクにする	plt.barh(データ列x, データ列y, color='deeppink')
要素が集合に含まれるか調べる	element in aSet
グリッドの線の種類を実線に変更する	plt.grid(linestyle='solid')
二つの文字列を辞書順で比較する	s < s2
棒グラフの色を耐火レンガにする	plt.bar(データ列x, データ列y, color='firebrick')
option: ゴールデンロッド色を使う	color = 'goldenrod'
横軸の目盛の表示を変更する	plt.xticks(目盛りの値リスト)
列をキーにして二つのデータフレームを内部結合する	pd.merge(df, df2, on=column, how='inner')
データフレームの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
ヒストグラムをロイヤルブルー色で描画する	plt.hist(データ列, color='royalblue')
option: マーカーの色を耐火レンガにする	markerfacecolor = 'firebrick'
データフレームを列によってグループ化して、それぞれのグループごとの分散を求める	df.groupby(column).var()
文字列の終了位置まで部分文字列を探す	s.find(sub, 0, end)
横棒グラフの色をゲインズボロにする	plt.barh(データ列x, データ列y, color='gainsboro')
データ列の各データが何回出現するか見る	ds.value_counts()
ペールグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='palegreen')
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
タプルをn倍する	aTuple * n
プラム色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='plum')
rgbの右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>', c=rgb)
折れ線グラフをライトサーモン色で描画する	plt.plot(データ列x, データ列y, color='lightsalmon')
日付データにn時間分、加算する	aDate + datetime.timedelta(hours=n)
日付時刻データにn分分、加算する	aDatetime + datetime.timedelta(minutes=n)
辞書からキーで指定された項目をポップする	aDict.pop(key)
新しいロッソ回帰モデルを作る	model = sklearn.linear_model.Rosso(alpha=正則化項)
オレンジ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='orange')
タプルを反転する	reversed(aTuple)
ヒストグラムの色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
リストとリストについての散布図に赤い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', c='r')
日付データと日付データの時間差が何分か知る	(aDate - aDate2).total_seconds()//60
ゴールド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='gold')
現在が何秒か知る	datetime.date.today().second
横棒グラフをバリーウッド色で描画する	plt.barh(データ列x, データ列y, color='burlywood')
散布図の三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='^', markeredgewidth=2.5)
パパイヤウィップ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='papayawhip')
日付時刻データからn日分、減算する	aDatetime - datetime.timedelta(days=n)
タプルの最初の文字列を探す	aTuple.index(element)
ダークマゼンタ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkmagenta')
数式の展開を行う	sympy.expand(e)
オプションで、標準出力に出力する	file = sys.stdout
データ列を等量でn個にビン分割する	pd.qcut(ds, n)
散布図をライトゴールドロディイエロー色で描画する	plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')
ヒストグラムをミディアムシアグリーン色で描画する	plt.hist(データ列, color='mediumseagreen')
棒グラフをダークグレー色で描画する	plt.bar(データ列x, データ列y, color='darkgray')
ミッドナイトブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='midnightblue')
折れ線グラフの星マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='*', markeredgewidth=2.5)
ケンドール相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
ヒストグラムの色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
棒グラフの色をライトスチールブルーにする	plt.bar(データ列x, データ列y, color='lightsteelblue')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
ライトグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightgrey')
オーキッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='orchid')
日付データが土曜日か調べる	aDate.weekday() == 5
option: シエナ色を使う	color = 'sienna'
辞書の内部もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
option: グレー色を使う	color = 'gray'
ファイルをバイナリ書き込みできるようにオープンする]	open(filepath, mode='wb')
棒グラフをブランチドアーモンド色で描画する	plt.bar(データ列x, データ列y, color='blanchedalmond')
折れ線グラフに四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s')
散布図の色をダークオレンジにする	plt.scatter(データ列x, データ列y, color='darkorange')
文字列中に部分文字列がいくつか含まれるか調べる	s.count(sub)
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(データ列x, データ列y, color='forestgreen')
option: グラフの色をモカシンに設定する	color = 'moccasin'
文字列の末尾から部分文字列を探す	s.rfind(sub)
ナバホホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='navajowhite')
青紫色の散布図を描画する	plt.scatter(データ列x, データ列y, color='violet')
グラフに凡例を加える	plt.legend(['凡例A', '凡例B'])
散布図をサドルブラウン色で描画する	plt.scatter(データ列x, データ列y, color='saddlebrown')
折れ線グラフをアンティークホワイト色で描画する	plt.plot(データ列x, データ列y, color='antiquewhite')
色名からカラーコードを使う	matplotlib.colors.cnames[色名]
option: マーカーを四角に変更する	marker = 's'
空のタプル	()
文字列が部分文字列で終わるか調べる	s.endswith(sub)
散布図に丸マーカーを使う	plt.scatter(データ列x, データ列y, marker='o')
レモンシフォン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lemonchiffon')
実数の双曲線余弦	math.cosh(x)
option: グラフの色をミディアムスレートブルーに設定する	color = 'mediumslateblue'
ミディアムシアグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumseagreen')
一方に含まれ、他方に含まれない集合	aSet.difference(aSet2)
列'A'と列'B'をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
青い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='b')
スカイブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='skyblue')
データ列の空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
パールゴールデンロッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='palegoldenrod')
データフレームのそれぞれのグループごとの分散	df.groupby(column).var()
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategray')
formatパターンの文字列を日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
イテラブルを集合に変換する	set(iterable)
散布図を青くする	plt.scatter(データ列x, データ列y, color='b')
データフレームの散布図に多項式回帰を加える	sns.regplot(data=df, x='列名', y='列名', order=2)
ペールグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='palegreen')
横棒グラフを青紫色で描画する	plt.barh(データ列x, データ列y, color='violet')
option: グラフの色をアンティークホワイトに設定する	color = 'antiquewhite'
nとn2の論理和	n | n2
CSVファイルTSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列中から正規表現に大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
配列を等量でビン数nでビン分割する	pd.qcut(aArray, n)
黒い星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*', c='k')
日付時刻データと日付時刻データの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
文字列が全て小文字か調べる	s.islower()
データフレームを残差プロットする	sns.residplot(x='列名', y='列名', data=df)
散布図に青い星マーカーを描画する	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='b')
option: グラフの色をナバホホワイトに設定する	color = 'navajowhite'
オブジェクトのプロパティを削除する	delattr(obj, プロパティ名)
リストの文字列の位置をエラーなく使う	aList.index(element) if element in aList else -1
散布図をライトシアン色で描画する	plt.scatter(データ列x, データ列y, color='lightcyan')
日付時刻データにn時間分、加算する	aDatetime + datetime.timedelta(hours=n)
棒グラフの色をモカシンにする	plt.bar(データ列x, データ列y, color='moccasin')
散布図に下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v')
散布図をゴールド色で描画する	plt.scatter(データ列x, データ列y, color='gold')
option: グラフの色をシーグリーンに設定する	color = 'seagreen'
色付きの点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='#800080')
option: グラフの色を淡いピンク色に設定する	color = 'lightpink'
option: マーカーの色をチョコレートにする	markerfacecolor = 'chocolate'
折れ線グラフの色を赤に設定する	plt.plot(データ列x, データ列y, color='red')
option: マーカーの色をダークグリーンにする	markerfacecolor = 'darkgreen'
option: グラフの色をオリーブに設定する	color = 'olive'
折れ線グラフに青い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='b')
散布図をデピンク色で描画する	plt.scatter(データ列x, データ列y, color='deeppink')
折れ線グラフの色を紺に設定する	plt.plot(データ列x, データ列y, color='darkblue')
ミディアムシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumseagreen')
option: グラフの色をゴールドに設定する	color = 'gold'
リストを配列に変換する	np.array(aList)
配列の分散	np.var(aArray)
折れ線グラフを淡いピンク色色で描画する	plt.plot(データ列x, データ列y, color='lightpink')
文字列を走査し、正規表現に複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
横棒グラフをダークオレンジ色で描画する	plt.barh(データ列x, データ列y, color='darkorange')
リストとリストについての散布図にrgbのバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', c=rgb)
横棒グラフをライトシアン色で描画する	plt.barh(データ列x, データ列y, color='lightcyan')
データフレームの列がxより大きい行を抽出する	df[df[column] > x]
折れ線グラフをアイボリー色で描画する	plt.plot(データ列x, データ列y, color='ivory')
辞書をJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
実数の正弦の逆数	math.asin(x)
折れ線グラフを赤い実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='r')
列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, on=column, how='outer')
option: 暗い赤色を使う	color = 'darkred'
散布図に赤い丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o', c='r')
ヒストグラムをリネン色で描画する	plt.hist(データ列, color='linen')
スチールブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='steelblue')
データフレームを列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
実数の正弦	math.sin(x)
ヒストグラムをライトコーラル色で描画する	plt.hist(データ列, color='lightcoral')
タプル内の要素が全て真か調べる	all(aTuple)
option: グラフの色をスラグレーに設定する	color = 'slategrey'
ファイルにxを文字列に変換して書き込む	f.write(str(x))
データフレームを棒グラフにする	sns.barplot(x='カテゴリ列', y='列名', data=df)
option: マーカーの色をシエナにする	markerfacecolor = 'sienna'
データフレームのリストカラムを100の位で丸める	df[aList].round(-2)
データフレームのカラムを10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
棒グラフをミディアムバイオレットレッド色で描画する	plt.bar(データ列x, データ列y, color='mediumvioletred')
nが偶数か調べる	n % 2 == 0
グラフのタイトルを設定する	plt.title('グラフの名称')
ピアソン相関係数でデータフレームの相関行列	df.corr(method='pearson')
パールゴールデンロッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='palegoldenrod')
横棒グラフの色をモカシンにする	plt.barh(データ列x, データ列y, color='moccasin')
データフレームのカラムの第一四分位数	df[col].quantile(0.25)
散布図の色をコーンフラワーブルーにする	plt.scatter(データ列x, データ列y, color='cornflowerblue')
ミッドナイトブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='midnightblue')
データ列の値が正規分布にしたがって発生する累積確率を求める	scipy.stats.norm.cdf(データ列, loc=平均値, scale=標準偏差)
データフレームを列によってグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
データ列のpercent分位数	ds.quantile(percent/100)
ミディアムバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumvioletred')
ゲインズボロ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='gainsboro')
option: 文字コードtextを使う	encoding = text
グラフをポスター用に設定する	sns.set(context='poster')
散布図の星マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='k')
日付データが何年か知る	aDate.year
スレートブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='slateblue')
データフレームの欠損値を最小値に設定する	df.fillna(df.min())
option: 紺碧色を使う	color = 'azure'
文字列の先頭から空白を取り除く	s.lstrip()
棒グラフの色をシアンにする	plt.bar(データ列x, データ列y, color='cyan')
option: マーカーの色をピーチパフにする	markerfacecolor = 'peachpuff'
散布図の色をフォレストグリーンにする	plt.scatter(データ列x, データ列y, color='forestgreen')
文字列を黄色でプリントする	print(f'\033[33m{value}\033[0m')
棒グラフをトマト色で描画する	plt.bar(データ列x, データ列y, color='tomato')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列x, データ列y, color='lightslategray')
スタッキングでクラス分類を行う	sklearn.ensemble.StackingClassifier()
シアン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cyan')
コーンズシルク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cornsilk')
ヒストグラムの色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ゴールデンロッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='goldenrod')
コーラル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='coral')
データフレームの列をダミー変数に変換する	pd.get_dummies(df[column])
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
折れ線グラフを青い破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='b')
チョコレート色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='chocolate')
配列の列ごとの平均値	np.mean(aArray, axis=0)
横棒グラフをライトグレー色で描画する	plt.barh(データ列x, データ列y, color='lightgrey')
棒グラフの色をライトブルーにする	plt.bar(データ列x, データ列y, color='lightblue')
option: マーカーを左三角に変更する	marker = '<'
データフレームの中にいくつ欠損値があるか数える	df.isna().sum()
横棒グラフをミントクリーム色で描画する	plt.barh(データ列x, データ列y, color='mintcream')
ヒストグラムをインディゴ色で描画する	plt.hist(データ列, color='indigo')
ゴールド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='gold')
棒グラフをオールドレース色で描画する	plt.bar(データ列x, データ列y, color='oldlace')
グラフの見栄えを綺麗にする	import seaborn as sns
option: グラフの色をカーキに設定する	color = 'khaki'
データフレームのカラムを小数点以下n桁で丸める	df[col].round(n)
option: 改行コードを旧Macに設定する	newline = '\r'
データフレームのそれぞれのグループごとの最大値	df.groupby(column).max()
データフレームの数値をまとめて小数点以下n桁で丸める	df.round(n)
データフレームをサンプリングする	df.sample()
option: グラフの色をミディアムシアグリーンに設定する	color = 'mediumseagreen'
縦棒グラフを描画して、バーの横幅を調整する	plt.bar(ラベル列, データ列, width=0.5)
データフレームのそれぞれのグループごとの平均値	df.groupby(column).mean()
バイトオーダを知る	sys.byteorder
グラフの横軸にラベルを付ける	plt.xlabel('x軸ラベル')
散布図に黒いバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x', c='k')
実数の逆双曲線正弦	math.asinh(x)
文字列が正規表現にマッチさせる	re.match(pattern, s)
真	True
正規表現モジュールをインポートする	import re
データフレームのリストカラムが正規分布からどの程度、尖っているか見る	df[aList].skew()
横棒グラフの色をグレーにする	plt.barh(データ列x, データ列y, color='gray')
シャルトリューズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='chartreuse')
nを半分にする	n /= 2
option: マーカーを星に変更する	marker = '*'
二つの辞書をチェーンする	collections.ChainMap(aDict, aDict2)
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(データ列x, データ列y, color='antiquewhite')
配列の最大値	np.max(aArray)
散布図をオールドレース色で描画する	plt.scatter(データ列x, データ列y, color='oldlace')
表データを使う	import pandas as pd
棒グラフの色をライムグリーンにする	plt.bar(データ列x, データ列y, color='limegreen')
散布図の下三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='b')
分子n、分母mの有理数を作る	fractions.Fraction(numerator=n, denominator=m)
実数の余弦	math.cos(x)
文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
散布図の色をパープルにする	plt.scatter(データ列x, データ列y, color='purple')
文字列を緑色でプリントする	print(f'\033[32m{value}\033[0m')
データフレームの列がxより大きくx2より小さい行を抽出する	df[(x < df[column]) & (df[column] < x2)]
赤い棒グラフを描画する	plt.bar(データ列x, データ列y, color='r')
既存のファイルをEUCで追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
折れ線グラフの色をサーモンに設定する	plt.plot(データ列x, データ列y, color='salmon')
数式を因数分解する	sympy.factor(e)
横棒グラフの縦幅を調整する	plt.barh(ラベル列, データ列, width=0.5)
散布図をコーラル色で描画する	plt.scatter(データ列x, データ列y, color='coral')
折れ線グラフの下三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='#800080')
グラフの色をパステル調にする	sns.set(pallete='pastel')
多次元データを多次元尺度構成法で濃く次元に次元削減する	sklearn.manifold.MSD(n_components=二).fit_transform(多次元データ)
折れ線グラフに青いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='b')
棒グラフの色をパープルにする	plt.bar(データ列x, データ列y, color='purple')
折れ線グラフをダークシアン色で描画する	plt.plot(データ列x, データ列y, color='darkcyan')
折れ線グラフの色をアクアに設定する	plt.plot(データ列x, データ列y, color='aqua')
散布図の色をインディゴにする	plt.scatter(データ列x, データ列y, color='indigo')
データフレームをTSVファイルでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
option: マーカーの色をライトブルーにする	markerfacecolor = 'lightblue'
実数の逆双曲線正接	math.atanh(x)
リストを逆順にする	aList[::-1]
折れ線グラフをシルバー色で描画する	plt.plot(データ列x, データ列y, color='silver')
option: グラフの色をベージュに設定する	color = 'beige'
リストとリストについて散布図を描画して、下三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='v', c=rgb)
標準入力を得る	sys.stdin
ロバスト分類モデルを作る	model = sklearn.linear_model.RANSACClassifier(random_state=0)
横棒グラフをブランチドアーモンド色で描画する	plt.barh(データ列x, データ列y, color='blanchedalmond')
option: マーカーの色をディープスカイブルーにする	markerfacecolor = 'deepskyblue'
等差数列から整数乱数を生成する	random.randrange(start, end, step)
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='gray')
ファイルから1文字、読み込む	f.read(1)
実数をn乗する	x ** n
文字列の右側から空白を取り除く	s.rstrip()
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
横棒グラフをブルーバイオレット色で描画する	plt.barh(データ列x, データ列y, color='blueviolet')
ライム色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lime')
option: ロージーブラウン色を使う	color = 'rosybrown'
折れ線グラフをベージュ色で描画する	plt.plot(データ列x, データ列y, color='beige')
集合が空か調べる	len(aSet) == 0
データ列をビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
散布図の色をビスクにする	plt.scatter(データ列x, データ列y, color='bisque')
折れ線グラフのマーカーをバツにする	plt.plot(データ列x, データ列y, marker='x')
データフレームを列の値によってグループ化し、要約統計量を求める	df.groupby(column).describe()
文字列のケースを入れ替える	s.swapcase()
ヒストグラムをミスティローズ色で描画する	plt.hist(データ列, color='mistyrose')
折れ線グラフに青い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='b')
パレットトルコイズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='paleturquoise')
折れ線グラフをミディアムターコイズ色で描画する	plt.plot(データ列x, データ列y, color='mediumturquoise')
ダークマゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='darkmagenta')
茶色色のヒストグラムを描画する	plt.hist(データ列, color='brown')
シアン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='cyan')
ライム色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lime')
散布図をトマト色で描画する	plt.scatter(データ列x, データ列y, color='tomato')
折れ線グラフの色をネイビーに設定する	plt.plot(データ列x, データ列y, color='navy')
タプルの中の最大値	max(aTuple)
ロージーブラウン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='rosybrown')
ヒストグラムの色をオレンジに設定する	plt.hist(データ列, color='orange')
タプルの末尾を取り除く	aTuple[:-1]
折れ線グラフの色を白に設定する	plt.plot(データ列x, データ列y, color='white')
option: スラグレー色を使う	color = 'slategrey'
データフレームをJSONLファイルに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
散布図をダークオリーブグリーン色で描画する	plt.scatter(データ列x, データ列y, color='darkolivegreen')
配列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
option: グラフの色をホットピンクに設定する	color = 'hotpink'
option: マーカーの色をロージーブラウンにする	markerfacecolor = 'rosybrown'
勾配ブースティング回帰木を作る	model = sklearn.ensemble.GradientBoostingRegressor()
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
散布図のマーカーを青くする	plt.scatter(データ列x, データ列y, markerfacecolor='b')
散布図をライトサーモン色で描画する	plt.scatter(データ列x, データ列y, color='lightsalmon')
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(データ列x, データ列y, color='mediumspringgreen')
ダークグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkgrey')
散布図の色をバリーウッドにする	plt.scatter(データ列x, データ列y, color='burlywood')
文字列を緑色にする	f'\033[32m{value}\033[0m'
棒グラフの色をダークゴールデンロッドにする	plt.bar(データ列x, データ列y, color='darkgoldenrod')
option: マーカーの色をオリーブにする	markerfacecolor = 'olive'
データ列の中にいくつ文字列があるか数える	ds.isin([value]).sum()
データフレームをインポートする	import pandas as pd
ミディアムブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumblue')
日付時刻データからn秒分、減算する	aDatetime - datetime.timedelta(seconds=n)
淡いピンク色色のヒストグラムを描画する	plt.hist(データ列, color='lightpink')
横棒グラフの色をスラグレーにする	plt.barh(データ列x, データ列y, color='slategrey')
option: 淡いピンク色色を使う	color = 'lightpink'
折れ線グラフに黒い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='k')
配列の行ごとの合計値	np.sum(aArray, axis=1)
ヒストグラムの色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
カウンタの全数	aCounter.total()
データフレームから破壊的に重複を削除する	df.drop_duplicates(inplace=True)
ミントクリーム色のヒストグラムを描画する	plt.hist(データ列, color='mintcream')
データフレームの列をドロップして、更新する	df.drop(column, axis=1, inplace=True)
データフレームをJSONLファイルに保存する	df.to_csv(filename)
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
ダイアモンド印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='D')
nが一桁の数か調べる	-9 <= n <= 9
横棒グラフをチョコレート色で描画する	plt.barh(データ列x, データ列y, color='chocolate')
淡いピンク色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightpink')
option: マーカーの色をダークターコイズにする	markerfacecolor = 'darkturquoise'
フクシア色の線グラフを描画する	plt.plot(データ列x, データ列y, color='fuchsia')
棒グラフの色をブラックにする	plt.bar(データ列x, データ列y, color='black')
要素が全て初期値の配列	np.full(要素数, 初期値, dtype=np.int)
option: マーカーの色をライトスチールブルーにする	markerfacecolor = 'lightsteelblue'
データフレームのポイントプロットを描画する	sns.pointplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
スレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='slateblue')
整数nをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
多次元データを主成分分析で濃く次元に次元削減する	sklearn.decomposition.PCA(n_components=二).fit_transform(多次元データ)
カテゴリデータ列を数値化する	sklearn.preprocessing.LabelEncoder().fit_transform(データ列)
option: BOM付きを使う	encoding = 'utf_8_sig'
ミディアムパープル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumpurple')
データ列の散らばりを可視化する	plt.scatter(データ列x, データ列y)
nをn2倍にする	n *= n2
nを切り捨てながら半分にする	n //= 2
散布図の色をラベンダーにする	plt.scatter(データ列x, データ列y, color='lavender')
白色の線グラフを描画する	plt.plot(データ列x, データ列y, color='white')
行列の行ごとの標準偏差	np.std(aArray, axis=1)
散布図の左三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='#800080')
横棒グラフをライトブルー色で描画する	plt.barh(データ列x, データ列y, color='lightblue')
ケンドールの相関係数を求める	scipy.stats.kendalltau(データ列, データ列2)
横棒グラフの色を暗い赤にする	plt.barh(データ列x, データ列y, color='darkred')
散布図をサンディーブラウン色で描画する	plt.scatter(データ列x, データ列y, color='sandybrown')
グラフの描画でパステル調にカラーパレットを使う	sns.set(pallete='pastel')
実数の自然対数	math.log(x)
フォレストグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='forestgreen')
棒グラフをダークカーキ色で描画する	plt.bar(データ列x, データ列y, color='darkkhaki')
棒グラフの色をグレーにする	plt.bar(データ列x, データ列y, color='gray')
行列の行ごとの分散	np.var(aArray, axis=1)
option: ダークスレートブルー色を使う	color = 'darkslateblue'
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
折れ線グラフに黒い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='k')
グラフの中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
棒グラフをカデットブルー色で描画する	plt.bar(データ列x, データ列y, color='cadetblue')
数式の平方根を求める	sympy.sqrt(e)
棒グラフをコーラル色で描画する	plt.bar(データ列x, データ列y, color='coral')
ダークオレンジ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkorange')
実数を百の位で丸める	round(x, -2)
実数の仮数	math.frexp(x)[0]
リストにリストを追加する	aList.extend(aList2)
横棒グラフの色をネイビーにする	plt.barh(データ列x, データ列y, color='navy')
横棒グラフの色をドジャーブルーにする	plt.barh(データ列x, データ列y, color='dodgerblue')
文字列中にひとつでも非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
ヒストグラムをライトシアン色で描画する	plt.hist(データ列, color='lightcyan')
折れ線グラフの四角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='r')
文字列が文字列リストに含まれるか調べる	s in aStringList
プログラムの実行を異常終了する	sys.exit(1)
option: グラフの色をオリベドラブに設定する	color = 'olivedrab'
散布図の丸マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='o', markersize=2.0)
ヒストグラムの色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
データフレームのカラムの欠損値を中央値で埋める	df[col].fillna(df[col].median())
文字列中にひとつでも非数字が含まれるか調べる	any(not c.isdigit() for c in s)
nにn2をかける	n * n2
キーが辞書に存在するか調べる	key in aDict
ダークサーモン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darksalmon')
文字列をプリントする	print(value)
リスト内の要素が少なくともひとつ真か調べる	any(aList)
散布図の色をクリムゾンにする	plt.scatter(データ列x, データ列y, color='crimson')
ゴーストホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='ghostwhite')
折れ線グラフの色をオレンジレッドに設定する	plt.plot(データ列x, データ列y, color='orangered')
データ列の曜日数	ds.dt.dayofweek
データ列をビン分割する	pd.cut(ds, aList)
データフレームが正規分布からどの程度、歪んでいるか見る	df.kurt()
棒グラフを暗い赤色で描画する	plt.bar(データ列x, データ列y, color='darkred')
文字列中の部分文字列を新しい文字列に置き換える	s.replace(sub, newsub)
データフレームの列がx以上の行を抽出する	df[df[column] >= x]
折れ線グラフに青い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='b')
ミディアムブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumblue')
データフレームをJSONLファイルにBOM付きで保存する	df.to_csv(filename, encoding='utf_8_sig')
ベージュ色のヒストグラムを描画する	plt.hist(データ列, color='beige')
日付時刻データを浮動小数点数に変換する	aDatetime.timestamp()
散布図をダークマゼンタ色で描画する	plt.scatter(データ列x, データ列y, color='darkmagenta')
データフレームの欠損値を平均値に設定する	df.fillna(df.mean())
文字列を黄色にする	f'\033[33m{value}\033[0m'
データ列の欠損値を中央値に設定する	ds.fillna(ds.median())
紺碧色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='azure')
実数を実数で割る	x / y
散布図の色をダークマゼンタにする	plt.scatter(データ列x, データ列y, color='darkmagenta')
決定木を可視化する	sklearn.tree.plot_tree(model, feature_names=X.columns, filled=True)
クリムゾン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='crimson')
データフレームの中の列を等量でn個にビン分割する	pd.qcut(df[col], n)
両端キューの要素を右にn個分ローテンションする	deq.rotate(n)
option: 読み込む行番号をnamesで指定する	usecols = names
ヒストグラムを黄色くする	plt.hist(データ列, color='y')
option: ミディアムオーキッド色を使う	color = 'mediumorchid'
折れ線グラフの色をスカイブルーに設定する	plt.plot(データ列x, データ列y, color='skyblue')
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
カウンタから最頻出な項目の件数	aCounter.most_common()[1]
横棒グラフの色をディープスカイブルーにする	plt.barh(データ列x, データ列y, color='deepskyblue')
実数の床	math.floor(x)
バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x')
横棒グラフの色をライトイエローにする	plt.barh(データ列x, データ列y, color='lightyellow')
折れ線グラフの丸マーカーを赤くする	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='r')
Pythonパスにディレクトリを追加する	sys.path.append(dir)
データフレームの中の列をn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データ列の中にある文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
空の集合	set()
青色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='blue')
散布図の色をペルーにする	plt.scatter(データ列x, データ列y, color='peru')
ターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='turquoise')
折れ線グラフの色をカーキに設定する	plt.plot(データ列x, データ列y, color='khaki')
ミディアムスプリンググリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumspringgreen')
グラフの用途を画面に設定する	sns.set(context='notebook')
option: 降順にする	ascending = False
散布図の四角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='s', markersize=2.0)
棒グラフをラベンダーブラッシュ色で描画する	plt.bar(データ列x, データ列y, color='lavenderblush')
データ列をインポートする	import pandas as pd
アクア色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='aqua')
文字列全体をASCII限定として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
option: マーカーの色をビスクにする	markerfacecolor = 'bisque'
棒グラフの色をライトグリーンにする	plt.bar(データ列x, データ列y, color='lightgreen')
横棒グラフの色をパールバイオレットレッドにする	plt.barh(データ列x, データ列y, color='palevioletred')
横棒グラフをパープル色で描画する	plt.barh(データ列x, データ列y, color='purple')
棒グラフの色をミッドナイトブルーにする	plt.bar(データ列x, データ列y, color='midnightblue')
データ列の最頻値	ds.mode()
ヒストグラムの色をシルバーに設定する	plt.hist(データ列, color='silver')
ハニーデュー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='honeydew')
横棒グラフの色をミントクリームにする	plt.barh(データ列x, データ列y, color='mintcream')
ゼロ埋めされたブール型の配列	np.zeros(要素数, dtype=np.int32)
データフレームの列が文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
データフレームを二つの列によって降順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
ネイビー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='navy')
データフレームから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
ヒストグラムの色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
日付データををn時間後に進める	aDate + datetime.timedelta(hours=n)
文字列を右寄せにする	s.rjust(文字列幅)
ヒストグラムの線の種類を点線に設定する	plt.hist(データ列, linestyle='dotted')
rgbの下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v', c=rgb)
右三角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='>')
折れ線グラフをライトグレー色で描画する	plt.plot(データ列x, データ列y, color='lightgrey')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='grey')
ディープスカイブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='deepskyblue')
横棒グラフの色をアクアマリンにする	plt.barh(データ列x, データ列y, color='aquamarine')
ヒストグラムの色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
リストとリストについて散布図を描画して、右三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='>', c=rgb)
2を底とする実数の対数	math.log2(x)
黄色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='yellow')
ヒストグラムをモカシン色で描画する	plt.hist(データ列, color='moccasin')
option: グラフの色を暗い赤に設定する	color = 'darkred'
棒グラフの色をミディアムパープルにする	plt.bar(データ列x, データ列y, color='mediumpurple')
散布図の色をディムグレーにする	plt.scatter(データ列x, データ列y, color='dimgrey')
折れ線グラフの色をペールグリーンに設定する	plt.plot(データ列x, データ列y, color='palegreen')
棒グラフをピンク色で描画する	plt.bar(データ列x, データ列y, color='pink')
データ列が何月か見る	ds.dt.month
棒グラフをラベンダー色で描画する	plt.bar(データ列x, データ列y, color='lavender')
大量のデータ列が正規分布に従うか仮説検定する	scipy.stats.kstest(データ列, 'norm')
実数の天井	math.ceil(x)
データ列の散布図を描画する	plt.scatter(データ列x, データ列y)
辞書のキーの値	aDict[key]
xを浮動小数点数型に変換する	float(x)
ヒストグラムをパウダーブルー色で描画する	plt.hist(データ列, color='powderblue')
折れ線グラフの色をシーグリーンに設定する	plt.plot(データ列x, データ列y, color='seagreen')
辞書のコピー	dict(aDict)
文字列を空白で区切って、整数リストに変換する	map(int, s.split())
データフレームから破壊的に重複した行を削除する	df.drop_duplicates(inplace=True)
option: グラフの色をオレンジレッドに設定する	color = 'orangered'
option: 青緑色を使う	color = 'teal'
option: ライトグリーン色を使う	color = 'lightgreen'
ファイルをオープンする]	open(filepath)
要素が集合のメンバーか調べる	element in aSet
ダークカーキ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkkhaki')
棒グラフの色をイエローグリーンにする	plt.bar(データ列x, データ列y, color='yellowgreen')
折れ線グラフをカーキ色で描画する	plt.plot(データ列x, データ列y, color='khaki')
option: マーカーの色をディムグレーにする	markerfacecolor = 'dimgrey'
option: ハニーデュー色を使う	color = 'honeydew'
再帰の上限を上げる	sys.setrecursionlimit(1000000)
数式を方程式として解く	sympy.solve(e)
グレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='gray')
データ列が何曜日か見る	ds.dt.weekday_name
ヒストグラムの色を紺に設定する	plt.hist(データ列, color='darkblue')
散布図の色をブランチドアーモンドにする	plt.scatter(データ列x, データ列y, color='blanchedalmond')
配列のユニークな要素とその個数	u, counts = np.unique(aArray, return_counts=True)
集合をタプルに変換する	tuple(aSet)
日付データが月曜日か調べる	aDate.weekday() == 0
折れ線グラフをアクア色で描画する	plt.plot(データ列x, データ列y, color='aqua')
棒グラフの色をミディアムオーキッドにする	plt.bar(データ列x, データ列y, color='mediumorchid')
データフレームのカラムの欠損値を中央値に設定する	df[col].fillna(df[col].median())
サンディーブラウン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='sandybrown')
横棒グラフをパールバイオレットレッド色で描画する	plt.barh(データ列x, データ列y, color='palevioletred')
option: マーカーの色をコーンフラワーブルーにする	markerfacecolor = 'cornflowerblue'
ピアソンの相関係数を求める	scipy.stats.pearsonr(データ列, データ列2)
コーンフラワーブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='cornflowerblue')
棒グラフの色をダークカーキにする	plt.bar(データ列x, データ列y, color='darkkhaki')
データ列が何日か見る	ds.dt.day
最大値・最小値で整数乱数を生成する	random.randint(最小値, 最大値)
データ列の母標準偏差	ds.std(ddof=0)
ファイルをディレクトリ名とファイル名に分割する	os.path.split(filepath)
部分文字列か調べる	sub in s
本日の日付	datetime.date.today()
横棒グラフの色をダークシアンにする	plt.barh(データ列x, データ列y, color='darkcyan')
ブースティングでクラス分類を行う	model = sklearn.ensemble.AdaBoostClassifier(random_state=0, n_estimators=100)
ライトスレイグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightslategrey')
横棒グラフの色をフローラルホワイトにする	plt.barh(データ列x, データ列y, color='floralwhite')
データフレームのリストカラムを丸めて、整数型にする	df[aList].round().astype(int)
データフレームがどの程度、分散しているか見る	df.var()
option: マーカーの大きさを変更する	markersize = 2.0
折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(データ列x, データ列y, color='palegoldenrod')
棒グラフをインディアンレッド色で描画する	plt.bar(データ列x, データ列y, color='indianred')
辞書の浅いコピーを作る	aDict.copy()
割合付きの円グラフを描画する	plt.pie(データ列, startangle=90, autopct='%.2f%%')
散布図の色をナバホホワイトにする	plt.scatter(データ列x, データ列y, color='navajowhite')
ダークシアン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkcyan')
棒グラフをオレンジ色で描画する	plt.bar(データ列x, データ列y, color='orange')
option: マーカーの色をロイヤルブルーにする	markerfacecolor = 'royalblue'
リストの中の最大値	max(aList)
option: グラフの色をライトスカイブルーに設定する	color = 'lightskyblue'
横棒グラフをシルバー色で描画する	plt.barh(データ列x, データ列y, color='silver')
データフレームの欠損値を直前の値で埋める	df.fillna(method='ffill')
ヒストグラムをハニーデュー色で描画する	plt.hist(データ列, color='honeydew')
横棒グラフの色をミディアムシアグリーンにする	plt.barh(データ列x, データ列y, color='mediumseagreen')
折れ線グラフに赤い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='r')
データ列の欠損値をxに設定する	ds.fillna(x)
ダークオレンジ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkorange')
データフレームを関数の値によってグループ化する	df.groupby(関数)
二点間のユークリッド距離	math.dist(point, point2)
データフレームを各列と列の組み合わせ毎にグループ化して、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
折れ線グラフに黒い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='k')
棒グラフをライトスレイグレー色で描画する	plt.bar(データ列x, データ列y, color='lightslategrey')
データフレームのカラムの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
日付時刻データの日数	aDatetime.day
ダークグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkgreen')
黒い左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<', c='k')
リストとリストについての散布図にrgbの星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', c=rgb)
両端キュー中の要素の数を数える	deq.count(element)
散布図をダークサーモン色で描画する	plt.scatter(データ列x, データ列y, color='darksalmon')
要素ひとつのりスト	[element]
option: マーカーの色をゴールドにする	markerfacecolor = 'gold'
赤いバツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x', c='r')
ヒストグラムの色をカーキに設定する	plt.hist(データ列, color='khaki')
リストを複製する	aList.copy()
ディムグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='dimgrey')
イテラブルとイテラブルを連結する	itertools.chain(iterable, iterable2)
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムをパールゴールデンロッド色で描画する	plt.hist(データ列, color='palegoldenrod')
フィッシャーの線形判別分類を行う	model = sklearn.manifold.TSNE(n_components=n)
横棒グラフを描画して、バーの縦幅を調整する	plt.barh(ラベル列, データ列, width=0.5)
option: ライトスチールブルー色を使う	color = 'lightsteelblue'
折れ線グラフに丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o')
option: マーカーの色をネイビーにする	markerfacecolor = 'navy'
データフレームから数値データの列を抽出する	df.select_dtypes('number')
紺色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkblue')
未定値	None
データフレームを100の位で丸めて、整数型にする	df.round(-2).astype(int)
散布図の色をゴールデンロッドにする	plt.scatter(データ列x, データ列y, color='goldenrod')
グラフを使う準備をする	import matplotlib.pyplot as plt
折れ線グラフの右三角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='k')
散布図の色を青にする	plt.scatter(データ列x, データ列y, color='blue')
ライトイエロー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightyellow')
横棒グラフをイエローグリーン色で描画する	plt.barh(データ列x, データ列y, color='yellowgreen')
入力から二つの整数を読む	A, B = map(int, input().split())
データフレームの欠損値を平均値で埋める	df.fillna(df.mean())
ヒストグラムの色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
option: バイナリモードに設定する	mode = 'rb'
イテラブルから配列を作る	np.array(iterable)
横棒グラフを耐火レンガ色で描画する	plt.barh(データ列x, データ列y, color='firebrick')
青色の散布図を描画する	plt.scatter(データ列x, データ列y, color='blue')
タプルのn番目以降の部分を取り出す	aTuple[n:]
折れ線グラフの色をシルバーに設定する	plt.plot(データ列x, データ列y, color='silver')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
option: ミスティローズ色を使う	color = 'mistyrose'
option: グラフの色をディープスカイブルーに設定する	color = 'deepskyblue'
本日を文字列でフォーマットして文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
日付データが何日か知る	aDate.day
ヒストグラムをベージュ色で描画する	plt.hist(データ列, color='beige')
二つの文字列をケースを無視して比較する	s.casefold() < s2.casefold()
散布図の色をダークバイオレットにする	plt.scatter(データ列x, データ列y, color='darkviolet')
オレンジ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='orange')
option: マーカーの色をミッドナイトブルーにする	markerfacecolor = 'midnightblue'
グリッド線を青くする	plt.grid(color='b')
option: マーカーの色をライトゴールドロディイエローにする	markerfacecolor = 'lightgoldenrodyellow'
タプルをn回、連結する	aTuple * n
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(データ列x, データ列y, color='papayawhip')
折れ線グラフの色をスノーに設定する	plt.plot(データ列x, データ列y, color='snow')
ヒストグラムをパープル色で描画する	plt.hist(データ列, color='purple')
ダークスラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategray')
青い棒グラフを描画する	plt.bar(データ列x, データ列y, color='b')
データフレームの列の名前を付け直す	df.rename(columns={column: name})
データ列を閾値で二値化する	sklearn.preprocessing.Binarizer(threshold=閾値).fit_transform(データ列)
文字列を赤色にする	f'\033[31m{value}\033[0m'
グラフの色を淡くする	sns.set(pallete='muted')
ヒストグラムをシルバー色で描画する	plt.hist(データ列, color='silver')
棒グラフを青緑色で描画する	plt.bar(データ列x, データ列y, color='teal')
option: グラフの色をライムグリーンに設定する	color = 'limegreen'
データフレームの重複を見る	df.duplicated()
マルーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='maroon')
日付データが何月か知る	aDate.month
option: セパレータをカンマにする	sep = ','
option: 線の種類を一点鎖線に設定する	linestyle = 'dashbot'
データ列の中に文字列があるか調べる	ds.isin([value])
ランダム性を強化したランダムフォレストでクラス分類を行う	model = sklearn.ensemble.ExtraTreeClassifier(n_estimators=10)
ミディアムターコイズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumturquoise')
散布図に赤い星マーカーを使う	plt.plot(データ列x, データ列y, marker='*', c='r')
ダークゴールデンロッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkgoldenrod')
option: グラフの色をダークグリーンに設定する	color = 'darkgreen'
ヒストグラムの色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
カウンタのキーとカウントを列挙する	aCounter.items()
option: ダークバイオレット色を使う	color = 'darkviolet'
横棒グラフの色をディムグレーにする	plt.barh(データ列x, データ列y, color='dimgray')
データフレームの第一四分位数	df.quantile(0.25)
折れ線グラフをナバホホワイト色で描画する	plt.plot(データ列x, データ列y, color='navajowhite')
横棒グラフを白くする	plt.barh(データ列x, データ列y, color='w')
リストとリストについての散布図に赤い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', c='r')
ダークスレートブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkslateblue')
Pandasで、フォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
半透明の一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', alpha=0.5)
タプルの中の最小値	min(aTuple)
折れ線グラフの色をアクアマリンに設定する	plt.plot(データ列x, データ列y, color='aquamarine')
小麦色色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='wheat')
ヒストグラムの色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
折れ線グラフをダークオレンジ色で描画する	plt.plot(データ列x, データ列y, color='darkorange')
自然数の最大公約数	math.gcd(n, n2)
データ列を箱ひげ図で描画する	plt.boxplot(データ列)
横棒グラフの色をレモンシフォンにする	plt.barh(データ列x, データ列y, color='lemonchiffon')
データフレームから列名を複数指定して選択する	df[columns]
クラス分類のF値を求める	sklearn.metrics.f1_score(正解データ列, 予測データ列)
option: 説明変数を事前に正規化する	normalize = True
文字列を最後の部分文字列で二分し、後半の文字列を使う	s.rpartition(sub)[-1]
ヒストグラムの色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
データフレームのカラムを1000の位で丸める	df[col].round(-3)
データフレームの列を型に変換する	df[col] = df[col].astype(ty)
折れ線グラフの色をスレートブルーに設定する	plt.plot(データ列x, データ列y, color='slateblue')
アクア色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='aqua')
nまたはn2	n or n2
散布図の色を紺碧にする	plt.scatter(データ列x, データ列y, color='azure')
データフレームの列が文字列で終わらない行を抽出する	df[not df[column].str.endswith(s)]
ミディアムバイオレットレッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumvioletred')
横棒グラフの色をミディアムブルーにする	plt.barh(データ列x, データ列y, color='mediumblue')
option: EUCを使う	encoding = 'euc_jp'
option: マーカーの色をサンディーブラウンにする	markerfacecolor = 'sandybrown'
データフレームのリストカラムを10の位で丸める	df[aList].round(-1)
文字列全体が正規表現にマッチするか見る	re.fullmatch(pattern, s)
ファイルをベース名と拡張子に分割する	os.path.splitext(filepath)
横棒グラフの色をイエローグリーンにする	plt.barh(データ列x, データ列y, color='yellowgreen')
貝殻色のヒストグラムを描画する	plt.hist(データ列, color='seashell')
ファイル名がJSONファイルか調べる	filename.endswith('.json')
折れ線グラフをホワイトスモーク色で描画する	plt.plot(データ列x, データ列y, color='whitesmoke')
グラフのカラーパレットを指定する	sns.set(pallete=パレット名)
ミスティローズ色のヒストグラムを描画する	plt.hist(データ列, color='mistyrose')
ミディアムパープル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumpurple')
縦棒グラフを積み上げにする	plt.bar(ラベル列, データ列, bottom=データ列y, color='#800080')
折れ線グラフを貝殻色で描画する	plt.plot(データ列x, データ列y, color='seashell')
データフレームのリストカラムの中にある文字列の合計を数える	df[aList].isin([value]).sum()
コマンド引数を列挙する	sys.argv[1:]
データフレームを欠損値を含めて列の値でグループ化する	df.groupby(column, dropna=False)
日付時刻データが日付時刻データと同時か調べる	aDatetime == aDatetime2
文字列がリストの要素か調べる	element in aList
グラフにx=0の点線を付ける	plt.axvline(x=0, linestyle='dotted')
シャルトリューズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='chartreuse')
ふたつの集合の積集合	aSet.intersection(aSet2)
実数のn乗して実数による余り	pow(x, n, y)
option: マーカーの色をスレートブルーにする	markerfacecolor = 'slateblue'
散布図の色をライトグレーにする	plt.scatter(データ列x, データ列y, color='lightgray')
イテラブルから複数個、ランダムに選ぶ	random.choices(iterable, k=n)
文字列が漢字か調べる	('\u4E00' <= ch <= '\u9FD0')
オーキッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='orchid')
折れ線グラフに青いバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='b')
データフレームを1000の位で丸める	df.round(-3)
データフレームのn行目を削除する	df.drop(n, axis=0)
nが奇数か調べる	n % 2 == 1
紺碧色のヒストグラムを描画する	plt.hist(データ列, color='azure')
横棒グラフの色をパープルにする	plt.barh(データ列x, データ列y, color='purple')
散布図をゲインズボロ色で描画する	plt.scatter(データ列x, データ列y, color='gainsboro')
横棒グラフの色を黄色にする	plt.barh(データ列x, データ列y, color='yellow')
散布図の色をシエナにする	plt.scatter(データ列x, データ列y, color='sienna')
折れ線グラフをスプリンググリーン色で描画する	plt.plot(データ列x, データ列y, color='springgreen')
option: マーカーの色をダークスラテグレーにする	markerfacecolor = 'darkslategray'
option: 欠損値を先頭にする	na_position = 'first'
散布図に青い右三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='b')
CSVファイルを読み込む	pd.read_csv(filename, sep=',')
ミディアムシアグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumseagreen')
データフレームをタブ区切りでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
ヒストグラムをチョコレート色で描画する	plt.hist(データ列, color='chocolate')
オブジェクトにプロパティが存在するか調べる	hasattr(obj, プロパティ名)
データフレームの列と列を削除する	df.drop([column, column2], axis=1)
ラベル付きの円グラフを描画する	plt.pie(データ列, startangle=90, labels=ラベル列)
データフレームから列を二つ選択する	df[[column, column2]]
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
辞書のキーと値を入れ替える	{v: k for k, v in aDict.items()}
xが一桁の正の数か調べる	0 <= x <= 9
折れ線グラフをブルーバイオレット色で描画する	plt.plot(データ列x, データ列y, color='blueviolet')
散布図に青いマーカーを描画する	plt.scatter(データ列x, データ列y, markerfacecolor='b')
散布図のポイントマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='.', markeredgewidth=2.5)
option: グラフの色をコーンフラワーブルーに設定する	color = 'cornflowerblue'
部分文字列が部分文字列で始まるか調べる	s.startswith(sub)
折れ線グラフの丸マーカーを黒くする	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='k')
ふたつの集合が互いに素か調べる	aSet.isdisjoint(aSet2)
リストの中の最小値	min(aList)
option: 改行の代わりに文字列を用いる	end = s
パールバイオレットレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='palevioletred')
ヒストグラムの色を貝殻に設定する	plt.hist(データ列, color='seashell')
折れ線グラフの色をドジャーブルーに設定する	plt.plot(データ列x, データ列y, color='dodgerblue')
option: グレー色を使う	color = 'grey'
散布図に青い丸マーカーを描画する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='b')
リストとリストについて散布図を描画して、マーカーを左三角に設定する	plt.plot(データ列x, データ列y, marker='<')
折れ線グラフをダークターコイズ色で描画する	plt.plot(データ列x, データ列y, color='darkturquoise')
ヒストグラムをフクシア色で描画する	plt.hist(データ列, color='fuchsia')
ディムグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='dimgray')
リスト内の要素が全て真か調べる	all(aList)
ヒストグラムをサドルブラウン色で描画する	plt.hist(データ列, color='saddlebrown')
二つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
バギングでクラス分類を行う	model = sklearn.ensemble.BaggingClassifier(n_estimators=10)
折れ線グラフの色を青紫に設定する	plt.plot(データ列x, データ列y, color='violet')
横棒グラフをホワイトスモーク色で描画する	plt.barh(データ列x, データ列y, color='whitesmoke')
フクシア色の散布図を描画する	plt.scatter(データ列x, データ列y, color='fuchsia')
散布図の色をネイビーにする	plt.scatter(データ列x, データ列y, color='navy')
データフレームから列を４つ選択する	df[[column, column2, column3, column4]]
折れ線グラフに三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^')
勾配ブースティング分類木を作る	model = sklearn.ensemble.GradientBoostingClassifier()
棒グラフをミディアムオーキッド色で描画する	plt.bar(データ列x, データ列y, color='mediumorchid')
ピアソン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
実数の逆正接	math.atan(x)
折れ線グラフのダイアモンドマーカーを黒くする	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='k')
ポイント印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='.')
リストとリストについて散布図を描画して、丸マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='o', c=rgb)
スラグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='slategrey')
ヒストグラムをコーンズシルク色で描画する	plt.hist(データ列, color='cornsilk')
option: サーモン色を使う	color = 'salmon'
リストとリストについて散布図を描画して、その大きさをnに設定する	plt.scatter(データ列x, データ列y, s=n)
折れ線グラフに黒いバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='k')
棒グラフの色をダークグレーにする	plt.bar(データ列x, データ列y, color='darkgrey')
横棒グラフをダークグレー色で描画する	plt.barh(データ列x, データ列y, color='darkgray')
xが一桁の数か調べる	-9 <= x <= 9
横棒グラフをミディアムシアグリーン色で描画する	plt.barh(データ列x, データ列y, color='mediumseagreen')
散布図にダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D')
データフレームを二つの列によってまとめたグループ	df.groupby(['A', 'B'])
xを印字できる文字列にする	ascii(x)
nがn2以下、または、n3以上か調べる	n <= n2 or n >= n3
Pandasで、データ列を日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
データフレームの指定されたデータ型の列名を列挙する	df.select_dtypes(型).columns
散布図に青いバツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='b')
多次元データをt-SNEで淡く次元に次元削減する	sklearn.manifold.TSNE(n_components=三).fit_transform(多次元データ)
アンサンブル学習でクラス分類を行う	sklearn.ensemble.VotingClassifier()
平均と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
モデルの平均二乗誤差を求める	sklearn.metrics.mean_squared_error(目的変数, model.predict(説明変数))
Pandasで、データ列のエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
データフレームを列によってグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
カテゴリデータ列を連番に変換する	sklearn.preprocessing.LabelEncoder().fit_transform(データ列)
二つのデータフレームを縦方向に連結する	pd.concat([df, df2], axis=0)
棒グラフをコーンズシルク色で描画する	plt.bar(データ列x, データ列y, color='cornsilk')
スクリプトの名前	sys.argv[0]
ビスク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='bisque')
データ列の欠損値を平均値に設定する	ds.fillna(ds.mean())
xのハッシュ値	hash(x)
タプルの要素をソートする	sorted(aTuple)
option: マーカーの色をシャルトリューズにする	markerfacecolor = 'chartreuse'
データフレームの中で、列に重複があるか見る	df.duplicated(subset=column)
option: ライムグリーン色を使う	color = 'limegreen'
散布図のバツマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='x', markeredgewidth=2.5)
実数のk進対数	math.log(x, k)
第二引数で指定されたファイルの名前	sys.argv[1]
データを四分位点で標準化する	sklearn.preprocessing.RobustScaler().fit_transform(データ)
横棒グラフの色をライムにする	plt.barh(データ列x, データ列y, color='lime')
データフレームのリストカラムの値をValueMapでまとめて置き換える	df[aList].replace(ValueMap)
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
散布図の色をブラックにする	plt.scatter(データ列x, データ列y, color='black')
option: グラフの色をトマトに設定する	color = 'tomato'
option: マーカーの色を紺碧にする	markerfacecolor = 'azure'
JSONファイルのファイル入力を読み込んで、dataとする	data = json.load(fin)
データフレームのひとつの列だけ説明変数にする	説明変数 = df[['列名']]
文字列を部分文字列で分けたときの後半の文字列	s.partition(sub)[-1]
option: ダークシアグリーン色を使う	color = 'darkseagreen'
折れ線グラフをダークバイオレット色で描画する	plt.plot(データ列x, データ列y, color='darkviolet')
パウダーブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='powderblue')
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
文字列を文字リストに変換する	list(s)
カラーバーを付ける	plt.colorbar()
両端キューに要素をエンキューする	deq.appendleft(element)
変数をスワップする	x, y = y, x
日付を使う	import datetime
散布図のバツマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='k')
ロイヤルブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='royalblue')
option: フクシア色を使う	color = 'fuchsia'
行列の列ごとの最小値	np.min(aArray, axis=0)
ライムグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='limegreen')
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
折れ線グラフをライトスチールブルー色で描画する	plt.plot(データ列x, データ列y, color='lightsteelblue')
二変数の最大値	max(x, y)
文字列を部分文字列で区切って、文字列リストに変換する	s.split(sub)
折れ線グラフをダークグレー色で描画する	plt.plot(データ列x, データ列y, color='darkgray')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
グラフの見栄えをデフォルトでいい感じに設定する	sns.set()
データ列が何秒か見る	ds.dt.second
データフレームのn行以降抽出する	df[n:]
キーが辞書上で未定義か調べる	key not in aDict
データフレームの中の欠損値の合計を数える	df.isna().sum()
グリーン色のヒストグラムを描画する	plt.hist(データ列, color='green')
option: グラフの色をチョコレートに設定する	color = 'chocolate'
横棒グラフをダークカーキ色で描画する	plt.barh(データ列x, データ列y, color='darkkhaki')
両端キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
グラフの縦横を設定する	plt.figure(figsize=(横幅, 高さ))
データ列の空文字をドロップする	ds.replace('', np.nan).dropna()
シスル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='thistle')
ファイルをオープンして]、追加ストリームを使う	open(filepath, mode='a')
Pandasで、文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
折れ線グラフのラベルを設定する	plt.plot(データ列x, データ列y, label='ラベル')
option: 茶色色を使う	color = 'brown'
データフレームのカラムが何曜日か見る	df[col].dt.weekday_name
訓練データとテストデータに分割する	X_train, X_test, y_train, y_test = train_test_split(説明変数, 目的変数, test_size=0.3)
option: グラフの色を貝殻に設定する	color = 'seashell'
ディムグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='dimgrey')
散布図をライムグリーン色で描画する	plt.scatter(データ列x, データ列y, color='limegreen')
横棒グラフの色をブランチドアーモンドにする	plt.barh(データ列x, データ列y, color='blanchedalmond')
ライトサーモン色のヒストグラムを描画する	plt.hist(データ列, color='lightsalmon')
日付時刻データをn週間前に戻す	aDatetime - datetime.timedelta(weeks=n)
ファイルの絶対パス	os.path.abspath(filepath)
浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
rgbの左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<', c=rgb)
グラフを表示する	plt.show()
整数nが配列のどれかか調べる	n in aArray
散布図をフローラルホワイト色で描画する	plt.scatter(データ列x, データ列y, color='floralwhite')
option: マーカーの色をアリスブルーにする	markerfacecolor = 'aliceblue'
折れ線グラフの色をシエナに設定する	plt.plot(データ列x, データ列y, color='sienna')
JSONを使う	import json
棒グラフを小麦色色で描画する	plt.bar(データ列x, データ列y, color='wheat')
ヒストグラムをナバホホワイト色で描画する	plt.hist(データ列, color='navajowhite')
ダークオリーブグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkolivegreen')
データフレームを列によってソートして、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
有理数の分子	q.numerator
データ列の秒	ds.dt.second
year年day月の日付時刻	datetime.datetime(year=year, month=month, day=1)
二つのオブジェクトが同一参照か調べる	obj is obj2
データフレームのリストカラムの中にいくつ文字列があるか数える	df[aList].isin([value]).sum()
折れ線グラフをダークマゼンタ色で描画する	plt.plot(データ列x, データ列y, color='darkmagenta')
リストとリストについて散布図を描画して、ダイアモンドマーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='D', c=rgb)
散布図をブランチドアーモンド色で描画する	plt.scatter(データ列x, データ列y, color='blanchedalmond')
棒グラフの色をゴールデンロッドにする	plt.bar(データ列x, データ列y, color='goldenrod')
データ列が何分か見る	ds.dt.minute
nとn2の排他的論理和	n ^ n2
折れ線グラフの色をインディアンレッドに設定する	plt.plot(データ列x, データ列y, color='indianred')
三つの文字列を順にプリントする	print(value, value2, value3)
option: ディムグレー色を使う	color = 'dimgrey'
折れ線グラフをトマト色で描画する	plt.plot(データ列x, データ列y, color='tomato')
option: マーカーを右三角に変更する	marker = '>'
option: グラフの色をライトグレーに設定する	color = 'lightgray'
横棒グラフをミディアムアクアマリン色で描画する	plt.barh(データ列x, データ列y, color='mediumaquamarine')
ヒストグラムを赤くする	plt.hist(データ列, color='r')
カウンタの項目のカウント	aCounter[element]
ヒストグラムの色をゴールドに設定する	plt.hist(データ列, color='gold')
棒グラフの色をアリスブルーにする	plt.bar(データ列x, データ列y, color='aliceblue')
折れ線グラフをタン色で描画する	plt.plot(データ列x, データ列y, color='tan')
マゼンタ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='magenta')
ミスティローズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mistyrose')
棒グラフを白くする	plt.bar(データ列x, データ列y, color='w')
アンティークホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='antiquewhite')
部分文字列を範囲を指定して探す	s.find(sub, start, end)
辞書をインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
集合から要素を取り除く	aSet.remove(element)
ヒストグラムの色を黄色に設定する	plt.hist(データ列, color='yellow')
散布図の色をライトブルーにする	plt.scatter(データ列x, データ列y, color='lightblue')
option: グラフの色をパウダーブルーに設定する	color = 'powderblue'
横棒グラフの色をパウダーブルーにする	plt.barh(データ列x, データ列y, color='powderblue')
異なる列をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
棒グラフの色をペールグリーンにする	plt.bar(データ列x, データ列y, color='palegreen')
タプルをリストに変換する	list(aTuple)
変数を定義する	x = n
文字列がタプルに含まれるか調べる	element in aTuple
レモンシフォン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lemonchiffon')
ダークシアン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkcyan')
データフレームのカラムが何時か見る	df[col].dt.hour
横棒グラフの色をライトシアンにする	plt.barh(データ列x, データ列y, color='lightcyan')
散布図をシャルトリューズ色で描画する	plt.scatter(データ列x, データ列y, color='chartreuse')
ライム色のヒストグラムを描画する	plt.hist(データ列, color='lime')
ミディアムスプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumspringgreen')
列をキーにして二つのデータフレームを結合する	pd.merge(df, df2, on=column)
nにn2をかけた値をnに代入する	n *= n2
グリッド線	plt.grid(linewidth=3.0)
カウンタをイテラブルで更新する	aCounter.update(iterable)
シスル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='thistle')
乱数シードを初期化する	random.seed()
折れ線グラフのバツマーカーを青くする	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='b')
option: マーカーの色をライトグリーンにする	markerfacecolor = 'lightgreen'
実数を実数で割って、切り捨てる	x // y
イテラブルのイミュータブルな集合	frozenset(iterable)
オブジェクトは集合クラスか調べる	isinstance(obj, set)
タプルを逆順にする	aTuple[::-1]
グリッドを点線にする	plt.grid(linestyle='dotted')
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
データフレームのカラムの中央値	df[col].median()
パールゴールデンロッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='palegoldenrod')
方程式として数式の変数の解を求める	sympy.solve(e, z)
カテゴリで色分けして、データフレームを棒グラフにする	sns.barplot(x='カテゴリ列', y='列名', hue='カテゴリ', data=df)
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列x, データ列y, color='mediumorchid')
データフレームの列をカテゴリデータに変換する	df[col].astype(object)
赤い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='r')
カデットブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='cadetblue')
option: グラフの色を黄色に設定する	color = 'yellow'
折れ線グラフをミスティローズ色で描画する	plt.plot(データ列x, データ列y, color='mistyrose')
ダークグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkgreen')
nマイナスn2	n - n2
棒グラフの色をブルーバイオレットにする	plt.bar(データ列x, データ列y, color='blueviolet')
データフレームの中央値	df.median()
折れ線グラフをプラム色で描画する	plt.plot(データ列x, データ列y, color='plum')
横棒グラフの色をカーキにする	plt.barh(データ列x, データ列y, color='khaki')
option: デピンク色を使う	color = 'deeppink'
アリスブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='aliceblue')
データ列を1000の位で丸める	ds.round(-3)
データ列の時	ds.dt.hour
要素ひとつのタプル	(element,)
データフレームのリストカラムの空文字を欠損値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
散布図の下三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='#800080')
散布図の右三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='>', markeredgewidth=2.5)
改行する	print()
ホワイトスモーク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='whitesmoke')
散布図を茶色色で描画する	plt.scatter(データ列x, データ列y, color='brown')
モカシン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='moccasin')
rgbのバツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x', c=rgb)
データフレームのカラムの欠損値を最小値で埋める	df[col].fillna(df[col].min())
文字列を太字でプリントする	print(f'\033[1m{value}\033[0m')
文字列が全て英数字か調べる	s.isalnum()
散布図の左三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='<', markeredgewidth=2.5)
パーセプトロンでクラス分類を行う	model = sklearn.neural_network.MLPClassifier(hidden_layer_sizes=(10, 10))
カウンタを少ない順に列挙する	aCounter.most_common()[::-1]
横棒グラフの色を紺にする	plt.barh(データ列x, データ列y, color='darkblue')
ピンク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='pink')
データフレームの列と列のヒートマップを描画する	sns.heatmap(df[[column, column2]].corr())
ダークオレンジ色のヒストグラムを描画する	plt.hist(データ列, color='darkorange')
パープル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='purple')
nをn2で割った結果の切り上げ	(n + n2 - 1) // n2
option: マーカーの色をサーモンにする	markerfacecolor = 'salmon'
棒グラフの色を白にする	plt.bar(データ列x, データ列y, color='white')
ヒストグラムをパレットトルコイズ色で描画する	plt.hist(データ列, color='paleturquoise')
データフレームの中の列をビン分割する	pd.cut(df[col], aList)
データフレームをロジスティック回帰付き散布図にする	sns.regplot(x='列名', y='列名', data=df, logistic=True)
棒グラフをスカイブルー色で描画する	plt.bar(データ列x, データ列y, color='skyblue')
nがn2より大きいか調べる	n > n2
棒グラフをライトスカイブルー色で描画する	plt.bar(データ列x, データ列y, color='lightskyblue')
文字列をエンコーディングでバイト列に変換する	s.encode(encoding=encoding)
タプルをnからナンバリングする	enumerate(aTuple, start=n)
横棒グラフを赤くする	plt.barh(データ列x, データ列y, color='r')
イテラブルを両端キューに変換する	collections.deque(iterable)
ヒストグラムをゴーストホワイト色で描画する	plt.hist(データ列, color='ghostwhite')
棒グラフの色をトマトにする	plt.bar(データ列x, データ列y, color='tomato')
事前に正規表現をコンパイルする	re.compile(pattern)
散布図をディムグレー色で描画する	plt.scatter(データ列x, データ列y, color='dimgray')
Pandasで、文字列を日付データに変換する	pd.to_datetime(s)
カウンタを辞書で更新する	aCounter.update(aDict)
コーンズシルク色のヒストグラムを描画する	plt.hist(データ列, color='cornsilk')
辞書を階層化する	collections.ChainMap(aDict)
文字列を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
option: ８ビット整数型を使う	dtype = np.int8
option: マーカーの色をコーラルにする	markerfacecolor = 'coral'
棒グラフをライトスチールブルー色で描画する	plt.bar(データ列x, データ列y, color='lightsteelblue')
ペルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='peru')
三自然数の最小公倍数	math.lcm(n, n2, n3)
リストとリストについての散布図に赤いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', c='r')
データフレームの列の文字列長を列として使う	df[col].str.len()
棒グラフをミディアムターコイズ色で描画する	plt.bar(データ列x, データ列y, color='mediumturquoise')
ヒストグラムの色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
横棒グラフを貝殻色で描画する	plt.barh(データ列x, データ列y, color='seashell')
データフレームの中にある文字列の合計を数える	df.isin([value]).sum()
散布図の色をダークゴールデンロッドにする	plt.scatter(データ列x, データ列y, color='darkgoldenrod')
グリーンイエロー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='greenyellow')
ライトシアン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightcyan')
棒グラフをライトシアン色で描画する	plt.bar(データ列x, データ列y, color='lightcyan')
データフレームのリスト列の相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
横棒グラフの色をインディアンレッドにする	plt.barh(データ列x, データ列y, color='indianred')
折れ線グラフにラベルを付ける	plt.plot(データ列x, データ列y, label='ラベル')
ダークターコイズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkturquoise')
option: ミディアムパープル色を使う	color = 'mediumpurple'
文字列に日本語が含まれるか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
データフレームのカラムを丸めて、整数型にする	df[col].round().astype(int)
データフレームの平均と信頼区間を描画する	sns.pointplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
option: マーカーの色をトマトにする	markerfacecolor = 'tomato'
リストとリストについて散布図を描画して、バツマーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='x', c=rgb)
カウンタを辞書に変換する	dict(aCounter)
棒グラフをチョコレート色で描画する	plt.bar(データ列x, データ列y, color='chocolate')
option: ダークシアン色を使う	color = 'darkcyan'
ヒストグラムの色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
縦軸の目盛に文字列を付ける	plt.yticks([0, 60, 90], ['不可', '可', '秀'])
棒グラフの色をコーンフラワーブルーにする	plt.bar(データ列x, データ列y, color='cornflowerblue')
折れ線グラフをダークグリーン色で描画する	plt.plot(データ列x, データ列y, color='darkgreen')
ヒストグラムをダークグリーン色で描画する	plt.hist(データ列, color='darkgreen')
折れ線グラフのマーカーを左三角にする	plt.plot(データ列x, データ列y, marker='<')
縦軸の最大・最小を変更する	plt.ylim(最小値, 最大値)
散布図の色を暗い赤にする	plt.scatter(データ列x, データ列y, color='darkred')
ゴールド色のヒストグラムを描画する	plt.hist(データ列, color='gold')
行列の列ごとの標準偏差	np.std(aArray, axis=0)
文字列中にひとつでも非大文字が含まれるか調べる	any(not c.isupper() for c in s)
ダークスラテグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkslategray')
青紫色のヒストグラムを描画する	plt.hist(データ列, color='violet')
データフレームの列の一覧	df.info()
実数のn乗の実数剰余	pow(x, n, y)
グラフを論文用に設定する	sns.set(context='paper')
チョコレート色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='chocolate')
ダークシアン色のヒストグラムを描画する	plt.hist(データ列, color='darkcyan')
散布図をライトイエロー色で描画する	plt.scatter(データ列x, データ列y, color='lightyellow')
プラム色の線グラフを描画する	plt.plot(データ列x, データ列y, color='plum')
文字列の開始位置から終了位置までの範囲で部分文字列をカウントする	s.count(sub, start, end)
Pythonのバージョン	sys.version
モジュールを検索するパスにディレクトリを追加する	sys.path.append(dir)
option: バッファリングを無効にする	buffering = 0
グラフの凡例の位置を(x,y)に設定する	plt.legend(loc=(x, y))
ネイビー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='navy')
切片なしの線形回帰モデルを作る	model = sklearn.linear_model.LinearRegression(fit_intercept=False)
データ列をインポートする	import pandas as pd
棒グラフの色をライトスレイグレーにする	plt.bar(データ列x, データ列y, color='lightslategray')
オブジェクトは数値か調べる	isinstance(obj, (int,float))
データフレームのリストカラムの中にいくつ欠損値があるか数える	df[aList].isna().sum()
データフレームの列のユニークな値の個数	df[col].nunique()
option: グラフの色をミスティローズに設定する	color = 'mistyrose'
ファイルからファイル名を使う	os.path.basename(filepath)
多次元データを特異値分解でパステル調に次元に次元削減する	sklearn.decomposition.TruncatedSVD(n_components=N).fit_transform(多次元データ)
クラスが名前付きタプルか調べる	issubclass(C, tuple)
散布図を淡いピンク色色で描画する	plt.scatter(データ列x, データ列y, color='lightpink')
オプションで、標準エラーを出力にする	file = sys.stderr
散布図をダークグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkgrey')
横棒グラフの色をグリーンにする	plt.barh(データ列x, データ列y, color='green')
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
散布図の色をコーラルにする	plt.scatter(データ列x, データ列y, color='coral')
両端キューから最初の要素を取り除く	deq.remove(element)
文字列の接尾辞が部分文字列か調べる	s.endswith(sub)
折れ線グラフの色をオリーブに設定する	plt.plot(データ列x, データ列y, color='olive')
連続した配列の自動作成する	np.arange(開始値, 終了値, 等差)
option: マーカーの色をナバホホワイトにする	markerfacecolor = 'navajowhite'
ダークターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='darkturquoise')
フォレストグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='forestgreen')
option: ヘッダをnamesに設定する	header = names
ライトブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightblue')
データ列を横棒グラフにする	plt.barh(ラベル列, データ列)
option: マーカーの色をダークオリーブグリーンにする	markerfacecolor = 'darkolivegreen'
横棒グラフをサンディーブラウン色で描画する	plt.barh(データ列x, データ列y, color='sandybrown')
横棒グラフをロイヤルブルー色で描画する	plt.barh(データ列x, データ列y, color='royalblue')
option: 値を置き換える	inplace = True
横棒グラフを暗い赤色で描画する	plt.barh(データ列x, データ列y, color='darkred')
option: 四角マーカーを使う	marker = 's'
option: エンコーディングを文字コードtextに設定する	encoding = text
option: 耐火レンガ色を使う	color = 'firebrick'
ライトサーモン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightsalmon')
散布図をダークオーキッド色で描画する	plt.scatter(データ列x, データ列y, color='darkorchid')
リストとリストについて散布図を描画して、三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='^', c=rgb)
option: マーカーをポイントに変更する	marker = '.'
option: グラフの色をダークマゼンタに設定する	color = 'darkmagenta'
クリムゾン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='crimson')
棒グラフをライトサーモン色で描画する	plt.bar(データ列x, データ列y, color='lightsalmon')
実数の複素数	complex(x)
リストとリストについての散布図にrgbの右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', c=rgb)
散布図の三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='#800080')
ヒストグラムをピーチパフ色で描画する	plt.hist(データ列, color='peachpuff')
折れ線グラフに黒い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='k')
タプルを引数として展開して表示する	print(*aTuple)
データフレームをJSONLファイルに保存する	df.to_csv(filename, sep='\t')
ピンク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='pink')
option: タブをセパレータで使う	sep = '\t'
横棒グラフの色をターコイズにする	plt.barh(データ列x, データ列y, color='turquoise')
ダークグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkgrey')
ヒストグラムの色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
year年month月day日を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day)
散布図の星マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='*', markeredgewidth=2.5)
n割るn2を切り上げる	(n + n2 - 1) // n2
散布図の色をミディアムブルーにする	plt.scatter(データ列x, データ列y, color='mediumblue')
xの小数点以下'5'桁までをプリントする	print(':.5f'.format(x))
option: マーカーの色をアイボリーにする	markerfacecolor = 'ivory'
横棒グラフをダークサーモン色で描画する	plt.barh(データ列x, データ列y, color='darksalmon')
横棒グラフの色をゴールデンロッドにする	plt.barh(データ列x, データ列y, color='goldenrod')
option: マーカーの色を小麦色にする	markerfacecolor = 'wheat'
グレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='grey')
nがn2より小さいか調べる	n < n2
横棒グラフをスプリンググリーン色で描画する	plt.barh(データ列x, データ列y, color='springgreen')
文字列を空白で区切る	s.split()
散布図をミディアムバイオレットレッド色で描画する	plt.scatter(データ列x, データ列y, color='mediumvioletred')
折れ線グラフに黒いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='k')
線形回帰分析の準備をする	model = sklearn.linear_model.LinearRegression()
シエナ色のヒストグラムを描画する	plt.hist(データ列, color='sienna')
本日の年数	datetime.datetime.today().year
スピアマン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
横棒グラフの色をオリーブにする	plt.barh(データ列x, データ列y, color='olive')
真上位集合か調べる	aSet > aSet2
ラベンダー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lavender')
コーンフラワーブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='cornflowerblue')
散布図の色をライトスレイグレーにする	plt.scatter(データ列x, データ列y, color='lightslategray')
散布図にrgbの右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>', c=rgb)
データフレームのリストカラムの第三四分位数	df[aList].quantile(0.75)
ヒストグラムをカデットブルー色で描画する	plt.hist(データ列, color='cadetblue')
ヒストグラムをシエナ色で描画する	plt.hist(データ列, color='sienna')
option: 色を半透明にする	alpha = 0.5
棒グラフをミディアムスレートブルー色で描画する	plt.bar(データ列x, データ列y, color='mediumslateblue')
散布図をシエナ色で描画する	plt.scatter(データ列x, データ列y, color='sienna')
散布図のバツマーカーを青くする	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='b')
ゼロ埋めされた複素数型の配列	np.zeros(要素数, dtype=bool)
モデルの予測値と実測値を比較する	pd.DataFrame({'実測': 目的変数, '予測': model.predict(説明変数)})
x,y,zをそれぞれn,n2,n3に設定する	x, y, z = n, n2, n3
データ列の正規分布を判定する	scipy.stats.shapiro(データ列)
横棒グラフをレモンシフォン色で描画する	plt.barh(データ列x, データ列y, color='lemonchiffon')
折れ線グラフの色をダークターコイズに設定する	plt.plot(データ列x, データ列y, color='darkturquoise')
1からNまでの配列	np.arange(1, N+1)
ドジャーブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='dodgerblue')
オレンジ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='orange')
ヒストグラムの色を青に設定する	plt.hist(データ列, color='blue')
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(データ列x, データ列y, color='palevioletred')
棒グラフの色をオーキッドにする	plt.bar(データ列x, データ列y, color='orchid')
横棒グラフをタン色で描画する	plt.barh(データ列x, データ列y, color='tan')
データフレームの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
予測値とデータの離れ具合を可視化する	sns.residplot(x='列名', y='列名', data=df)
横棒グラフをオーキッド色で描画する	plt.barh(データ列x, データ列y, color='orchid')
円グラフの割合を表示する	plt.pie(データ列, startangle=90, autopct='%.2f%%')
データフレームの欠損値が含まれる箇所に色を付ける	df.style.highlight_null()
ダークグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkgray')
散布図のマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, markersize=2.0)
option: バイナリ書き込みモードを使う	mode = 'wb'
year年month月day日hour時を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour)
棒グラフをライトグリーン色で描画する	plt.bar(データ列x, データ列y, color='lightgreen')
折れ線グラフに左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<')
多次元データを特異値分解で淡く次元に次元削減する	sklearn.decomposition.TruncatedSVD(n_components=三).fit_transform(多次元データ)
線形モデルの回帰変数	model.coef_
配列の全要素を指定の値にする	aArray[:, :] = 指定の値
行列の列ごとの最大値	np.max(aArray, axis=0)
ファイルをEUCでオープンする]	open(filepath, encoding='euc_jp')
標準エラーを得る	sys.stderr
データフレームのリストカラムの最頻値	df[aList].mode()
バギングで回帰分析を行う	model = sklearn.ensemble.BaggingRegressor(n_estimators=10)
option: マーカーの色をライムグリーンにする	markerfacecolor = 'limegreen'
棒グラフをダークバイオレット色で描画する	plt.bar(データ列x, データ列y, color='darkviolet')
option: ASCII文字に限定する	flag = re.ASCII
数式を簡略にする	sympy.sympify(e)
データフレームの中で、列と列の重複を見る	df.duplicated(subset=[column, column2])
option: グラフの色をライムに設定する	color = 'lime'
既存のファイルを文字列の示すエンコーディングで追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
データフレームのn行目を破壊的に削除する	df.drop(n, axis=0, inplace=True)
option: 線の幅を3.0ポイントに設定する	linewidth = 3.0
散布図の色をアリスブルーにする	plt.scatter(データ列x, データ列y, color='aliceblue')
棒グラフをシスル色で描画する	plt.bar(データ列x, データ列y, color='thistle')
棒グラフの色をシルバーにする	plt.bar(データ列x, データ列y, color='silver')
リストの最初の文字列を探す	aList.index(element)
折れ線グラフをミディアムパープル色で描画する	plt.plot(データ列x, データ列y, color='mediumpurple')
実数が正の数か調べる	x > 0
散布図をナバホホワイト色で描画する	plt.scatter(データ列x, データ列y, color='navajowhite')
黒い棒グラフを描画する	plt.bar(データ列x, データ列y, color='k')
ヒストグラムをラベンダーブラッシュ色で描画する	plt.hist(データ列, color='lavenderblush')
リストとリストについての散布図に黒いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', c='k')
ファイルをバイナリ書き込みモードでオープンする]	open(filepath, mode='wb')
グラフ中で日本語を表示できるようにする	sns.set(font='IPAexGothic')
折れ線グラフの線の種類を実線に設定する	plt.plot(データ列x, データ列y, linestyle='solid')
データフレームのリストカラムの欠損値を最大値で埋める	df[aList].fillna(df[aList].max())
option: 下三角マーカーを描画する	marker = 'v'
全要素を０で初期化したブール型の行列	np.zeros(行数, 列数, dtype=np.int32)
データフレームのカラムの第三四分位数	df[col].quantile(0.75)
配列から重複を除いた配列を作る	np.unique(aArray)
データ列を折れ線グラフで可視化する	plt.plot(データ列x, データ列y)
上位集合もしくは等しいか調べる	aSet > aSet2
JSON形式の文字列を辞書に変換する	json.loads(jsonString)
横棒グラフをナバホホワイト色で描画する	plt.barh(データ列x, データ列y, color='navajowhite')
赤いヒストグラムを描画する	plt.hist(データ列, color='r')
リストとリストについての散布図に赤い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', c='r')
散布図に下三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='v')
棒グラフをプラム色で描画する	plt.bar(データ列x, データ列y, color='plum')
棒グラフの色をオレンジレッドにする	plt.bar(データ列x, データ列y, color='orangered')
カウンタを多い順に列挙する	aCounter.most_common()
折れ線グラフに赤い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='r')
ダークバイオレット色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkviolet')
ユーザから入力される	int(input())
ダークターコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkturquoise')
散布図のダイアモンドマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='D', markersize=2.0)
year年を日付時刻に変換する	datetime.datetime(year=year, month=1, day=1)
横棒グラフの色をミディアムスプリンググリーンにする	plt.barh(データ列x, データ列y, color='mediumspringgreen')
ビン数を設定してヒストグラムを描画する	plt.hist(データ列, bins=区関数)
リストをn回、連結する	aList * n
データフレームの分散	df.var()
オプションで、出力先を標準エラーに設定する	file = sys.stderr
横棒グラフをスカイブルー色で描画する	plt.barh(データ列x, データ列y, color='skyblue')
棒グラフの色をホットピンクにする	plt.bar(データ列x, データ列y, color='hotpink')
ヒストグラムの色をネイビーに設定する	plt.hist(データ列, color='navy')
グレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='gray')
ヒストグラムの色をアクアに設定する	plt.hist(データ列, color='aqua')
横棒グラフの色をダークグリーンにする	plt.barh(データ列x, データ列y, color='darkgreen')
0から始まる無限数列	itertools.count()
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
option: ライム色を使う	color = 'lime'
リストとリストについての散布図にポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.')
縦軸の表示範囲を変更する	plt.ylim(最小値, 最大値)
日付データと日付データの時間差	aDate - aDate2
散布図の色を青緑にする	plt.scatter(データ列x, データ列y, color='teal')
散布図の三角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='k')
両端キューに要素をプッシュする	deq.append(element)
タプルの先頭	aTuple[0]
折れ線グラフをライトブルー色で描画する	plt.plot(データ列x, データ列y, color='lightblue')
オブジェクトはタプルクラスか調べる	isinstance(obj, tuple)
全要素を1で初期化した行列	np.ones(行数, 列数, dtype=np.int)
nの各桁の総和	sum(map(int, str(n)))
ヒストグラムをグレー色で描画する	plt.hist(データ列, color='gray')
グリッド線	plt.grid(linewidth=3.0)
ダークシアグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkseagreen')
リストとリストについての散布図に赤い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', c='r')
ふたつの集合の差集合	aSet.difference(aSet2)
単位正方行列	np.identity(n)
option: 改行をセパレータで使う	sep = '\n'
横棒グラフをオリベドラブ色で描画する	plt.barh(データ列x, データ列y, color='olivedrab')
データフレームのリストカラムの中に文字列と文字列がいくつあるか数える	df[aList].isin([value, value2]).sum()
文字列をバイト配列に変換する	bytearray(s)
アルファベットの小文字列	string.ascii_lowercase
散布図に四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s')
ヒストグラムをブルーバイオレット色で描画する	plt.hist(データ列, color='blueviolet')
サーモン色のヒストグラムを描画する	plt.hist(データ列, color='salmon')
集合をイミュータブルなセットに変換する	frozenset(aSet)
配列の形状	aArray.shape
散布図に青い四角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='b')
オブジェクトはバイト列クラスか調べる	isinstance(obj, bytes)
折れ線グラフをスラグレー色で描画する	plt.plot(データ列x, データ列y, color='slategrey')
option: グラフの色を青紫に設定する	color = 'violet'
散布図をオーキッド色で描画する	plt.scatter(データ列x, データ列y, color='orchid')
横棒グラフをドジャーブルー色で描画する	plt.barh(データ列x, データ列y, color='dodgerblue')
ヒストグラムの色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
グリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='green')
点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted')
グラフ中のフォントを設定する	sns.set(font=フォント名)
ヒストグラムの色をデピンクに設定する	plt.hist(データ列, color='deeppink')
option: サドルブラウン色を使う	color = 'saddlebrown'
折れ線グラフの色をオリベドラブに設定する	plt.plot(データ列x, データ列y, color='olivedrab')
n×n2の二次元リスト	[[0] * n for _ in range(n2)]
データフレームのn行まで抽出する	df[:n]
option: マーカーの色をピンクにする	markerfacecolor = 'pink'
option: 符号なし８ビット整数型を使う	dtype = np.uint8
折れ線グラフをスカイブルー色で描画する	plt.plot(データ列x, データ列y, color='skyblue')
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
nがn2か調べる	n == n2
データフレームのカラムの標本標準偏差	df[col].std()
横棒グラフを描画して、ラベルを下寄せする	plt.barh(ラベル列, データ列, align='edge')
配列のデータ型	aArray.dtype()
散布図の色をミディアムアクアマリンにする	plt.scatter(データ列x, データ列y, color='mediumaquamarine')
データフレームから指定された三つの列を抽出する	df[[column, column2, column3]]
ファイルのディレクトリ名	os.path.dirname(filepath)
ライトグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightgreen')
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
整数をゼロ埋めした文字列に変換する	str(n).zfill(文字列幅)
データフレームを各列毎にグループ化して、列の平均値を求める	df.groupby(column)[column2].mean()
横棒グラフをピンク色で描画する	plt.barh(データ列x, データ列y, color='pink')
データ列の折れ線グラフを描画して、ラベル付けする	plt.plot(データ列x, データ列y, label='ラベル')
散布図の色をダークグレーにする	plt.scatter(データ列x, データ列y, color='darkgray')
リストとリストについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(データ列x, データ列y, marker='D')
標準入力から1行読み取る	input()
ファイルの拡張子をtextに変更する	os.path.splitext(filepath)[0] + text
データフレームをグループ化して、ヒストグラムにする	sns.histplot(df, x='列名', hue='カテゴリ名')
option: ペルー色を使う	color = 'peru'
グラフの横軸を対数に変更する	plt.xscale('log')
データフレームを'A'列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームのカラムを丸める	df[col].round()
ミスティローズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mistyrose')
データフレームの平均値	df.mean()
ヒストグラムを描画し、合計を1にする	plt.hist(データ列, density=True)
option: SJISを使う	encoding = 'shift_jis'
グラフの縦軸のラベルをuntitledに設定する	plt.ylabel('y軸ラベル')
nが無限に続く数列	itertools.repeat(n)
option: ラベンダーブラッシュ色を使う	color = 'lavenderblush'
日付データの年数	aDate.year
散布図に赤い丸マーカーを描画する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='r')
横棒グラフの色をスレートブルーにする	plt.barh(データ列x, データ列y, color='slateblue')
ファイルをEUCで書き込み用にオープンする]	open(filepath, mode='w', encoding='euc_jp')
散布図の色をゴーストホワイトにする	plt.scatter(データ列x, データ列y, color='ghostwhite')
数値の符号をコピーにする	math.copysign(x, x2)
折れ線グラフをチョコレート色で描画する	plt.plot(データ列x, データ列y, color='chocolate')
ふたつの集合が共通の要素を持たないか調べる	aSet.isdisjoint(aSet2)
ヒストグラムをアンティークホワイト色で描画する	plt.hist(データ列, color='antiquewhite')
イテラブルの長さを制限する	collections.deque(iterable, maxlen=n)
散布図の色をトマトにする	plt.scatter(データ列x, データ列y, color='tomato')
ダークグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgrey')
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(データ列x, データ列y, color='floralwhite')
折れ線グラフを半透明にする	plt.plot(データ列x, データ列y, alpha=0.5)
横棒グラフをマルーン色で描画する	plt.barh(データ列x, データ列y, color='maroon')
データフレームを'A'列によってまとめたグループ	df.groupby('A')
option: 改行なし	end = ''
データフレームの列からユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
辞書の値の一覧	aDict.values()
折れ線グラフの四角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='#800080')
データ列をインポートする	import pandas as pd
文字列が片仮名か調べる	('ァ' <= ch <= 'ン')
実数を複素数に変換する	complex(x)
文字列を部分文字列で二分し、後半の文字列を使う	s.partition(sub)[-1]
折れ線グラフの色をプラムに設定する	plt.plot(データ列x, データ列y, color='plum')
文字列をSJISでバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
ヒストグラムの色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
option: ブラック色を使う	color = 'black'
辞書のキー一覧	list(aDict)
アクアマリン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='aquamarine')
タプルをナンバリングする	enumerate(aTuple)
データ列を箱ひげ図にする	plt.boxplot(データ列)
箱ひげ図を横方向にする	plt.boxplot(データ列, vert=False)
データ列の歪度	ds.kurt()
散布図に黒い四角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='k')
横棒グラフをアイボリー色で描画する	plt.barh(データ列x, データ列y, color='ivory')
折れ線グラフの色をコーンズシルクに設定する	plt.plot(データ列x, データ列y, color='cornsilk')
option: マーカーの色を白にする	markerfacecolor = 'white'
文字列はタイトルケースか調べる	s.istitle()
有理数を分母の最大値を指定して近似する	q.limit_denominator(max_denominator=1000000)
横棒グラフの色をrgbに設定する	plt.barh(ラベル列, データ列, color=rgb)
データフレームを丸める	df.round()
折れ線グラフを暗い赤色で描画する	plt.plot(データ列x, データ列y, color='darkred')
option: グラフの色をゲインズボロに設定する	color = 'gainsboro'
散布図に黒い星マーカーを描画する	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='k')
散布図にrgbの丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o', c=rgb)
折れ線グラフにバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x')
実数の絶対値	math.fabs(x)
横棒グラフの色をダークカーキにする	plt.barh(データ列x, データ列y, color='darkkhaki')
偽	False
データフレームのどの値が頻出か見る	df.mode()
十六進文字列をバイト列に変換する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
棒グラフをホットピンク色で描画する	plt.bar(データ列x, データ列y, color='hotpink')
散布図をライトスチールブルー色で描画する	plt.scatter(データ列x, データ列y, color='lightsteelblue')
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(データ列x, データ列y, color='mediumvioletred')
データフレームのカラムを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
データフレームのそれぞれのグループごとの合計	df.groupby(column).sum()
文字列の開始位置から終了位置まで部分文字列を探す	s.find(sub, start, end)
データを最大最小値で標準化する	sklearn.preprocessing.MinMaxScaler().fit_transform(データ)
棒グラフをスチールブルー色で描画する	plt.bar(データ列x, データ列y, color='steelblue')
二つの文字列をタブで区切ってプリントする	print(value, value2, sep='\t')
棒グラフの色をチョコレートにする	plt.bar(データ列x, データ列y, color='chocolate')
データフレームを複数の列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
nがn2以上か調べる	n >= n2
上位集合か調べる	aSet.issuperset(aSet2)
黄色色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='yellow')
ライトシアン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightcyan')
option: グラフの色をブランチドアーモンドに設定する	color = 'blanchedalmond'
ナバホホワイト色のヒストグラムを描画する	plt.hist(データ列, color='navajowhite')
レモンシフォン色のヒストグラムを描画する	plt.hist(データ列, color='lemonchiffon')
折れ線グラフの色をアリスブルーに設定する	plt.plot(データ列x, データ列y, color='aliceblue')
折れ線グラフをラベンダーブラッシュ色で描画する	plt.plot(データ列x, データ列y, color='lavenderblush')
ヒストグラムを青緑色で描画する	plt.hist(データ列, color='teal')
データフレームを列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームのカラムの中に文字列と文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
option: 改行コードを動作環境依存に設定する	newline = None
ロージーブラウン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='rosybrown')
散布図に赤い右三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='r')
ホワイトスモーク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='whitesmoke')
option: インディアンレッド色を使う	color = 'indianred'
棒グラフの色をオールドレースにする	plt.bar(データ列x, データ列y, color='oldlace')
インデント付きで辞書を文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
データフレームの欠損値を中央値に設定する	df.fillna(df.median())
option: ライトグレー色を使う	color = 'lightgray'
散布図の大バツマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='r')
ネイピア数	math.e
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
ライトブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightblue')
データフレームの重複した行数のマスク	df.duplicated()
rgbの丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o', c=rgb)
オブジェクトは文字列クラスか調べる	isinstance(obj, str)
データフレームの列がx以下の行を抽出する	df[df[column] <= x]
データフレームのカラムが正規分布からどの程度、尖っているか見る	df[col].skew()
横棒グラフの色を青紫にする	plt.barh(データ列x, データ列y, color='violet')
データフレームのリスト列のヒートマップを描画する	sns.heatmap(df[aList].corr())
イエローグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='yellowgreen')
散布図に黒い右三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='k')
データフレームを'A'列によって降順に破壊的にソートする	df.sort_values(by='A', ascending=False, inplace=True)
option: スノー色を使う	color = 'snow'
折れ線グラフの色をビスクに設定する	plt.plot(データ列x, データ列y, color='bisque')
ファイルをクローズする	f.close()
折れ線グラフのポイントマーカーを赤くする	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='r')
option: ダークオリーブグリーン色を使う	color = 'darkolivegreen'
option: グラフの種類を実線に設定する	linestyle = 'solid'
ヒストグラムを三つ並べて描画する	plt.hist([データ列, データ列, データ列], color=['b', 'r', 'g'])
データ列の中央値	ds.median()
サポートベクター回帰モデルを作る	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
散布図にポイントマーカーを使う	plt.scatter(データ列x, データ列y, marker='.')
白色のヒストグラムを描画する	plt.hist(データ列, color='white')
option: カーキ色を使う	color = 'khaki'
横棒グラフをライトコーラル色で描画する	plt.barh(データ列x, データ列y, color='lightcoral')
ヒストグラムの色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
rgbの四角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='s', c=rgb)
棒グラフの色をライトスカイブルーにする	plt.bar(データ列x, データ列y, color='lightskyblue')
折れ線グラフをオレンジ色で描画する	plt.plot(データ列x, データ列y, color='orange')
散布図の三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='b')
標準入力を使う	sys.stdin
データフレームの全カラムを散布図で可視化する	sns.pairplot(df)
リストを展開してプリントする	print(*aList)
ライトグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightseagreen')
ミディアムバイオレットレッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumvioletred')
ミスティローズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mistyrose')
データフレームのカラムの欠損値を直前の値に設定する	df[col].fillna(method='ffill')
棒グラフをレベッカパープル色で描画する	plt.bar(データ列x, データ列y, color='rebeccapurple')
データフレームの列の名前を列から文字列に付け直す	df.rename(columns={column: name})
xの小数点以下'3'桁までをプリントする	print(':.3f'.format(x))
option: マーカーの色をイエローグリーンにする	markerfacecolor = 'yellowgreen'
白色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='white')
カテゴリで色分けして、データフレームをに箱ひげ図で可視化する	sns.boxplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
配列の要素ごとの積	np.multiply(aArray, aArray2)
横棒グラフの色をダークグレーにする	plt.barh(データ列x, データ列y, color='darkgrey')
rgbの大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X', c=rgb)
ヒストグラムの色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
n2分のn	n / n2
xの小数点以下'3'桁までの文字列に変換する	':.3f'.format(x)
データフレームの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
オブジェクトのバイトサイズ	sys.getsizeof(obj)
散布図をプラム色で描画する	plt.scatter(データ列x, データ列y, color='plum')
棒グラフの色をサーモンにする	plt.bar(データ列x, データ列y, color='salmon')
option: グラフの色をゴールデンロッドに設定する	color = 'goldenrod'
標準入力から1文字だけ読む	sys.stdin.read(1)
両端キューのstart番目からend番目の部分要素	collections.deque(itertools.islice(deq, start, end))
実数以上の最小の整数	math.ceil(x)
行列の値を変更する	aArray[行番号, 列番号] = 指定の値
文字列を文字コードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
折れ線グラフの色をラベンダーブラッシュに設定する	plt.plot(データ列x, データ列y, color='lavenderblush')
データフレームのリストカラムのpercent分位数	df[aList].quantile(percent/100)
option: マーカーの色をホワイトスモークにする	markerfacecolor = 'whitesmoke'
棒グラフをダークターコイズ色で描画する	plt.bar(データ列x, データ列y, color='darkturquoise')
option: マーカーの色をオリベドラブにする	markerfacecolor = 'olivedrab'
ヒストグラムの色をタンに設定する	plt.hist(データ列, color='tan')
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
データフレームの相関行列	df.corr()
横棒グラフの色をラベンダーにする	plt.barh(データ列x, データ列y, color='lavender')
棒グラフの色をナバホホワイトにする	plt.bar(データ列x, データ列y, color='navajowhite')
データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
ヒストグラムをオリーブ色で描画する	plt.hist(データ列, color='olive')
K最近傍法で回帰分析を行う	model = sklearn.neighbors.KNeighborsRegressor(n_neighbors=5)
option: グラフの色をディムグレーに設定する	color = 'dimgray'
８進数字を全部使う	string.octdigits
配列の平均値	np.mean(aArray)
日付時刻データの日付	aDatetime.date()
折れ線グラフをミディアムスプリンググリーン色で描画する	plt.plot(データ列x, データ列y, color='mediumspringgreen')
Pandasで、エポック秒のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
棒グラフの色をパウダーブルーにする	plt.bar(データ列x, データ列y, color='powderblue')
ライトコーラル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightcoral')
ヒストグラムを紺色で描画する	plt.hist(データ列, color='darkblue')
既存の配列を元に全要素が0の配列	np.zeros_like(aArray)
ブルーバイオレット色の線グラフを描画する	plt.plot(データ列x, データ列y, color='blueviolet')
リストから配列を作る	np.array(aList)
散布図のマーカーを赤くする	plt.scatter(データ列x, データ列y, markerfacecolor='r')
実数が有限か調べる	math.isfinite(x)
黄色い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='y')
ダーク・スラテグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkslategrey')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightseagreen')
option: カデットブルー色を使う	color = 'cadetblue'
青緑色のヒストグラムを描画する	plt.hist(データ列, color='teal')
日付データが日付データと同時か調べる	aDate == aDate2
綺麗なグラフを描画する準備をする	import seaborn as sns
紺碧色の線グラフを描画する	plt.plot(データ列x, データ列y, color='azure')
折れ線グラフのポイントマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='.', markeredgewidth=2.5)
option: namesをカラムの名前に設定する	names = names
ヒストグラムをプラム色で描画する	plt.hist(データ列, color='plum')
部分的最小二乗法で回帰分析を行う	model = sklearn.cross_decomposition.PLSRegression(n_components=10)
データフレームを各列毎にグループ化して、列の個数を求める	df.groupby(column)[column2].count()
色付きの実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='#800080')
文字列をバイト列に変換する	bytes(s)
両端キューをポップする	deq.pop()
データフレームの行と列を入れ替える	df.T
クリムゾン色のヒストグラムを描画する	plt.hist(データ列, color='crimson')
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
ダークオリーブグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkolivegreen')
データ列の欠損値を最小値に設定する	ds.fillna(ds.min())
ファイルをSJISで書き込み用にオープンする]	open(filepath, mode='w', encoding='shift_jis')
現在の作業ディレクトリ	os.getcwd()
折れ線グラフの星マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='*', markersize=2.0)
散布図の色をスレートブルーにする	plt.scatter(データ列x, データ列y, color='slateblue')
ヒストグラムの色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
ヒストグラムをブラック色で描画する	plt.hist(データ列, color='black')
横棒グラフをライム色で描画する	plt.barh(データ列x, データ列y, color='lime')
ヒストグラムを点線で描画する	plt.hist(データ列, linestyle='dotted')
リストとリストについて散布図を描画して、マーカーを下三角に設定する	plt.plot(データ列x, データ列y, marker='v')
折れ線グラフの三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='#800080')
配列の累積積	np.cumprod(aArray)
散布図の色を紺にする	plt.scatter(データ列x, データ列y, color='darkblue')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgrey')
インディアンレッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='indianred')
横棒グラフをコーラル色で描画する	plt.barh(データ列x, データ列y, color='coral')
未初期化の配列	np.empty(要素数, dtype=np.int)
nが正の数か調べる	n > 0
イエローグリーン色のヒストグラムを描画する	plt.hist(データ列, color='yellowgreen')
等差数列を配列に変換する	np.arange(開始値, 終了値, 等差)
option: グラフの色を小麦色に設定する	color = 'wheat'
option: グラフの色をミディアムスプリンググリーンに設定する	color = 'mediumspringgreen'
平均線付き箱ひげ図を描画する	plt.boxplot(データ列, meanline=True)
文字列を部分文字列で区切る	s.split(sub)
散布図の色をダークグレーにする	plt.scatter(データ列x, データ列y, color='darkgrey')
棒グラフの色をディープスカイブルーにする	plt.bar(データ列x, データ列y, color='deepskyblue')
棒グラフをイエローグリーン色で描画する	plt.bar(データ列x, データ列y, color='yellowgreen')
散布図に黒い四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s', c='k')
option: グラフの色をクリムゾンに設定する	color = 'crimson'
リストの長さだけ繰り返す	range(len(aList))
横棒グラフの色をライトサーモンにする	plt.barh(データ列x, データ列y, color='lightsalmon')
辞書のキーとその値を列挙する	aDict.items()
ダークオレンジ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkorange')
nがn2よりも小さいか調べる	n < n2
モカシン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='moccasin')
横軸の表示範囲を変更する	plt.xlim(最小値, 最大値)
実行時に標準出力がパイプか調べる	not sys.stdout.isatty()
文字列の先頭で大文字・小文字を無視して正規表現にマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
浮動小数点数の最小値	sys.float_info.min
データを最大値で正規化する	sklearn.preprocessing.MaxAbsScaler().fit_transform(データ)
ダークターコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkturquoise')
散布図の色をフローラルホワイトにする	plt.scatter(データ列x, データ列y, color='floralwhite')
option: アイボリー色を使う	color = 'ivory'
文字列内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
折れ線グラフに赤い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='r')
ライトスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightskyblue')
デピンク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='deeppink')
横棒グラフを描画して、ラベルを中央寄せする	plt.barh(ラベル列, データ列, align='center')
配列を平坦にする	aArray.flatten()
散布図の大バツマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='X', markeredgewidth=2.5)
日付データををn分後に進める	aDate + datetime.timedelta(minutes=n)
ハニーデュー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='honeydew')
三変数の最大値	max(x, y, z)
辞書から最後の項目をポップする	aDict.popitem()
棒グラフをダークスレートブルー色で描画する	plt.bar(データ列x, データ列y, color='darkslateblue')
実数から実数を引く	x - y
実数を実数で整数除算する	x // y
option: オーキッド色を使う	color = 'orchid'
リストの末尾からn番目以前の部分を取り出す	aList[:-n]
option: 箱ひげ図を水平方向にする	vert = False
ファイルを読み込みモードでオープンする]	open(filepath, mode='r')
データフレームの欠損値をxで埋める	df.fillna(x)
横棒グラフの色をサーモンにする	plt.barh(データ列x, データ列y, color='salmon')
イテラブルからn個、サンプリングする	random.sample(iterable, k=n)
文字列リストを連結する	''.join(aStringList)
データ列をヒストグラムにする	plt.hist(データ列)
折れ線グラフのポイントマーカーを黒くする	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='k')
イテラブルを文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
ダークスレートブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkslateblue')
ヒストグラムの色を青緑に設定する	plt.hist(データ列, color='teal')
散布図のバツマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='#800080')
棒グラフの色をピンクにする	plt.bar(データ列x, データ列y, color='pink')
nが3で割り切れるか調べる	n % 3 == 0
日付時刻データをエポック秒に変換する	aDatetime.timestamp()
データフレームの棒グラフを各カテゴリごとに縦横に並べる	sns.catplot(kind='bar', y='列名', col='カテゴリ名', row='カテゴリ名', data=df)
三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^')
文字列がタプルの要素か調べる	element in aTuple
散布図をペルー色で描画する	plt.scatter(データ列x, データ列y, color='peru')
ヒストグラムをスレートブルー色で描画する	plt.hist(データ列, color='slateblue')
散布図の色をローングリーンにする	plt.scatter(データ列x, データ列y, color='lawngreen')
ライトスレイグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightslategray')
ファイルの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
イテラブルをカウントして、カウンタを更新する	aCounter.update(iterable)
ゼロ埋めされた三二ビット整数型の配列	np.zeros(要素数, dtype=np.int16)
option: ライトスレイグレー色を使う	color = 'lightslategray'
プラットフォームの符号付き整数の最大値	sys.maxsize
データフレームを列によってソートして、上位n件を取り出す	df.sort_values(columns).head(n)
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
配列をn個にビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
黒い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='k')
横棒グラフをディムグレー色で描画する	plt.barh(データ列x, データ列y, color='dimgrey')
データフレームの先頭の列以外を全て説明変数にする	説明変数 = df[df.columns[1:]]
ヒストグラムをカラーマップで描画する	"plt.hist(データ列x, color=plt.get_cmap(""Spectral""))"
変数がマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
横棒グラフをダークグレー色で描画する	plt.barh(データ列x, データ列y, color='darkgrey')
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(データ列x, データ列y, color='darkseagreen')
文字列をカンマで分割して、文字列リストに変換する	s.split(',')
データフレームのそれぞれのグループごとの個数	df.groupby(column).count()
ダークバイオレット色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkviolet')
ダークシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkseagreen')
赤い実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='r')
オブジェクトが関数か調べる	callable(obj)
横棒グラフの色をダークバイオレットにする	plt.barh(データ列x, データ列y, color='darkviolet')
option: グラフの色をサーモンに設定する	color = 'salmon'
モカシン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='moccasin')
横棒グラフの色をレベッカパープルにする	plt.barh(データ列x, データ列y, color='rebeccapurple')
nが1、もしくは2か調べる	n == 1 or n == 2
ユーザが整数を入力する	int(input())
日付データををn週間後に進める	aDate + datetime.timedelta(weeks=n)
カウンタ同士でユニオン演算する	aCounter | aCounter2
事前にASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
スチールブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='steelblue')
データ列を使う	import pandas as pd
棒グラフの色をライトイエローにする	plt.bar(データ列x, データ列y, color='lightyellow')
option: マーカーの色をタンにする	markerfacecolor = 'tan'
n個の数値イテラブル	range(n)
インディゴ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='indigo')
option: グラフの色をライトサーモンに設定する	color = 'lightsalmon'
散布図の色をミントクリームにする	plt.scatter(データ列x, データ列y, color='mintcream')
データフレームのリストカラムの欠損値を中央値で埋める	df[aList].fillna(df[aList].median())
棒グラフの色をディムグレーにする	plt.bar(データ列x, データ列y, color='dimgray')
option: マーカーの色をライトシアンにする	markerfacecolor = 'lightcyan'
ヒストグラムの色をマゼンタに設定する	plt.hist(データ列, color='magenta')
横棒グラフをインディアンレッド色で描画する	plt.barh(データ列x, データ列y, color='indianred')
横棒グラフの色をロージーブラウンにする	plt.barh(データ列x, データ列y, color='rosybrown')
棒グラフの色をラベンダーブラッシュにする	plt.bar(データ列x, データ列y, color='lavenderblush')
カウンタのそれぞれの項目を、そのカウントだけ列挙する	aCounter.elements()
棒グラフをパールゴールデンロッド色で描画する	plt.bar(データ列x, データ列y, color='palegoldenrod')
option: グラフの色をアクアマリンに設定する	color = 'aquamarine'
カウンタからイテラブルをカウントして引く	aCounter.subtract(iterable)
散布図をパールバイオレットレッド色で描画する	plt.scatter(データ列x, データ列y, color='palevioletred')
ホットピンク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='hotpink')
ヒストグラムを赤色で描画する	plt.hist(データ列, color='red')
現在の作業ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
データフレームのカラムの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
文字列内にひとつでもアスキー文字が含まれるか調べる	any(c.isascii() for c in s)
クリムゾン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='crimson')
多次元データをt-SNEで濃く次元に次元削減する	sklearn.manifold.TSNE(n_components=二).fit_transform(多次元データ)
下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v')
option: 右三角マーカーを使う	marker = '>'
ライトグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightseagreen')
option: スチールブルー色を使う	color = 'steelblue'
折れ線グラフの色をライトイエローに設定する	plt.plot(データ列x, データ列y, color='lightyellow')
option: ピンク色を使う	color = 'pink'
二つのオブジェクトが等しいか調べる	obj == obj2
オブジェクトは整数クラスか調べる	isinstance(obj, int)
散布図の色をフクシアにする	plt.scatter(データ列x, データ列y, color='fuchsia')
日付データが日付データより後ろか調べる	aDate > aDate2
ブランチドアーモンド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='blanchedalmond')
数式の積分を求める	sympy.integrate(e)
散布図に赤いバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x', c='r')
棒グラフをリネン色で描画する	plt.bar(データ列x, データ列y, color='linen')
option: ダークグレー色を使う	color = 'darkgray'
横棒グラフの色をダーク・スラテグレーにする	plt.barh(データ列x, データ列y, color='darkslategrey')
ファイルが存在しないか調べる	not os.path.exists(filepath)
棒グラフの色をアイボリーにする	plt.bar(データ列x, データ列y, color='ivory')
データフレームを'A'列によってによって破壊的にソートする	df.sort_values(by='A', inplace=True)
最大最小から配列	np.linspace(最小値, 最大値, 要素数)
散布図の右三角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='k')
左三角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='<')
データフレームを二つの列の値によってグループ化する	df.groupby(['A', 'B'])
option: グラフの色をレモンシフォンに設定する	color = 'lemonchiffon'
ファイルを文字列の示すエンコーディングで書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
option: グラフの色をダークグレーに設定する	color = 'darkgrey'
赤いダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D', c='r')
日付時刻データをタプルに変換する	aDatetime.timetuple()
折れ線グラフの色をマゼンタに設定する	plt.plot(データ列x, データ列y, color='magenta')
文字列内にひとつでも小文字が含まれるか調べる	any(c.islower() for c in s)
nが3の倍数か調べる	n % 3 == 0
折れ線グラフをサーモン色で描画する	plt.plot(データ列x, データ列y, color='salmon')
棒グラフをスレートブルー色で描画する	plt.bar(データ列x, データ列y, color='slateblue')
グラフのカラーパレットをパステル調にする	sns.set(pallete='pastel')
エクセルファイルファイルからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
option: マーカーの色をインディゴにする	markerfacecolor = 'indigo'
データ列を小数点以下n桁で丸める	ds.round(n)
ダークオリーブグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkolivegreen')
下三角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='v')
棒グラフの色をミントクリームにする	plt.bar(データ列x, データ列y, color='mintcream')
カウンタの項目一覧	aCounter.keys()
横棒グラフの色をダークサーモンにする	plt.barh(データ列x, データ列y, color='darksalmon')
棒グラフの色をマルーンにする	plt.bar(データ列x, データ列y, color='maroon')
データフレームの累積分布を描画する	sns.ecdfplot(x='列名', data=df)
実数を万の位で丸める	round(x, -4)
文字列中から正規表現に複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
トマト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='tomato')
スプリンググリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='springgreen')
散布図をアイボリー色で描画する	plt.scatter(データ列x, データ列y, color='ivory')
日付時刻データを文字列でフォーマットして文字列に変換する	"aDatetime.strftime(""%d/%m/%y"")"
範囲を指定して整数乱数を生成する	random.randint(最小値, 最大値)
散布図をダーク・スラテグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkslategrey')
option: 青色を使う	color = 'blue'
ロイヤルブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='royalblue')
option: グラフの色をペールグリーンに設定する	color = 'palegreen'
option: グラフの色を耐火レンガに設定する	color = 'firebrick'
option: ダーク・スラテグレー色を使う	color = 'darkslategrey'
デピンク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='deeppink')
option: ライトシアン色を使う	color = 'lightcyan'
配列の全要素の値を変更する	aArray[:, :] = 指定の値
辞書からキーの値か、もしくは要素を得る	aDict.get(key, element)
棒グラフをミッドナイトブルー色で描画する	plt.bar(データ列x, データ列y, color='midnightblue')
横棒グラフの色をダークグレーにする	plt.barh(データ列x, データ列y, color='darkgray')
ダークゴールデンロッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkgoldenrod')
横棒グラフの色をダークオレンジにする	plt.barh(データ列x, データ列y, color='darkorange')
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
横棒グラフをミディアムオーキッド色で描画する	plt.barh(データ列x, データ列y, color='mediumorchid')
ライトスレイグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightslategray')
実行時の標準出力の出力先がターミナルか調べる	sys.stdout.isatty()
option: グラフの色をタンに設定する	color = 'tan'
最初のカテゴリーを除外してデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
option: ポイントマーカーを描画する	marker = '.'
散布図のマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, markeredgewidth=2.5)
seabornのデフォルトを適用する	sns.set()
データフレームの中の列をビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列を四分位数ごとにビン分割する	pd.qcut(df[col], 4)
折れ線グラフの色をミスティローズに設定する	plt.plot(データ列x, データ列y, color='mistyrose')
リストとリストについて散布図を描画して、星マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='*', c=rgb)
折れ線グラフをバリーウッド色で描画する	plt.plot(データ列x, データ列y, color='burlywood')
文字列の先頭	s[0]
散布図の右三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='>', markersize=2.0)
option: マーカーの色をダークスレートブルーにする	markerfacecolor = 'darkslateblue'
折れ線グラフをグレー色で描画する	plt.plot(データ列x, データ列y, color='grey')
ペルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='peru')
スカイブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='skyblue')
リストを等間隔でn個にビン分割する	pd.cut(aList, n)
文字列を黒色でプリントする	print(f'\033[30m{value}\033[0m')
プラム色の散布図を描画する	plt.scatter(データ列x, データ列y, color='plum')
文字列をマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
ダークシアグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkseagreen')
ヒストグラムをデピンク色で描画する	plt.hist(データ列, color='deeppink')
横棒グラフの色をチョコレートにする	plt.barh(データ列x, データ列y, color='chocolate')
スレートブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='slateblue')
rgbの三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^', c=rgb)
option: マーカーの色をサドルブラウンにする	markerfacecolor = 'saddlebrown'
散布図に左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<')
文字列全体が正規表現に複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
空白文字を全部使う	string.whitespace
右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>')
異なる列をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
本日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
インデント幅nで、辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
文字列内にひとつでも大文字が含まれるか調べる	any(c.isupper() for c in s)
文字列のケースを変換する	s.casefold()
文字列中から正規表現にマッチする文字列を探す	re.search(pattern, s)
option: マーカーの色を黄色にする	markerfacecolor = 'yellow'
折れ線グラフの色を紺碧に設定する	plt.plot(データ列x, データ列y, color='azure')
option: グラフの色をインディアンレッドに設定する	color = 'indianred'
横棒グラフの色をパパイヤウィップにする	plt.barh(データ列x, データ列y, color='papayawhip')
棒グラフを貝殻色で描画する	plt.bar(データ列x, データ列y, color='seashell')
横棒グラフをミディアムターコイズ色で描画する	plt.barh(データ列x, データ列y, color='mediumturquoise')
折れ線グラフのマーカーを星にする	plt.plot(データ列x, データ列y, marker='*')
棒グラフの色をミディアムシアグリーンにする	plt.bar(データ列x, データ列y, color='mediumseagreen')
実数を三乗する	x ** 3
option: ペールグリーン色を使う	color = 'palegreen'
文字列の左側から部分文字列を取り除く	s.lstrip(sub)
散布図に左三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='<')
多次元尺度構成法を行う	model = sklearn.manifold.MSD(n_components=n)
文字列を下線付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
ふたつの集合の和集合	aSet.union(aSet2)
リストに応じて、散布図の色を変える	plt.scatter(データ列x, データ列y, c=aList, cmap='Blues')
横棒グラフをペルー色で描画する	plt.barh(データ列x, データ列y, color='peru')
リストとリストについての散布図に黒い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', c='k')
ヒストグラムの色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
リストをビン数nでビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
option: セパレータを使わない	sep = ''
茶色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='brown')
棒グラフをグリーンイエロー色で描画する	plt.bar(データ列x, データ列y, color='greenyellow')
折れ線グラフをシスル色で描画する	plt.plot(データ列x, データ列y, color='thistle')
ヒストグラムをミントクリーム色で描画する	plt.hist(データ列, color='mintcream')
フォレストグリーン色のヒストグラムを描画する	plt.hist(データ列, color='forestgreen')
データフレームをグループ化し、それぞれの列に対し平均値を求める	df.groupby(column)[column2].mean()
散布図に青い大バツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='b')
リストとリストについての散布図に黒い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', c='k')
横棒グラフの色をアイボリーにする	plt.barh(データ列x, データ列y, color='ivory')
ヒストグラムの色をコーラルに設定する	plt.hist(データ列, color='coral')
option: グラフの色をライトブルーに設定する	color = 'lightblue'
データフレームの列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
本日が何曜日か知る	datetime.datetime.today().weekday()
散布図に赤いポイントマーカーを描画する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='r')
実数を切り下げて整数に変換する	math.floor(x)
ヒストグラムをクリムゾン色で描画する	plt.hist(データ列, color='crimson')
データフレームのリストカラムの欠損値を最頻値で埋める	df[aList].fillna(df[aList].mode().iloc[0])
折れ線グラフをマゼンタ色で描画する	plt.plot(データ列x, データ列y, color='magenta')
リストをリストを境界値としてビン分割する	pd.cut(aList, aList)
辞書からカウンタを作る	collections.Counter(aDict)
散布図の星マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='#800080')
ファイルが存在するか調べる	os.path.exists(filepath)
折れ線グラフの色を淡いピンク色に設定する	plt.plot(データ列x, データ列y, color='lightpink')
ゴールデンロッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='goldenrod')
option: グラフの色をミディアムオーキッドに設定する	color = 'mediumorchid'
散布図をシーグリーン色で描画する	plt.scatter(データ列x, データ列y, color='seagreen')
横棒グラフをフローラルホワイト色で描画する	plt.barh(データ列x, データ列y, color='floralwhite')
赤いグリッド線を引く	plt.grid(color='r')
辞書を浅くコピーする	dict(aDict)
横棒グラフをゴールド色で描画する	plt.barh(データ列x, データ列y, color='gold')
ヒストグラムをダークスラテグレー色で描画する	plt.hist(データ列, color='darkslategray')
折れ線グラフの色を黄色に設定する	plt.plot(データ列x, データ列y, color='yellow')
データフレームのリストカラムの欠損値を平均値で埋める	df[aList].fillna(df[aList].mean())
ヒストグラムをインディアンレッド色で描画する	plt.hist(データ列, color='indianred')
文字列は全て十進数字か調べる	s.isdecimal()
棒グラフをダークオレンジ色で描画する	plt.bar(データ列x, データ列y, color='darkorange')
棒グラフの色をパールバイオレットレッドにする	plt.bar(データ列x, データ列y, color='palevioletred')
散布図の色をライトイエローにする	plt.scatter(データ列x, データ列y, color='lightyellow')
option: スラグレー色を使う	color = 'slategray'
ガウス過程分類モデルを作る	model = sklearn.gaussian_process.GaussianProcessClassifier()
散布図をダークバイオレット色で描画する	plt.scatter(データ列x, データ列y, color='darkviolet')
リストの末尾を取り除く	aList[:-1]
文字列は全て数値か調べる	s.isnumeric()
散布図の色をゲインズボロにする	plt.scatter(データ列x, データ列y, color='gainsboro')
ヒストグラムを暗い赤色で描画する	plt.hist(データ列, color='darkred')
クリムゾン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='crimson')
option: グラフの色をコーンズシルクに設定する	color = 'cornsilk'
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列x, データ列y, color='lightseagreen')
option: マーカーの色をライトグレーにする	markerfacecolor = 'lightgrey'
option: グラフの色をコーラルに設定する	color = 'coral'
棒グラフの色を茶色にする	plt.bar(データ列x, データ列y, color='brown')
ダークグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkgrey')
ミディアムターコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumturquoise')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列x, データ列y, color='dimgray')
列'A'と列'B'をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
折れ線グラフの色をオーキッドに設定する	plt.plot(データ列x, データ列y, color='orchid')
パレットトルコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='paleturquoise')
棒グラフの色をフローラルホワイトにする	plt.bar(データ列x, データ列y, color='floralwhite')
赤い点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='r')
option: マーカーの色をミディアムパープルにする	markerfacecolor = 'mediumpurple'
データを最大値と最小値で正規化する	sklearn.preprocessing.MinMaxScaler(feature_range=(0, 1)).fit_transform(データ)
文字列を新しい文字列で置き換える	s.replace(sub, newsub)
ISO書式の文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
散布図のマーカーの色を変更する	plt.scatter(データ列x, データ列y, markerfacecolor='#800080')
option: グラフの色をダークターコイズに設定する	color = 'darkturquoise'
データフレームを複数の列の値によってグループ化する	df.groupby(columns)
K最近傍法でクラス分類を行う	model = sklearn.neighbors.KNeighborsClassifier(n_neighbors=5)
棒グラフの色をダークグレーにする	plt.bar(データ列x, データ列y, color='darkgray')
ゴーストホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='ghostwhite')
ディムグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='dimgray')
ヒストグラムの色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
option: ホットピンク色を使う	color = 'hotpink'
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightslategray')
日付時刻データが木曜日か調べる	aDatetime.weekday() == 3
データ列を二つ並べて箱ひげ図にする	plt.boxplot([データ列, データ列])
ダークバイオレット色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkviolet')
オーキッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='orchid')
イテラブルから両端キューを作る	collections.deque(iterable)
エクセルファイルファイルからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
シーグリーン色のヒストグラムを描画する	plt.hist(データ列, color='seagreen')
両端キュー中の要素のインデックス	deq.index(element)
ヒストグラムをミディアムブルー色で描画する	plt.hist(データ列, color='mediumblue')
option: グラフの色をインディゴに設定する	color = 'indigo'
nをn2で割った余り	n % n2
ライトスチールブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightsteelblue')
データフレームのカラムの値を正規表現patternでまとめてreplに置き換える	df[col].replace(pattern, repl, regex=True)
横棒グラフの色をインディゴにする	plt.barh(データ列x, データ列y, color='indigo')
変数について数式を積分する	sympy.integrate(e, z)
グリーンイエロー色のヒストグラムを描画する	plt.hist(データ列, color='greenyellow')
散布図のマーカーを星にする	plt.scatter(データ列x, データ列y, marker='*')
option: 先頭の行をヘッダに設定する	header = 0
折れ線グラフをオーキッド色で描画する	plt.plot(データ列x, データ列y, color='orchid')
option: マーカーの色を暗い赤にする	markerfacecolor = 'darkred'
折れ線グラフを色付きの破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='#800080')
右三角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='>')
文字列を大文字・小文字を無視して正規表現で分割する	re.split(pattern, s, flags=re.IGNORECASE)
option: グラフの色をスラグレーに設定する	color = 'slategray'
年月日と時刻から日付時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
ファイルからバイナリストリームをオープンして]、fとする	f = open(filepath, mode='rb')
option: マーカーの色をダークグレーにする	markerfacecolor = 'darkgrey'
ヒストグラムをミディアムパープル色で描画する	plt.hist(データ列, color='mediumpurple')
散布図の四角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='r')
特異値分解を行う	model = sklearn.decomposition.TruncatedSVD(n_components=n)
データフレームの欠損値を最小値で埋める	df.fillna(df.min())
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
文字列を走査し、正規表現に大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
リストとリストについて散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(データ列x, データ列y, label=s)
option: コロンをセパレータで使う	sep = ':'
option: 箱ひげ図に平均を加える	showmeans = False
ローングリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lawngreen')
ヒストグラムを黒くする	plt.hist(データ列, color='k')
最大長nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
実数のn乗	x ** n
棒グラフをライトグリーン色で描画する	plt.bar(データ列x, データ列y, color='lightseagreen')
option: シャルトリューズ色を使う	color = 'chartreuse'
両端キューを空にする	deq.clear()
折れ線グラフをスレートブルー色で描画する	plt.plot(データ列x, データ列y, color='slateblue')
ヒストグラムの色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムの色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
リストとリストについて散布図を描画して、マーカーを四角に設定する	plt.plot(データ列x, データ列y, marker='s')
散布図のマーカーを下三角にする	plt.scatter(データ列x, データ列y, marker='v')
棒グラフの色をベージュにする	plt.bar(データ列x, データ列y, color='beige')
横棒グラフをミディアムパープル色で描画する	plt.barh(データ列x, データ列y, color='mediumpurple')
option: グラフの色をイエローグリーンに設定する	color = 'yellowgreen'
オブジェクトのオブジェクト識別子	id(obj)
折れ線グラフにダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D')
イテラブルを文字列リストに変換して、タブで連結する	'\t'.join(map(str, iterable))
現在処理中の例外を情報	sys.exc_info()
option: グラフの色をスカイブルーに設定する	color = 'skyblue'
折れ線グラフの色をゴールデンロッドに設定する	plt.plot(データ列x, データ列y, color='goldenrod')
散布図の色をスラグレーにする	plt.scatter(データ列x, データ列y, color='slategray')
散布図にrgbの星マーカーを使う	plt.plot(データ列x, データ列y, marker='*', c=rgb)
データフレームの歪度	df.kurt()
year年month月を日付に変換する	datetime.date(year=year, month=month, day=1)
option: どの行もヘッダにしない	header = None
オプションで、標準出力を出力にする	file = sys.stdout
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ファイルを書き込みできるようにオープンする]	open(filepath, mode='w')
サンディーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='sandybrown')
文字列が全て大文字か調べる	s.isupper()
無限大	math.inf
文字列を代数計算の変数に変換する	sympy.Symbol(s)
散布図をライトグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightgray')
option: エンコーディングをEUCに設定する	encoding = 'euc_jp'
ブラック色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='black')
折れ線グラフのダイアモンドマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='D', markeredgewidth=2.5)
option: セパレータをタブにする	sep = '\t'
ヒストグラムの色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
ヒストグラムをマルーン色で描画する	plt.hist(データ列, color='maroon')
リストが空か調べる	len(aList) == 0
ロバストな線形回帰モデルを作る	model = sklearn.linear_model.HuberRegressor()
両端キューの要素をインプレースに反転する	deq.reverse()
ファイルからバイナリ書き込みストリームをオープンして]、fとする	f = open(filepath, mode='wb')
二つの変数をそれぞれ定義する	x, y = i, j
ブースティングで回帰分析を行う	model = sklearn.ensemble.AdaBoostRegressor(random_state=0, n_estimators=100)
データ列を使う	import pandas as pd
棒グラフの色をミディアムスレートブルーにする	plt.bar(データ列x, データ列y, color='mediumslateblue')
option: ゲインズボロ色を使う	color = 'gainsboro'
space	' '
Pandasで、dateStringを日付データに変換する	pd.to_datetime(dateString)
nullに等しい値	None
折れ線グラフをコーンズシルク色で描画する	plt.plot(データ列x, データ列y, color='cornsilk')
実数の平方根	math.sqrt(x)
データフレームをCSVファイルでJSONLファイルに保存する	df.to_csv(filename)
棒グラフの色をタンにする	plt.bar(データ列x, データ列y, color='tan')
切片なしの線形回帰分析の準備をする	model = sklearn.linear_model.LinearRegression(fit_intercept=False)
サーモン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='salmon')
集合の浅いコピー	aSet.copy()
縦軸の目盛を表示しない	plt.yticks([])
列'A'と列'B'をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
横棒グラフをライトグレー色で描画する	plt.barh(データ列x, データ列y, color='lightgray')
名前からカラーマップを使う	"plt.get_cmap(""カラーマップ名"")"
データフレームのカラムが何分か見る	df[col].dt.minute
ガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
カウンタのユニークな項目を列挙する	list(aCounter)
数式の変数についてのn階微分を求める	sympy.diff(e, z, n)
option: マーカーの色をパウダーブルーにする	markerfacecolor = 'powderblue'
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(データ列x, データ列y, color='mediumturquoise')
リストとリストについての散布図に四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s')
散布図の色をライムにする	plt.scatter(データ列x, データ列y, color='lime')
本日をタプルに変換する	datetime.datetime.today().timetuple()
イテラブルのそれぞれを関数でフィルタする	filter(func, iterable)
エクセルファイルファイルからエクセルファイルを読み込む	pd.read_excel(filename)
スレートブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='slateblue')
nがn2未満、またはn3以上か調べる	n < n2 or n >= n3
日付データが何曜日か知る	aDate.weekday()
横棒グラフの色をコーンズシルクにする	plt.barh(データ列x, データ列y, color='cornsilk')
タプルの末尾からn番目以前の部分を取り出す	aTuple[:-n]
データフレームの指定された列を抽出する	df[column]
散布図の丸マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='#800080')
データフレームのカラムのタイムゾーンを文字列に設定する	df[col].tz_convert(s)
棒グラフの色をデピンクにする	plt.bar(データ列x, データ列y, color='deeppink')
横棒グラフの色をミディアムオーキッドにする	plt.barh(データ列x, データ列y, color='mediumorchid')
データフレームをインデックスによってソートする	df.sort_index()
リストのn番目の	aList[n]
折れ線グラフをドジャーブルー色で描画する	plt.plot(データ列x, データ列y, color='dodgerblue')
散布図のダイアモンドマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='#800080')
実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid')
散布図をパウダーブルー色で描画する	plt.scatter(データ列x, データ列y, color='powderblue')
option: グラフの色をパールゴールデンロッドに設定する	color = 'palegoldenrod'
青色のヒストグラムを描画する	plt.hist(データ列, color='blue')
コーンズシルク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='cornsilk')
カーキ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='khaki')
データフレームをグループ化し、それぞれの列に対し最大値を求める	df.groupby(column)[column2].max()
option: マーカーの色をグレーにする	markerfacecolor = 'grey'
データフレームの中の列と列に重複があれば、マスクする	df.duplicated(subset=[column, column2])
ヒストグラムをサンディーブラウン色で描画する	plt.hist(データ列, color='sandybrown')
ダークオリーブグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkolivegreen')
オリベドラブ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='olivedrab')
実数を十の位で丸める	round(x, -1)
折れ線グラフをローングリーン色で描画する	plt.plot(データ列x, データ列y, color='lawngreen')
青色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='blue')
両端キューの中に要素が含まれてるか調べる	element in deq
エンコーディング	sys.getdefaultencoding()
文字列中にひとつでも非アルファベットが含まれるか調べる	any(not c.isalpha() for c in s)
グラフの用途をスライドに設定する	sns.set(context='talk')
オプションで、出力先を標準出力に設定する	file = sys.stdout
データフレームからランダムにn行を抽出する	df.sample(n)
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
シーグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='seagreen')
データ列の要約統計量	ds.describe()
日付データをISO形式の文字列に変換する	aDate.isoformat()
散布図を黒くする	plt.scatter(データ列x, データ列y, color='k')
option: 配列のデータ型を指定する	dtype = bool
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
ミディアムスレートブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumslateblue')
ヒストグラムをミディアムアクアマリン色で描画する	plt.hist(データ列, color='mediumaquamarine')
散布図の丸マーカーを青くする	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='b')
パーセプトロンで回帰分析を行う	model = sklearn.neural_network.MLPRegressor(hidden_layer_sizes=(10, 10))
ヒストグラムをシアン色で描画する	plt.hist(データ列, color='cyan')
青緑色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='teal')
両端キューのstart〜endの部分要素	collections.deque(itertools.islice(deq, start, end))
文字列から部分文字列を全て取り除く	s.replace(sub, '')
折れ線グラフをコーラル色で描画する	plt.plot(データ列x, データ列y, color='coral')
データフレームを10の位で丸める	df.round(-1)
文字列がタプルの要素でないか調べる	element not in aTuple
リストの各要素を関数に適用した結果でソートする	sorted(aList, key=func)
リストとリストについての散布図に赤い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', c='r')
ローングリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lawngreen')
ヒストグラムの色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ファイルを追加モードでオープンする]	open(filepath, mode='a')
黄色い散布図を描画する	plt.scatter(データ列x, データ列y, color='y')
ブラック色の散布図を描画する	plt.scatter(データ列x, データ列y, color='black')
棒グラフを青紫色で描画する	plt.bar(データ列x, データ列y, color='violet')
要素が辞書の値に含まれていないか調べる	element not in aDict.values()
リストを反転する	reversed(aList)
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightgreen')
データフレームの末尾n行を抽出する	df.tail(n)
二つの配列を行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
データフレームのインデックスの一覧	df.index
option: マーカーの色をレモンシフォンにする	markerfacecolor = 'lemonchiffon'
散布図を白くする	plt.scatter(データ列x, データ列y, color='w')
option: マーカーの色をライトサーモンにする	markerfacecolor = 'lightsalmon'
option: グラフの色をスレートブルーに設定する	color = 'slateblue'
ゼロ埋めされた行列	np.zeros(行数, 列数)
実数を文字列に変換する	str(x)
横棒グラフの色をサドルブラウンにする	plt.barh(データ列x, データ列y, color='saddlebrown')
文字列の接頭辞が部分文字列か調べる	s.startswith(sub)
正規分布による累積分布関数	scipy.stats.norm.cdf(x, loc=平均値, scale=標準偏差)
ヒストグラムベースの勾配ブースティング分類木を作る	model = sklearn.ensemble.HistGradientBoostingClassifier()
データフレームの列の名前を列挙する	df.columns
配列の要素ごとに加算する	aArray + aArray2
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
option: エラーを無視するように設定する	errors = 'ignore'
線形のクラス分類をする	model = sklearn.linear_model.LogisticRegression()
散布図をマルーン色で描画する	plt.scatter(データ列x, データ列y, color='maroon')
nかけるn2	n * n2
折れ線グラフのダイアモンドマーカーの色を変更する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='#800080')
オリーブ色のヒストグラムを描画する	plt.hist(データ列, color='olive')
両端キューが空か調べる	len(deq) == 0
ヒストグラムをライム色で描画する	plt.hist(データ列, color='lime')
折れ線グラフをゴールド色で描画する	plt.plot(データ列x, データ列y, color='gold')
棒グラフを耐火レンガ色で描画する	plt.bar(データ列x, データ列y, color='firebrick')
横棒グラフをダークターコイズ色で描画する	plt.barh(データ列x, データ列y, color='darkturquoise')
黒いグリッド線を引く	plt.grid(color='k')
データフレームのカラムを散布図で可視化する	sns.scatterplot(data=df, x='列名', y='列名')
データフレームから重複を削除する	df.drop_duplicates()
文字列を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
実数を切り上げる	math.ceil(x)
グリッド線を黒くする	plt.grid(color='k')
option: グラフの色をミディアムバイオレットレッドに設定する	color = 'mediumvioletred'
二つの文字列は等しくないか調べる	s != s2
データフレームから重複を残さず、削除する	df.drop_duplicates(keep=False)
折れ線グラフの左三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='<', markeredgewidth=2.5)
スラグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='slategrey')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ふたつのリストの積集合	list(set(aList) & set(aList2))
ヒストグラムの色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
散布図に黒いポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.', c='k')
折れ線グラフを色付きの一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='#800080')
ダークサーモン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darksalmon')
折れ線グラフをディムグレー色で描画する	plt.plot(データ列x, データ列y, color='dimgray')
折れ線グラフをライトスレイグレー色で描画する	plt.plot(データ列x, データ列y, color='lightslategrey')
グリッド線	plt.grid(alpha=0.5)
option: パレットトルコイズ色を使う	color = 'paleturquoise'
リストを中央値でビン分割する	pd.qcut(aList, 2)
コーパスのバージョン	version = 'wcce2022-0.1'
データ列が正規分布からどの程度、歪んでいるか見る	ds.kurt()
option: 下三角マーカーを使う	marker = 'v'
折れ線グラフを一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot')
データフレームの中の欠損値を削除する	df.dropna()
カテゴリで色分けして、データフレームをカウントプロットにする	sns.countplot(x='列名', hue='カテゴリ列', data=df)
日付時刻データにn秒分、加算する	aDatetime + datetime.timedelta(seconds=n)
データフレームのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
棒グラフをグレー色で描画する	plt.bar(データ列x, データ列y, color='grey')
文字列を回数を制限して置き換える	s.replace(sub, newsub, n)
option: シアン色を使う	color = 'cyan'
ヒストグラムの色をビスクに設定する	plt.hist(データ列, color='bisque')
データフレームのカラムが何秒か見る	df[col].dt.second
リストを等量でビン数nでビン分割する	pd.qcut(aList, n)
グラフの描画で明るくカラーパレットを使う	sns.set(pallete='bright')
折れ線グラフに青い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='b')
ヒストグラムをゴールド色で描画する	plt.hist(データ列, color='gold')
ヒストグラムをライトグレー色で描画する	plt.hist(データ列, color='lightgray')
nをn2だけ右シフトする	n >> n2
散布図にrgbのポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.', c=rgb)
棒グラフの色をマゼンタにする	plt.bar(データ列x, データ列y, color='magenta')
フクシア色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='fuchsia')
散布図をライトスレイグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightslategray')
パウダーブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='powderblue')
データフレームを散布図で可視化して、カテゴリ別にマーカーを変える	sns.scatterplot(data=df, x='列名', y='列名', style='カテゴリ列')
option: グラフの色をピーチパフに設定する	color = 'peachpuff'
nわるn2	n / n2
散布図にダイアモンドマーカーを使う	plt.scatter(データ列x, データ列y, marker='D')
散布図の色をライトサーモンにする	plt.scatter(データ列x, データ列y, color='lightsalmon')
ゲインズボロ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='gainsboro')
折れ線グラフの色をカラーコードで設定する	plt.plot(データ列x, データ列y, color='#800080')
折れ線グラフの下三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='r')
青紫色の線グラフを描画する	plt.plot(データ列x, データ列y, color='violet')
散布図に黒いポイントマーカーを描画する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='k')
実数の双曲線正弦の逆数	math.asinh(x)
カデットブルー色のヒストグラムを描画する	plt.hist(データ列, color='cadetblue')
折れ線グラフの色をサドルブラウンに設定する	plt.plot(データ列x, データ列y, color='saddlebrown')
アルファベットの大文字を全部使う	string.ascii_uppercase
nを切り捨てながらn2分の一にする	n //= n2
サドルブラウン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='saddlebrown')
横棒グラフの色をミディアムパープルにする	plt.barh(データ列x, データ列y, color='mediumpurple')
オブジェクトをイテラブルに変換する	iter(obj)
オブジェクトが名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
ヒストグラムをオールドレース色で描画する	plt.hist(データ列, color='oldlace')
option: ピーチパフ色を使う	color = 'peachpuff'
データフレームのカラムの最頻値	df[col].mode()
プラットフォームのコードポイントの最大値	sys.maxunicode
ヒストグラムでカラーマップを使う	"plt.hist(データ列x, color=plt.get_cmap(""Spectral""))"
ヒストグラムの色を小麦色に設定する	plt.hist(データ列, color='wheat')
ライム色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lime')
データフレームのリストカラムがどの程度、分散しているか見る	df[aList].var()
サポートベクターマシンでクラス分類を行う	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
ユーザから入力される	input()
データ列の折れ線グラフを描画して、色をカラーコードで設定する	plt.plot(データ列x, データ列y, color='#800080')
option: マーカーの色をシスルにする	markerfacecolor = 'thistle'
折れ線グラフをシエナ色で描画する	plt.plot(データ列x, データ列y, color='sienna')
option: マーカーの色をミディアムバイオレットレッドにする	markerfacecolor = 'mediumvioletred'
option: マーカーの色をインディアンレッドにする	markerfacecolor = 'indianred'
棒グラフの色をロイヤルブルーにする	plt.bar(データ列x, データ列y, color='royalblue')
option: マーカーの色をダークオーキッドにする	markerfacecolor = 'darkorchid'
ミディアムスプリンググリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumspringgreen')
箱ひげ図でデータ列を可視化する	plt.boxplot(データ列)
option: 配列のデータ型を指定する	dtype = np.int
option: ホワイトスモーク色を使う	color = 'whitesmoke'
ホワイトスモーク色のヒストグラムを描画する	plt.hist(データ列, color='whitesmoke')
データフレームの第三四分位数	df.quantile(0.75)
option: ロイヤルブルー色を使う	color = 'royalblue'
棒グラフをクリムゾン色で描画する	plt.bar(データ列x, データ列y, color='crimson')
データフレームを列によってソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
ヒストグラムの色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ライトコーラル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightcoral')
option: 追加モードを使う	mode = 'a'
散布図の色をグリーンにする	plt.scatter(データ列x, データ列y, color='green')
グリッド線	plt.grid(alpha=0.5)
データ列を四分位数ごとにビン分割する	pd.qcut(ds, 4)
タプルの合計値	sum(aTuple)
横棒グラフの色をスプリンググリーンにする	plt.barh(データ列x, データ列y, color='springgreen')
レベッカパープル色のヒストグラムを描画する	plt.hist(データ列, color='rebeccapurple')
小麦色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='wheat')
Pandasで、データフレームのカラムを日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
nをn2で整数除算する	n // n2
ガウス過程でクラス分類を行う	model = sklearn.gaussian_process.GaussianProcessClassifier()
predicateFuncが真とならないイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
タプルの要素を逆順にする	aTuple[::-1]
全要素が1の行列	np.ones(行数, 列数, dtype=np.int)
anemptystring	''
ミディアムパープル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumpurple')
option: ダイアモンドマーカーを描画する	marker = 'D'
リストとリストについての散布図に赤い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', c='r')
左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<')
コーラル色のヒストグラムを描画する	plt.hist(データ列, color='coral')
データフレームの散布図をグループ化して縦横に並べる	sns.relplot(data=df, x='列名', y='列名', hue='カテゴリ列', col='カテゴリ列', row='カテゴリ列')
インディゴ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='indigo')
整数nを二進表現に変換する	bin(n)
イエローグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='yellowgreen')
散布図の色をダーク・スラテグレーにする	plt.scatter(データ列x, データ列y, color='darkslategrey')
文字列を複数行対応として正規表現で分割する	re.split(pattern, s, flags=re.MULTILINE)
year年month月の日付	datetime.date(year=year, month=month, day=1)
散布図の色をサーモンにする	plt.scatter(データ列x, データ列y, color='salmon')
散布図に赤い星マーカーを描画する	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='r')
ふたつの集合の対称差集合	aSet.symmetric_difference(aSet2)
イテラブルを文字列リストに変換して、空白で連結する	' '.join(map(str, iterable))
横棒グラフをクリムゾン色で描画する	plt.barh(データ列x, データ列y, color='crimson')
散布図の色をカデットブルーにする	plt.scatter(データ列x, データ列y, color='cadetblue')
データフレームの中に文字列と文字列がいくつあるか数える	df.isin([value, value2]).sum()
データ列の欠損値を直後の値に設定する	ds.fillna(method='bfill')
nプラスn2	n + n2
オプションで、出力先をファイルに設定する	file = sys.open(filename, 'w')
タブ	'\t'
ヒストグラムをミッドナイトブルー色で描画する	plt.hist(データ列, color='midnightblue')
両端キューの先頭にイテラブルの各要素を追加する	deq.extendleft(iterable)
文字列を最後の部分文字列で二分し、前半の文字列を使う	s.rpartition(sub)[0]
折れ線グラフに赤いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='r')
レベッカパープル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='rebeccapurple')
リストの合計値	sum(aList)
折れ線グラフの色をシャルトリューズに設定する	plt.plot(データ列x, データ列y, color='chartreuse')
option: グラフの色をデピンクに設定する	color = 'deeppink'
配列を2次元1列に変形する	aArray.reshape(-1, 1)
散布図の色を黄色にする	plt.scatter(データ列x, データ列y, color='yellow')
インディゴ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='indigo')
散布図の左三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='b')
散布図の色をスカイブルーにする	plt.scatter(データ列x, データ列y, color='skyblue')
データフレームのカラムの中にいくつ欠損値があるか数える	df[col].isna().sum()
棒グラフを黄色くする	plt.bar(データ列x, データ列y, color='y')
ペアリストpairsからカウンタを作る	collections.Counter(dict(pairs))
オリーブ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='olive')
棒グラフをコーンフラワーブルー色で描画する	plt.bar(データ列x, データ列y, color='cornflowerblue')
行列のムーア・ペンローズの擬似逆行列	np.linalg.pinv(aArray)
ブランチドアーモンド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='blanchedalmond')
紺色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkblue')
実数を実数で割った余り	x % y
全要素を０で初期化した三二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
ファイルをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
文字列リストをsepを区切りにしてひとつの文字列にする	sep.join(aStringList)
option: ブール型を使う	dtype = np.int32
サドルブラウン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='saddlebrown')
データフレームの中の列を等量でビン数nでビン分割する	pd.qcut(df[col], n)
グリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='green')
棒グラフをアリスブルー色で描画する	plt.bar(データ列x, データ列y, color='aliceblue')
折れ線グラフの色をライトサーモンに設定する	plt.plot(データ列x, データ列y, color='lightsalmon')
正規分布にしたがってランダムにデータ列を生成する	scipy.stats.norm.rvs(loc=平均値, scale=標準偏差, size=データ数)
横棒グラフの色をスラグレーにする	plt.barh(データ列x, データ列y, color='slategray')
グラフの背景色を白くする	sns.set(style='whitegrid')
横棒グラフの色をマルーンにする	plt.barh(データ列x, データ列y, color='maroon')
データフレームを各列毎にグループ化して、列の最大値を求める	df.groupby(column)[column2].max()
実数の逆正弦	math.asin(x)
データフレームの中で、列の重複を見る	df.duplicated(subset=column)
ヒストグラムをバリーウッド色で描画する	plt.hist(データ列, color='burlywood')
デピンク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='deeppink')
散布図をライトスカイブルー色で描画する	plt.scatter(データ列x, データ列y, color='lightskyblue')
ダークオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='darkorchid')
棒グラフの色をローングリーンにする	plt.bar(データ列x, データ列y, color='lawngreen')
イテラブルにイテラブルを続ける	itertools.chain(iterable, iterable2)
FIXME	np.linalg.eig(aArray)
n個の要素があるリスト	[element] * n
パパイヤウィップ色のヒストグラムを描画する	plt.hist(データ列, color='papayawhip')
オブジェクトがあるクラスか調べる	isinstance(obj, クラス)
折れ線グラフに赤いバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='r')
ヒストグラムをロージーブラウン色で描画する	plt.hist(データ列, color='rosybrown')
ファイル名がテキストファイルか調べる	filename.endswith('.txt')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
散布図をライトグリーン色で描画する	plt.scatter(データ列x, データ列y, color='lightseagreen')
ヒストグラムの色をアイボリーに設定する	plt.hist(データ列, color='ivory')
データフレームのリストカラムの尖度	df[aList].skew()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を求める	df.groupby([column, column2], as_index=False).max()
option: マーカーの色をアンティークホワイトにする	markerfacecolor = 'antiquewhite'
option: グラフの色をビスクに設定する	color = 'bisque'
データフレームから最後の列を除く	df[df.columns[:-1]]
棒グラフをシルバー色で描画する	plt.bar(データ列x, データ列y, color='silver')
データフレームのカラムの尖度	df[col].skew()
日付時刻データが月曜日か調べる	aDatetime.weekday() == 0
集合からエラーなく要素を取り除く	aSet.discard(element)
option: マーカーの色をゴーストホワイトにする	markerfacecolor = 'ghostwhite'
リストの末尾のn要素を取り除く	aList[:-n]
散布図をミントクリーム色で描画する	plt.scatter(データ列x, データ列y, color='mintcream')
横棒グラフをグリーン色で描画する	plt.barh(データ列x, データ列y, color='green')
ライトゴールドロディイエロー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')
グリッドを破線にする	plt.grid(linestyle='dashed')
option: グラフの色をダークカーキに設定する	color = 'darkkhaki'
option: マーカーの色をミディアムシアグリーンにする	markerfacecolor = 'mediumseagreen'
option: グラフの色をハニーデューに設定する	color = 'honeydew'
option: マーカーの色をリネンにする	markerfacecolor = 'linen'
文字列中の部分文字列を新しい文字列に回数を制限して置き換える	s.replace(sub, newsub, n)
ミディアムアクアマリン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumaquamarine')
文字列の接頭辞から部分文字列を取り除く	s.removeprefix(sub)
縦棒グラフを描画して、ラベルを中央寄せする	plt.bar(ラベル列, データ列, align='center')
option: グラフの色をダークオレンジに設定する	color = 'darkorange'
散布図の三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='r')
ディープスカイブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='deepskyblue')
year年month月day日hour時の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour)
option: ライトスカイブルー色を使う	color = 'lightskyblue'
nからn2までの整数列	list(range(n, n2+1))
二つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
option: グラフの色をフクシアに設定する	color = 'fuchsia'
ナバホホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='navajowhite')
option: フォレストグリーン色を使う	color = 'forestgreen'
文字列を末尾から部分文字列で区切る	s.rsplit(sub)
実数を十六進表記の文字列に変換する	x.hex()
数式の変数にnを代入する	e.subs(z, n)
option: ゴールド色を使う	color = 'gold'
集合の全ての要素が別の集合に含まれるか調べる	aSet.issubset(aSet2)
アクア色の線グラフを描画する	plt.plot(データ列x, データ列y, color='aqua')
四角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='s')
シャルトリューズ色のヒストグラムを描画する	plt.hist(データ列, color='chartreuse')
option: エンコーディングを文字列の示すエンコーディングに設定する	encoding = s
折れ線グラフを半透明の一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', alpha=0.5)
文字列を最後の部分文字列で二分する	s.rpartition(sub)
データをL1ノルムで正則化する	"sklearn.preprocessing.Normalizer(norm=""l1"").fit_transform(データ)"
日付時刻データををn週間後に進める	aDatetime + datetime.timedelta(weeks=n)
新しい線形回帰モデルを作る	model = sklearn.linear_model.LinearRegression()
横棒グラフの色をビスクにする	plt.barh(データ列x, データ列y, color='bisque')
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
文字列を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
配列をビン数nでビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
ミディアムオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumorchid')
有理数を使う	import fractions
パープル色のヒストグラムを描画する	plt.hist(データ列, color='purple')
横棒グラフをデピンク色で描画する	plt.barh(データ列x, データ列y, color='deeppink')
リネン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='linen')
データフレームの値を正規表現patternでまとめてreplに置き換える	df.replace(pattern, repl, regex=True)
文字列中の大文字を小文字に変換する	s.lower()
折れ線グラフを点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted')
ヒストグラムをコーンフラワーブルー色で描画する	plt.hist(データ列, color='cornflowerblue')
棒グラフの色をアクアマリンにする	plt.bar(データ列x, データ列y, color='aquamarine')
option: ブランチドアーモンド色を使う	color = 'blanchedalmond'
ファイルから読み込みストリームをオープンして]、fとする	f = open(filepath, mode='r')
棒グラフをゴールド色で描画する	plt.bar(データ列x, データ列y, color='gold')
アクア色のヒストグラムを描画する	plt.hist(データ列, color='aqua')
データ列を丸める	ds.round()
ヒストグラムの色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
異なる列をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
空列	[]
x,y,zをそれぞれn,n2,n3とする	x, y, z = n, n2, n3
横棒グラフの色をライトブルーにする	plt.barh(データ列x, データ列y, color='lightblue')
データ列の相関係数を求める	scipy.stats.pearsonr(データ列, データ列2)
散布図をリネン色で描画する	plt.scatter(データ列x, データ列y, color='linen')
横棒グラフの色をシャルトリューズにする	plt.barh(データ列x, データ列y, color='chartreuse')
リストにリストを追加して拡張する	aList.extend(aList2)
散布図の色をミディアムバイオレットレッドにする	plt.scatter(データ列x, データ列y, color='mediumvioletred')
ヒストグラムをダークシアグリーン色で描画する	plt.hist(データ列, color='darkseagreen')
文字列内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
タプルの長さ	len(aTuple)
散布図をライトグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightgrey')
ヒストグラムをミディアムスレートブルー色で描画する	plt.hist(データ列, color='mediumslateblue')
データフレームのリストカラムの欠損値をxで埋める	df[aList].fillna(x)
日付時刻データが火曜日か調べる	aDatetime.weekday() == 1
横棒グラフをミディアムブルー色で描画する	plt.barh(データ列x, データ列y, color='mediumblue')
既存のファイルをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
リストとリストについて散布図を描画して、マーカーを丸に設定する	plt.plot(データ列x, データ列y, marker='o')
散布図の色をピーチパフにする	plt.scatter(データ列x, データ列y, color='peachpuff')
空のカウンタ	collections.Counter()
パパイヤウィップ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='papayawhip')
カデットブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='cadetblue')
散布図の色をダークシアグリーンにする	plt.scatter(データ列x, データ列y, color='darkseagreen')
折れ線グラフをサドルブラウン色で描画する	plt.plot(データ列x, データ列y, color='saddlebrown')
nがn2よりも大きいか調べる	n > n2
ピーチパフ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='peachpuff')
文字列を全て小文字に変換する	s.lower()
レベッカパープル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='rebeccapurple')
ヒストグラムの色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
散布図の色をパールバイオレットレッドにする	plt.scatter(データ列x, データ列y, color='palevioletred')
実数の小数点以下を丸める	round(x)
ヒストグラムの色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
新しいロジスティック回帰モデルを作る	model = sklearn.linear_model.LogisticRegression()
横棒グラフの色をホットピンクにする	plt.barh(データ列x, データ列y, color='hotpink')
両端キューのn番目	deq[n]
折れ線グラフを半透明の点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', alpha=0.5)
散布図にrgbの下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v', c=rgb)
教師データでモデルを学習する	model.fit(説明変数, 目的変数)
ヒストグラムを上限から下限までの範囲で描画する	plt.hist(データ列, range=(start, end))
横軸の最大・最小を変更する	plt.xlim(最小値, 最大値)
円グラフでデータ列の割合を可視化する	plt.pie(データ列, startangle=90)
リストとリストについての散布図に黒い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', c='k')
散布図をゴーストホワイト色で描画する	plt.scatter(データ列x, データ列y, color='ghostwhite')
データフレームのリストカラムの中央値	df[aList].median()
折れ線グラフの色をトマトに設定する	plt.plot(データ列x, データ列y, color='tomato')
ヒストグラムをカーキ色で描画する	plt.hist(データ列, color='khaki')
折れ線グラフをライトイエロー色で描画する	plt.plot(データ列x, データ列y, color='lightyellow')
折れ線グラフの色をコーラルに設定する	plt.plot(データ列x, データ列y, color='coral')
データフレームを表示するとき、表示可能な最大行数をnに設定する	pd.set_option('display.max_rows', n)
赤い左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<', c='r')
折れ線グラフをダークスラテグレー色で描画する	plt.plot(データ列x, データ列y, color='darkslategray')
散布図をタン色で描画する	plt.scatter(データ列x, データ列y, color='tan')
リストの先頭のn要素を取り除く	aList[n:]
ラベンダーブラッシュ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lavenderblush')
ミディアムブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumblue')
棒グラフをカーキ色で描画する	plt.bar(データ列x, データ列y, color='khaki')
リストをn個にビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
option: グラフの色をライトグレーに設定する	color = 'lightgrey'
単位行列	np.eye(行数, 列数)
整数nの十六進表現	hex(n)
ヒストグラムの色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
スラグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='slategray')
散布図をパールゴールデンロッド色で描画する	plt.scatter(データ列x, データ列y, color='palegoldenrod')
文字列を部分文字列で分けたときの前半の文字列	s.partition(sub)[0]
データフレームのリストカラムの欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
インディゴ色のヒストグラムを描画する	plt.hist(データ列, color='indigo')
横棒グラフをミディアムバイオレットレッド色で描画する	plt.barh(データ列x, データ列y, color='mediumvioletred')
日付時刻データを文字列でフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
赤い一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='r')
行列の行列積	np.matmul(aArray, aArray2)
文字列の接尾辞から部分文字列を取り除く	s.removesuffix(sub)
横棒グラフをライトグリーン色で描画する	plt.barh(データ列x, データ列y, color='lightseagreen')
リネン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='linen')
折れ線グラフをフローラルホワイト色で描画する	plt.plot(データ列x, データ列y, color='floralwhite')
リストとリストについての散布図に大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X')
option: マーカーの色をオレンジレッドにする	markerfacecolor = 'orangered'
折れ線グラフの色をダークサーモンに設定する	plt.plot(データ列x, データ列y, color='darksalmon')
散布図に赤い右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>', c='r')
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
横棒グラフをパパイヤウィップ色で描画する	plt.barh(データ列x, データ列y, color='papayawhip')
option: ライトスレイグレー色を使う	color = 'lightslategrey'
ドジャーブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='dodgerblue')
散布図に丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o')
浮動小数点数の最大値	sys.float_info.max
オレンジレッド色のヒストグラムを描画する	plt.hist(データ列, color='orangered')
折れ線グラフを茶色色で描画する	plt.plot(データ列x, データ列y, color='brown')
リストをn倍する	aList * n
ヒストグラムをゲインズボロ色で描画する	plt.hist(データ列, color='gainsboro')
白い散布図を描画する	plt.scatter(データ列x, データ列y, color='w')
散布図に右三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='>')
UNIXコマンドtextを実行する	os.system(text)
全要素を０で初期化した複素数型の行列	np.zeros(行数, 列数, dtype=bool)
option: マーカーの色をダークバイオレットにする	markerfacecolor = 'darkviolet'
ファイルをSJISでオープンする]	open(filepath, encoding='shift_jis')
折れ線グラフに黒い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='k')
データフレームを'A'列の値によってグループ化する	df.groupby('A')
データ列の欠損値を直前の値で埋める	ds.fillna(method='ffill')
散布図のマーカーをバツにする	plt.scatter(データ列x, データ列y, marker='x')
折れ線グラフをビスク色で描画する	plt.plot(データ列x, データ列y, color='bisque')
文字列の出力を改行なしに行う	print(value, end='')
異なる列をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
散布図をモカシン色で描画する	plt.scatter(データ列x, データ列y, color='moccasin')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgrey')
データフレームの指定された列の名前一覧の列を抽出する	df[columns]
辞書の全項目をクリアする	aDict.clear()
データフレームを'A'列によってによって降順にソートする	df.sort_values(by='A', ascending=False)
データフレームのカラムの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
option: マーカーの色をレベッカパープルにする	markerfacecolor = 'rebeccapurple'
散布図の色をシアンにする	plt.scatter(データ列x, データ列y, color='cyan')
データフレームのカラムのどの値が頻出か見る	df[col].mode()
カーキ色のヒストグラムを描画する	plt.hist(データ列, color='khaki')
全要素を０で初期化した符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
モデルの当てはめを実行する	model.fit(説明変数, 目的変数)
モデルの残差をヒストグラムにする	plt.hist(目的変数 - model.predict(説明変数))
折れ線グラフのバツマーカーを赤くする	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='r')
数式の微分を求める	sympy.diff(e)
横棒グラフの色をベージュにする	plt.barh(データ列x, データ列y, color='beige')
データフレームの列が文字列で終わる行を抽出する	df[df[column].str.endswith(s)]
散布図をオリベドラブ色で描画する	plt.scatter(データ列x, データ列y, color='olivedrab')
option: マーカーの色をダークオレンジにする	markerfacecolor = 'darkorange'
シエナ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='sienna')
赤い散布図を描画する	plt.scatter(データ列x, データ列y, color='r')
タプル内の要素が少なくともひとつ真か調べる	any(aTuple)
コーラル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='coral')
データフレームのカラムが何日か見る	df[col].dt.day
カテゴリで色分けして、カーネル密度分布を描画する	sns.kdeplot(x='列名', hue='カテゴリ列', data=df)
option: 右三角マーカーを描画する	marker = '>'
データフレームのインデックスの名前をまとめて、nameからname2に付け直す	df.rename(index={name: name2})
散布図にrgbの左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<', c=rgb)
辞書のキーを列挙する	list(aDict)
ふたつの集合の共通要素だけに更新する	aSet.intersection_update(aSet2)
集合をイミュータブルに変換する	frozenset(aSet)
横棒グラフをライトスチールブルー色で描画する	plt.barh(データ列x, データ列y, color='lightsteelblue')
ファイルからの入力ストリームを使う	open(filepath)
棒グラフをビスク色で描画する	plt.bar(データ列x, データ列y, color='bisque')
散布図をフォレストグリーン色で描画する	plt.scatter(データ列x, データ列y, color='forestgreen')
データ列の四分位を可視化する	plt.boxplot(データ列)
データフレームの末尾	df.tail()
ヒストグラムの色を茶色に設定する	plt.hist(データ列, color='brown')
ふたつの集合のいずれか一方だけの集合	aSet.symmetric_difference(aSet2)
折れ線グラフの色を暗い赤に設定する	plt.plot(データ列x, データ列y, color='darkred')
文字列中に部分文字列が含まれないか調べる	sub not in s
全要素を０で初期化した８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int8)
折れ線グラフの左三角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='k')
ヒストグラムの色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
横棒グラフの色を淡いピンク色にする	plt.barh(データ列x, データ列y, color='lightpink')
散布図の色をダークスレートブルーにする	plt.scatter(データ列x, データ列y, color='darkslateblue')
棒グラフをミスティローズ色で描画する	plt.bar(データ列x, データ列y, color='mistyrose')
ロイヤルブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='royalblue')
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(データ列x, データ列y, color='darkolivegreen')
折れ線グラフのマーカーを三角にする	plt.plot(データ列x, データ列y, marker='^')
option: マーカーの色をコーンズシルクにする	markerfacecolor = 'cornsilk'
棒グラフの色をドジャーブルーにする	plt.bar(データ列x, データ列y, color='dodgerblue')
本日が何日か知る	datetime.datetime.today().day
折れ線グラフをゴールデンロッド色で描画する	plt.plot(データ列x, データ列y, color='goldenrod')
散布図の四角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='s', markeredgewidth=2.5)
データ列の値をValueMapでまとめて置き換える	ds.replace(ValueMap)
棒グラフをブルーバイオレット色で描画する	plt.bar(データ列x, データ列y, color='blueviolet')
辞書をチェーンマップに変換する	collections.ChainMap(aDict)
option: セパレータをスラッシュにする	sep = '/'
データフレームの先頭n行	df.head(n)
データフレームの指定された列をリストに変換する	df[column].values.tolist()
散布図の色をライトグレーにする	plt.scatter(データ列x, データ列y, color='lightgrey')
nにn2を加える	n + n2
全要素を0で初期化した配列	np.zeros(要素数)
option: マーカーの色を赤にする	markerfacecolor = 'red'
option: マーカーの色をミスティローズにする	markerfacecolor = 'mistyrose'
黒いダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D', c='k')
文字列を二分する	s.partition(sep)
実数を小数点以下第一位で丸める	round(x, 1)
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()//60
折れ線グラフをダークゴールデンロッド色で描画する	plt.plot(データ列x, データ列y, color='darkgoldenrod')
JSON形式の文字列を読み込む	json.loads(jsonString)
散布図の色をチョコレートにする	plt.scatter(データ列x, データ列y, color='chocolate')
データフレームを複数の列によってソートする	df.sort_values(by=column)
折れ線グラフに赤い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='r')
リストを引数として展開して表示する	print(*aList)
横棒グラフをシアン色で描画する	plt.barh(データ列x, データ列y, color='cyan')
ダークマゼンタ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkmagenta')
プラットホームがLinuxか調べる	sys.platform.startswith('linux')
スカイブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='skyblue')
両端キューの先頭から要素を取り除く	deq.popleft()
両端キューのn番目に要素を挿入する	deq.insert(n, element)
データフレームからランダムに抽出する	df.sample()
グリッド線を白くする	plt.grid(color='w')
折れ線グラフの色をライトコーラルに設定する	plt.plot(データ列x, データ列y, color='lightcoral')
グラフの色を濃くする	sns.set(pallete='deep')
配列の差	aArray - aArray2
淡いピンク色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightpink')
ヒストグラムの色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
棒グラフをダークシアン色で描画する	plt.bar(データ列x, データ列y, color='darkcyan')
ヒストグラムの色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ユーザの入力を整数として受け取る	int(input())
日付時刻データの曜日を整数で使う	aDatetime.weekday()
文字列の開始位置以降が部分文字列で始まるか調べる	s.startswith(sub, start)
折れ線グラフの色をゲインズボロに設定する	plt.plot(データ列x, データ列y, color='gainsboro')
赤い丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o', c='r')
ヒストグラムを青色で描画する	plt.hist(データ列, color='blue')
データフレームの重複した行のみを抽出する	df[df.duplicated(keep=False)]
option: マーカーの色をライトスレイグレーにする	markerfacecolor = 'lightslategray'
多次元データをt-SNEでパステル調に次元に次元削減する	sklearn.manifold.TSNE(n_components=N).fit_transform(多次元データ)
実数の逆双曲線余弦	math.acosh(x)
配列を中央値でビン分割する	pd.qcut(aArray, 2)
イテラブルの全順列	itertools.permutations(iterable)
itertoolsモジュールをインポートする	import itertools
ヒストグラムをトマト色で描画する	plt.hist(データ列, color='tomato')
集合に要素を追加する	aSet.add(element)
ブランチドアーモンド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='blanchedalmond')
白色の散布図を描画する	plt.scatter(データ列x, データ列y, color='white')
折れ線グラフの色をミディアムブルーに設定する	plt.plot(データ列x, データ列y, color='mediumblue')
option: ライトグリーン色を使う	color = 'lightseagreen'
ヒストグラムの色をオーキッドに設定する	plt.hist(データ列, color='orchid')
折れ線グラフをミッドナイトブルー色で描画する	plt.plot(データ列x, データ列y, color='midnightblue')
散布図に黒い丸マーカーを描画する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='k')
データ列が何時か見る	ds.dt.hour
シルバー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='silver')
ホールドアウト法を使う	X_train, X_test, y_train, y_test = train_test_split(説明変数, 目的変数, test_size=0.3)
データフレームの列名を指定された列の名前一覧に置き換える	df.columns = columns
折れ線グラフをミディアムアクアマリン色で描画する	plt.plot(データ列x, データ列y, color='mediumaquamarine')
option: マーカーの色を青緑にする	markerfacecolor = 'teal'
ダークスレートブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkslateblue')
ヒストグラムをダークターコイズ色で描画する	plt.hist(データ列, color='darkturquoise')
データフレームを二つの列によってソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
折れ線グラフをライムグリーン色で描画する	plt.plot(データ列x, データ列y, color='limegreen')
棒グラフの色をダークターコイズにする	plt.bar(データ列x, データ列y, color='darkturquoise')
カテゴリデータ列をワン・ホットベクトル化する	sklearn.preprocessing.OneHotEncoder(sparse=False).fit_transform(データ列)
棒グラフをモカシン色で描画する	plt.bar(データ列x, データ列y, color='moccasin')
ヒストグラムをグリーンイエロー色で描画する	plt.hist(データ列, color='greenyellow')
小麦色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='wheat')
文字列を積極的に小文字に変換する	s.casefold()
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='grey')
折れ線グラフをオールドレース色で描画する	plt.plot(データ列x, データ列y, color='oldlace')
option: ブルーバイオレット色を使う	color = 'blueviolet'
文字列が全て数字か調べる	s.isdigit()
リストとリストについての散布図に赤いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', c='r')
グラフをスライド用に設定する	sns.set(context='talk')
ディープスカイブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='deepskyblue')
散布図に大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X')
ブラック色のヒストグラムを描画する	plt.hist(データ列, color='black')
データフレームのリストカラムの平均値	df[aList].mean()
option: グラフの色をダークゴールデンロッドに設定する	color = 'darkgoldenrod'
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
option: マーカーの色をオーキッドにする	markerfacecolor = 'orchid'
散布図に黒いマーカーを描画する	plt.scatter(データ列x, データ列y, markerfacecolor='k')
オールドレース色の散布図を描画する	plt.scatter(データ列x, データ列y, color='oldlace')
文字列の先頭で正規表現にマッチするか見る	re.match(pattern, s)
アイボリー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='ivory')
文字列に漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
option: グラフの色を白に設定する	color = 'white'
アルファベットを全部使う	string.ascii_letters
棒グラフをスプリンググリーン色で描画する	plt.bar(データ列x, データ列y, color='springgreen')
横棒グラフの色をクリムゾンにする	plt.barh(データ列x, データ列y, color='crimson')
ファイル全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
option: 線の種類を破線に設定する	linestyle = 'dashed'
要素が辞書の値として含まれているか調べる	element in aDict.values()
データフレームを複数の列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
bとn2から成るペア	(n, n2)
日付データからn秒分、減算する	aDate - datetime.timedelta(seconds=n)
nが一桁の数か調べる	0 <= n <= 9
option: マーカーをダイアモンドに変更する	marker = 'D'
データフレームを散布図で可視化して、カテゴリ別に色を変える	sns.scatterplot(data=df, x='列名', y='列名', hue='カテゴリ列')
横棒グラフの色をスチールブルーにする	plt.barh(データ列x, データ列y, color='steelblue')
リストのn番目の要素を削除する	del aList[n]
インディアンレッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='indianred')
ヒストグラムの色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
option: グラフの色をブルーバイオレットに設定する	color = 'blueviolet'
横棒グラフの色をスノーにする	plt.barh(データ列x, データ列y, color='snow')
箱ひげ図を描画して、平均値を加える	plt.boxplot(データ列, showmeans=True)
散布図に赤いバツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='r')
option: 丸マーカーを描画する	marker = 'o'
option: パープル色を使う	color = 'purple'
ライトグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgrey')
散布図をパレットトルコイズ色で描画する	plt.scatter(データ列x, データ列y, color='paleturquoise')
数式の部分分数化を行う	sympy.apart(e)
文字列を最後の部分文字列で分けたときの後半の文字列	s.rpartition(sub)[-1]
option: グラフの色をライトスチールブルーに設定する	color = 'lightsteelblue'
散布図に黒い左三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='k')
空行をプリントする	print()
棒グラフをレモンシフォン色で描画する	plt.bar(データ列x, データ列y, color='lemonchiffon')
折れ線グラフの右三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='b')
JSON形式のバイト列を辞書に変換する	json.loads(b.decode('unicode-escape'))
ファイルのファイル名	os.path.basename(filepath)
データフレームをに箱ひげ図で可視化する	sns.boxplot(x='カテゴリ列', y='列', data=df)
カラーバーを描画する	plt.colorbar()
淡いピンク色色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightpink')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ファイルをオープンして]、読み込みストリームを使う	open(filepath, mode='r')
option: 欠損値も無視しない	dropna = True
横棒グラフをシーグリーン色で描画する	plt.barh(データ列x, データ列y, color='seagreen')
ミディアムバイオレットレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumvioletred')
option: 左三角マーカーを描画する	marker = '<'
集合が空でないか調べる	len(aSet) != 0
折れ線グラフのポイントマーカーの色を変更する	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='#800080')
文字列がn回繰り返すイテラブル	itertools.repeat(element, n)
折れ線グラフの線の種類を破線に設定する	plt.plot(データ列x, データ列y, linestyle='dashed')
グラフの中の縦軸にラベルを付ける	plt.ylabel('y軸ラベル')
データフレームの列が正規表現文字列にマッチしない行を抽出する	df[not df[column].str.match(s)]
散布図に黒い大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X', c='k')
option: マーカーの色をスラグレーにする	markerfacecolor = 'slategray'
データフレームのそれぞれのグループごとの最小値	df.groupby(column).min()
option: グラフの色をライトスレイグレーに設定する	color = 'lightslategrey'
ベージュ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='beige')
ロージーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='rosybrown')
三つのデータフレームを横方向に連結する	pd.concat([df, df2, df3], axis=1)
文字列が平仮名か調べる	('ぁ' <= ch <= 'ん')
option: マーカーの色をスノーにする	markerfacecolor = 'snow'
option: グラフの色をグリーンイエローに設定する	color = 'greenyellow'
データフレームのリストカラムの歪度	df[aList].kurt()
文字列中にひとつでも非小文字が含まれるか調べる	any(not c.islower() for c in s)
データフレームの列と列の相関行列	df[[column, column2]].corr()
ロイヤルブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='royalblue')
散布図に赤いポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.', c='r')
option: グラフの色をラベンダーに設定する	color = 'lavender'
option: グラフの色をスノーに設定する	color = 'snow'
黒い散布図を描画する	plt.scatter(データ列x, データ列y, color='k')
文字列中の全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
棒グラフを赤色で描画する	plt.bar(データ列x, データ列y, color='red')
散布図をターコイズ色で描画する	plt.scatter(データ列x, データ列y, color='turquoise')
横棒グラフをダークシアン色で描画する	plt.barh(データ列x, データ列y, color='darkcyan')
本日の日付時刻	datetime.datetime.now()
正規表現にマッチした文字列を新しい文字列で置き換える	re.sub(pattern, newsub, s)
データフレームを二つの列によってソートする	df.sort_values(by=['A', 'B'])
試しに何か動かす	print('Hello World')
自分自身をモジュールとして	sys.modules[__name__]
データフレームのカラムの分散	df[col].var()
折れ線グラフの色をオールドレースに設定する	plt.plot(データ列x, データ列y, color='oldlace')
横棒グラフをダーク・スラテグレー色で描画する	plt.barh(データ列x, データ列y, color='darkslategrey')
散布図にrgbの四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s', c=rgb)
option: マーカーの色をカデットブルーにする	markerfacecolor = 'cadetblue'
散布図をディープスカイブルー色で描画する	plt.scatter(データ列x, データ列y, color='deepskyblue')
option: マゼンタ色を使う	color = 'magenta'
折れ線グラフをゴーストホワイト色で描画する	plt.plot(データ列x, データ列y, color='ghostwhite')
Pandasで、データ列を日付データに変換する	pd.to_datetime(ds)
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
横棒グラフの色をダークスレートブルーにする	plt.barh(データ列x, データ列y, color='darkslateblue')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列x, データ列y, color='lightgreen')
折れ線グラフの四角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='s', markersize=2.0)
横棒グラフの色をシアンにする	plt.barh(データ列x, データ列y, color='cyan')
折れ線グラフをパールバイオレットレッド色で描画する	plt.plot(データ列x, データ列y, color='palevioletred')
リストとリストについての散布図を大きさnで描画する	plt.scatter(データ列x, データ列y, s=n)
データフレームの列の各データが何回出現するか見る	df[col].value_counts()
散布図の色を貝殻にする	plt.scatter(データ列x, データ列y, color='seashell')
整数乱数で要素を埋めた行列	np.random.randint(開始値, 終了値, (行数, 列数))
横棒グラフの色をライムグリーンにする	plt.barh(データ列x, データ列y, color='limegreen')
最大値・最小値の範囲で一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
散布図のポイントマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='.', markersize=2.0)
option: レベッカパープル色を使う	color = 'rebeccapurple'
データフレームの中の列を中央値でビン分割する	pd.qcut(df[col], 2)
ヒストグラムを実線で描画する	plt.hist(データ列, linestyle='solid')
ライトサーモン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightsalmon')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(データ列x, データ列y, color='blueviolet')
イテラブルから重複を取り除く	set(iterable)
黄色色のヒストグラムを描画する	plt.hist(データ列, color='yellow')
日付データををn日後に進める	aDate + datetime.timedelta(days=n)
データフレームの中の欠損値がある行を削除する	df.dropna()
レモンシフォン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lemonchiffon')
ヒストグラムをアリスブルー色で描画する	plt.hist(データ列, color='aliceblue')
nとn2の差	n - n2
リストの長さ	len(aList)
列'A'と列'B'をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
折れ線グラフをペールグリーン色で描画する	plt.plot(データ列x, データ列y, color='palegreen')
横棒グラフの色をアンティークホワイトにする	plt.barh(データ列x, データ列y, color='antiquewhite')
nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1, 2))
グラフの中に枠なしの凡例を入れる	plt.legend(frameon=False)
nまでの奇整数列	list(range(1, n, 2))
タプルの末尾のn要素を取り除く	aTuple[:-n]
横棒グラフの色をコーンフラワーブルーにする	plt.barh(データ列x, データ列y, color='cornflowerblue')
棒グラフの色をペルーにする	plt.bar(データ列x, データ列y, color='peru')
option: マーカーの色をミディアムブルーにする	markerfacecolor = 'mediumblue'
新しいリッジ回帰モデルを作る	model = sklearn.linear_model.Ridge(alpha=正則化項)
ヒストグラムをサーモン色で描画する	plt.hist(データ列, color='salmon')
データフレームのヒストグラム付き散布図を描画する	sns.jointplot(x='列名', y='列名', data=df)
option: マーカーの色をペルーにする	markerfacecolor = 'peru'
折れ線グラフの色をバリーウッドに設定する	plt.plot(データ列x, データ列y, color='burlywood')
データフレームのカラムの母標準偏差	df[col].std(ddof=0)
ライトゴールドロディイエロー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')
ビスク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='bisque')
紺色のヒストグラムを描画する	plt.hist(データ列, color='darkblue')
データフレームのそれぞれのグループごとの標準偏差	df.groupby(column).std()
横棒グラフを黒くする	plt.barh(データ列x, データ列y, color='k')
日付時刻データの月数	aDatetime.month
データフレームからn行、サンプリングする	df.sample(n)
ファイルに文字列を書き込む	f.write(s)
option: マーカーの色をライトスレイグレーにする	markerfacecolor = 'lightslategrey'
棒グラフをダークオーキッド色で描画する	plt.bar(データ列x, データ列y, color='darkorchid')
折れ線グラフの下三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='v', markersize=2.0)
折れ線グラフの色をダークグリーンに設定する	plt.plot(データ列x, データ列y, color='darkgreen')
リストとリストについての散布図に黒い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', c='k')
配列を等量でn個にビン分割する	pd.qcut(aArray, n)
ヒストグラムをライトグリーン色で描画する	plt.hist(データ列, color='lightseagreen')
丸印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='o')
黄色色の線グラフを描画する	plt.plot(データ列x, データ列y, color='yellow')
数式の変数に数式を代入する	e.subs(z, e2)
予測データの混同行列を求める	混同行列 = sklearn.metrics.confusion_matrix(正解データ列, 予測データ列)
option: ベージュ色を使う	color = 'beige'
全要素を初期値で初期化した行列	np.full((行数, 列数), 初期値, dtype=np.int)
変数が0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
散布図の色をライトゴールドロディイエローにする	plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')
文字列内にひとつでもアルファベットが含まれるか調べる	any(c.isalpha() for c in s)
行列の演算をする	import numpy as np
データ列の欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
横棒グラフをグレー色で描画する	plt.barh(データ列x, データ列y, color='gray')
文字列が全てアスキー文字か調べる	s.isascii()
棒グラフをパレットトルコイズ色で描画する	plt.bar(データ列x, データ列y, color='paleturquoise')
散布図をライム色で描画する	plt.scatter(データ列x, データ列y, color='lime')
option: マーカーの色をミディアムスレートブルーにする	markerfacecolor = 'mediumslateblue'
ヒストグラムの色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
データフレームのカラムの月	df[col].dt.month
文字列の先頭で正規表現に複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)
option: 昇順にする	ascending = True
option: 読み込みモードを使う	mode = 'r'
パールバイオレットレッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='palevioletred')
散布図の色を青紫にする	plt.scatter(データ列x, データ列y, color='violet')
option: マーカーの色をパレットトルコイズにする	markerfacecolor = 'paleturquoise'
アヤメのデータセットをロードする	sns.load_dataset('iris')
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
両端キューをタプルに変換する	tuple(deq)
データフレームを各列毎にグループ化して、文字列というグループの個数を求める	df.groupby(column).size()[s]
散布図の色をグレーにする	plt.scatter(データ列x, データ列y, color='gray')
散布図をカーキ色で描画する	plt.scatter(データ列x, データ列y, color='khaki')
データフレームをJSONLファイルにインデックスを付けずに保存する	df.to_csv(filename, index=None)
コマンド引数の一覧	sys.argv[1:]
データフレームを見る	df.head()
散布図の色をライトスカイブルーにする	plt.scatter(データ列x, データ列y, color='lightskyblue')
option: グラフの色をダークグレーに設定する	color = 'darkgray'
データフレームのカラムの欠損値を最大値に設定する	df[col].fillna(df[col].max())
リストをnからナンバリングする	enumerate(aList, start=n)
代数計算を使う	import sympy
ピンク色のヒストグラムを描画する	plt.hist(データ列, color='pink')
文字列リストをsepを区切りとして連結する	sep.join(aStringList)
入力から二つの浮動小数数を読む	A, B = map(float, input().split())
棒グラフの色をオレンジにする	plt.bar(データ列x, データ列y, color='orange')
ファイルをバイナリモードでオープンする]	open(filepath, mode='rb')
ヒストグラムをシーグリーン色で描画する	plt.hist(データ列, color='seagreen')
option: グラフの色を赤に設定する	color = 'red'
ヒストグラムの色をリネンに設定する	plt.hist(データ列, color='linen')
横棒グラフを描画する	plt.barh(ラベル列, データ列)
ダークカーキ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkkhaki')
イエローグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='yellowgreen')
ヒストグラムの線の種類を実線に設定する	plt.hist(データ列, linestyle='solid')
1からnまでの整数列	list(range(1, n+1))
パレットトルコイズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='paleturquoise')
集合から別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
option: マーカーの色をフローラルホワイトにする	markerfacecolor = 'floralwhite'
散布図に青いポイントマーカーを描画する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='b')
散布図をミディアムスプリンググリーン色で描画する	plt.scatter(データ列x, データ列y, color='mediumspringgreen')
横棒グラフをオールドレース色で描画する	plt.barh(データ列x, データ列y, color='oldlace')
棒グラフの色をライトコーラルにする	plt.bar(データ列x, データ列y, color='lightcoral')
タプルをミュータブルにする	list(aTuple)
ミントクリーム色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mintcream')
標準入力から1行だけ読む	sys.stdin.readline()
ライトスレイグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightslategray')
多次元データを主成分分析で淡く次元に次元削減する	sklearn.decomposition.PCA(n_components=三).fit_transform(多次元データ)
横棒グラフをオレンジレッド色で描画する	plt.barh(データ列x, データ列y, color='orangered')
散布図に青い左三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='b')
グラフで使える色名の一覧	matplotlib.colors.cnames
辞書にキーワード引数で更新する	aDict.update(**kwargs)
散布図の色をモカシンにする	plt.scatter(データ列x, データ列y, color='moccasin')
データフレームのヒートマップを描画する	sns.heatmap(df.corr())
棒グラフの色をスノーにする	plt.bar(データ列x, データ列y, color='snow')
ミッドナイトブルー色のヒストグラムを描画する	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をシエナに設定する	plt.hist(データ列, color='sienna')
option: マーカーの色をブルーバイオレットにする	markerfacecolor = 'blueviolet'
正規表現を使う	import re
グラフの横軸のラベルを設定する	plt.xlabel('x軸ラベル')
numpyを使う	import numpy as np
データフレームの列を文字列にリネームする	df.rename(columns={column: name})
横棒グラフの色をオリベドラブにする	plt.barh(データ列x, データ列y, color='olivedrab')
折れ線グラフの色をダークゴールデンロッドに設定する	plt.plot(データ列x, データ列y, color='darkgoldenrod')
横棒グラフをオレンジ色で描画する	plt.barh(データ列x, データ列y, color='orange')
リストとリストについて散布図を描画して、マーカーを大バツに設定する	plt.plot(データ列x, データ列y, marker='X')
データフレームのリストカラムを1000の位で丸めて、整数型にする	df[aList].round(-3).astype(int)
option: マーカーの色をライムにする	markerfacecolor = 'lime'
データフレームから型の列を抽出する	df.select_dtypes(ty)
散布図に黒い星マーカーを使う	plt.plot(データ列x, データ列y, marker='*', c='k')
ブランチドアーモンド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='blanchedalmond')
棒グラフの色を淡いピンク色にする	plt.bar(データ列x, データ列y, color='lightpink')
ビスク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='bisque')
多次元データを特異値分解で濃く次元に次元削減する	sklearn.decomposition.TruncatedSVD(n_components=二).fit_transform(多次元データ)
折れ線グラフの色をパウダーブルーに設定する	plt.plot(データ列x, データ列y, color='powderblue')
横棒グラフの色をゴーストホワイトにする	plt.barh(データ列x, データ列y, color='ghostwhite')
データフレームを各列と列の組み合わせ毎にグループ化して、分散を求める	df.groupby([column, column2], as_index=False).var()
データ列間の決定係数を求める	sklearn.metrics.r2_score(データ列, データ列2)
散布図の色をオレンジレッドにする	plt.scatter(データ列x, データ列y, color='orangered')
プラットホームの名前	sys.platform
option: グラフの色をミディアムパープルに設定する	color = 'mediumpurple'
散布図の色をディープスカイブルーにする	plt.scatter(データ列x, データ列y, color='deepskyblue')
option: エンコーディングをSJISに設定する	encoding = 'shift_jis'
散布図をミディアムアクアマリン色で描画する	plt.scatter(データ列x, データ列y, color='mediumaquamarine')
シルバー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='silver')
棒グラフの色をrgbに設定する	plt.bar(ラベル列, データ列, color=rgb)
折れ線グラフをライトスレイグレー色で描画する	plt.plot(データ列x, データ列y, color='lightslategray')
データフレームのリストカラムを小数点以下n桁で丸める	df[aList].round(n)
折れ線グラフに黒い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='k')
黄色いヒストグラムを描画する	plt.hist(データ列, color='y')
リストの全ての要素をクリアにする	aList.clear()
散布図の色をホットピンクにする	plt.scatter(データ列x, データ列y, color='hotpink')
option: アクア色を使う	color = 'aqua'
シルバー色のヒストグラムを描画する	plt.hist(データ列, color='silver')
リストの先頭を取り除く	aList[1:]
オレンジレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='orangered')
パールゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='palegoldenrod')
二つの文字列は同じか調べる	s == s2
option: マーカーの色をミディアムスプリンググリーンにする	markerfacecolor = 'mediumspringgreen'
両端キューの先頭	deq[0]
散布図に赤いダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D', c='r')
折れ線グラフに大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X')
棒グラフをマゼンタ色で描画する	plt.bar(データ列x, データ列y, color='magenta')
横棒グラフを紺碧色で描画する	plt.barh(データ列x, データ列y, color='azure')
半透明の実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', alpha=0.5)
棒グラフの色をオリベドラブにする	plt.bar(データ列x, データ列y, color='olivedrab')
棒グラフをミディアムスプリンググリーン色で描画する	plt.bar(データ列x, データ列y, color='mediumspringgreen')
option: 大バツマーカーを使う	marker = 'X'
棒グラフの色をダークオリーブグリーンにする	plt.bar(データ列x, データ列y, color='darkolivegreen')
日付時刻データををn秒後に進める	aDatetime + datetime.timedelta(seconds=n)
キーが辞書に存在するか調べる	key not in aDict
データフレームを小数点以下n桁で丸める	df.round(n)
グレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='grey')
長さnのリスト	[0] * n
日付データからn週間分、減算する	aDate - datetime.timedelta(weeks=n)
option: グラフの色をフローラルホワイトに設定する	color = 'floralwhite'
数式を展開する	sympy.expand(e)
棒グラフをミントクリーム色で描画する	plt.bar(データ列x, データ列y, color='mintcream')
ふたつの集合が集合と交わりを持たないか調べる	aSet.isdisjoint(aSet2)
二つの文字列をスラッシュで区切ってプリントする	print(value, value2, sep='/')
二つの文字列を順にプリントする	print(value, value2)
散布図の下三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='v', markersize=2.0)
option: 破壊的に操作する	inplace = True
データフレームを列によってソートして、更新する	df.sort_values(by=column, inplace=True)
ランダム性を追加したランダムフォレストで回帰分析を行う	model = sklearn.ensemble.ExtraTreeRegressor(n_estimators=10)
モデルを学習する	model.fit(説明変数, 目的変数)
折れ線グラフを耐火レンガ色で描画する	plt.plot(データ列x, データ列y, color='firebrick')
カウンタ同士で積集合演算する	aCounter & aCounter2
横棒グラフをダークスレートブルー色で描画する	plt.barh(データ列x, データ列y, color='darkslateblue')
ヒストグラムの色をスノーに設定する	plt.hist(データ列, color='snow')
空のチェーンマップ	collections.ChainMap()
棒グラフをシャルトリューズ色で描画する	plt.bar(データ列x, データ列y, color='chartreuse')
正規分布によるパーセント・ポイント関数	scipy.stats.norm.cdf(x, loc=平均値, scale=標準偏差)
データフレームの中で、列と列に重複があるか見る	df.duplicated(subset=[column, column2])
新しいリッジ回帰とロッソ回帰のハイブリットモデルを作る	model = sklearn.linear_model.ElasticNet()
オブジェクトのクラス	type(obj)
本日をISO形式の文字列に変換する	datetime.datetime.today().isoformat()
折れ線グラフの色をライトシアンに設定する	plt.plot(データ列x, データ列y, color='lightcyan')
フォレストグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='forestgreen')
ホットピンク色のヒストグラムを描画する	plt.hist(データ列, color='hotpink')
データフレームをグループ化し、それぞれの列に対し分散を求める	df.groupby(column)[column2].var()
多次元データを多次元尺度構成法で淡く次元に次元削減する	sklearn.manifold.MSD(n_components=三).fit_transform(多次元データ)
データフレームの行を範囲指定して抽出する	df[start:end]
散布図の色をダークサーモンにする	plt.scatter(データ列x, データ列y, color='darksalmon')
option: グラフの色をパールバイオレットレッドに設定する	color = 'palevioletred'
折れ線グラフの色を茶色に設定する	plt.plot(データ列x, データ列y, color='brown')
nとn2の和	n + n2
option: グラフの色をダークオリーブグリーンに設定する	color = 'darkolivegreen'
折れ線グラフの色をミディアムパープルに設定する	plt.plot(データ列x, データ列y, color='mediumpurple')
散布図の色をカーキにする	plt.scatter(データ列x, データ列y, color='khaki')
文字列を正規表現で分割する	re.split(pattern, s)
データフレームの列を削除する	df.drop(column, axis=1)
データフレームの中にいくつ文字列があるか数える	df.isin([value]).sum()
日付時刻データの分数	aDatetime.minute
棒グラフを紺色で描画する	plt.bar(データ列x, データ列y, color='darkblue')
横棒グラフの色を紺碧にする	plt.barh(データ列x, データ列y, color='azure')
文字列の右側から部分文字列を取り除く	s.rstrip(sub)
横棒グラフをオリーブ色で描画する	plt.barh(データ列x, データ列y, color='olive')
実数を千の位で丸める	round(x, -3)
データ列を等量でビン数nでビン分割する	pd.qcut(ds, n)
イテラブルを累加したイテラブル	itertools.accumulate(iterable)
配列を等間隔でn個にビン分割する	pd.cut(aArray, n)
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgray')
ヒストグラムをスカイブルー色で描画する	plt.hist(データ列, color='skyblue')
散布図をイエローグリーン色で描画する	plt.scatter(データ列x, データ列y, color='yellowgreen')
データフレームのヒストグラムを縦横に並べて、可視化する	sns.displot(df, x='列名', col='カテゴリ名', row='カテゴリ名')
パールゴールデンロッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='palegoldenrod')
ふたつの集合が集合と互いに素か調べる	aSet.isdisjoint(aSet2)
折れ線グラフをハニーデュー色で描画する	plt.plot(データ列x, データ列y, color='honeydew')
データフレームのリストカラムの欠損値をxに設定する	df[aList].fillna(x)
タプルのn番目からn2番目までの部分	aTuple[n:n2]
option: コーラル色を使う	color = 'coral'
ヒストグラムをパールバイオレットレッド色で描画する	plt.hist(データ列, color='palevioletred')
棒グラフをペールグリーン色で描画する	plt.bar(データ列x, データ列y, color='palegreen')
配列間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
散布図の色をシャルトリューズにする	plt.scatter(データ列x, データ列y, color='chartreuse')
最初のコマンド引数	sys.argv[1]
棒グラフの色をグリーンにする	plt.bar(データ列x, データ列y, color='green')
日付データからn分、減算する	aDate - datetime.timedelta(minutes=n)
ヒストグラムをマゼンタ色で描画する	plt.hist(データ列, color='magenta')
棒グラフをライトイエロー色で描画する	plt.bar(データ列x, データ列y, color='lightyellow')
ヒストグラムをミディアムスプリンググリーン色で描画する	plt.hist(データ列, color='mediumspringgreen')
シスル色のヒストグラムを描画する	plt.hist(データ列, color='thistle')
散布図にrgbの三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^', c=rgb)
ヒストグラムをライトグレー色で描画する	plt.hist(データ列, color='lightgrey')
ミディアムターコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumturquoise')
文字列中の片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
データ列を100の位で丸めて、整数型にする	ds.round(-2).astype(int)
スラグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='slategray')
整数nがリストのどれかか調べる	n in aList
selectorsでマスクされたイテラブルの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
現在の再帰の最大回数	sys.getrecursionlimit()
アクアマリン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='aquamarine')
折れ線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列x, データ列y, color='mediumaquamarine')
データ列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
タプルの末尾	aTuple[-1]
大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X')
決定木の重要度を表示する	plt.barh(X.columns, model.feature_importances_)
ライム色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lime')
option: マーカーの色をライトコーラルにする	markerfacecolor = 'lightcoral'
option: マーカーの色をハニーデューにする	markerfacecolor = 'honeydew'
折れ線グラフの右三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='#800080')
データフレームの欠損値を最大値に設定する	df.fillna(df.max())
散布図の色をグリーンイエローにする	plt.scatter(データ列x, データ列y, color='greenyellow')
日付データが火曜日か調べる	aDate.weekday() == 1
option: マーカーの色をペールグリーンにする	markerfacecolor = 'palegreen'
棒グラフをオリーブ色で描画する	plt.bar(データ列x, データ列y, color='olive')
エクセルファイルファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
データフレームのカラムの欠損値を最大値で埋める	df[col].fillna(df[col].max())
日付データにn日分、加算する	aDate + datetime.timedelta(days=n)
データ列の曜日の名前	ds.dt.weekday_name
ヒストグラムの色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
折れ線グラフを紺碧色で描画する	plt.plot(データ列x, データ列y, color='azure')
ヒストグラムの色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ネイビー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='navy')
スタッキングで回帰分析を行う	sklearn.ensemble.StackingRegressor()
棒グラフの色をダークサーモンにする	plt.bar(データ列x, データ列y, color='darksalmon')
データ列を二つ並べてヒストグラムにする	plt.hist([データ列, データ列], color=['b', 'r'])
折れ線グラフをライトグリーン色で描画する	plt.plot(データ列x, データ列y, color='lightseagreen')
option: シルバー色を使う	color = 'silver'
文字列の中で複数行対応として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
ミディアムパープル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumpurple')
商と余りを同時に計算する	divmod(x, y)
ヒストグラムの色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
データフレームを'A'列によって昇順に破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
散布図の色をパールゴールデンロッドにする	plt.scatter(データ列x, データ列y, color='palegoldenrod')
空白	' '
データ列の分	ds.dt.minute
ふたつの辞書を合体する	aDict | aDict2
カウンタからゼロカウントを取り除く	+aCounter
日付データからn時間分、減算する	aDate - datetime.timedelta(hours=n)
コルモゴロフ・スミルノフ検定を行う	scipy.stats.kstest(データ列, 'norm')
折れ線グラフの三角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='k')
ロバストな線形分類モデルを作る	model = sklearn.linear_model.HuberClassifier()
NaN	math.nan
散布図の色をパウダーブルーにする	plt.scatter(データ列x, データ列y, color='powderblue')
散布図の色を耐火レンガにする	plt.scatter(データ列x, データ列y, color='firebrick')
折れ線グラフのマーカーを下三角にする	plt.plot(データ列x, データ列y, marker='v')
散布図に黒いバツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='k')
散布図をドジャーブルー色で描画する	plt.scatter(データ列x, データ列y, color='dodgerblue')
シャピロ・ウィルク検定を行う	scipy.stats.shapiro(データ列)
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgray')
アリスブルー色のヒストグラムを描画する	plt.hist(データ列, color='aliceblue')
ダークターコイズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkturquoise')
横棒グラフをダークスラテグレー色で描画する	plt.barh(データ列x, データ列y, color='darkslategray')
option: マーカーの色をカーキにする	markerfacecolor = 'khaki'
ヒストグラムの色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
データフレームのカラムの欠損値をxで埋める	df[col].fillna(x)
折れ線グラフの色をマルーンに設定する	plt.plot(データ列x, データ列y, color='maroon')
データフレームの値が欠損値か調べる	df.isna()
棒グラフの色をライトスレイグレーにする	plt.bar(データ列x, データ列y, color='lightslategrey')
棒グラフの色をパパイヤウィップにする	plt.bar(データ列x, データ列y, color='papayawhip')
文字列の右側から空白を取り除く	s.rstrip(' ')
八進文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
リストとリストについて散布図を描画して、マーカーを三角に設定する	plt.plot(データ列x, データ列y, marker='^')
ヒストグラムをローングリーン色で描画する	plt.hist(データ列, color='lawngreen')
データフレームから型リストで指定されたデータ型の列を抽出する	df.select_dtypes(include=typeList)
option: インディゴ色を使う	color = 'indigo'
ヒストグラムの描画して、正規化する	plt.hist(データ列, density=True)
ゴールド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='gold')
nをn2乗に増やす	n **= n2
カウンタを高頻出方から列挙する	aCounter.most_common()
ブルーバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='blueviolet')
Pandasで、データフレームのcollを日付データに変換する	pd.to_datetime(df[col])
棒グラフの色をシーグリーンにする	plt.bar(データ列x, データ列y, color='seagreen')
散布図の色をミディアムターコイズにする	plt.scatter(データ列x, データ列y, color='mediumturquoise')
オブジェクトを文字列に変換する	str(obj)
散布図の大バツマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='X', markersize=2.0)
折れ線グラフに赤い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='r')
赤色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='red')
mathをインポートする	import math
黒い三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^', c='k')
アクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='aquamarine')
棒グラフの色をプラムにする	plt.bar(データ列x, データ列y, color='plum')
日付時刻データが日付時刻データより後ろか調べる	aDatetime > aDatetime2
ミディアムターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='mediumturquoise')
散布図の色をアクアマリンにする	plt.scatter(データ列x, データ列y, color='aquamarine')
スチールブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='steelblue')
ヒストグラムの色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
横棒グラフの色をミスティローズにする	plt.barh(データ列x, データ列y, color='mistyrose')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t')
縦軸の目盛を対数に変更する	plt.yscale('log')
暗い赤色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkred')
散布図をアリスブルー色で描画する	plt.scatter(データ列x, データ列y, color='aliceblue')
フローラルホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='floralwhite')
文字列中の小文字を大文字に変換する	s.upper()
リストとリストについて散布図を描画して、四角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='s', c=rgb)
日付時刻データにn週間分、加算する	aDatetime + datetime.timedelta(weeks=n)
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
option: エラーがあるとき、例外を発生させるように設定する	errors = 'strict'
棒グラフをミディアムシアグリーン色で描画する	plt.bar(データ列x, データ列y, color='mediumseagreen')
散布図にポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.')
横棒グラフの色をミディアムバイオレットレッドにする	plt.barh(データ列x, データ列y, color='mediumvioletred')
正則化付き線形回帰モデルを作る	model = sklearn.linear_model.ElasticNet()
データフレームの列が文字列が含まれない行を抽出する	df[not df[column].str.contains(s)]
シエナ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='sienna')
データフレームの列の名前の一覧を使う	df.columns
スノー色のヒストグラムを描画する	plt.hist(データ列, color='snow')
ファイルを書き込みモードでオープンして]、fとする	f = open(filepath, mode='w')
折れ線グラフの右三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='>', markersize=2.0)
リストとリストについての散布図に赤い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', c='r')
横棒グラフの色をパレットトルコイズにする	plt.barh(データ列x, データ列y, color='paleturquoise')
散布図をダークゴールデンロッド色で描画する	plt.scatter(データ列x, データ列y, color='darkgoldenrod')
option: グラフの色をミディアムブルーに設定する	color = 'mediumblue'
棒グラフの色をダークバイオレットにする	plt.bar(データ列x, データ列y, color='darkviolet')
Pandasのバージョンを表示する	print(pd.__version__)
nの桁数	len(str(n))
option: ビスク色を使う	color = 'bisque'
ファイルをUTF8で書き込み用にオープンする]	open(filepath, mode='w', encoding='utf-8')
MSEを求める	sklearn.metrics.mean_squared_error(データ列, データ列2)
文字列の右側から改行を取り除く	s.rstrip('\n')
折れ線グラフのマーカーをダイアモンドにする	plt.plot(データ列x, データ列y, marker='D')
日付データを文字列でフォーマットして文字列に変換する	"aDate.strftime(""%d/%m/%y"")"
散布図に青いダイアモンドマーカーを描画する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='b')
Pythonパスの一覧	sys.path
棒グラフをロイヤルブルー色で描画する	plt.bar(データ列x, データ列y, color='royalblue')
ヒストグラムをライトスチールブルー色で描画する	plt.hist(データ列, color='lightsteelblue')
横棒グラフをシスル色で描画する	plt.barh(データ列x, データ列y, color='thistle')
option: マーカーの色をライトスカイブルーにする	markerfacecolor = 'lightskyblue'
散布図の丸マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='r')
散布図の色をダークオーキッドにする	plt.scatter(データ列x, データ列y, color='darkorchid')
棒グラフをダークスラテグレー色で描画する	plt.bar(データ列x, データ列y, color='darkslategray')
option: マーカーの色をブラックにする	markerfacecolor = 'black'
ベクトルの演算をする	import numpy as np
散布図をクリムゾン色で描画する	plt.scatter(データ列x, データ列y, color='crimson')
ファイルからストリームを読み込み、fileとする	file = open(filepath)
スラグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='slategray')
文字列がタプルに含まれないか調べる	element not in aTuple
ベージュ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='beige')
文字列をマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
データフレームのリストカラムの母標準偏差	df[aList].std(ddof=0)
散布図をラベンダーブラッシュ色で描画する	plt.scatter(データ列x, データ列y, color='lavenderblush')
option: ダークグリーン色を使う	color = 'darkgreen'
日付時刻データをn秒前に戻す	aDatetime - datetime.timedelta(seconds=n)
データ列のどの値が頻出か見る	ds.mode()
ヒストグラムの色をグリーンに設定する	plt.hist(データ列, color='green')
二つのカウンタのいずれかに含まれる要素	aCounter | aCounter2
クラス分類の正解率を求める	sklearn.metrics.accuracy_score(正解データ列, 予測データ列)
ラベンダー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lavender')
折れ線グラフをライトシアン色で描画する	plt.plot(データ列x, データ列y, color='lightcyan')
ミディアムオーキッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumorchid')
十六進表記の文字列を浮動小数点数に変換する	float.fromhex(十六進表記の文字列)
縦棒グラフを描画して、ラベルを左寄せする	plt.bar(ラベル列, データ列, align='edge')
実数の双曲線余弦の逆数	math.acosh(x)
青緑色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='teal')
option: レモンシフォン色を使う	color = 'lemonchiffon'
option: 書き込みモードを使う	mode = 'w'
決定木の重要度を可視化する	plt.barh(X.columns, model.feature_importances_)
横棒グラフをアリスブルー色で描画する	plt.barh(データ列x, データ列y, color='aliceblue')
タプルの各要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
縦軸だけグリッド線	plt.grid(axis='y')
ライトイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightyellow')
標準エラーを使う	sys.stderr
文字列の両端から空白を取り除く	s.strip()
文字列を改行で区切る	s.splitlines()
横棒グラフを積み上げにする	plt.barh(ラベル列, データ列, bottom=データ列y, color='#800080')
横棒グラフの色を青にする	plt.barh(データ列x, データ列y, color='blue')
option: 配列のデータ型を指定する	dtype = np.uint8
ターコイズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='turquoise')
折れ線グラフに青い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='b')
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
イテラブルのそれぞれを関数でフィルタする	map(func, iterable)
option: マーカーの色を淡いピンク色にする	markerfacecolor = 'lightpink'
データフレームから最初の列を除く	df[df.columns[1:]]
カテゴリで色分けして、データフレームを回帰直線付き散布図にする	sns.regplot(x='列名', y='列名', hue='カテゴリ列', data=df)
棒グラフをブラック色で描画する	plt.bar(データ列x, データ列y, color='black')
散布図の色をダークスラテグレーにする	plt.scatter(データ列x, データ列y, color='darkslategray')
ヒストグラムの色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
横棒グラフをミディアムスレートブルー色で描画する	plt.barh(データ列x, データ列y, color='mediumslateblue')
データ列を三つ並べてヒストグラムにする	plt.hist([データ列, データ列, データ列], color=['b', 'r', 'g'])
データフレームを'A'列によって昇順にソートする	df.sort_values(by='A', ascending=True)
棒グラフの色をフクシアにする	plt.bar(データ列x, データ列y, color='fuchsia')
散布図をスプリンググリーン色で描画する	plt.scatter(データ列x, データ列y, color='springgreen')
赤い破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='r')
データフレームのカラムを100の位で丸める	df[col].round(-2)
ヒストグラムをライトサーモン色で描画する	plt.hist(データ列, color='lightsalmon')
データフレームの最後の列以外を全て説明変数にする	説明変数 = df[df.columns[:-1]]
データ列の偏りを平方根変換する	np.sqrt(データ列)
集合のイミュータブル版	frozenset(aSet)
サンディーブラウン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='sandybrown')
横棒グラフを青緑色で描画する	plt.barh(データ列x, データ列y, color='teal')
option: ディムグレー色を使う	color = 'dimgray'
白い棒グラフを描画する	plt.bar(データ列x, データ列y, color='w')
折れ線グラフをモカシン色で描画する	plt.plot(データ列x, データ列y, color='moccasin')
散布図に大バツマーカーを使う	plt.scatter(データ列x, データ列y, marker='X')
ファイル全体を行単位で分割して読み込む	f.readlines()
option: ドジャーブルー色を使う	color = 'dodgerblue'
横棒グラフの色をリネンにする	plt.barh(データ列x, データ列y, color='linen')
文字列を青色にする	f'\033[34m{value}\033[0m'
マゼンタ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='magenta')
書式を辞書でフォーマットする	formatText.format_map(aDict)
文字列の中のASCII限定として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
折れ線グラフの色をホットピンクに設定する	plt.plot(データ列x, データ列y, color='hotpink')
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
数値の符号を同じにする	math.copysign(x, x2)
散布図の星マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='r')
ヒストグラムを描画して、半透明ににする	plt.hist(データ列x, alpha=0.5)
スカイブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='skyblue')
option: カンマをセパレータで使う	sep = ','
データフレームを多項式回帰付き散布図にする	sns.regplot(data=df, x='列名', y='列名', order=2)
トマト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='tomato')
ライトシアン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightcyan')
option: スカイブルー色を使う	color = 'skyblue'
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*')
折れ線グラフを色付きの点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='#800080')
文字列が全てアルファベットか調べる	s.isalpha()
散布図の色をミスティローズにする	plt.scatter(データ列x, データ列y, color='mistyrose')
自然数個のものからk個取り出したときの並べ方の総数	math.perm(n, k)
配列にはいくつ要素があるか調べる	aArray.size
ライトスレイグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightslategrey')
両端キューの末尾から要素を取り除く	deq.pop()
option: グラフの色を茶色に設定する	color = 'brown'
データフレームに重複があるか見る	df.duplicated()
日付データをn週間前に戻す	aDate - datetime.timedelta(weeks=n)
データフレームを列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
横棒グラフをミスティローズ色で描画する	plt.barh(データ列x, データ列y, color='mistyrose')
貝殻色の線グラフを描画する	plt.plot(データ列x, データ列y, color='seashell')
日付時刻データをISO形式の文字列に変換する	aDatetime.isoformat()
ローングリーン色のヒストグラムを描画する	plt.hist(データ列, color='lawngreen')
ビスク色のヒストグラムを描画する	plt.hist(データ列, color='bisque')
option: グラフの色をライトイエローに設定する	color = 'lightyellow'
全ての十六進数字	string.hexdigits
ヒストグラムをペールグリーン色で描画する	plt.hist(データ列, color='palegreen')
空の辞書	{}
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームを二つの列によってソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
折れ線グラフのマーカーを右三角にする	plt.plot(データ列x, データ列y, marker='>')
ディープスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='deepskyblue')
散布図をレモンシフォン色で描画する	plt.scatter(データ列x, データ列y, color='lemonchiffon')
nがn2の倍数か調べる	n % n2 == 0
グラフの凡例の位置を指定する	plt.legend(loc=(x, y))
ヒストグラムをゴールデンロッド色で描画する	plt.hist(データ列, color='goldenrod')
既存のファイルをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
ヒストグラムをドジャーブルー色で描画する	plt.hist(データ列, color='dodgerblue')
二つのデータ列の残差を散布図として描画する	sns.residplot(x=データ列, y=データ列)
option: コーンフラワーブルー色を使う	color = 'cornflowerblue'
アクア色の散布図を描画する	plt.scatter(データ列x, データ列y, color='aqua')
散布図のダイアモンドマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='k')
折れ線グラフをデピンク色で描画する	plt.plot(データ列x, データ列y, color='deeppink')
文字列をコロンで分割して、文字列リストに変換する	s.split(':')
文字列を全て小文字に変換する	s.casefold()
文字列全体を正規表現にマッチさせる	re.fullmatch(pattern, s)
option: グラフの色をブラックに設定する	color = 'black'
リストのn番目からn2番目までの部分	aList[n:n2]
現在の時間数	datetime.date.today().hour
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列x, データ列y, color='dimgrey')
空文字	''
折れ線グラフをオレンジレッド色で描画する	plt.plot(データ列x, データ列y, color='orangered')
文字列をセパレータで分割して、文字列リストに変換する	s.split(sep)
option: 大文字・小文字を無視する	flag = re.IGNORECASE
実数を実数で割った剰余	math.remainder(x, x2)
棒グラフをアクアマリン色で描画する	plt.bar(データ列x, データ列y, color='aquamarine')
ライトコーラル色のヒストグラムを描画する	plt.hist(データ列, color='lightcoral')
ネイビー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='navy')
nのn2乗	n ** n2
バツ印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='x')
文字列を空白で区切って、文字列リストに変換する	s.split()
折れ線グラフに赤いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='r')
混同行列をヒートマップで確認する	sns.heatmap(混同行列, annot=True, cmap='Reds')
option: グラフの色をライトグリーンに設定する	color = 'lightgreen'
ファイルをオープンして]、書き込みストリームを使う	open(filepath, mode='w')
ヒストグラムの色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
散布図の色をホワイトスモークにする	plt.scatter(データ列x, データ列y, color='whitesmoke')
ヒストグラムの色を赤に設定する	plt.hist(データ列, color='red')
実数に実数を掛ける	x * y
スクリプトファイルの絶対パス	os.path.abspath(__file__)
折れ線グラフの色をダークバイオレットに設定する	plt.plot(データ列x, データ列y, color='darkviolet')
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(データ列x, データ列y, color='midnightblue')
決定木を表示する	sklearn.tree.plot_tree(model, feature_names=X.columns, filled=True)
nかつn2	n and n2
option: ゴーストホワイト色を使う	color = 'ghostwhite'
棒グラフの色をミディアムバイオレットレッドにする	plt.bar(データ列x, データ列y, color='mediumvioletred')
データフレームの中に文字列があるか調べる	df.isin([value])
nをn2だけ左シフトする	n << n2
数式の簡略化を行う	sympy.sympify(e)
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
辞書のキーに対応した値	aDict.get(key)
綺麗なグラフを使う準備をする	import seaborn as sns
散布図の色をドジャーブルーにする	plt.scatter(データ列x, データ列y, color='dodgerblue')
データフレームのリストカラムが正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
新しい回帰木モデルを作る	model = sklearn.tree.DecisionTreeRegressor()
マゼンタ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='magenta')
棒グラフをロージーブラウン色で描画する	plt.bar(データ列x, データ列y, color='rosybrown')
青い一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='b')
棒グラフをナバホホワイト色で描画する	plt.bar(データ列x, データ列y, color='navajowhite')
データフレームを各カテゴリごとに色分けしてバイオリン図にする	sns.violinplot(x='カテゴリ列', y='列', data=df)
シーグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='seagreen')
文字列をシンボルに変換する	sympy.Symbol(s)
散布図の色をプラムにする	plt.scatter(データ列x, データ列y, color='plum')
棒グラフをライトゴールドロディイエロー色で描画する	plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')
折れ線グラフを赤い破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='r')
暗い赤色のヒストグラムを描画する	plt.hist(データ列, color='darkred')
データ列の値を正規表現patternでまとめてreplに置き換える	ds.replace(pattern, repl, regex=True)
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
棒グラフの色をピーチパフにする	plt.bar(データ列x, データ列y, color='peachpuff')
本日の曜日を整数で使う	datetime.datetime.today().weekday()
リストの文字列が最初に見つかるインデックス	aList.index(element)
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
折れ線グラフをレモンシフォン色で描画する	plt.plot(データ列x, データ列y, color='lemonchiffon')
散布図の色をロージーブラウンにする	plt.scatter(データ列x, データ列y, color='rosybrown')
option: 読み込むシートの名前をnamesに設定する	sheet_name = names
グリーンイエロー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='greenyellow')
option: グラフの色をグレーに設定する	color = 'gray'
散布図をレベッカパープル色で描画する	plt.scatter(データ列x, データ列y, color='rebeccapurple')
横棒グラフの色をピンクにする	plt.barh(データ列x, データ列y, color='pink')
JSON形式の文字列をデータに変換する	json.loads(jsonString)
折れ線グラフの色をモカシンに設定する	plt.plot(データ列x, データ列y, color='moccasin')
横軸の目盛に文字列を付ける	plt.xticks([0, 60, 90], ['不可', '可', '秀'])
イテラブルからひとつランダムに選ぶ	random.choice(iterable)
option: 三二ビット整数型を使う	dtype = np.int16
横棒グラフをライトスレイグレー色で描画する	plt.barh(データ列x, データ列y, color='lightslategrey')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='gray')
折れ線グラフの色をフクシアに設定する	plt.plot(データ列x, データ列y, color='fuchsia')
折れ線グラフをパパイヤウィップ色で描画する	plt.plot(データ列x, データ列y, color='papayawhip')
散布図の三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='^', markersize=2.0)
折れ線グラフをライトグレー色で描画する	plt.plot(データ列x, データ列y, color='lightgray')
文字列を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
データフレームの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
option: グラフの色をネイビーに設定する	color = 'navy'
散布図をペールグリーン色で描画する	plt.scatter(データ列x, データ列y, color='palegreen')
折れ線グラフの線の種類を一点鎖線に設定する	plt.plot(データ列x, データ列y, linestyle='dashbot')
折れ線グラフのポイントマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='.', markersize=2.0)
カウンタから辞書を引く	aCounter.subtract(aDict)
折れ線グラフを実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid')
文字列をセパレータで区切って、列挙する	s.split(sep)
折れ線グラフの星マーカーを黒くする	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='k')
数式を微分する	sympy.diff(e)
ダークスラテグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkslategray')
データフレームの列がxの行を抽出する	df[df[column] == x]
データ列の中にいくつ欠損値があるか数える	ds.isna().sum()
ダークスラテグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkslategray')
折れ線グラフの色をターコイズに設定する	plt.plot(データ列x, データ列y, color='turquoise')
ヒストグラムの色をトマトに設定する	plt.hist(データ列, color='tomato')
バリーウッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='burlywood')
文字列内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
ファイルを追加できるようにオープンする]	open(filepath, mode='a')
青い実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='b')
オブジェクトはリストかタプルか調べる	isinstance(obj, (list)
レモンシフォン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lemonchiffon')
辞書をソートしてJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
データフレームのデータ型の一覧	df.dtypes
日付時刻データをn日前に戻す	aDatetime - datetime.timedelta(days=n)
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
行列の列ごとの分散	np.var(aArray, axis=0)
データフレームを列の値によってグループ化する	df.groupby(column)
ダークゴールデンロッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgoldenrod')
option: グラフの色をラベンダーブラッシュに設定する	color = 'lavenderblush'
ヒストグラムの色をパープルに設定する	plt.hist(データ列, color='purple')
ペールグリーン色のヒストグラムを描画する	plt.hist(データ列, color='palegreen')
JSON形式の文字列をデータに変換する	json.loads(b.decode('unicode-escape'))
option: 白色を使う	color = 'white'
データを平均と分散で標準化を行う	sklearn.preprocessing.StandardScaler().fit_transform(データ)
ダークスラテグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkslategray')
オブジェクトはリストクラスか調べる	isinstance(obj, list)
ヒストグラムをミディアムターコイズ色で描画する	plt.hist(データ列, color='mediumturquoise')
横棒グラフの色をロイヤルブルーにする	plt.barh(データ列x, データ列y, color='royalblue')
一点鎖線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='dashbot')
文字列中の正規表現を新しい文字列で置き換える	re.sub(pattern, newsub, s)
文字列を下線付きにする	f'\033[4m{value}\033[0m'
実数が負の数か調べる	x < 0
データフレームのカラムの中にいくつ文字列があるか数える	df[col].isin([value]).sum()
option: クリムゾン色を使う	color = 'crimson'
データフレームからカテゴリデータの列名を列挙する	df.select_dtypes('object').columns
データフレームの列の各データ値の出現数	df[col].value_counts()
横棒グラフをロージーブラウン色で描画する	plt.barh(データ列x, データ列y, color='rosybrown')
コレクションを使う	import collections
横棒グラフの色をライトスチールブルーにする	plt.barh(データ列x, データ列y, color='lightsteelblue')
文字列全体が正規表現に大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
棒グラフの色をミディアムターコイズにする	plt.bar(データ列x, データ列y, color='mediumturquoise')
データフレームのカラムの欠損値をxに設定する	df[col].fillna(x)
データフレームのカウントプロットを描画する	sns.countplot(x='列名', data=df)
ホワイトスモーク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='whitesmoke')
ゴールド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='gold')
コーンフラワーブルー色のヒストグラムを描画する	plt.hist(データ列, color='cornflowerblue')
十六進数字を全部使う	string.hexdigits
データフレームのカラムの空文字をドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムが何月か見る	df[col].dt.month
実数の指数	math.frexp(x)[1]
ライトサーモン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightsalmon')
棒グラフをアイボリー色で描画する	plt.bar(データ列x, データ列y, color='ivory')
option: ライトコーラル色を使う	color = 'lightcoral'
データフレームの列を破壊的に削除する	df.drop(column, axis=1, inplace=True)
両端キューの先頭に要素を追加する	deq.appendleft(element)
散布図に黒い丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o', c='k')
横棒グラフの色をライトグリーンにする	plt.barh(データ列x, データ列y, color='lightseagreen')
横棒グラフの色をラベンダーブラッシュにする	plt.barh(データ列x, データ列y, color='lavenderblush')
集合から別の集合の要素を全て取り除く	aSet.difference_update(aSet2)
ヒストグラムをシャルトリューズ色で描画する	plt.hist(データ列, color='chartreuse')
日付時刻データが何日か知る	aDatetime.day
グラフで使うフォントを指定する	sns.set(font=フォント名)
データ列を円グラフにする	plt.pie(データ列, startangle=90)
棒グラフの色をサンディーブラウンにする	plt.bar(データ列x, データ列y, color='sandybrown')
棒グラフをフローラルホワイト色で描画する	plt.bar(データ列x, データ列y, color='floralwhite')
自然数最小公倍数	math.lcm(n, n2)
日付時刻データからn時間分、減算する	aDatetime - datetime.timedelta(hours=n)
option: セパレータをコロンにする	sep = ':'
nにn2を足して代入する	n += n2
ミッドナイトブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='midnightblue')
散布図の丸マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='k')
折れ線グラフをスチールブルー色で描画する	plt.plot(データ列x, データ列y, color='steelblue')
ヒストグラムをアイボリー色で描画する	plt.hist(データ列, color='ivory')
文字コードに対応する文字	chr(unicode)
折れ線グラフをアクアマリン色で描画する	plt.plot(データ列x, データ列y, color='aquamarine')
ヒストグラムを淡いピンク色色で描画する	plt.hist(データ列, color='lightpink')
横棒グラフの色をマゼンタにする	plt.barh(データ列x, データ列y, color='magenta')
option: ターコイズ色を使う	color = 'turquoise'
option: イエローグリーン色を使う	color = 'yellowgreen'
数式の変数を数式で置き換える	e.subs(z, e2)
Pandasで、エポック秒の文字列から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
option: マーカーの色を紺にする	markerfacecolor = 'darkblue'
x,y,zにそれぞれn,n2,n3を代入する	x, y, z = n, n2, n3
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列x, データ列y, color='slategray')
nから無限にカウントダウンする	itertools.count(start=n, step=-1)
データ列のタイムゾーンを文字列に設定する	ds.tz_convert(s)
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
棒グラフをタン色で描画する	plt.bar(データ列x, データ列y, color='tan')
二次元リストの転置行列	[list(x) for x in list(zip(*aList))]
グリッドの線の種類を一点鎖線に変更する	plt.grid(linestyle='dashbot')
option: ローングリーン色を使う	color = 'lawngreen'
散布図の星マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='*', markersize=2.0)
棒グラフをインディゴ色で描画する	plt.bar(データ列x, データ列y, color='indigo')
ミディアムスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumslateblue')
折れ線グラフの左三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='<', markersize=2.0)
横棒グラフの色をペルーにする	plt.barh(データ列x, データ列y, color='peru')
シスル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='thistle')
日付時刻データの秒数	aDatetime.second
ヒストグラムをビスク色で描画する	plt.hist(データ列, color='bisque')
散布図のポイントマーカーを青くする	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='b')
アクアマリン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='aquamarine')
ユニークな値を要素とする配列	np.unique(aArray)
紺碧色の散布図を描画する	plt.scatter(データ列x, データ列y, color='azure')
xの小数点以下'4'桁までをプリントする	print(':.4f'.format(x))
横棒グラフをライトサーモン色で描画する	plt.barh(データ列x, データ列y, color='lightsalmon')
散布図をシアン色で描画する	plt.scatter(データ列x, データ列y, color='cyan')
option: ミディアムスプリンググリーン色を使う	color = 'mediumspringgreen'
棒グラフをグレー色で描画する	plt.bar(データ列x, データ列y, color='gray')
棒グラフを黄色色で描画する	plt.bar(データ列x, データ列y, color='yellow')
散布図をコーンフラワーブルー色で描画する	plt.scatter(データ列x, データ列y, color='cornflowerblue')
ライトブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightblue')
日付データが日曜日か調べる	aDate.weekday() == 6
ダーク・スラテグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkslategrey')
星印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='*')
データフレームから列を三つ選択する	df[[column, column2, column3]]
ヒストグラムの色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ファイルを文字コードtextで書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
横棒グラフの色をダークスラテグレーにする	plt.barh(データ列x, データ列y, color='darkslategray')
option: 青紫色を使う	color = 'violet'
ハニーデュー色のヒストグラムを描画する	plt.hist(データ列, color='honeydew')
ディムグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='dimgray')
オブジェクトの参照カウント	sys.getrefcount(obj)
データフレームの散布図にロジスティック回帰を加える	sns.regplot(x='列名', y='列名', data=df, logistic=True)
nの二乗	n ** 2
タン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='tan')
既存の配列を元に全要素が1の配列	np.ones_like(aArray)
バリーウッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='burlywood')
rangeの無限バージョン	itertools.count(start=n, step=step)
横棒グラフの色をプラムにする	plt.barh(データ列x, データ列y, color='plum')
文字列を走査し、正規表現にASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
棒グラフを青くする	plt.bar(データ列x, データ列y, color='b')
散布図をオリーブ色で描画する	plt.scatter(データ列x, データ列y, color='olive')
option: 赤色を使う	color = 'red'
集合をリストに変換する	list(aSet)
シスル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='thistle')
文字列中の文字を列挙する	list(s)
ヒストグラムをシスル色で描画する	plt.hist(データ列, color='thistle')
データフレームを列によって昇順にソートする	df.sort_values(by=column, ascending=True)
折れ線グラフの三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='b')
二つのカウンタの共通する要素	aCounter & aCounter2
ミディアムシアグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumseagreen')
ヒストグラムの色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
option: グラフの色をダークスレートブルーに設定する	color = 'darkslateblue'
横棒グラフの色をシルバーにする	plt.barh(データ列x, データ列y, color='silver')
横棒グラフの色をシスルにする	plt.barh(データ列x, データ列y, color='thistle')
データフレームの重複した行をマスクする	df.duplicated()
データフレームをエクセルファイルファイルでJSONLファイルに保存する	df.to_excel(filename)
折れ線グラフをフォレストグリーン色で描画する	plt.plot(データ列x, データ列y, color='forestgreen')
四角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='s')
偽陽性を避けたい指標を使う	sklearn.metrics.precision_score(正解データ列, 予測データ列)
回帰モデルを交差検証する	sklearn.model_selection.cross_val_score(model, 説明変数, 目的変数, cv=5, scoring='r2')
散布図をハニーデュー色で描画する	plt.scatter(データ列x, データ列y, color='honeydew')
横棒グラフをカデットブルー色で描画する	plt.barh(データ列x, データ列y, color='cadetblue')
文字列の大文字と小文字を交換する	s.swapcase()
ヒストグラムの色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
折れ線グラフの四角マーカーを青くする	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='b')
文字列の中で正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
折れ線グラフの色をグリーンイエローに設定する	plt.plot(データ列x, データ列y, color='greenyellow')
option: マーカーの色をシルバーにする	markerfacecolor = 'silver'
ブラック色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='black')
全ての句読点文字	string.punctuation
nではない	not n
トマト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='tomato')
オールドレース色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='oldlace')
散布図をダークシアン色で描画する	plt.scatter(データ列x, データ列y, color='darkcyan')
option: グラフの色をダークシアグリーンに設定する	color = 'darkseagreen'
折れ線グラフの星マーカーを赤くする	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='r')
グラフを画面用に設定する	sns.set(context='notebook')
option: グラフの色をスプリンググリーンに設定する	color = 'springgreen'
option: ライトグレー色を使う	color = 'lightgrey'
データ列の平均値	ds.mean()
配列の累積和	np.cumsum(aArray)
両端キューの最大長	deq.maxlen
配列の行ごとの平均値	np.mean(aArray, axis=1)
データフレームのカラムを10の位で丸める	df[col].round(-1)
実数の二乗	x ** 2
フローラルホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='floralwhite')
option: グラフの色をオーキッドに設定する	color = 'orchid'
ヒストグラムの色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
リッジ回帰とロッソ回帰のハイブリッド分析の準備をする	model = sklearn.linear_model.ElasticNet()
option: パパイヤウィップ色を使う	color = 'papayawhip'
option: ダークオーキッド色を使う	color = 'darkorchid'
貝殻色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='seashell')
無限にカウントアップする	itertools.count()
データフレームの欠損値をxに設定する	df.fillna(x)
横棒グラフの色を貝殻にする	plt.barh(データ列x, データ列y, color='seashell')
コギーくんを使いたい	import kogi
インディアンレッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='indianred')
year年month月day日の日付時刻	datetime.datetime(year=year, month=month, day=day)
文字列を走査し、正規表現にマッチするか見る	re.search(pattern, s)
リストとリストについて散布図を描画して、マーカーをポイントに設定する	plt.plot(データ列x, データ列y, marker='.')
棒グラフをマルーン色で描画する	plt.bar(データ列x, データ列y, color='maroon')
自然数の順列の総数	math.perm(n)
ヒストグラムをライトブルー色で描画する	plt.hist(データ列, color='lightblue')
白色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='white')
横棒グラフの色をブルーバイオレットにする	plt.barh(データ列x, データ列y, color='blueviolet')
横棒グラフを紺色で描画する	plt.barh(データ列x, データ列y, color='darkblue')
ダークサーモン色のヒストグラムを描画する	plt.hist(データ列, color='darksalmon')
アイボリー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='ivory')
データフレームを列によってソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
ヒストグラムの色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
棒グラフの色をゴーストホワイトにする	plt.bar(データ列x, データ列y, color='ghostwhite')
ヒストグラムをパパイヤウィップ色で描画する	plt.hist(データ列, color='papayawhip')
ヒストグラムをホワイトスモーク色で描画する	plt.hist(データ列, color='whitesmoke')
データ列の欠損値を最大値で埋める	ds.fillna(ds.max())
両端キューをリストに変換する	list(deq)
n進文字列をバイト列に変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
option: マーカーの色を変更する	markerfacecolor = '#800080'
散布図をブラック色で描画する	plt.scatter(データ列x, データ列y, color='black')
パレットトルコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='paleturquoise')
白いヒストグラムを描画する	plt.hist(データ列, color='w')
散布図のバツマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='x', markersize=2.0)
データ列の各データ値の出現数	ds.value_counts()
折れ線グラフの色をイエローグリーンに設定する	plt.plot(データ列x, データ列y, color='yellowgreen')
横棒グラフをマゼンタ色で描画する	plt.barh(データ列x, データ列y, color='magenta')
データフレームを複数の列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
折れ線グラフをライトコーラル色で描画する	plt.plot(データ列x, データ列y, color='lightcoral')
カウンタの項目を列挙する	aCounter.keys()
option: マーカーの色をディムグレーにする	markerfacecolor = 'dimgray'
データフレームを各列毎にグループ化して、列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームの中の列を等間隔でn個にビン分割する	pd.cut(df[col], n)
散布図の右三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='#800080')
棒グラフをゲインズボロ色で描画する	plt.bar(データ列x, データ列y, color='gainsboro')
ヒストグラムをダークゴールデンロッド色で描画する	plt.hist(データ列, color='darkgoldenrod')
データ列を中央値でビン分割する	pd.qcut(ds, 2)
option: グラフの色をターコイズに設定する	color = 'turquoise'
折れ線グラフに星マーカーを使う	plt.plot(データ列x, データ列y, marker='*')
option: マーカーの色をブランチドアーモンドにする	markerfacecolor = 'blanchedalmond'
ミディアムアクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='mediumaquamarine')
option: 大バツマーカーを描画する	marker = 'X'
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
リストのn番目に文字列を挿入する	aList.insert(n, element)
散布図に星マーカーを使う	plt.plot(データ列x, データ列y, marker='*')
データフレームの値をValueMapでまとめて置き換える	df.replace(ValueMap)
ロバスト回帰モデルを作る	model = sklearn.linear_model.RANSACRegressor(random_state=0)
棒グラフをゴーストホワイト色で描画する	plt.bar(データ列x, データ列y, color='ghostwhite')
散布図の色をミディアムスレートブルーにする	plt.scatter(データ列x, データ列y, color='mediumslateblue')
折れ線グラフを破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed')
ヒストグラムをライトスカイブルー色で描画する	plt.hist(データ列, color='lightskyblue')
折れ線グラフの色をホワイトスモークに設定する	plt.plot(データ列x, データ列y, color='whitesmoke')
option: マーカーの色をライトグレーにする	markerfacecolor = 'lightgray'
ヒストグラムの色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
option: マーカーを大バツに変更する	marker = 'X'
option: 線の種類を実線に設定する	linestyle = 'solid'
文字列をトリムする	s.strip()
nをn2だけ増加させる	n += n2
データフレームの中にある文字列と文字列の合計を数える	df.isin([value, value2]).sum()
数式の因数分解を行う	sympy.factor(e)
グリッドを一点鎖線にする	plt.grid(linestyle='dashbot')
文字列の先頭だけ大文字化する	s.capitalize()
タプルの文字列が最初に見つかるインデックス	aTuple.index(element)
パールバイオレットレッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='palevioletred')
連立方程式を解く	sympy.solve([e, e2])
option: マーカーの色をバリーウッドにする	markerfacecolor = 'burlywood'
実数を整数に変換する	int(x)
ダークグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkgreen')
真部分集合か調べる	aSet < aSet2
グラフの描画を見やすくする	import seaborn as sns
データフレームを列でグループ化して、それぞれのグループごとの件数を知る	df.groupby(column).size()
リストとリストについての散布図にrgbの丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', c=rgb)
二つのデータフレームを横方向に連結する	pd.concat([df, df2], axis=1)
要素が全て1の配列	np.ones(要素数, dtype=np.int)
横棒グラフをモカシン色で描画する	plt.barh(データ列x, データ列y, color='moccasin')
ヒストグラムをライトスレイグレー色で描画する	plt.hist(データ列, color='lightslategray')
サドルブラウン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='saddlebrown')
文字列をセンタリングにする	s.center(文字列幅)
ガンマ関数	math.gamma(x)
グラフを正方形にする	plt.axis('equals')
ライトサーモン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightsalmon')
option: マーカーの色をダークゴールデンロッドにする	markerfacecolor = 'darkgoldenrod'
リストをナンバリングする	enumerate(aList)
散布図をミディアムブルー色で描画する	plt.scatter(データ列x, データ列y, color='mediumblue')
散布図の色をコーンズシルクにする	plt.scatter(データ列x, データ列y, color='cornsilk')
データフレームを複数の列によって昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームの列がx以上かつx2未満の行を抽出する	df[(x <= df[column]) & (df[column] < x2)]
ヒストグラムをディープスカイブルー色で描画する	plt.hist(データ列, color='deepskyblue')
option: マーカーの色をミントクリームにする	markerfacecolor = 'mintcream'
文字列中から部分文字列を探す	s.find(sub)
option: ナバホホワイト色を使う	color = 'navajowhite'
xの絶対値	abs(x)
横棒グラフの色をスカイブルーにする	plt.barh(データ列x, データ列y, color='skyblue')
データフレームの二つのカラムを並べて箱ひげ図で可視化する	plt.boxplot([df['カラム'], df['カラム']])
棒グラフの色をシャルトリューズにする	plt.bar(データ列x, データ列y, color='chartreuse')
黒い右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>', c='k')
option: バイナリモードを使う	mode = 'rb'
トマト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='tomato')
ダイアモンド印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='D')
黄色い棒グラフを描画する	plt.bar(データ列x, データ列y, color='y')
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(データ列x, データ列y, color='sandybrown')
散布図の色をディムグレーにする	plt.scatter(データ列x, データ列y, color='dimgray')
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(データ列x, データ列y, color='royalblue')
折れ線グラフのダイアモンドマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='D', markersize=2.0)
option: グラフの色をシスルに設定する	color = 'thistle'
option: スレートブルー色を使う	color = 'slateblue'
棒グラフをアンティークホワイト色で描画する	plt.bar(データ列x, データ列y, color='antiquewhite')
整数nを二進文字列に変換する	bin(n)[2:]
文字列をキャピタライズする	s.capitalize()
シャルトリューズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='chartreuse')
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
ヒストグラムの色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
モデルから目的変数を予測する	y_pred = model.predict(説明変数)
自然数個からk個取り出したときの順列の総数	math.perm(n, k)
ヒストグラムの色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
グラフの背景色を暗くする	sns.set(style='darkgrid')
データフレームを転置する	df.T
option: 星マーカーを描画する	marker = '*'
データフレームから指定された列を抽出する	df[[column]]
折れ線グラフの下三角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='k')
rgbのポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.', c=rgb)
配列をビン数nでビン分割する	pd.cut(aArray, n)
ヒストグラムをダークバイオレット色で描画する	plt.hist(データ列, color='darkviolet')
データフレームを列によってまとめたグループ	df.groupby(column)
ヒストグラムをピンク色で描画する	plt.hist(データ列, color='pink')
データ列を丸めて、整数型にする	ds.round().astype(int)
文字列を末尾から空白で区切る	s.rsplit()
自然数の階乗	math.factorial(n)
カウンタをリストに変換する	list(aCounter)
option: グラフの色をピンクに設定する	color = 'pink'
データフレームのリストカラムの欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
option: マーカーの色をスチールブルーにする	markerfacecolor = 'steelblue'
列'A'と列'B'をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
ミディアムバイオレットレッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumvioletred')
文字列を黒色にする	f'\033[30m{value}\033[0m'
option: マーカーの色をホットピンクにする	markerfacecolor = 'hotpink'
データフレームからn番目の列を除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
散布図をダークスラテグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkslategray')
配列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
ヒストグラムの色を暗い赤に設定する	plt.hist(データ列, color='darkred')
文字列を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
データフレームを関数の値によってグループ化し、要約統計量を求める	df.groupby(関数).describe()
二つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列x, データ列y, color='lightslategrey')
データフレームを'A'列によってソートする	df.sort_values(by='A')
グラフ中の文字化けを防ぐ	sns.set(font='IPAexGothic')
リストをタプルに変換する	tuple(aList)
データフレームのカラムの曜日が何日目か見る	df[col].dt.dayofweek
横棒グラフの色をゴールドにする	plt.barh(データ列x, データ列y, color='gold')
全ての印字可能な文字	string.printable
FIXME:カテゴリーデータを出現頻度順にソートする	df['A'].value_counts().sort_index().index
集合＼集合	aSet.difference(aSet2)
折れ線グラフを小麦色色で描画する	plt.plot(データ列x, データ列y, color='wheat')
nとn2の商	n / n2
データフレームの列をヒストグラムにする	plt.hist(df[column])
オリーブ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='olive')
実数の正接	math.tan(x)
茶色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='brown')
データフレームのリストカラムの欠損値を直後の値に設定する	df[aList].fillna(method='bfill')
折れ線グラフの色をペルーに設定する	plt.plot(データ列x, データ列y, color='peru')
リストとリストについての散布図に丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o')
分子と分母から有理数を作る	fractions.Fraction(分子, 分母)
棒グラフの色をロージーブラウンにする	plt.bar(データ列x, データ列y, color='rosybrown')
option: グラフの色をアイボリーに設定する	color = 'ivory'
文字列全体が正規表現にASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
オレンジ色のヒストグラムを描画する	plt.hist(データ列, color='orange')
棒グラフをパパイヤウィップ色で描画する	plt.bar(データ列x, データ列y, color='papayawhip')
句読点文字を全部使う	string.punctuation
折れ線グラフの丸マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='o', markersize=2.0)
カテゴリに並べて、データフレームを箱ひげ図にする	sns.boxplot(x='カテゴリ列', y='列', data=df)
横棒グラフの色をフクシアにする	plt.barh(データ列x, データ列y, color='fuchsia')
オブジェクトのプロパティの値を設定する	setattr(obj, プロパティ名, 値)
ヒストグラムの色をインディゴに設定する	plt.hist(データ列, color='indigo')
ロバスト推定でクラス分類を行う	model = sklearn.linear_model.RANSACClassifier(random_state=0)
リストとリストについての散布図に左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<')
折れ線グラフをパレットトルコイズ色で描画する	plt.plot(データ列x, データ列y, color='paleturquoise')
散布図の四角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='b')
option: 配列のデータ型を指定する	dtype = np.int8
配列を四分位数ごとにビン分割する	pd.qcut(aArray, 4)
データフレームのstart行目からend行目まで抽出する	df[start:end]
疑似乱数を生成する	random.random()
エラーを出力する	sys.stderr
option: マーカーの色をフォレストグリーンにする	markerfacecolor = 'forestgreen'
大バツ印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='X')
option: マーカーの色をミディアムターコイズにする	markerfacecolor = 'mediumturquoise'
折れ線グラフをグリーン色で描画する	plt.plot(データ列x, データ列y, color='green')
文字列の中で大文字・小文字を無視して正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
ダークグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgreen')
一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot')
アルファベットの文字列	string.ascii_letters
折れ線グラフの色をピンクに設定する	plt.plot(データ列x, データ列y, color='pink')
ヒストグラムを破線で描画する	plt.hist(データ列, linestyle='dashed')
データフレームのカラムの値をValueMapでまとめて置き換える	df[col].replace(ValueMap)
棒グラフを紺碧色で描画する	plt.bar(データ列x, データ列y, color='azure')
横棒グラフをミディアムスプリンググリーン色で描画する	plt.barh(データ列x, データ列y, color='mediumspringgreen')
折れ線グラフのマーカーをポイントにする	plt.plot(データ列x, データ列y, marker='.')
option: ダークグレー色を使う	color = 'darkgrey'
コーラル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='coral')
文字列のの開始位置から終了位置までの間に部分文字列がいくつか含まれるか調べる	s.count(sub, start, end)
データフレームのインデックスをリセットする	df.reset_index()
黒い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='k')
要素が集合のメンバーでないか調べる	element not in aSet
ネイビー色のヒストグラムを描画する	plt.hist(データ列, color='navy')
棒グラフをダークグリーン色で描画する	plt.bar(データ列x, データ列y, color='darkgreen')
散布図の色を淡いピンク色にする	plt.scatter(データ列x, データ列y, color='lightpink')
横棒グラフの色をライトグレーにする	plt.barh(データ列x, データ列y, color='lightgray')
棒グラフをミディアムパープル色で描画する	plt.bar(データ列x, データ列y, color='mediumpurple')
既存のファイルをUTF8で追加できるようにオープンする]	open(filepath, mode='a', encoding='utf-8')
棒グラフの色をハニーデューにする	plt.bar(データ列x, データ列y, color='honeydew')
最適な位置に凡例を表示する	plt.legend(loc='best')
配列のスカラー倍	aArray * n
ライトスカイブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightskyblue')
全要素を1で初期化した配列	np.ones(要素数, dtype=np.int)
nをn2だけ減少させる	n -= n2
棒グラフの色をダークスレートブルーにする	plt.bar(データ列x, データ列y, color='darkslateblue')
eの実数乗	math.exp(x)
タプルの先頭のn要素を取り除く	aTuple[n:]
角度のラジアン	math.radians(degree)
時間を使う	import time
グリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='green')
棒グラフをスラグレー色で描画する	plt.bar(データ列x, データ列y, color='slategrey')
棒グラフの色をダークマゼンタにする	plt.bar(データ列x, データ列y, color='darkmagenta')
option: 先頭のカラムをインデックスに設定する	index_col = 0
ファイルをオープンして]、バイナリ書き込みストリームを使う	open(filepath, mode='wb')
option: マーカーの色をスラグレーにする	markerfacecolor = 'slategrey'
コーラル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='coral')
実数のn乗	pow(x, n)
ヒストグラムの色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
積み上げ横棒グラフを描画する	plt.barh(ラベル列, データ列, bottom=データ列y, color='#800080')
rgbのダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D', c=rgb)
横棒グラフの色をライトスレイグレーにする	plt.barh(データ列x, データ列y, color='lightslategrey')
折れ線グラフに赤い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='r')
データフレームを100の位で丸める	df.round(-2)
データフレームの列を折れ線グラフで可視化する	plt.plot(df[column], df[column])
プラットホームがMacOSか調べる	sys.platform.startswith('darwin')
ダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D')
日付データををn秒後に進める	aDate + datetime.timedelta(seconds=n)
option: グラフの色をミディアムアクアマリンに設定する	color = 'mediumaquamarine'
ミディアムオーキッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumorchid')
数式の数値を求める	float(e)
折れ線グラフの色をレベッカパープルに設定する	plt.plot(データ列x, データ列y, color='rebeccapurple')
エクセルファイルファイルをデータフレームとして読み込む	pd.read_excel(filename)
option: ミディアムターコイズ色を使う	color = 'mediumturquoise'
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
横棒グラフをゴールデンロッド色で描画する	plt.barh(データ列x, データ列y, color='goldenrod')
サンディーブラウン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='sandybrown')
osモジュールをインポートする	import os
ケンドール相関係数でデータフレームの相関行列	df.corr(method='kendall')
スチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='steelblue')
option: 配列のデータ型を指定する	dtype = np.int32
ヒストグラムをダークスレートブルー色で描画する	plt.hist(データ列, color='darkslateblue')
option: ポイントマーカーを使う	marker = '.'
アリスブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='aliceblue')
折れ線グラフのバツマーカーの色を変更する	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='#800080')
グラフの縦横比を等しくする	plt.axis('equals')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
横棒グラフの色を耐火レンガにする	plt.barh(データ列x, データ列y, color='firebrick')
散布図をネイビー色で描画する	plt.scatter(データ列x, データ列y, color='navy')
ダークグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkgray')
配列をビン分割する	pd.cut(aArray, aList)
option: 読み込まない列番号をnamesで指定する	skiprows = names
ヒストグラムと勾配ブースティングでクラス分類を行う	model = sklearn.ensemble.HistGradientBoostingClassifier()
黒いヒストグラムを描画する	plt.hist(データ列, color='k')
ホットピンク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='hotpink')
折れ線グラフの色をダークシアンに設定する	plt.plot(データ列x, データ列y, color='darkcyan')
最大長nの両端キューを作る	collections.deque(maxlen=n)
データフレームを配列に変換する	df.values
何回まで再帰ができるかを	sys.getrecursionlimit()
カデットブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cadetblue')
パパイヤウィップ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='papayawhip')
グラフの見栄えを良くする	import seaborn as sns
散布図の下三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='v', markeredgewidth=2.5)
横棒グラフの色を小麦色にする	plt.barh(データ列x, データ列y, color='wheat')
ライトコーラル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightcoral')
文字列の先頭から部分文字列を探す	s.find(sub)
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列x, データ列y, color='darkgrey')
配列を2次元1行に変形する	aArray.reshape(1, -1)
暗い赤色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkred')
nからn2を引く	n - n2
折れ線グラフを青緑色で描画する	plt.plot(データ列x, データ列y, color='teal')
棒グラフの色をターコイズにする	plt.bar(データ列x, データ列y, color='turquoise')
ゴールデンロッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='goldenrod')
データフレームをグループ化し、それぞれの列に対し合計を求める	df.groupby(column)[column2].sum()
ライトスカイブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightskyblue')
折れ線グラフの右三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='>', markeredgewidth=2.5)
散布図のポイントマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='#800080')
データフレームを列によってグループ化して、それぞれのグループごとの最大値を求める	df.groupby(column).max()
カウンタ同士で積集合	aCounter & aCounter2
折れ線グラフの左三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='r')
ヒストグラムの色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
バリーウッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='burlywood')
実数の双曲線正接	math.tanh(x)
データフレームのリスト列の相関行列	df[aList].corr()
リストとリストについての散布図に黒いバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', c='k')
データフレームのカラムの分	df[col].dt.minute
ミントクリーム色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mintcream')
ゴーストホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='ghostwhite')
オブジェクトのイテレータ	iter(obj)
ロバスト推定で回帰分析を行う	model = sklearn.linear_model.RANSACRegressor(random_state=0)
本日が木曜日か調べる	datetime.datetime.today().weekday() == 3
二つの変数を同じ値にする	x = y = n
option: マーカーの色をダークグレーにする	markerfacecolor = 'darkgray'
リストの先頭	aList[0]
横棒グラフの色をホワイトスモークにする	plt.barh(データ列x, データ列y, color='whitesmoke')
暗い赤色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkred')
データフレームのカラムの日	df[col].dt.day
option: グラフの色をフォレストグリーンに設定する	color = 'forestgreen'
シアン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cyan')
棒グラフをライムグリーン色で描画する	plt.bar(データ列x, データ列y, color='limegreen')
行列の転置行列	aArray.T
散布図に三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^')
データフレームをインデックスによって降順でソートする	df.sort_index(ascending=False)
八進文字列を整数に変換する	int(s, 8)
ファイルを全部、読み込む	f.read()
折れ線グラフの色をインディゴに設定する	plt.plot(データ列x, データ列y, color='indigo')
マルーン色のヒストグラムを描画する	plt.hist(データ列, color='maroon')
勾配ブースティングで回帰分析を行う	model = sklearn.ensemble.GradientBoostingRegressor()
キーが辞書に存在しないとき、要素を追加する	aDict.setdefault(key, element)
文字列を置き換える	s.replace(sub, newsub)
option: 色の透明度を設定する	alpha = 0.5
折れ線グラフを描画する	plt.plot(データ列x, データ列y)
nの三乗	n ** 3
データ列の曜日が何日目か見る	ds.dt.dayofweek
パウダーブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='powderblue')
折れ線グラフの大バツマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='X', markeredgewidth=2.5)
散布図をフクシア色で描画する	plt.scatter(データ列x, データ列y, color='fuchsia')
折れ線グラフのバツマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='x', markersize=2.0)
データフレームを複数の列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
ブルーバイオレット色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='blueviolet')
データフレームを列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
文字列を緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
データ列をn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
ヒストグラムをライトゴールドロディイエロー色で描画する	plt.hist(データ列, color='lightgoldenrodyellow')
文字列を全て大文字に変換する	s.upper()
ペルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='peru')
データフレームのリストカラムの分散	df[aList].var()
第一引数で指定されたファイルの名前	sys.argv[1]
点線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='dotted')
ゴーストホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='ghostwhite')
日付データと日付データの時間差が何秒か知る	(aDate - aDate2).total_seconds()
数式を簡単にする	sympy.sympify(e)
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=[column, column2])
オールドレース色の線グラフを描画する	plt.plot(データ列x, データ列y, color='oldlace')
棒グラフの色をコーラルにする	plt.bar(データ列x, データ列y, color='coral')
ラベンダーブラッシュ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lavenderblush')
データフレームを各列と列の組み合わせ毎にグループ化して、最小値を求める	df.groupby([column, column2], as_index=False).min()
イテラブルの集合	set(iterable)
文字列リストを連結してひとつの文字列にする	''.join(map(str, iterable))
ヒストグラムをライムグリーン色で描画する	plt.hist(データ列, color='limegreen')
散布図を耐火レンガ色で描画する	plt.scatter(データ列x, データ列y, color='firebrick')
文字列を式として評価する	eval(s)
option: マーカーの色をターコイズにする	markerfacecolor = 'turquoise'
棒グラフをミディアムブルー色で描画する	plt.bar(データ列x, データ列y, color='mediumblue')
折れ線グラフの色をピーチパフに設定する	plt.plot(データ列x, データ列y, color='peachpuff')
配列を平坦化する	aArray.flatten()
折れ線グラフの色を青に設定する	plt.plot(データ列x, データ列y, color='blue')
データフレームのn行目を抽出する	df.loc[n]
option: グラフの色をパレットトルコイズに設定する	color = 'paleturquoise'
データフレームのリストカラムを100の位で丸めて、整数型にする	df[aList].round(-2).astype(int)
辞書からキーの値	aDict.get(key)
ヒストグラムの色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
トマト色のヒストグラムを描画する	plt.hist(データ列, color='tomato')
整数nを十六進文字列に変換する	hex(n)[2:]
ヒストグラムをダーク・スラテグレー色で描画する	plt.hist(データ列, color='darkslategrey')
日付時刻データが何秒か知る	aDatetime.second
棒グラフの色をダーク・スラテグレーにする	plt.bar(データ列x, データ列y, color='darkslategrey')
リストから文字列を取り除く	aList.remove(element)
横軸の目盛を整数のみにする	plt.xticks(np.arange(最小値, 最大値, 間隔))
データ列のユニークな値の個数	ds.nunique()
文字列を白色にする	f'\033[37m{value}\033[0m'
Pandasで、エポック秒のデータフレームのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
整数nの二進文字列	bin(n)[2:]
棒グラフの色をライトグレーにする	plt.bar(データ列x, データ列y, color='lightgray')
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
文字列を左寄せにする	s.ljust(文字列幅)
折れ線グラフの色をダークオレンジに設定する	plt.plot(データ列x, データ列y, color='darkorange')
全要素が初期値の行列	np.full((行数, 列数), 初期値, dtype=np.int)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
棒グラフをパウダーブルー色で描画する	plt.bar(データ列x, データ列y, color='powderblue')
青緑色の線グラフを描画する	plt.plot(データ列x, データ列y, color='teal')
文字列全体を大文字・小文字を無視して正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
折れ線グラフの大バツマーカーを黒くする	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='k')
データフレームのカラムが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
横棒グラフをアクアマリン色で描画する	plt.barh(データ列x, データ列y, color='aquamarine')
折れ線グラフの星マーカーを青くする	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='b')
散布図をミスティローズ色で描画する	plt.scatter(データ列x, データ列y, color='mistyrose')
棒グラフの色をクリムゾンにする	plt.bar(データ列x, データ列y, color='crimson')
グレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='gray')
折れ線グラフの三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='^', markersize=2.0)
青紫色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='violet')
棒グラフをバリーウッド色で描画する	plt.bar(データ列x, データ列y, color='burlywood')
折れ線グラフの色をチョコレートに設定する	plt.plot(データ列x, データ列y, color='chocolate')
棒グラフの色をアクアにする	plt.bar(データ列x, データ列y, color='aqua')
カテゴリで色分けして、データフレームをにバイオリン図で可視化する	sns.violinplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
棒グラフをドジャーブルー色で描画する	plt.bar(データ列x, データ列y, color='dodgerblue')
日付時刻データからn週間分、減算する	aDatetime - datetime.timedelta(weeks=n)
カウンタの項目数	len(aCounter)
二つのデータ列を箱ひげ図にする	plt.boxplot([データ列, データ列])
データフレームの指定された列をリストとして抽出する	df[column].values.tolist()
データ列の欠損値を平均値で埋める	ds.fillna(ds.mean())
データフレームのリストカラムの中の欠損値の合計を数える	df[aList].isna().sum()
横軸の目盛を対数に変更する	plt.xscale('log')
ピーチパフ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='peachpuff')
両端キューの末尾に要素を追加する	deq.append(element)
散布図の色をミディアムスプリンググリーンにする	plt.scatter(データ列x, データ列y, color='mediumspringgreen')
option: ヘッダを自動的な連番に設定する	header = None
横棒グラフをゴーストホワイト色で描画する	plt.barh(データ列x, データ列y, color='ghostwhite')
option: グラフの色をパパイヤウィップに設定する	color = 'papayawhip'
横棒グラフの色をミディアムスレートブルーにする	plt.barh(データ列x, データ列y, color='mediumslateblue')
整数nがタプルのどれかか調べる	n in aTuple
イテラブルを文字列に変換して連結する	''.join(map(str, iterable))
横棒グラフをシエナ色で描画する	plt.barh(データ列x, データ列y, color='sienna')
ダークマゼンタ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkmagenta')
レベッカパープル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='rebeccapurple')
ヒストグラムをアクア色で描画する	plt.hist(データ列, color='aqua')
option: 決定木の深さを制限する	maxdepth = n
データフレームが正規分布からどの程度、尖っているか見る	df.skew()
データ列の文字列長を列として使う	ds.str.len()
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightslategrey')
横棒グラフの色をダークシアグリーンにする	plt.barh(データ列x, データ列y, color='darkseagreen')
カーネル密度による分布図を描画する	sns.kdeplot(x='列名', hue='カテゴリ列', data=df)
option: グラフの色をライトコーラルに設定する	color = 'lightcoral'
ヒストグラムの色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
データフレームのリストカラムを丸める	df[aList].round()
option: エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
データ列を縦棒グラフにする	plt.bar(ラベル列, データ列)
ヒストグラムをスラグレー色で描画する	plt.hist(データ列, color='slategrey')
文字列の左側から空白を取り除く	s.lstrip(' ')
ファイルを文字コードtextでオープンする]	open(filepath, encoding=text)
耐火レンガ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='firebrick')
パパイヤウィップ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='papayawhip')
データフレームのカラムの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データ列のヒストグラムを描画する	plt.hist(データ列)
棒グラフをスノー色で描画する	plt.bar(データ列x, データ列y, color='snow')
option: UTF8を使う	encoding = 'utf-8'
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgray')
棒グラフをディムグレー色で描画する	plt.bar(データ列x, データ列y, color='dimgray')
円グラフの特定の要素だけ切り出す	plt.pie(データ列, startangle=90, explode=[0, 0.3, 0])
散布図の色をライトコーラルにする	plt.scatter(データ列x, データ列y, color='lightcoral')
折れ線グラフの色をスチールブルーに設定する	plt.plot(データ列x, データ列y, color='steelblue')
横棒グラフの色をオールドレースにする	plt.barh(データ列x, データ列y, color='oldlace')
横棒グラフをグレー色で描画する	plt.barh(データ列x, データ列y, color='grey')
文字列を文字コード列に変換する	[ord(ch) for ch in s]
棒グラフの色をパレットトルコイズにする	plt.bar(データ列x, データ列y, color='paleturquoise')
ファイルとfilenameを結合する	os.path.join(filepath, filename)
棒グラフをライトグレー色で描画する	plt.bar(データ列x, データ列y, color='lightgray')
散布図の色を茶色にする	plt.scatter(データ列x, データ列y, color='brown')
データフレームのカラムの中にある文字列の合計を数える	df[col].isin([value]).sum()
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列x, データ列y, color='lightgray')
year年month月day日を日付に変換する	datetime.date(year=year, month=month, day=day)
グラフの描画で暗くカラーパレットを使う	sns.set(pallete='dark')
散布図の色をダークターコイズにする	plt.scatter(データ列x, データ列y, color='darkturquoise')
ヒストグラムの色を青紫に設定する	plt.hist(データ列, color='violet')
散布図の色をスノーにする	plt.scatter(データ列x, データ列y, color='snow')
ヒストグラムの色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
棒グラフの色をライトグレーにする	plt.bar(データ列x, データ列y, color='lightgrey')
横棒グラフの色を茶色にする	plt.barh(データ列x, データ列y, color='brown')
option: コーンズシルク色を使う	color = 'cornsilk'
リストの平均値	sum(aList)/len(aList)
ヒストグラムの色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムの色をシアンに設定する	plt.hist(データ列, color='cyan')
勾配ブースティングでクラス分類を行う	model = sklearn.ensemble.GradientBoostingClassifier()
文字列が無限に繰り返すイテラブル	itertools.repeat(element)
ヒストグラムを貝殻色で描画する	plt.hist(データ列, color='seashell')
クラス分類の予測精度をヒートマップで見る	sns.heatmap(confusion_matrix(正解データ列, 予測データ列), annot=True, cmap='Reds')
データフレームのカラムが何年か見る	df[col].dt.year
散布図をディムグレー色で描画する	plt.scatter(データ列x, データ列y, color='dimgrey')
エクセルファイルファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
ヒストグラムの色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
辞書のキーの一覧	aDict.keys()
計算機イプシロン	sys.float_info.epsilon
オブジェクトがプロパティを持つか調べる	hasattr(obj, プロパティ名)
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategrey')
回帰木分析の準備をする	model = sklearn.tree.DecisionTreeRegressor()
サイコロと同じ乱数	random.randint(1, 6)
棒グラフをダークグレー色で描画する	plt.bar(データ列x, データ列y, color='darkgrey')
ヒストグラムを青紫色で描画する	plt.hist(データ列, color='violet')
文字列の長さ	len(s)
カテゴリで色分けして、データフレームの全カラムの相関を可視化する	sns.pairplot(df, hue='カテゴリ列')
散布図の色をミディアムオーキッドにする	plt.scatter(データ列x, データ列y, color='mediumorchid')
option: ダークターコイズ色を使う	color = 'darkturquoise'
ダークゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='darkgoldenrod')
散布図を青紫色で描画する	plt.scatter(データ列x, データ列y, color='violet')
散布図をブルーバイオレット色で描画する	plt.scatter(データ列x, データ列y, color='blueviolet')
散布図をダークグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkgray')
データ列の欠損値を最小値で埋める	ds.fillna(ds.min())
棒グラフの色をビスクにする	plt.bar(データ列x, データ列y, color='bisque')
書式をargsを引数としてフォーマットする	formatText.format(*args)
ヒストグラムの色をピンクに設定する	plt.hist(データ列, color='pink')
棒グラフの色をミディアムスプリンググリーンにする	plt.bar(データ列x, データ列y, color='mediumspringgreen')
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
option: マーカーの色をパパイヤウィップにする	markerfacecolor = 'papayawhip'
year年の日付	datetime.date(year=year, month=1, day=1)
ヒストグラムを一点鎖線で描画する	plt.hist(データ列, linestyle='dashbot')
横棒グラフをダークシアグリーン色で描画する	plt.barh(データ列x, データ列y, color='darkseagreen')
サポートベクターマシンで回帰分析を行う	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
データフレームを回帰直線付き散布図にする	sns.regplot(data=df, x='列名', y='列名')
配列の要素数	aArray.size
ヒストグラムをアクアマリン色で描画する	plt.hist(データ列, color='aquamarine')
ヒストグラムをブランチドアーモンド色で描画する	plt.hist(データ列, color='blanchedalmond')
カウンタの下位を列挙する	aCounter.most_common()[:-n-1:-1]
データフレームから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
棒グラフの色をライトシアンにする	plt.bar(データ列x, データ列y, color='lightcyan')
JSONファイルのfをデータに変換する	json.load(fin)
ミディアムスプリンググリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumspringgreen')
サンディーブラウン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='sandybrown')
ミディアムオーキッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumorchid')
整数nの二進表現	bin(n)
ファイルを一行ずつ読み込む	f.readline()
原点から(実数,y)の距離	math.hypot(x, y)
option: グラフの色をシエナに設定する	color = 'sienna'
散布図をライトスレイグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightslategrey')
日付時刻データにn日分、加算する	aDatetime + datetime.timedelta(days=n)
ダークシアグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkseagreen')
横棒グラフをピーチパフ色で描画する	plt.barh(データ列x, データ列y, color='peachpuff')
青いグリッド線を引く	plt.grid(color='b')
ターコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='turquoise')
option: ミッドナイトブルー色を使う	color = 'midnightblue'
データフレームを各列毎にグループ化して、列の合計を求める	df.groupby(column)[column2].sum()
option: シスル色を使う	color = 'thistle'
option: シーグリーン色を使う	color = 'seagreen'
折れ線グラフをダークサーモン色で描画する	plt.plot(データ列x, データ列y, color='darksalmon')
ヒストグラムをイエローグリーン色で描画する	plt.hist(データ列, color='yellowgreen')
アリスブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='aliceblue')
オプションで、ファイルを使う	file = sys.open(filename, 'w')
ヒストグラムをダークカーキ色で描画する	plt.hist(データ列, color='darkkhaki')
棒グラフの色をライトサーモンにする	plt.bar(データ列x, データ列y, color='lightsalmon')
文字列を右トリムする	s.rstrip()
ライトゴールドロディイエロー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')
タプルをひとつ置きに取り出す	aTuple[::2]
データフレームの列をヒストグラムで描画する	plt.hist(df[column])
折れ線グラフをシアン色で描画する	plt.plot(データ列x, データ列y, color='cyan')
ライトスチールブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightsteelblue')
option: パールバイオレットレッド色を使う	color = 'palevioletred'
データ列の月	ds.dt.month
棒グラフの色を赤にする	plt.bar(データ列x, データ列y, color='red')
散布図を赤色で描画する	plt.scatter(データ列x, データ列y, color='red')
変数が無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, oo)
実数に実数を加える	x + y
ロッソ回帰分析の準備をする	model = sklearn.linear_model.Rosso(alpha=正則化項)
散布図の色をライトグリーンにする	plt.scatter(データ列x, データ列y, color='lightgreen')
折れ線グラフをダークグレー色で描画する	plt.plot(データ列x, データ列y, color='darkgrey')
option: グラフの色をスチールブルーに設定する	color = 'steelblue'
折れ線グラフの色を小麦色に設定する	plt.plot(データ列x, データ列y, color='wheat')
データ列のタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
棒グラフの色をライムにする	plt.bar(データ列x, データ列y, color='lime')
折れ線グラフの色をラベンダーに設定する	plt.plot(データ列x, データ列y, color='lavender')
option: 読み込みモードに設定する	mode = 'r'
データフレームをインデックスによって昇順にソートする	df.sort_index(ascending=True)
option: マーカーの色をパールゴールデンロッドにする	markerfacecolor = 'palegoldenrod'
ダークシアン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkcyan')
データフレームの要約統計量	df.describe()
ミディアムオーキッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumorchid')
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(データ列x, データ列y, color='paleturquoise')
散布図にrgbの大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X', c=rgb)
プラム色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='plum')
折れ線グラフに下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v')
データフレームを関数によってまとめたグループ	df.groupby(関数)
オブジェクトをデバッグ向けの文字列に変換する	repr(obj)
折れ線グラフの色をクリムゾンに設定する	plt.plot(データ列x, データ列y, color='crimson')
横棒グラフの色をペールグリーンにする	plt.barh(データ列x, データ列y, color='palegreen')
プラム色のヒストグラムを描画する	plt.hist(データ列, color='plum')
ピーチパフ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='peachpuff')
全ての数字	string.digits
ヒストグラムをフォレストグリーン色で描画する	plt.hist(データ列, color='forestgreen')
データフレームの先頭	df.head()
option: 四角マーカーを描画する	marker = 's'
データフレームの欠損値を直後の値に設定する	df.fillna(method='bfill')
データフレームを使う	import pandas as pd
ミディアムシアグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumseagreen')
散布図の下三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='r')
オプションで、標準出力を使う	file = sys.stdout
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
数式を数値に変換する	float(e)
文字列からformatのパターンで日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
棒グラフの色をミスティローズにする	plt.bar(データ列x, データ列y, color='mistyrose')
データ列間の平均絶対誤差を求める	sklearn.metrics.mean_absolute_error(データ列, データ列2)
逆順の両端キュー	reversed(deq)
ダークスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='darkslateblue')
確率的勾配降下でクラス分類を行う	model = sklearn.linear_model.SGDClassifier()
横軸だけグリッド線	plt.grid(axis='x')
折れ線グラフに赤い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='r')
文字列がリストに含まれないか調べる	element not in aList
折れ線グラフのマーカーを大バツにする	plt.plot(データ列x, データ列y, marker='X')
棒グラフの色をサドルブラウンにする	plt.bar(データ列x, データ列y, color='saddlebrown')
棒グラフの色をライトグリーンにする	plt.bar(データ列x, データ列y, color='lightseagreen')
最大長を指定して、両端キュー	collections.deque(maxlen=n)
ファイルをオープンして]、バイナリストリームを使う	open(filepath, mode='rb')
ミディアムスレートブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumslateblue')
タプルを引数として展開して表示する	print(*aTuple, sep=',')
散布図をミディアムターコイズ色で描画する	plt.scatter(データ列x, データ列y, color='mediumturquoise')
ヒストグラムの色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
option: グラフの色をゴーストホワイトに設定する	color = 'ghostwhite'
ドジャーブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='dodgerblue')
リストとリストについての散布図に下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v')
nが負の数か調べる	n < 0
既存の配列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
ヒストグラムの色をモカシンに設定する	plt.hist(データ列, color='moccasin')
データフレームを複数の列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
nとn2の積	n * n2
ヒストグラムの色を紺碧に設定する	plt.hist(データ列, color='azure')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategrey')
option: グラフの色をダークバイオレットに設定する	color = 'darkviolet'
ヒストグラムの色をサーモンに設定する	plt.hist(データ列, color='salmon')
横棒グラフをスラグレー色で描画する	plt.barh(データ列x, データ列y, color='slategray')
折れ線グラフの色をダークカーキに設定する	plt.plot(データ列x, データ列y, color='darkkhaki')
データフレームを複数の列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
耐火レンガ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='firebrick')
n割るn2の切り上げ	(n + n2 - 1) // n2
リストをランダムにシャッフルする	random.shuffle(aList)
偽陰性を避けたい指標を使う	sklearn.metrics.recall_score(正解データ列, 予測データ列)
データフレームのカラムの年	df[col].dt.year
散布図の右三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='r')
option: マーカーを三角に変更する	marker = '^'
散布図のダイアモンドマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='r')
日付時刻データの時間数	aDatetime.hour
イテラブルの各要素に対して、predicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
option: オレンジ色を使う	color = 'orange'
折れ線グラフの星マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='#800080')
サーモン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='salmon')
option: グラフの色を青緑に設定する	color = 'teal'
ダークグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkgray')
データフレームを各列と列の組み合わせ毎にグループ化して、個数を求める	df.groupby([column, column2], as_index=False).count()
文字列の左側からタブを取り除く	s.lstrip('\t')
横棒グラフの色をダークゴールデンロッドにする	plt.barh(データ列x, データ列y, color='darkgoldenrod')
ファイルから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
モジュールを検索するパス	sys.path
日付時刻データが何時か知る	aDatetime.hour
散布図をサーモン色で描画する	plt.scatter(データ列x, データ列y, color='salmon')
