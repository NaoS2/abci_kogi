nから無限にカウントダウンする	itertools.count(start=n, step=-1)
データフレームのカラムの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
棒グラフをライトイエロー色で描画する	plt.bar(データ列x, データ列y, color='lightyellow')
両端キューをタプルに変換する	tuple(deq)
オブジェクトは整数クラスか調べる	isinstance(obj, int)
ヒストグラムをインディアンレッド色で描画する	plt.hist(データ列, color='indianred')
赤いヒストグラムを描画する	plt.hist(データ列, color='r')
横棒グラフをスチールブルー色で描画する	plt.barh(データ列x, データ列y, color='steelblue')
nが一桁の数か調べる	0 <= n <= 9
option: マーカーの色をライトグレーにする	markerfacecolor = 'lightgray'
折れ線グラフに黒い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='k')
散布図をコーラル色で描画する	plt.scatter(データ列x, データ列y, color='coral')
ふたつの集合の積集合	aSet.intersection(aSet2)
折れ線グラフの大バツマーカーを黒くする	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='k')
option: マーカーをバツに変更する	marker = 'x'
ミディアムパープル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumpurple')
データフレームの標本標準偏差	df.std()
option: マーカーの色をフローラルホワイトにする	markerfacecolor = 'floralwhite'
暗い赤色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkred')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightslategrey')
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(データ列x, データ列y, color='palevioletred')
イテラブルの全順列	itertools.permutations(iterable)
散布図に三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^')
リストを中央値でビン分割する	pd.qcut(aList, 2)
Pythonインタプリタの実行ファイルの絶対パス	sys.executable
散布図を貝殻色で描画する	plt.scatter(データ列x, データ列y, color='seashell')
折れ線グラフの色をクリムゾンに設定する	plt.plot(データ列x, データ列y, color='crimson')
option: マーカーの色をダークマゼンタにする	markerfacecolor = 'darkmagenta'
折れ線グラフを青色で描画する	plt.plot(データ列x, データ列y, color='blue')
ライトイエロー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightyellow')
Pandasで、フォーマットfmtで文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
棒グラフをイエローグリーン色で描画する	plt.bar(データ列x, データ列y, color='yellowgreen')
データフレームを列によってグループ化して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
イエローグリーン色のヒストグラムを描画する	plt.hist(データ列, color='yellowgreen')
データフレームから型の列を抽出する	df.select_dtypes(ty)
現在のミリ秒	int(time.time() * 1000)
文字列が文字列より辞書順で後か調べる	s > s2
実数の自然対数	math.log(x)
シーグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='seagreen')
リストの重複を取り除く	sorted(set(aList), key=aList.index)
option: グラフの色をミディアムスレートブルーに設定する	color = 'mediumslateblue'
option: 読み込む行番号をnamesで指定する	usecols = names
グリッドを一点鎖線にする	plt.grid(linestyle='dashbot')
文字列の無限イテラブル	itertools.repeat(element)
ダークグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgray')
散布図の色を黄色にする	plt.scatter(データ列x, データ列y, color='yellow')
エラーを無視して文字列をバイト列に変換する	s.encode(errors='ignore')
文字列全体を大文字・小文字を無視して正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
黄色色の線グラフを描画する	plt.plot(データ列x, データ列y, color='yellow')
option: グラフの色を白に設定する	color = 'white'
データ列の出現頻度を可視化する	plt.hist(データ列)
option: グラフの色をロイヤルブルーに設定する	color = 'royalblue'
棒グラフをオールドレース色で描画する	plt.bar(データ列x, データ列y, color='oldlace')
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
ヒストグラムをリネン色で描画する	plt.hist(データ列, color='linen')
option: グラフの色をパパイヤウィップに設定する	color = 'papayawhip'
リストとリストについての散布図にrgbの丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', c=rgb)
データフレームのカラムが何時か見る	df[col].dt.hour
ファイルパスのセパレータ記号	os.sep
フローラルホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='floralwhite')
1からNまでの配列	np.arange(1, N+1)
ヒストグラムを赤くする	plt.hist(データ列, color='r')
nが奇数か調べる	n % 2 == 1
カウンタのユニークな項目を列挙する	list(aCounter)
横棒グラフをスラグレー色で描画する	plt.barh(データ列x, データ列y, color='slategray')
option: n番目のカラムをインデックスに設定する	index_col = n
棒グラフをダークグレー色で描画する	plt.bar(データ列x, データ列y, color='darkgray')
エンコーディング	sys.getdefaultencoding()
option: ミディアムアクアマリン色を使う	color = 'mediumaquamarine'
散布図の三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='b')
オブジェクトがあるクラスか調べる	isinstance(obj, クラス)
棒グラフを黒くする	plt.bar(データ列x, データ列y, color='k')
棒グラフをライトブルー色で描画する	plt.bar(データ列x, データ列y, color='lightblue')
シスル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='thistle')
横棒グラフの色をイエローグリーンにする	plt.barh(データ列x, データ列y, color='yellowgreen')
勾配ブースティング分類木を作る	model = sklearn.ensemble.GradientBoostingClassifier()
リストの要素をスワップする	aList[i], aList[j] = aList[j], aList[i]
横棒グラフをシーグリーン色で描画する	plt.barh(データ列x, データ列y, color='seagreen')
日付データと日付データの時間差が何秒か知る	(aDate - aDate2).total_seconds()
折れ線グラフをミディアムシアグリーン色で描画する	plt.plot(データ列x, データ列y, color='mediumseagreen')
ふたつのリストの積集合	list(set(aList) & set(aList2))
イテラブルからサンプリングする	random.sample(iterable)
モデルの当てはめを実行する	model.fit(説明変数, 目的変数)
棒グラフの色をデピンクにする	plt.bar(データ列x, データ列y, color='deeppink')
option: グラフの色をローングリーンに設定する	color = 'lawngreen'
option: 耐火レンガ色を使う	color = 'firebrick'
option: ダークオリーブグリーン色を使う	color = 'darkolivegreen'
オーキッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='orchid')
option: グラフの色をホットピンクに設定する	color = 'hotpink'
ディムグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='dimgrey')
折れ線グラフの星マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='*', markersize=2.0)
ベージュ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='beige')
文字列をプリントする	print(value)
散布図をネイビー色で描画する	plt.scatter(データ列x, データ列y, color='navy')
ユーザから入力される	input()
横棒グラフの色をプラムにする	plt.barh(データ列x, データ列y, color='plum')
散布図をドジャーブルー色で描画する	plt.scatter(データ列x, データ列y, color='dodgerblue')
リストとリストについての散布図にポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.')
x,y,zにそれぞれn,n2,n3を代入する	x, y, z = n, n2, n3
横棒グラフの色を黄色にする	plt.barh(データ列x, データ列y, color='yellow')
ダークマゼンタ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkmagenta')
ミディアムシアグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumseagreen')
option: ライトスチールブルー色を使う	color = 'lightsteelblue'
ヒストグラムの描画して、正規化する	plt.hist(データ列, density=True)
option: 読み込まないフッタをnに設定する	skipfooter = n
横棒グラフをトマト色で描画する	plt.barh(データ列x, データ列y, color='tomato')
折れ線グラフの左三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='r')
散布図に黒い大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X', c='k')
円グラフの特定の要素だけ切り出す	plt.pie(データ列, startangle=90, explode=[0, 0.3, 0])
データフレームのリストカラムの空文字を欠損値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
ブラック色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='black')
ヒストグラムをライトグリーン色で描画する	plt.hist(データ列, color='lightseagreen')
データフレームのリストカラムの欠損値を平均値で埋める	df[aList].fillna(df[aList].mean())
オレンジ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='orange')
パパイヤウィップ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='papayawhip')
棒グラフをアンティークホワイト色で描画する	plt.bar(データ列x, データ列y, color='antiquewhite')
数式の変数にnを代入する	e.subs(z, n)
データフレームのリストカラムの欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
グラフの色を色差別なくする	sns.set(pallete='colorblind')
乱数シードを初期化する	random.seed()
option: 欠損値は無視する	dropna = True
横棒グラフをリネン色で描画する	plt.barh(データ列x, データ列y, color='linen')
ダーク・スラテグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkslategrey')
棒グラフをパープル色で描画する	plt.bar(データ列x, データ列y, color='purple')
option: グラフの色をペルーに設定する	color = 'peru'
option: エンコーディングをEUCに設定する	encoding = 'euc_jp'
棒グラフの色をコーンズシルクにする	plt.bar(データ列x, データ列y, color='cornsilk')
ファイルをBOM付きで書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
ライトスレイグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightslategrey')
リストとリストについての散布図に文字列という凡例用のラベルを付ける	plt.scatter(データ列x, データ列y, label=s)
散布図をダークオレンジ色で描画する	plt.scatter(データ列x, データ列y, color='darkorange')
整数nのビット長	n.bit_length()
折れ線グラフの色をデピンクに設定する	plt.plot(データ列x, データ列y, color='deeppink')
列'A'と列'B'をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
散布図の色をパウダーブルーにする	plt.scatter(データ列x, データ列y, color='powderblue')
文字列リストを連結する	''.join(aStringList)
option: マーカーの色をスノーにする	markerfacecolor = 'snow'
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
横棒グラフの色をダークゴールデンロッドにする	plt.barh(データ列x, データ列y, color='darkgoldenrod')
横棒グラフをダークサーモン色で描画する	plt.barh(データ列x, データ列y, color='darksalmon')
スノー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='snow')
偽陽性を避けたい指標を使う	sklearn.metrics.precision_score(正解データ列, 予測データ列)
散布図をロイヤルブルー色で描画する	plt.scatter(データ列x, データ列y, color='royalblue')
ライム色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lime')
ヒストグラムの色をコーラルに設定する	plt.hist(データ列, color='coral')
折れ線グラフに青い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='b')
文字列中にひとつでも非アルファベットが含まれるか調べる	any(not c.isalpha() for c in s)
ヒストグラムをゴールデンロッド色で描画する	plt.hist(データ列, color='goldenrod')
折れ線グラフの色をパウダーブルーに設定する	plt.plot(データ列x, データ列y, color='powderblue')
散布図の色をシルバーにする	plt.scatter(データ列x, データ列y, color='silver')
ダークスレートブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkslateblue')
データフレームを関数の値によってグループ化する	df.groupby(関数)
スプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='springgreen')
データフレームのリストカラムの歪度	df[aList].kurt()
ヒストグラムをプラム色で描画する	plt.hist(データ列, color='plum')
散布図をペールグリーン色で描画する	plt.scatter(データ列x, データ列y, color='palegreen')
棒グラフの色をロイヤルブルーにする	plt.bar(データ列x, データ列y, color='royalblue')
文字列を全て小文字に変換する	s.lower()
折れ線グラフの左三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='#800080')
option: グラフの色をサドルブラウンに設定する	color = 'saddlebrown'
オーキッド色のヒストグラムを描画する	plt.hist(データ列, color='orchid')
散布図に黒い大バツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='k')
データフレームのカラムを丸める	df[col].round()
ダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D')
オブジェクトは辞書クラスか調べる	isinstance(obj, dict)
1からnまでの整数列	list(range(1, n+1))
option: マーカーの色をチョコレートにする	markerfacecolor = 'chocolate'
実数の正弦の逆数	math.asin(x)
配列を平坦化する	aArray.flatten()
パパイヤウィップ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='papayawhip')
スタッキングで回帰分析を行う	sklearn.ensemble.StackingRegressor()
option: ラベンダーブラッシュ色を使う	color = 'lavenderblush'
データフレームを列によってソートして、上位n件を取り出す	df.sort_values(columns).head(n)
リストの合計値	sum(aList)
データ列をビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データフレームの散布図をグループ化して縦横に並べる	sns.relplot(data=df, x='列名', y='列名', hue='カテゴリ列', col='カテゴリ列', row='カテゴリ列')
データフレームの列と列の相関行列	df[[column, column2]].corr()
ミディアムブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumblue')
ロバスト推定で回帰分析を行う	model = sklearn.linear_model.RANSACRegressor(random_state=0)
横棒グラフの色をダーク・スラテグレーにする	plt.barh(データ列x, データ列y, color='darkslategrey')
nまでの偶整数列	list(range(2, n, 2))
文字列をシアンでプリントする	print(f'\033[36m{value}\033[0m')
オブジェクトをイテラブルに変換する	iter(obj)
散布図の色をピンクにする	plt.scatter(データ列x, データ列y, color='pink')
文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
option: グラフの色をライムグリーンに設定する	color = 'limegreen'
日付データの年数	aDate.year
日付時刻データの月数	aDatetime.month
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
option: マーカーの色をスラグレーにする	markerfacecolor = 'slategrey'
実数の双曲線正弦	math.sinh(x)
プラットホームがLinuxか調べる	sys.platform.startswith('linux')
辞書の項目数	len(aDict)
rgbのダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D', c=rgb)
option: グラフの色をライトスレイグレーに設定する	color = 'lightslategray'
確率的勾配降下でクラス分類を行う	model = sklearn.linear_model.SGDClassifier()
option: スカイブルー色を使う	color = 'skyblue'
ミッドナイトブルー色のヒストグラムを描画する	plt.hist(データ列, color='midnightblue')
Pandasで、データフレームのカラムをインデックスにする	df.set_index(col, inplace=True)
シャルトリューズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='chartreuse')
散布図の大バツマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='X', markersize=2.0)
エクセルファイルファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
option: サドルブラウン色を使う	color = 'saddlebrown'
データ列を100の位で丸めて、整数型にする	ds.round(-2).astype(int)
折れ線グラフをディムグレー色で描画する	plt.plot(データ列x, データ列y, color='dimgray')
Pandasで、日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
イテラブルを無限に繰り返す	itertools.cycle(iterable)
ヒストグラムをラベンダーブラッシュ色で描画する	plt.hist(データ列, color='lavenderblush')
横棒グラフをオリーブ色で描画する	plt.barh(データ列x, データ列y, color='olive')
自然数の階乗	math.factorial(n)
散布図に黒い四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s', c='k')
散布図をグリーンイエロー色で描画する	plt.scatter(データ列x, データ列y, color='greenyellow')
実数の平方根	math.sqrt(x)
折れ線グラフの色をレモンシフォンに設定する	plt.plot(データ列x, データ列y, color='lemonchiffon')
文字列中の全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
リストとリストについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', c='k')
データフレームのリストカラムが正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
折れ線グラフをパウダーブルー色で描画する	plt.plot(データ列x, データ列y, color='powderblue')
折れ線グラフに青いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='b')
棒グラフの色をダークシアンにする	plt.bar(データ列x, データ列y, color='darkcyan')
データ列を箱ひげ図で描画する	plt.boxplot(データ列)
折れ線グラフの色をナバホホワイトに設定する	plt.plot(データ列x, データ列y, color='navajowhite')
部分的最小二乗回帰モデルを作る	model = sklearn.cross_decomposition.PLSRegression(n_components=10)
散布図に赤い大バツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='r')
整数nを十六進表現に変換する	hex(n)
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
空のタプル	()
ドジャーブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='dodgerblue')
散布図をラベンダーブラッシュ色で描画する	plt.scatter(データ列x, データ列y, color='lavenderblush')
データフレームのカラムが正規分布からどの程度、尖っているか見る	df[col].skew()
option: グラフの色をライトシアンに設定する	color = 'lightcyan'
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ファイルをバイナリモードでオープンする]	open(filepath, mode='rb')
棒グラフを黄色くする	plt.bar(データ列x, データ列y, color='y')
option: マーカーの色をシルバーにする	markerfacecolor = 'silver'
ヒストグラムの色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
横棒グラフの色をダークオーキッドにする	plt.barh(データ列x, データ列y, color='darkorchid')
option: グラフの色をグレーに設定する	color = 'grey'
文字列を白色にする	f'\033[37m{value}\033[0m'
棒グラフをローングリーン色で描画する	plt.bar(データ列x, データ列y, color='lawngreen')
最大値・最小値で整数乱数を生成する	random.randint(最小値, 最大値)
オリベドラブ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='olivedrab')
ヒストグラムをライトスレイグレー色で描画する	plt.hist(データ列, color='lightslategrey')
既存の配列を元に全要素が1の配列	np.ones_like(aArray)
両端キューの末尾から要素を取り除く	deq.pop()
year年の日付	datetime.date(year=year, month=1, day=1)
横棒グラフをバリーウッド色で描画する	plt.barh(データ列x, データ列y, color='burlywood')
ダークオレンジ色のヒストグラムを描画する	plt.hist(データ列, color='darkorange')
散布図に右三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='>')
日付時刻データををn分後に進める	aDatetime + datetime.timedelta(minutes=n)
ヒストグラムをカデットブルー色で描画する	plt.hist(データ列, color='cadetblue')
縦軸の最大・最小を変更する	plt.ylim(最小値, 最大値)
日付データをn週間前に戻す	aDate - datetime.timedelta(weeks=n)
集合から別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
散布図の右三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='>', markersize=2.0)
ヒストグラムの範囲を設定する	plt.hist(データ列, range=(start, end))
横棒グラフの色をゴールドにする	plt.barh(データ列x, データ列y, color='gold')
横棒グラフの色をダークオリーブグリーンにする	plt.barh(データ列x, データ列y, color='darkolivegreen')
イテラブルの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
日付データをn秒前に戻す	aDate - datetime.timedelta(seconds=n)
文字列を下線付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列x, データ列y, color='slategray')
ヒストグラムを青紫色で描画する	plt.hist(データ列, color='violet')
青紫色の線グラフを描画する	plt.plot(データ列x, データ列y, color='violet')
実数を整数に変換する	int(x)
リストの要素を昇順にソートする	sorted(aList, reverse=False)
現在が何秒か知る	datetime.date.today().second
スクリプトファイルと同じディレクトリのファイルのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
日付時刻データからn秒分、減算する	aDatetime - datetime.timedelta(seconds=n)
ゼロ埋めされた８ビット整数型の配列	np.zeros(要素数, dtype=np.int8)
青い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='b')
現在が何時か知る	datetime.date.today().hour
棒グラフをディムグレー色で描画する	plt.bar(データ列x, データ列y, color='dimgray')
option: カンマをセパレータで使う	sep = ','
データフレームを二つの列の値によってグループ化し、要約統計量を求める	df.groupby(['A', 'B']).describe()
バツ印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='x')
折れ線グラフをインディゴ色で描画する	plt.plot(データ列x, データ列y, color='indigo')
実数の指数	math.frexp(x)[1]
棒グラフの色をアイボリーにする	plt.bar(データ列x, データ列y, color='ivory')
エクセルファイルファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
横棒グラフをサーモン色で描画する	plt.barh(データ列x, データ列y, color='salmon')
文字列を部分文字列で二分し、前半の文字列を使う	s.partition(sub)[0]
棒グラフをライトゴールドロディイエロー色で描画する	plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')
横軸だけグリッド線	plt.grid(axis='x')
散布図をサンディーブラウン色で描画する	plt.scatter(データ列x, データ列y, color='sandybrown')
ミディアムシアグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumseagreen')
実数を切り下げて整数に変換する	math.floor(x)
折れ線グラフをカーキ色で描画する	plt.plot(データ列x, データ列y, color='khaki')
散布図の色をゴールデンロッドにする	plt.scatter(データ列x, データ列y, color='goldenrod')
散布図をカデットブルー色で描画する	plt.scatter(データ列x, データ列y, color='cadetblue')
ふたつの集合に共通する要素からなる集合	aSet.intersection(aSet2)
多次元尺度構成法を行う	model = sklearn.manifold.MSD(n_components=n)
カウンタの最頻出な項目	aCounter.most_common()[0]
パールゴールデンロッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='palegoldenrod')
棒グラフの色をライトグレーにする	plt.bar(データ列x, データ列y, color='lightgrey')
データフレームのカラムの最頻値	df[col].mode()
最大値・最小値の範囲で一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
散布図の色をダークグレーにする	plt.scatter(データ列x, データ列y, color='darkgrey')
イテラブルからn個、サンプリングする	random.sample(iterable, k=n)
配列の列ごとの合計値	np.sum(aArray, axis=0)
ディムグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='dimgrey')
文字列が部分文字列で終わるか調べる	s.endswith(sub)
棒グラフをブルーバイオレット色で描画する	plt.bar(データ列x, データ列y, color='blueviolet')
整数nの十六進表現	hex(n)
ロイヤルブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='royalblue')
文字列は全て印字できるか調べる	s.isprintable()
横棒グラフをマゼンタ色で描画する	plt.barh(データ列x, データ列y, color='magenta')
option: グラフの色をスノーに設定する	color = 'snow'
ゼロ埋めされた配列	np.zeros(要素数)
横棒グラフの色をロイヤルブルーにする	plt.barh(データ列x, データ列y, color='royalblue')
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(データ列x, データ列y, color='royalblue')
option: グラフの色をダークターコイズに設定する	color = 'darkturquoise'
散布図をアリスブルー色で描画する	plt.scatter(データ列x, データ列y, color='aliceblue')
単位正方行列	np.identity(n)
最適な位置に凡例を表示する	plt.legend(loc='best')
データフレームを列でグループ化して、それぞれのグループごとの件数を知る	df.groupby(column).size()
棒グラフの色をマゼンタにする	plt.bar(データ列x, データ列y, color='magenta')
JSON形式の文字列をデータに変換する	json.loads(jsonString)
データフレームのカラムが何分か見る	df[col].dt.minute
折れ線グラフのポイントマーカーを赤くする	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='r')
横棒グラフをダークカーキ色で描画する	plt.barh(データ列x, データ列y, color='darkkhaki')
データ列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
カウンタから辞書を引く	aCounter.subtract(aDict)
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
文字列内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
折れ線グラフをゴールド色で描画する	plt.plot(データ列x, データ列y, color='gold')
方程式の解	sympy.solve(e)
横棒グラフの色をライトシアンにする	plt.barh(データ列x, データ列y, color='lightcyan')
実行時に標準出力がパイプか調べる	not sys.stdout.isatty()
フクシア色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='fuchsia')
二つの配列を列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
ホットピンク色のヒストグラムを描画する	plt.hist(データ列, color='hotpink')
散布図をホワイトスモーク色で描画する	plt.scatter(データ列x, データ列y, color='whitesmoke')
折れ線グラフの下三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='b')
散布図の右三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='#800080')
棒グラフをダークスラテグレー色で描画する	plt.bar(データ列x, データ列y, color='darkslategray')
棒グラフの色をダークスラテグレーにする	plt.bar(データ列x, データ列y, color='darkslategray')
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列x, データ列y, color='slategrey')
棒グラフをライトグリーン色で描画する	plt.bar(データ列x, データ列y, color='lightseagreen')
ケンドール相関係数でデータフレームの相関行列	df.corr(method='kendall')
リストとリストについて散布図を描画して、マーカーを大バツに設定する	plt.plot(データ列x, データ列y, marker='X')
文字列中に部分文字列が含まれるか調べる	sub in s
赤い点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='r')
ファイルをSJISでオープンする]	open(filepath, encoding='shift_jis')
option: ヘッダをnamesに設定する	header = names
横棒グラフをゴールデンロッド色で描画する	plt.barh(データ列x, データ列y, color='goldenrod')
option: シーグリーン色を使う	color = 'seagreen'
文字列全体が正規表現に大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
JSONファイルのファイル入力を読み込んで、dataとする	data = json.load(fin)
赤い大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X', c='r')
折れ線グラフをパパイヤウィップ色で描画する	plt.plot(データ列x, データ列y, color='papayawhip')
option: グラフの色をロージーブラウンに設定する	color = 'rosybrown'
タプルの末尾	aTuple[-1]
データ列を三つ並べてヒストグラムにする	plt.hist([データ列, データ列, データ列], color=['b', 'r', 'g'])
ヒストグラムの線の種類を一点鎖線に設定する	plt.hist(データ列, linestyle='dashbot')
option: グラフの色をブルーバイオレットに設定する	color = 'blueviolet'
新しいリッジ回帰モデルを作る	model = sklearn.linear_model.Ridge(alpha=正則化項)
実数を万の位で丸める	round(x, -4)
ホットピンク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='hotpink')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(データ列x, データ列y, color='deepskyblue')
year年month月day日の日付時刻	datetime.datetime(year=year, month=month, day=day)
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
データフレームが正規分布からどの程度、歪んでいるか見る	df.kurt()
折れ線グラフのバツマーカーを赤くする	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='r')
カウンタを辞書で更新する	aCounter.update(aDict)
折れ線グラフをライトグリーン色で描画する	plt.plot(データ列x, データ列y, color='lightgreen')
折れ線グラフを半透明にする	plt.plot(データ列x, データ列y, alpha=0.5)
横棒グラフをスラグレー色で描画する	plt.barh(データ列x, データ列y, color='slategrey')
ペールグリーン色のヒストグラムを描画する	plt.hist(データ列, color='palegreen')
リストとリストについての散布図に赤い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', c='r')
整数乱数で要素を埋めた配列	np.random.randint(開始値, 終了値, N)
カウンタ同士で積集合	aCounter & aCounter2
横棒グラフの色をライトグリーンにする	plt.barh(データ列x, データ列y, color='lightseagreen')
ダークシアン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkcyan')
文字列を最後の部分文字列で分けたときの後半の文字列	s.rpartition(sub)[-1]
横棒グラフの色をディープスカイブルーにする	plt.barh(データ列x, データ列y, color='deepskyblue')
option: グラフの色をタンに設定する	color = 'tan'
データフレームのそれぞれのグループごとの最小値	df.groupby(column).min()
データフレームのカラムの中に文字列があるか調べる	df[col].isin([value])
棒グラフの色をパープルにする	plt.bar(データ列x, データ列y, color='purple')
標準入力を使う	sys.stdin
散布図をミディアムスプリンググリーン色で描画する	plt.scatter(データ列x, データ列y, color='mediumspringgreen')
両端キューのstart番目からend番目の部分要素	collections.deque(itertools.islice(deq, start, end))
ビスク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='bisque')
文字列を部分文字列で分けたときの前半の文字列	s.partition(sub)[0]
折れ線グラフの色をモカシンに設定する	plt.plot(データ列x, データ列y, color='moccasin')
ロイヤルブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='royalblue')
データフレームをJSONLファイルに保存する	df.to_excel(filename)
ヒストグラムをバリーウッド色で描画する	plt.hist(データ列, color='burlywood')
紺色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkblue')
データフレームのインデックスをリセットする	df.reset_index()
散布図に青い三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='b')
折れ線グラフの色をターコイズに設定する	plt.plot(データ列x, データ列y, color='turquoise')
ブラック色のヒストグラムを描画する	plt.hist(データ列, color='black')
リストとリストについての散布図に赤い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', c='r')
ダークゴールデンロッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgoldenrod')
棒グラフをグレー色で描画する	plt.bar(データ列x, データ列y, color='grey')
棒グラフをディムグレー色で描画する	plt.bar(データ列x, データ列y, color='dimgrey')
配列を中央値でビン分割する	pd.qcut(aArray, 2)
棒グラフをライトスチールブルー色で描画する	plt.bar(データ列x, データ列y, color='lightsteelblue')
実数の整数部	math.modf(x)[1]
散布図をローングリーン色で描画する	plt.scatter(データ列x, データ列y, color='lawngreen')
文字列をマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
サンディーブラウン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='sandybrown')
折れ線グラフを赤い点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='r')
アクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='aquamarine')
数式を部分分数に展開する	sympy.apart(e)
データ列を二つ並べてヒストグラムにする	plt.hist([データ列, データ列], color=['b', 'r'])
ファイルのファイルサイズ	os.path.get_size(filepath)
プラム色のヒストグラムを描画する	plt.hist(データ列, color='plum')
Pandasで、エポック秒のデータフレームのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
散布図の丸マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='r')
データフレームの要約統計量	df.describe()
折れ線グラフをコーンフラワーブルー色で描画する	plt.plot(データ列x, データ列y, color='cornflowerblue')
option: グラフの色をトマトに設定する	color = 'tomato'
ヒストグラムの色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
散布図の色をオレンジレッドにする	plt.scatter(データ列x, データ列y, color='orangered')
ダークオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='darkorchid')
ベージュ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='beige')
データフレームの指定された列を配列として抽出する	df[column].values
プラットフォームの符号付き整数の最大値	sys.maxsize
配列を2次元1行に変形する	aArray.reshape(1, -1)
データフレームから列名を複数指定して選択する	df[columns]
縦棒グラフを描画して、ラベルを左寄せする	plt.bar(ラベル列, データ列, align='edge')
データフレームを列によって昇順にソートする	df.sort_values(by=column, ascending=True)
ヒストグラムの色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
横棒グラフをマルーン色で描画する	plt.barh(データ列x, データ列y, color='maroon')
散布図の色をホワイトスモークにする	plt.scatter(データ列x, データ列y, color='whitesmoke')
折れ線グラフの透明度を設定する	plt.plot(データ列x, データ列y, alpha=0.5)
グレー色のヒストグラムを描画する	plt.hist(データ列, color='grey')
棒グラフをカーキ色で描画する	plt.bar(データ列x, データ列y, color='khaki')
0からnまでの整数列	list(range(n+1))
ライトブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightblue')
散布図をラベンダー色で描画する	plt.scatter(データ列x, データ列y, color='lavender')
option: 値を置き換える	inplace = True
散布図の色をミディアムシアグリーンにする	plt.scatter(データ列x, データ列y, color='mediumseagreen')
カーネル密度による分布図を描画する	sns.kdeplot(x='列名', hue='カテゴリ列', data=df)
データフレームを関数の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
散布図の色をスプリンググリーンにする	plt.scatter(データ列x, データ列y, color='springgreen')
散布図の色をスカイブルーにする	plt.scatter(データ列x, データ列y, color='skyblue')
多次元データをt-SNEでパステル調に次元に次元削減する	sklearn.manifold.TSNE(n_components=N).fit_transform(多次元データ)
横棒グラフをピンク色で描画する	plt.barh(データ列x, データ列y, color='pink')
横軸の目盛の表示を変更する	plt.xticks(目盛りの値リスト)
辞書の全項目をクリアする	aDict.clear()
散布図のマーカーの大きさをnに設定する	plt.scatter(データ列x, データ列y, s=n)
ネイビー色のヒストグラムを描画する	plt.hist(データ列, color='navy')
データフレームのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
棒グラフの色をダークサーモンにする	plt.bar(データ列x, データ列y, color='darksalmon')
rgbのポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.', c=rgb)
赤色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='red')
データ列をカテゴリデータに変換する	ds.astype(object)
列をキーにして二つのデータフレームを結合する	pd.merge(df, df2, on=column)
rgbの丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o', c=rgb)
折れ線グラフの色をゲインズボロに設定する	plt.plot(データ列x, データ列y, color='gainsboro')
日付時刻データからn週間分、減算する	aDatetime - datetime.timedelta(weeks=n)
平均線付き箱ひげ図を描画する	plt.boxplot(データ列, meanline=True)
データ列の散布図を描画する	plt.scatter(データ列x, データ列y)
散布図をシアン色で描画する	plt.scatter(データ列x, データ列y, color='cyan')
データフレームの中の欠損値の合計を数える	df.isna().sum()
ランダムフォレストでクラス分類を行う	model = sklearn.ensemble.RandomForestClassifier()
イテラブルを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
option: 説明変数を事前に正規化する	normalize = True
円グラフにラベルを付ける	plt.pie(データ列, startangle=90, labels=ラベル列)
横棒グラフの色をサンディーブラウンにする	plt.barh(データ列x, データ列y, color='sandybrown')
ケンドール相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
日付時刻データが何年か知る	aDatetime.year
ファイルのファイル名	os.path.basename(filepath)
ヒストグラムをミスティローズ色で描画する	plt.hist(データ列, color='mistyrose')
棒グラフの色をオリーブにする	plt.bar(データ列x, データ列y, color='olive')
データ列の欠損値を平均値で埋める	ds.fillna(ds.mean())
文字列リストをsepを区切りとして連結する	sep.join(aStringList)
ヒストグラムをブルーバイオレット色で描画する	plt.hist(データ列, color='blueviolet')
シスル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='thistle')
折れ線グラフの色をスカイブルーに設定する	plt.plot(データ列x, データ列y, color='skyblue')
グラフの横軸を対数に変更する	plt.xscale('log')
散布図の色をロージーブラウンにする	plt.scatter(データ列x, データ列y, color='rosybrown')
option: マーカーの色をハニーデューにする	markerfacecolor = 'honeydew'
棒グラフの色をライトスカイブルーにする	plt.bar(データ列x, データ列y, color='lightskyblue')
棒グラフの色をライトシアンにする	plt.bar(データ列x, データ列y, color='lightcyan')
棒グラフの色をゴールデンロッドにする	plt.bar(データ列x, データ列y, color='goldenrod')
集合のイミュータブル版	frozenset(aSet)
ヒストグラムの色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
option: ダイアモンドマーカーを描画する	marker = 'D'
ヒストグラムの色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
nを否定する	not n
行列の値を変更する	aArray[行番号, 列番号] = 指定の値
文字列中の部分文字列をカウントする	s.count(sub)
データフレームのインデックスの一覧	df.index
データフレームから指定された二つの列を抽出する	df[[column, column2]]
散布図を紺碧色で描画する	plt.scatter(データ列x, データ列y, color='azure')
ミディアムシアグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumseagreen')
黒い散布図を描画する	plt.scatter(データ列x, データ列y, color='k')
2を底とする実数の対数	math.log2(x)
ガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
散布図の色をアクアマリンにする	plt.scatter(データ列x, データ列y, color='aquamarine')
棒グラフをデピンク色で描画する	plt.bar(データ列x, データ列y, color='deeppink')
グリッド線を白くする	plt.grid(color='w')
正規分布にしたがってランダムにデータ列を生成する	scipy.stats.norm.rvs(loc=平均値, scale=標準偏差, size=データ数)
データ列の散らばりを可視化する	plt.scatter(データ列x, データ列y)
日付データが月曜日か調べる	aDate.weekday() == 0
nが2で割り切れるか調べる	n % 2 == 0
棒グラフの色をゴールドにする	plt.bar(データ列x, データ列y, color='gold')
散布図の色をスレートブルーにする	plt.scatter(データ列x, データ列y, color='slateblue')
折れ線グラフをマルーン色で描画する	plt.plot(データ列x, データ列y, color='maroon')
日付時刻データををn日後に進める	aDatetime + datetime.timedelta(days=n)
option: ダイアモンドマーカーを使う	marker = 'D'
正規分布による確率密度関数	scipy.stats.norm.pdf(x, loc=平均値, scale=標準偏差)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
ライトスレイグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightslategray')
ヒストグラムをダークオーキッド色で描画する	plt.hist(データ列, color='darkorchid')
横棒グラフをダークマゼンタ色で描画する	plt.barh(データ列x, データ列y, color='darkmagenta')
折れ線グラフの色をライトサーモンに設定する	plt.plot(データ列x, データ列y, color='lightsalmon')
n進文字列を整数に変換する	int(s, n)
option: グラフの色をカデットブルーに設定する	color = 'cadetblue'
箱ひげ図を描画して、平均値を加える	plt.boxplot(データ列, showmeans=True)
option: グラフの色をディムグレーに設定する	color = 'dimgray'
データフレームの中の列を等量でビン数nでビン分割する	pd.qcut(df[col], n)
文字列を緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
ヒストグラムの色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
日付データををn週間後に進める	aDate + datetime.timedelta(weeks=n)
棒グラフの色をダークバイオレットにする	plt.bar(データ列x, データ列y, color='darkviolet')
データフレームのカラムが何月か見る	df[col].dt.month
全要素を０で初期化した符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
option: マーカーの色をライトゴールドロディイエローにする	markerfacecolor = 'lightgoldenrodyellow'
文字列中にひとつでも非英数字が含まれるか調べる	any(not c.isalnum() for c in s)
折れ線グラフの色を青緑に設定する	plt.plot(データ列x, データ列y, color='teal')
実数の逆双曲線余弦	math.acosh(x)
リストをランダムにシャッフルする	random.shuffle(aList)
空文字	''
文字列のの開始位置から終了位置までの間に部分文字列がいくつか含まれるか調べる	s.count(sub, start, end)
文字列が平仮名か調べる	('ぁ' <= ch <= 'ん')
ヒストグラムをコーンズシルク色で描画する	plt.hist(データ列, color='cornsilk')
ヒストグラムを白色で描画する	plt.hist(データ列, color='white')
option: タン色を使う	color = 'tan'
折れ線グラフをダークサーモン色で描画する	plt.plot(データ列x, データ列y, color='darksalmon')
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
ペールグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='palegreen')
文字列中にひとつでも非数字が含まれるか調べる	any(not c.isdigit() for c in s)
散布図に青いマーカーを描画する	plt.scatter(データ列x, データ列y, markerfacecolor='b')
option: ブール型を使う	dtype = np.int32
ディムグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='dimgrey')
リストとリストについての散布図にバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x')
散布図のダイアモンドマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='k')
文字列中に部分文字列が含まれないか調べる	sub not in s
切片なしの線形回帰モデルを作る	model = sklearn.linear_model.LinearRegression(fit_intercept=False)
貝殻色の散布図を描画する	plt.scatter(データ列x, データ列y, color='seashell')
散布図のマーカーをポイントにする	plt.scatter(データ列x, データ列y, marker='.')
折れ線グラフを実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid')
データフレームのリストカラムを10の位で丸めて、整数型にする	df[aList].round(-1).astype(int)
ホワイトスモーク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='whitesmoke')
最大最小から配列	np.linspace(最小値, 最大値, 要素数)
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列x, データ列y, color='dimgrey')
n個の整数列	list(range(n))
折れ線グラフのポイントマーカーを青くする	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='b')
option: UTF8を使う	encoding = 'utf-8'
折れ線グラフに大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X')
ライトグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgrey')
option: マーカーの色をアクアマリンにする	markerfacecolor = 'aquamarine'
実数の絶対値	math.fabs(x)
棒グラフの色をスプリンググリーンにする	plt.bar(データ列x, データ列y, color='springgreen')
辞書のコピー	dict(aDict)
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
プログラムのファイルの名前	sys.argv[0]
淡いピンク色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightpink')
option: マーカーの色をコーンズシルクにする	markerfacecolor = 'cornsilk'
本日の曜日を整数で使う	datetime.datetime.today().weekday()
option: マルーン色を使う	color = 'maroon'
折れ線グラフに青い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='b')
散布図の色をミディアムスプリンググリーンにする	plt.scatter(データ列x, データ列y, color='mediumspringgreen')
文字列の右側から部分文字列を取り除く	s.rstrip(sub)
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='r')
三角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='^')
シアン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cyan')
データフレームのカラムが何曜日か見る	df[col].dt.weekday_name
異なる列をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
ダークカーキ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkkhaki')
イテラブルから配列を作る	np.array(iterable)
データフレームのリストカラムを100の位で丸める	df[aList].round(-2)
ファイルを書き込みモードでオープンする]	open(filepath, mode='w')
集合から全ての要素を取り除く	aSet.clear()
ヒストグラムをミディアムターコイズ色で描画する	plt.hist(データ列, color='mediumturquoise')
折れ線グラフの丸マーカーを黒くする	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='k')
棒グラフの色を貝殻にする	plt.bar(データ列x, データ列y, color='seashell')
ダークスレートブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkslateblue')
ペールグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='palegreen')
データフレームのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
option: マーカーの色をオレンジレッドにする	markerfacecolor = 'orangered'
リストとリストについて散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(データ列x, データ列y, label=s)
nがn2の倍数か調べる	n % n2 == 0
散布図をダーク・スラテグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkslategrey')
配列にはいくつ要素があるか調べる	aArray.size
データフレームの欠損値をxで埋める	df.fillna(x)
option: マーカーの色をライトシアンにする	markerfacecolor = 'lightcyan'
貝殻色の線グラフを描画する	plt.plot(データ列x, データ列y, color='seashell')
折れ線グラフをゴールデンロッド色で描画する	plt.plot(データ列x, データ列y, color='goldenrod')
数式を方程式として解く	sympy.solve(e)
棒グラフをシスル色で描画する	plt.bar(データ列x, データ列y, color='thistle')
ヒストグラムをトマト色で描画する	plt.hist(データ列, color='tomato')
日付時刻データををn時間後に進める	aDatetime + datetime.timedelta(hours=n)
散布図の色をミディアムパープルにする	plt.scatter(データ列x, データ列y, color='mediumpurple')
アリスブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='aliceblue')
棒グラフを青紫色で描画する	plt.bar(データ列x, データ列y, color='violet')
カウンタを低頻出方から列挙する	aCounter.most_common()[::-1]
散布図のマーカーを丸にする	plt.scatter(データ列x, データ列y, marker='o')
option: ミディアムターコイズ色を使う	color = 'mediumturquoise'
ヒストグラムをカラーマップで描画する	"plt.hist(データ列x, color=plt.get_cmap(""Spectral""))"
ヒストグラムをライムグリーン色で描画する	plt.hist(データ列, color='limegreen')
ライトイエロー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightyellow')
ファイルを読み込みモードでオープンする]	open(filepath, mode='r')
データ列の中にいくつ文字列があるか数える	ds.isin([value]).sum()
ミントクリーム色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mintcream')
代数計算を使う	import sympy
データフレームを複数の列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
辞書からキーの値をエラーなく得る	aDict.get(key, None)
横棒グラフの色をネイビーにする	plt.barh(データ列x, データ列y, color='navy')
option: マーカーの色をラベンダーブラッシュにする	markerfacecolor = 'lavenderblush'
ヒストグラムの色を貝殻に設定する	plt.hist(データ列, color='seashell')
option: 大バツマーカーを使う	marker = 'X'
データフレームのリストカラムの欠損値を最小値で埋める	df[aList].fillna(df[aList].min())
データフレームを各列毎にグループ化して、列の分散を求める	df.groupby(column)[column2].var()
データフレームのカラムの時	df[col].dt.hour
カーキ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='khaki')
文字列がn回繰り返すイテラブル	itertools.repeat(element, n)
コーンズシルク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cornsilk')
ユーザの入力を整数として受け取る	int(input())
option: マーカーの色をスチールブルーにする	markerfacecolor = 'steelblue'
option: 文字コードtextを使う	encoding = text
ヒストグラムをホワイトスモーク色で描画する	plt.hist(データ列, color='whitesmoke')
option: 青紫色を使う	color = 'violet'
リッジ回帰分析の準備をする	model = sklearn.linear_model.Ridge(alpha=正則化項)
タプルのn番目の	aTuple[n]
ヒストグラムの色をカーキに設定する	plt.hist(データ列, color='khaki')
option: マーカーの色をロージーブラウンにする	markerfacecolor = 'rosybrown'
TSVファイルを読み込む	pd.read_csv(filename, sep='\t')
グラフの背景色を暗くする	sns.set(style='darkgrid')
タプルの中の最小値	min(aTuple)
横棒グラフの色を赤にする	plt.barh(データ列x, データ列y, color='red')
行列の行列式	np.linalg.det(aArray)
nをn2倍にする	n *= n2
シアン色のヒストグラムを描画する	plt.hist(データ列, color='cyan')
シエナ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='sienna')
淡いピンク色色のヒストグラムを描画する	plt.hist(データ列, color='lightpink')
二つの文字列をスラッシュで区切ってプリントする	print(value, value2, sep='/')
折れ線グラフをスカイブルー色で描画する	plt.plot(データ列x, データ列y, color='skyblue')
既存のファイルをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
オブジェクトのクラス	type(obj)
横棒グラフをグレー色で描画する	plt.barh(データ列x, データ列y, color='grey')
文字列の先頭だけ大文字化する	s.capitalize()
横棒グラフの色をミントクリームにする	plt.barh(データ列x, データ列y, color='mintcream')
xの印字可能な文字列	ascii(x)
カウンタを集合に変換する	set(aCounter)
option: マーカーの色をトマトにする	markerfacecolor = 'tomato'
棒グラフをチョコレート色で描画する	plt.bar(データ列x, データ列y, color='chocolate')
データフレームを関数の値によってグループ化し、要約統計量を求める	df.groupby(関数).describe()
リストの長さ	len(aList)
要素ひとつのタプル	(element,)
リストとリストについての散布図にrgbの四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', c=rgb)
折れ線グラフをパレットトルコイズ色で描画する	plt.plot(データ列x, データ列y, color='paleturquoise')
データフレームの中の列を等量でn個にビン分割する	pd.qcut(df[col], n)
ローングリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lawngreen')
マルーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='maroon')
実数の複素数	complex(x)
実数の正接の逆数	math.atan(x)
パウダーブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='powderblue')
データフレームの列の名前をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームを10の位で丸めて、整数型にする	df.round(-1).astype(int)
アリスブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='aliceblue')
散布図に青い四角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='b')
option: マーカーの色をベージュにする	markerfacecolor = 'beige'
option: マーカーの色をミディアムスレートブルーにする	markerfacecolor = 'mediumslateblue'
ゼロ埋めされた三二ビット整数型の配列	np.zeros(要素数, dtype=np.int16)
option: マーカーの色をグレーにする	markerfacecolor = 'grey'
棒グラフをダークシアグリーン色で描画する	plt.bar(データ列x, データ列y, color='darkseagreen')
K最近傍法で回帰分析を行う	model = sklearn.neighbors.KNeighborsRegressor(n_neighbors=5)
ライトシアン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightcyan')
パールゴールデンロッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='palegoldenrod')
データ列の各データが何回出現するか見る	ds.value_counts()
大バツ印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='X')
データフレームの数値をまとめて丸める	df.round()
データフレームのリストカラムの最頻値	df[aList].mode()
データフレームのポイントプロットを描画する	sns.pointplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
イテラブルをカウントして、カウンタを更新する	aCounter.update(iterable)
折れ線グラフの色をサーモンに設定する	plt.plot(データ列x, データ列y, color='salmon')
赤い下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v', c='r')
データフレームをCSVファイルでJSONLファイルに保存する	df.to_csv(filename)
グレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='gray')
ヒストグラムの色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
option: 線を太くする	linewidth = 3.0
本日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
バリーウッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='burlywood')
プラットフォームのコードポイントの最大値	sys.maxunicode
日付データが日曜日か調べる	aDate.weekday() == 6
ライトサーモン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightsalmon')
折れ線グラフの色をシルバーに設定する	plt.plot(データ列x, データ列y, color='silver')
データ列の欠損値を最小値で埋める	ds.fillna(ds.min())
リストとリストについての散布図に黒い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', c='k')
データフレームのカラムの欠損値を最小値で埋める	df[col].fillna(df[col].min())
横棒グラフの色をライトグリーンにする	plt.barh(データ列x, データ列y, color='lightgreen')
折れ線グラフの色をネイビーに設定する	plt.plot(データ列x, データ列y, color='navy')
文字列中のタブ文字を空白に置き換える	s.expandtabs(tabsize=n)
横棒グラフの色をスプリンググリーンにする	plt.barh(データ列x, データ列y, color='springgreen')
パレットトルコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='paleturquoise')
文字列を黒色にする	f'\033[30m{value}\033[0m'
横棒グラフの色をパパイヤウィップにする	plt.barh(データ列x, データ列y, color='papayawhip')
リストとリストについての散布図に黒い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', c='k')
教師データでモデルを学習する	model.fit(説明変数, 目的変数)
ヒストグラムをミディアムスレートブルー色で描画する	plt.hist(データ列, color='mediumslateblue')
散布図に黒いダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D', c='k')
ヒストグラムをサーモン色で描画する	plt.hist(データ列, color='salmon')
10を底とする実数の対数	math.log10(x)
option: 線の種類を実線に設定する	linestyle = 'solid'
日付時刻データからn日分、減算する	aDatetime - datetime.timedelta(days=n)
データ列の欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
option: 箱ひげ図を水平方向にする	vert = False
単位行列	np.eye(行数, 列数)
option: マーカーの色をモカシンにする	markerfacecolor = 'moccasin'
横棒グラフをライトサーモン色で描画する	plt.barh(データ列x, データ列y, color='lightsalmon')
横棒グラフをライムグリーン色で描画する	plt.barh(データ列x, データ列y, color='limegreen')
横棒グラフを黒くする	plt.barh(データ列x, データ列y, color='k')
折れ線グラフを一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot')
タプルのn番目からn2番目までの部分	aTuple[n:n2]
option: グラフの色をピーチパフに設定する	color = 'peachpuff'
配列をビン数nでビン分割する	pd.cut(aArray, n)
ヒストグラムの色をデピンクに設定する	plt.hist(データ列, color='deeppink')
棒グラフをスラグレー色で描画する	plt.bar(データ列x, データ列y, color='slategrey')
散布図をフクシア色で描画する	plt.scatter(データ列x, データ列y, color='fuchsia')
ミッドナイトブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='midnightblue')
整数nの十六進文字列	hex(n)[2:]
option: 青色を使う	color = 'blue'
文字列内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
棒グラフをレモンシフォン色で描画する	plt.bar(データ列x, データ列y, color='lemonchiffon')
option: グラフの色をスプリンググリーンに設定する	color = 'springgreen'
折れ線グラフに赤いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='r')
option: グラフの色を青緑に設定する	color = 'teal'
実数を小数点以下で丸める	round(x, n)
集合が空でないか調べる	len(aSet) != 0
nがn2以上か調べる	n >= n2
棒グラフをトマト色で描画する	plt.bar(データ列x, データ列y, color='tomato')
xが一桁の正の数か調べる	0 <= x <= 9
散布図をダークグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkgray')
折れ線グラフの色をコーラルに設定する	plt.plot(データ列x, データ列y, color='coral')
リストとリストについて散布図を描画して、マーカーを丸に設定する	plt.plot(データ列x, データ列y, marker='o')
要素が集合に含まれないか調べる	element not in aSet
リストに文字列を追加する	aList.append(element)
青い散布図を描画する	plt.scatter(データ列x, データ列y, color='b')
xの小数点以下'4'桁までをプリントする	print(':.4f'.format(x))
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
散布図をパールゴールデンロッド色で描画する	plt.scatter(データ列x, データ列y, color='palegoldenrod')
散布図の色をスラグレーにする	plt.scatter(データ列x, データ列y, color='slategray')
折れ線グラフを黄色色で描画する	plt.plot(データ列x, データ列y, color='yellow')
コマンドの第一引数を知る	sys.argv[1]
タプル内の要素が全て真か調べる	all(aTuple)
黒い星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*', c='k')
オーキッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='orchid')
折れ線グラフをスプリンググリーン色で描画する	plt.plot(データ列x, データ列y, color='springgreen')
カテゴリデータ列をワン・ホットベクトル化する	sklearn.preprocessing.OneHotEncoder(sparse=False).fit_transform(データ列)
散布図の色をカーキにする	plt.scatter(データ列x, データ列y, color='khaki')
リストの要素を逆順にする	aList[::-1]
配列の分散	np.var(aArray)
ダークグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgreen')
散布図を黒くする	plt.scatter(データ列x, データ列y, color='k')
両端キューの末尾に要素を追加する	deq.append(element)
ヒストグラムをオリベドラブ色で描画する	plt.hist(データ列, color='olivedrab')
スピアマン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
棒グラフの色をrgbに設定する	plt.bar(ラベル列, データ列, color=rgb)
データフレームのリストカラムの空文字をドロップする	df[aList].replace('', np.nan).dropna()
option: アリスブルー色を使う	color = 'aliceblue'
文字列をカンマで区切って、列挙する	s.split(',')
ピンク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='pink')
option: マーカーの色をディープスカイブルーにする	markerfacecolor = 'deepskyblue'
折れ線グラフをサンディーブラウン色で描画する	plt.plot(データ列x, データ列y, color='sandybrown')
Pandasで、dateStringを日付データに変換する	pd.to_datetime(dateString)
散布図の色をピーチパフにする	plt.scatter(データ列x, データ列y, color='peachpuff')
散布図の丸マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='o', markersize=2.0)
散布図の色をベージュにする	plt.scatter(データ列x, データ列y, color='beige')
配列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
ライトグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightseagreen')
散布図の色をラベンダーブラッシュにする	plt.scatter(データ列x, データ列y, color='lavenderblush')
ファイルとfilenameを結合する	os.path.join(filepath, filename)
option: 箱ひげ図に平均を加える	showmeans = False
リストとリストについて散布図を描画して、マーカーを星に設定する	plt.plot(データ列x, データ列y, marker='*')
option: グラフの色をライトブルーに設定する	color = 'lightblue'
ダークグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkgreen')
スタッキングでクラス分類を行う	sklearn.ensemble.StackingClassifier()
横棒グラフの色をナバホホワイトにする	plt.barh(データ列x, データ列y, color='navajowhite')
リストとリストについての散布図に大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X')
モカシン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='moccasin')
ヒストグラムをグレー色で描画する	plt.hist(データ列, color='gray')
ダークカーキ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkkhaki')
リストにリストを追加する	aList.extend(aList2)
option: ライトゴールドロディイエロー色を使う	color = 'lightgoldenrodyellow'
横棒グラフの色を紺碧にする	plt.barh(データ列x, データ列y, color='azure')
option: マーカーを大バツに変更する	marker = 'X'
オプションで、標準出力を出力にする	file = sys.stdout
xのハッシュ値	hash(x)
option: マーカーの色をピンクにする	markerfacecolor = 'pink'
バリーウッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='burlywood')
データフレームを複数の列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
散布図の色を赤にする	plt.scatter(データ列x, データ列y, color='red')
マゼンタ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='magenta')
散布図をタン色で描画する	plt.scatter(データ列x, データ列y, color='tan')
文字列からformatのパターンで日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
横棒グラフをダークグレー色で描画する	plt.barh(データ列x, データ列y, color='darkgrey')
現在の作業ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
文字列の先頭から部分文字列を探す	s.find(sub)
青色のヒストグラムを描画する	plt.hist(データ列, color='blue')
ペルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='peru')
二つのデータ列を箱ひげ図にする	plt.boxplot([データ列, データ列])
シルバー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='silver')
折れ線グラフの星マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='*', markeredgewidth=2.5)
タプルをミュータブルにする	list(aTuple)
n個の集まりからk個重複なく選ぶ方法	math.comb(n, k)
散布図に青い大バツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='b')
ファイルを追加モードでオープンして]、fとする	f = open(filepath, mode='a')
横棒グラフをミディアムスレートブルー色で描画する	plt.barh(データ列x, データ列y, color='mediumslateblue')
option: マーカーの色をピーチパフにする	markerfacecolor = 'peachpuff'
データ列の文字列長を列として使う	ds.str.len()
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='gray')
棒グラフの色をネイビーにする	plt.bar(データ列x, データ列y, color='navy')
option: マーカーの色をミディアムオーキッドにする	markerfacecolor = 'mediumorchid'
名前付きタプルを定義する	C = collections.namedtuple('クラス名', プロパティ名)
option: 茶色色を使う	color = 'brown'
ライトスチールブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightsteelblue')
xを整数に変換する	int(x)
実数とyの斜辺	math.hypot(x, y)
モデルの予測値と実測値を散布図に描く	plt.scatter(目的変数, model.predict(説明変数))
異なるn個のものからk個選ぶ場合の数	math.comb(n, k)
散布図の四角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='b')
nがn2より大きいか調べる	n > n2
option: バイナリ書き込みモードを使う	mode = 'wb'
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(データ列x, データ列y, color='lightskyblue')
散布図の色をパールバイオレットレッドにする	plt.scatter(データ列x, データ列y, color='palevioletred')
文字列をセパレータで区切って、列挙する	s.split(sep)
ディムグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='dimgray')
スレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='slateblue')
カウンタの全数	aCounter.total()
ホットピンク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='hotpink')
データフレームのカラムのタイムゾーンを文字列に設定する	df[col].tz_convert(s)
ファイルからファイル名を使う	os.path.basename(filepath)
辞書をチェーンマップに変換する	collections.ChainMap(aDict)
ふたつの集合のいずれか一方だけの集合	aSet.symmetric_difference(aSet2)
棒グラフをダークサーモン色で描画する	plt.bar(データ列x, データ列y, color='darksalmon')
折れ線グラフの星マーカーを黒くする	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='k')
散布図に赤いダイアモンドマーカーを描画する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='r')
データフレームの中の列を中央値でビン分割する	pd.qcut(df[col], 2)
データフレームの最頻値	df.mode()
グリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='green')
ヒストグラムの色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
名前付きタプルを辞書に変換する	aNamedTupleObject._asdict()
折れ線グラフを色付きの点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='#800080')
散布図のダイアモンドマーカーを青くする	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='b')
ミディアムスプリンググリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumspringgreen')
ロバスト回帰モデルを作る	model = sklearn.linear_model.RANSACRegressor(random_state=0)
ヒストグラムの色をビスクに設定する	plt.hist(データ列, color='bisque')
option: ドジャーブルー色を使う	color = 'dodgerblue'
エクセルファイルファイルをデータフレームとして読み込む	pd.read_excel(filename)
option: パールゴールデンロッド色を使う	color = 'palegoldenrod'
折れ線グラフをナバホホワイト色で描画する	plt.plot(データ列x, データ列y, color='navajowhite')
ダークターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='darkturquoise')
option: グラフの色をダークシアグリーンに設定する	color = 'darkseagreen'
option: マーカーの色をダークグレーにする	markerfacecolor = 'darkgrey'
文字列をSJISでバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
グラフの縦横を設定する	plt.figure(figsize=(横幅, 高さ))
プラム色の線グラフを描画する	plt.plot(データ列x, データ列y, color='plum')
データフレームの数値をまとめて小数点以下n桁で丸める	df.round(n)
要素が集合のメンバーでないか調べる	element not in aSet
折れ線グラフの色をダークオレンジに設定する	plt.plot(データ列x, データ列y, color='darkorange')
折れ線グラフのマーカーをバツにする	plt.plot(データ列x, データ列y, marker='x')
文字列が全て英数字か調べる	s.isalnum()
option: ビスク色を使う	color = 'bisque'
ファイルをEUCでオープンする]	open(filepath, encoding='euc_jp')
option: 書き込みモードに設定する	mode = 'w'
数式の変数についてのn階微分を求める	sympy.diff(e, z, n)
多次元データを特異値分解で濃く次元に次元削減する	sklearn.decomposition.TruncatedSVD(n_components=二).fit_transform(多次元データ)
折れ線グラフを青い実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='b')
option: ゴーストホワイト色を使う	color = 'ghostwhite'
タプルを逆順にする	aTuple[::-1]
破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed')
折れ線グラフのバツマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='x', markeredgewidth=2.5)
辞書のキー一覧	list(aDict)
星印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='*')
日付データををn秒後に進める	aDate + datetime.timedelta(seconds=n)
異なる列をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
散布図の星マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='*', markersize=2.0)
青い実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='b')
棒グラフの色をスチールブルーにする	plt.bar(データ列x, データ列y, color='steelblue')
xの絶対値	abs(x)
year年month月day日の日付	datetime.date(year=year, month=month, day=day)
nプラスn2	n + n2
黄色い散布図を描画する	plt.scatter(データ列x, データ列y, color='y')
日付時刻データをISO形式の文字列に変換する	aDatetime.isoformat()
ふたつの集合が集合と交わりを持たないか調べる	aSet.isdisjoint(aSet2)
ヒストグラムをターコイズ色で描画する	plt.hist(データ列, color='turquoise')
データフレームのリストカラムの値を正規表現patternでまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
JSONを使う	import json
データフレームの値をValueMapでまとめて置き換える	df.replace(ValueMap)
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
ヒストグラムをインディゴ色で描画する	plt.hist(データ列, color='indigo')
ダークサーモン色のヒストグラムを描画する	plt.hist(データ列, color='darksalmon')
棒グラフをミディアムスレートブルー色で描画する	plt.bar(データ列x, データ列y, color='mediumslateblue')
散布図の右三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='>', markeredgewidth=2.5)
データ列の欠損値をxに設定する	ds.fillna(x)
折れ線グラフのバツマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='x', markersize=2.0)
赤色のヒストグラムを描画する	plt.hist(データ列, color='red')
ダークグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkgreen')
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(データ列x, データ列y, color='darkolivegreen')
リストを四分位数ごとにビン分割する	pd.qcut(aList, 4)
棒グラフをミディアムバイオレットレッド色で描画する	plt.bar(データ列x, データ列y, color='mediumvioletred')
棒グラフをネイビー色で描画する	plt.bar(データ列x, データ列y, color='navy')
ヒストグラムをディープスカイブルー色で描画する	plt.hist(データ列, color='deepskyblue')
ファイル名がJSONファイルか調べる	filename.endswith('.json')
option: コロンをセパレータで使う	sep = ':'
グリーンイエロー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='greenyellow')
赤い左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<', c='r')
ディムグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='dimgrey')
グレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='grey')
折れ線グラフの色をライトコーラルに設定する	plt.plot(データ列x, データ列y, color='lightcoral')
ライトスチールブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightsteelblue')
散布図の四角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='k')
ミディアムパープル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumpurple')
ゲインズボロ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='gainsboro')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='gray')
横軸の目盛を整数のみにする	plt.xticks(np.arange(最小値, 最大値, 間隔))
ダークシアン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkcyan')
データフレームの欠損値を中央値に設定する	df.fillna(df.median())
全ての空白文字	string.whitespace
散布図のマーカーを四角にする	plt.scatter(データ列x, データ列y, marker='s')
ミッドナイトブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='midnightblue')
折れ線グラフを描画する	plt.plot(データ列x, データ列y)
整数nの二進文字列	bin(n)[2:]
JSONLファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
nとn2の和	n + n2
サンディーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='sandybrown')
データフレームの欠損値を直後の値に設定する	df.fillna(method='bfill')
スチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='steelblue')
パープル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='purple')
エラーを出力する	sys.stderr
バイトオーダを知る	sys.byteorder
ライム色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lime')
実数をn乗する	x ** n
ヒストグラムをミッドナイトブルー色で描画する	plt.hist(データ列, color='midnightblue')
棒グラフの色をピーチパフにする	plt.bar(データ列x, データ列y, color='peachpuff')
option: フクシア色を使う	color = 'fuchsia'
データフレームをタブ区切りでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
行列の行列積	np.matmul(aArray, aArray2)
散布図にrgbのポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.', c=rgb)
棒グラフをミディアムオーキッド色で描画する	plt.bar(データ列x, データ列y, color='mediumorchid')
散布図をライトスチールブルー色で描画する	plt.scatter(データ列x, データ列y, color='lightsteelblue')
実行時の標準出力の出力先がターミナルか調べる	sys.stdout.isatty()
パレットトルコイズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='paleturquoise')
文字列の先頭で正規表現にASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
棒グラフの色を耐火レンガにする	plt.bar(データ列x, データ列y, color='firebrick')
nとn2の論理和	n | n2
横棒グラフをライトイエロー色で描画する	plt.barh(データ列x, データ列y, color='lightyellow')
データフレームから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
データフレームの末尾n行を抽出する	df.tail(n)
横棒グラフを描画して、ラベルを中央寄せする	plt.barh(ラベル列, データ列, align='center')
ヒストグラムをダークグリーン色で描画する	plt.hist(データ列, color='darkgreen')
日付時刻データの時刻	aDatetime.time()
スノー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='snow')
折れ線グラフのマーカーを三角にする	plt.plot(データ列x, データ列y, marker='^')
横棒グラフをダークシアグリーン色で描画する	plt.barh(データ列x, データ列y, color='darkseagreen')
ヒストグラムをミディアムアクアマリン色で描画する	plt.hist(データ列, color='mediumaquamarine')
ミディアムスレートブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumslateblue')
散布図の色を茶色にする	plt.scatter(データ列x, データ列y, color='brown')
横棒グラフをオーキッド色で描画する	plt.barh(データ列x, データ列y, color='orchid')
option: クリムゾン色を使う	color = 'crimson'
実数の二乗	x ** 2
文字列全体が正規表現にマッチするか見る	re.fullmatch(pattern, s)
散布図の色をスノーにする	plt.scatter(データ列x, データ列y, color='snow')
ヒストグラムの色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
nからn2を引く	n - n2
ヒストグラムをモカシン色で描画する	plt.hist(データ列, color='moccasin')
コーンズシルク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cornsilk')
折れ線グラフの色をスノーに設定する	plt.plot(データ列x, データ列y, color='snow')
散布図の大バツマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='k')
グラフをポスター用に設定する	sns.set(context='poster')
データフレームのn行目を削除する	df.drop(n, axis=0)
散布図にrgbの下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v', c=rgb)
ダークマゼンタ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkmagenta')
フォレストグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='forestgreen')
棒グラフの色をドジャーブルーにする	plt.bar(データ列x, データ列y, color='dodgerblue')
散布図に青い下三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='b')
option: 配列のデータ型を指定する	dtype = np.int
バリーウッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='burlywood')
既存の配列を元に全要素が0の配列	np.zeros_like(aArray)
option: マーカーの色を白にする	markerfacecolor = 'white'
ヒストグラムをスラグレー色で描画する	plt.hist(データ列, color='slategray')
nの各桁の総和	sum(map(int, str(n)))
option: ペールグリーン色を使う	color = 'palegreen'
散布図をターコイズ色で描画する	plt.scatter(データ列x, データ列y, color='turquoise')
行列の列	aArray[:, 列番号]
平均と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
散布図をライトコーラル色で描画する	plt.scatter(データ列x, データ列y, color='lightcoral')
文字列の中の正規表現による全てのマッチを使う	re.findall(pattern, s)
option: ディムグレー色を使う	color = 'dimgray'
ヒストグラムを淡いピンク色色で描画する	plt.hist(データ列, color='lightpink')
リストとリストについての散布図にrgbのダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', c=rgb)
棒グラフの色をアクアにする	plt.bar(データ列x, データ列y, color='aqua')
横棒グラフをダークバイオレット色で描画する	plt.barh(データ列x, データ列y, color='darkviolet')
データフレームをグループ化し、それぞれの列に対し最小値を求める	df.groupby(column)[column2].min()
数式の平方根を求める	sympy.sqrt(e)
ディムグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='dimgray')
散布図に黒い下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v', c='k')
棒グラフの色をラベンダーブラッシュにする	plt.bar(データ列x, データ列y, color='lavenderblush')
散布図の色をダークスラテグレーにする	plt.scatter(データ列x, データ列y, color='darkslategray')
ハニーデュー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='honeydew')
ヒストグラムの色をシエナに設定する	plt.hist(データ列, color='sienna')
グラフにグリッド線を入れる	plt.grid(True)
八進文字列を整数に変換する	int(s, 8)
ヒストグラムの色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
グレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='grey')
リスト内の要素が少なくともひとつ真か調べる	any(aList)
折れ線グラフの色をイエローグリーンに設定する	plt.plot(データ列x, データ列y, color='yellowgreen')
nをn2で割った余りをnに代入する	n %= n2
折れ線グラフの色をカデットブルーに設定する	plt.plot(データ列x, データ列y, color='cadetblue')
折れ線グラフのダイアモンドマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='D', markeredgewidth=2.5)
配列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
option: ブルーバイオレット色を使う	color = 'blueviolet'
文字列の中の大文字・小文字を無視して正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
散布図をミディアムパープル色で描画する	plt.scatter(データ列x, データ列y, color='mediumpurple')
文字列をトリムする	s.strip()
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
option: グラフの色を淡いピンク色に設定する	color = 'lightpink'
ヒストグラムを黄色くする	plt.hist(データ列, color='y')
散布図に青いダイアモンドマーカーを描画する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='b')
シルバー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='silver')
Pandasで、データフレームのカラムを日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
アクア色の線グラフを描画する	plt.plot(データ列x, データ列y, color='aqua')
マルーン色のヒストグラムを描画する	plt.hist(データ列, color='maroon')
散布図に赤いマーカーを描画する	plt.scatter(データ列x, データ列y, markerfacecolor='r')
散布図に赤い丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o', c='r')
文字列を全て大文字に変換する	s.upper()
両端キューから最初の要素を取り除く	deq.remove(element)
数式の展開を行う	sympy.expand(e)
散布図に黒い右三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='k')
トマト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='tomato')
折れ線グラフの色をチョコレートに設定する	plt.plot(データ列x, データ列y, color='chocolate')
散布図の色を小麦色にする	plt.scatter(データ列x, データ列y, color='wheat')
option: アクアマリン色を使う	color = 'aquamarine'
両端キューの大きさ	len(deq)
文字列内にひとつでもアスキー文字が含まれるか調べる	any(c.isascii() for c in s)
option: グラフの種類を実線に設定する	linestyle = 'solid'
osモジュールをインポートする	import os
フクシア色の散布図を描画する	plt.scatter(データ列x, データ列y, color='fuchsia')
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
折れ線グラフをドジャーブルー色で描画する	plt.plot(データ列x, データ列y, color='dodgerblue')
ゲインズボロ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='gainsboro')
棒グラフをホワイトスモーク色で描画する	plt.bar(データ列x, データ列y, color='whitesmoke')
色付きの破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='#800080')
棒グラフの色をシアンにする	plt.bar(データ列x, データ列y, color='cyan')
散布図の色をサーモンにする	plt.scatter(データ列x, データ列y, color='salmon')
辞書をインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
散布図をスノー色で描画する	plt.scatter(データ列x, データ列y, color='snow')
オリベドラブ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='olivedrab')
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
茶色色の線グラフを描画する	plt.plot(データ列x, データ列y, color='brown')
データフレームのリストカラムのpercent分位数	df[aList].quantile(percent/100)
日付時刻データにn日分、加算する	aDatetime + datetime.timedelta(days=n)
option: マーカーの色をフクシアにする	markerfacecolor = 'fuchsia'
ヒストグラムをダークスラテグレー色で描画する	plt.hist(データ列, color='darkslategray')
ヒストグラムをライトスレイグレー色で描画する	plt.hist(データ列, color='lightslategray')
折れ線グラフをスチールブルー色で描画する	plt.plot(データ列x, データ列y, color='steelblue')
ホールドアウト法を使う	X_train, X_test, y_train, y_test = train_test_split(説明変数, 目的変数, test_size=0.3)
散布図に赤いバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x', c='r')
ヒストグラムの色を青紫に設定する	plt.hist(データ列, color='violet')
データ列を縦棒グラフにする	plt.bar(ラベル列, データ列)
ガウス過程で回帰分析を行う	model = sklearn.gaussian_process.GaussianProcessRegressor()
グリッドを実線にする	plt.grid(linestyle='solid')
ブランチドアーモンド色のヒストグラムを描画する	plt.hist(データ列, color='blanchedalmond')
option: 線の種類を一点鎖線に設定する	linestyle = 'dashbot'
データフレームの列を型に変換する	df[col] = df[col].astype(ty)
文字を文字コードに変換する	ord(ch)
横棒グラフをオリベドラブ色で描画する	plt.barh(データ列x, データ列y, color='olivedrab')
集合をタプルに変換する	tuple(aSet)
option: マーカーをポイントに変更する	marker = '.'
option: マーカーの色をダークグレーにする	markerfacecolor = 'darkgray'
ゴールド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='gold')
ヒストグラムをライトシアン色で描画する	plt.hist(データ列, color='lightcyan')
データフレームの列の種類	df.info()
折れ線グラフをミントクリーム色で描画する	plt.plot(データ列x, データ列y, color='mintcream')
ダーク・スラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategrey')
文字列がリストの要素か調べる	element in aList
文字列中の部分文字列を文字列に置き換える	s.replace(sub, newsub)
option: グラフの色をライトスチールブルーに設定する	color = 'lightsteelblue'
スラグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='slategrey')
第一引数で指定されたファイルの名前	sys.argv[1]
全要素を０で初期化した行列	np.zeros(行数, 列数)
辞書のキーと値を入れ替える	{v: k for k, v in aDict.items()}
データフレームの列に重複があれば、マスクする	df.duplicated(subset=column)
ヒストグラムの色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
ライトグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightseagreen')
option: ミントクリーム色を使う	color = 'mintcream'
Pandasで、フォーマットfmtでデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
散布図の下三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='v', markersize=2.0)
ふたつの集合が集合と互いに素か調べる	aSet.isdisjoint(aSet2)
文字列を改行で分割し、文字列リストに変換する	s.splitlines()
散布図をライトイエロー色で描画する	plt.scatter(データ列x, データ列y, color='lightyellow')
option: グレー色を使う	color = 'grey'
日付データが日付データより前か調べる	aDate < aDate2
グラフの描画で濃くカラーパレットを使う	sns.set(pallete='deep')
棒グラフの色をピンクにする	plt.bar(データ列x, データ列y, color='pink')
デピンク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='deeppink')
文字列の左側から空白を取り除く	s.lstrip(' ')
横棒グラフを青紫色で描画する	plt.barh(データ列x, データ列y, color='violet')
散布図の色をカデットブルーにする	plt.scatter(データ列x, データ列y, color='cadetblue')
グラフの描画で色差別なくカラーパレットを使う	sns.set(pallete='colorblind')
散布図の色をグリーンにする	plt.scatter(データ列x, データ列y, color='green')
ファイルが存在するか調べる	os.path.exists(filepath)
数式の微分を求める	sympy.diff(e)
ライトグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightgray')
データフレームのリストカラムの中にある文字列と文字列の合計を数える	df[aList].isin([value, value2]).sum()
グラフの描画で淡くカラーパレットを使う	sns.set(pallete='muted')
パールゴールデンロッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='palegoldenrod')
グラフのサイズを設定する	plt.figure(figsize=(横幅, 高さ))
ミディアムアクアマリン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumaquamarine')
オーキッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='orchid')
option: マーカーの色を青緑にする	markerfacecolor = 'teal'
ふたつの集合の差集合	aSet.difference(aSet2)
ファイルにxを文字列に変換して書き込む	f.write(str(x))
データ列を10の位で丸めて、整数型にする	ds.round(-1).astype(int)
折れ線グラフに赤い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='r')
グラフのフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
散布図をブラック色で描画する	plt.scatter(データ列x, データ列y, color='black')
散布図の色をドジャーブルーにする	plt.scatter(データ列x, データ列y, color='dodgerblue')
色付きの点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='#800080')
行列の逆行列	np.linalg.inv(aArray)
配列をビン数nでビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
リネン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='linen')
データフレームの列の名前一覧で指定された列を削除する	df.drop(columns, axis=1)
日付時刻データが日付時刻データより前か調べる	aDatetime < aDatetime2
スラグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='slategray')
option: ダークサーモン色を使う	color = 'darksalmon'
本日の年数	datetime.datetime.today().year
要素∉集合	element not in aSet
グラフ中の文字化けを防ぐ	sns.set(font='IPAexGothic')
折れ線グラフの下三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='#800080')
横棒グラフをライトスレイグレー色で描画する	plt.barh(データ列x, データ列y, color='lightslategrey')
配列をビン分割する	pd.cut(aArray, aList)
折れ線グラフをコーンズシルク色で描画する	plt.plot(データ列x, データ列y, color='cornsilk')
ガウス過程でクラス分類を行う	model = sklearn.gaussian_process.GaussianProcessClassifier()
青紫色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='violet')
折れ線グラフをダークマゼンタ色で描画する	plt.plot(データ列x, データ列y, color='darkmagenta')
既存のファイルをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
option: グラフの色をダークグレーに設定する	color = 'darkgray'
半透明の点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', alpha=0.5)
option: グラフの色をミディアムパープルに設定する	color = 'mediumpurple'
横棒グラフの色をスラグレーにする	plt.barh(データ列x, データ列y, color='slategrey')
プログラムの実行を強制的に終了する	sys.exit()
実数に実数を加える	x + y
パールゴールデンロッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='palegoldenrod')
散布図をコーンズシルク色で描画する	plt.scatter(データ列x, データ列y, color='cornsilk')
文字列の先頭で大文字・小文字を無視して正規表現にマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
日付データが日付データと同時か調べる	aDate == aDate2
option: スプリンググリーン色を使う	color = 'springgreen'
二つのデータフレームを横方向にマージする	pd.merge(df, df2)
リストとリストについての散布図に下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v')
横棒グラフの色をゲインズボロにする	plt.barh(データ列x, データ列y, color='gainsboro')
折れ線グラフをホワイトスモーク色で描画する	plt.plot(データ列x, データ列y, color='whitesmoke')
散布図の右三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='r')
レベッカパープル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='rebeccapurple')
ヒストグラムの線の種類を破線に設定する	plt.hist(データ列, linestyle='dashed')
ヒストグラムをミディアムブルー色で描画する	plt.hist(データ列, color='mediumblue')
データフレームの中にある文字列と文字列の合計を数える	df.isin([value, value2]).sum()
option: 降順にする	ascending = False
データフレームをロジスティック回帰付き散布図にする	sns.regplot(x='列名', y='列名', data=df, logistic=True)
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
オブジェクトのオブジェクト識別子	id(obj)
グリーンイエロー色のヒストグラムを描画する	plt.hist(データ列, color='greenyellow')
option: 線の種類を破線に設定する	linestyle = 'dashed'
option: マーカーの色をダークターコイズにする	markerfacecolor = 'darkturquoise'
ファイルを絶対パスに変換する	os.path.abspath(filepath)
最大長nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
グラフを画像ファイルとして保存する	plt.savefig('foo.png')
option: ブランチドアーモンド色を使う	color = 'blanchedalmond'
棒グラフの色をトマトにする	plt.bar(データ列x, データ列y, color='tomato')
折れ線グラフの色をローングリーンに設定する	plt.plot(データ列x, データ列y, color='lawngreen')
option: グラフの色をダークスラテグレーに設定する	color = 'darkslategray'
棒グラフの色をミディアムシアグリーンにする	plt.bar(データ列x, データ列y, color='mediumseagreen')
折れ線グラフに青い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='b')
モジュールを検索するパスにディレクトリを追加する	sys.path.append(dir)
オブジェクトはリストクラスか調べる	isinstance(obj, list)
xを浮動小数点数型に変換する	float(x)
データフレームのカラムのpercent分位数	df[col].quantile(percent/100)
二つの文字列をタブで区切ってプリントする	print(value, value2, sep='\t')
文字列を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
データフレームの散布図をグループ化して横に並べる	sns.relplot(data=df, x='列名', y='列名', hue='カテゴリ列', col='カテゴリ列')
データフレームの列を説明変数にする	説明変数 = df[['列名', '列名2']]
散布図の色をライトスカイブルーにする	plt.scatter(データ列x, データ列y, color='lightskyblue')
散布図に青い丸マーカーを描画する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='b')
ミディアムスプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumspringgreen')
散布図に黒い右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>', c='k')
最初のコマンド引数	sys.argv[1]
横棒グラフの色をダークシアンにする	plt.barh(データ列x, データ列y, color='darkcyan')
折れ線グラフの色をオールドレースに設定する	plt.plot(データ列x, データ列y, color='oldlace')
グラフの用途を論文に設定する	sns.set(context='paper')
ヒストグラムをブランチドアーモンド色で描画する	plt.hist(データ列, color='blanchedalmond')
データフレームの全カラムを散布図で可視化する	sns.pairplot(df)
データフレームから指定された列を抽出する	df[[column]]
棒グラフをスラグレー色で描画する	plt.bar(データ列x, データ列y, color='slategray')
nとn2の積	n * n2
ロージーブラウン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='rosybrown')
折れ線グラフの色をラベンダーに設定する	plt.plot(データ列x, データ列y, color='lavender')
コーラル色のヒストグラムを描画する	plt.hist(データ列, color='coral')
棒グラフをモカシン色で描画する	plt.bar(データ列x, データ列y, color='moccasin')
グラフの色を明るくする	sns.set(pallete='bright')
バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x')
散布図の星マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='r')
nが2で割り切れないか調べる	n % 2 == 1
option: 右三角マーカーを描画する	marker = '>'
棒グラフの色をライムにする	plt.bar(データ列x, データ列y, color='lime')
散布図に青いバツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='b')
横棒グラフの色をライトスカイブルーにする	plt.barh(データ列x, データ列y, color='lightskyblue')
リストとリストについての散布図に赤いバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', c='r')
xが1、もしくは2か調べる	x == 1 or x == 2
数式を展開する	sympy.expand(e)
散布図をオリベドラブ色で描画する	plt.scatter(データ列x, データ列y, color='olivedrab')
option: グラフの色をチョコレートに設定する	color = 'chocolate'
棒グラフをペールグリーン色で描画する	plt.bar(データ列x, データ列y, color='palegreen')
ユニークな要素ごとの頻度	np.unique(aArray, return_counts=True)
リストとリストについて散布図を描画して、三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='^', c=rgb)
ファイルから読み込みストリームをオープンして]、fとする	f = open(filepath, mode='r')
Pythonパスの一覧	sys.path
option: タブをセパレータで使う	sep = '\t'
xとyの商と余りを同時に求める	divmod(x, y)
データ列の曜日の名前	ds.dt.weekday_name
データフレームのカラムを散布図にする	sns.scatterplot(data=df, x='列名', y='列名')
散布図をダークマゼンタ色で描画する	plt.scatter(データ列x, データ列y, color='darkmagenta')
option: スラグレー色を使う	color = 'slategray'
全ての数字	string.digits
ビスク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='bisque')
オブジェクトは集合クラスか調べる	isinstance(obj, set)
グリッドの線の種類を一点鎖線に変更する	plt.grid(linestyle='dashbot')
散布図の色をバリーウッドにする	plt.scatter(データ列x, データ列y, color='burlywood')
データ列を円グラフにする	plt.pie(データ列, startangle=90)
横棒グラフの色をダークターコイズにする	plt.barh(データ列x, データ列y, color='darkturquoise')
デピンク色の線グラフを描画する	plt.plot(データ列x, データ列y, color='deeppink')
データフレームの列がリストに含まれる行を抽出する	df[df[column].isin(aList)]
ピーチパフ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='peachpuff')
線形回帰分析の準備をする	model = sklearn.linear_model.LinearRegression()
コーラル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='coral')
nからn2の値を引いてnに代入する	n -= n2
散布図をバリーウッド色で描画する	plt.scatter(データ列x, データ列y, color='burlywood')
大バツ印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='X')
データフレームを各列毎にグループ化して、列の平均値を求める	df.groupby(column)[column2].mean()
新しいロジスティック回帰モデルを作る	model = sklearn.linear_model.LogisticRegression()
散布図をリネン色で描画する	plt.scatter(データ列x, データ列y, color='linen')
ヒストグラムをディムグレー色で描画する	plt.hist(データ列, color='dimgray')
棒グラフの色をミディアムブルーにする	plt.bar(データ列x, データ列y, color='mediumblue')
列'A'と列'B'をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
オブジェクトは浮動小数点数クラスか調べる	isinstance(obj, float)
要素が辞書の値として含まれているか調べる	element in aDict.values()
配列をリストを境界値としてビン分割する	pd.cut(aArray, aList)
散布図に赤い星マーカーを描画する	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='r')
データフレームの欠損値を直後の値で埋める	df.fillna(method='bfill')
データフレームのリストカラムの欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
文字列中から正規表現に大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
折れ線グラフの色をアクアに設定する	plt.plot(データ列x, データ列y, color='aqua')
散布図をミディアムアクアマリン色で描画する	plt.scatter(データ列x, データ列y, color='mediumaquamarine')
散布図の左三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='<', markeredgewidth=2.5)
ゼロ埋めされた行列	np.zeros(行数, 列数)
データフレームから重複を残さず、削除する	df.drop_duplicates(keep=False)
日付時刻データの秒数	aDatetime.second
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
リネン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='linen')
データ列の第一四分位数	ds.quantile(0.25)
両端キューのn番目に要素を挿入する	deq.insert(n, element)
ヒストグラムをダークオレンジ色で描画する	plt.hist(データ列, color='darkorange')
データ列を等量でn個にビン分割する	pd.qcut(ds, n)
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列x, データ列y, color='mediumorchid')
折れ線グラフをバリーウッド色で描画する	plt.plot(データ列x, データ列y, color='burlywood')
option: EUCを使う	encoding = 'euc_jp'
イテラブルとイテラブルをペアリングする	itertools.zip_longest(iterable, iterable2)
配列を等量でn個にビン分割する	pd.qcut(aArray, n)
option: コーラル色を使う	color = 'coral'
配列を2次元1列に変形する	aArray.reshape(-1, 1)
文字列中の小文字を大文字に変換する	s.upper()
データ列の空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
ディープスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='deepskyblue')
文字列は全て十進数字か調べる	s.isdecimal()
三つのデータフレームを横方向に連結する	pd.concat([df, df2, df3], axis=1)
散布図の色をダーク・スラテグレーにする	plt.scatter(データ列x, データ列y, color='darkslategrey')
赤い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='r')
横棒グラフをペールグリーン色で描画する	plt.barh(データ列x, データ列y, color='palegreen')
データフレームの欠損値を平均値で埋める	df.fillna(df.mean())
散布図の色をディープスカイブルーにする	plt.scatter(データ列x, データ列y, color='deepskyblue')
option: グラフの色をレベッカパープルに設定する	color = 'rebeccapurple'
リストから配列を作る	np.array(aList)
浮動小数点数の最大値	sys.float_info.max
文字列をASCII限定として正規表現で分割する	re.split(pattern, s, flags=re.ASCI)
データフレームのヒストグラム付き散布図を描画する	sns.jointplot(x='列名', y='列名', data=df)
コーンズシルク色のヒストグラムを描画する	plt.hist(データ列, color='cornsilk')
ゴールド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='gold')
データフレームの中の列をリストを境界値としてビン分割する	pd.cut(df[col], aList)
エポック秒を日付時刻に変換する	datetime.datetime.fromtimestamp(timestamp)
ファイルをクローズする	f.close()
option: イエローグリーン色を使う	color = 'yellowgreen'
カウンタからイテラブルをカウントして引く	aCounter.subtract(iterable)
クラス分類のF値を求める	sklearn.metrics.f1_score(正解データ列, 予測データ列)
横棒グラフを白色で描画する	plt.barh(データ列x, データ列y, color='white')
棒グラフの色をゴーストホワイトにする	plt.bar(データ列x, データ列y, color='ghostwhite')
日付データからn日分、減算する	aDate - datetime.timedelta(days=n)
棒グラフをダークシアン色で描画する	plt.bar(データ列x, データ列y, color='darkcyan')
データフレームの中の欠損値を削除する	df.dropna()
option: グラフの色を茶色に設定する	color = 'brown'
モデルを学習する	model.fit(説明変数, 目的変数)
リストの末尾から要素をポップする	aList.pop()
ヒストグラムの色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
option: ゲインズボロ色を使う	color = 'gainsboro'
パーセプトロンでクラス分類を行う	model = sklearn.neural_network.MLPClassifier(hidden_layer_sizes=(10, 10))
日付時刻データと日付時刻データの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
耐火レンガ色のヒストグラムを描画する	plt.hist(データ列, color='firebrick')
option: バツマーカーを描画する	marker = 'x'
xを論理値に変換する	bool(x)
タプルの先頭を取り除く	aTuple[1:]
二つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
データ列の推移を折れ線グラフにする	plt.plot(range(len(データ列)), データ列)
ヒストグラムの線の種類を点線に設定する	plt.hist(データ列, linestyle='dotted')
ゴーストホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='ghostwhite')
横棒グラフの色をパープルにする	plt.barh(データ列x, データ列y, color='purple')
棒グラフをミディアムシアグリーン色で描画する	plt.bar(データ列x, データ列y, color='mediumseagreen')
未初期化の配列	np.empty(要素数, dtype=np.int)
折れ線グラフの色をトマトに設定する	plt.plot(データ列x, データ列y, color='tomato')
折れ線グラフをローングリーン色で描画する	plt.plot(データ列x, データ列y, color='lawngreen')
折れ線グラフの色を小麦色に設定する	plt.plot(データ列x, データ列y, color='wheat')
横棒グラフをダークゴールデンロッド色で描画する	plt.barh(データ列x, データ列y, color='darkgoldenrod')
ファイルに文字列を書き込む	f.write(s)
横棒グラフの色をブラックにする	plt.barh(データ列x, データ列y, color='black')
グラフを論文用に設定する	sns.set(context='paper')
ラベンダーブラッシュ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lavenderblush')
棒グラフをスカイブルー色で描画する	plt.bar(データ列x, データ列y, color='skyblue')
カテゴリデータ列を連番に変換する	sklearn.preprocessing.LabelEncoder().fit_transform(データ列)
要素が集合のメンバーか調べる	element in aSet
スカイブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='skyblue')
横棒グラフをミディアムシアグリーン色で描画する	plt.barh(データ列x, データ列y, color='mediumseagreen')
ヒストグラムをゲインズボロ色で描画する	plt.hist(データ列, color='gainsboro')
折れ線グラフをライトシアン色で描画する	plt.plot(データ列x, データ列y, color='lightcyan')
option: マーカーの色をブラックにする	markerfacecolor = 'black'
散布図の色をライトサーモンにする	plt.scatter(データ列x, データ列y, color='lightsalmon')
タン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='tan')
option: ライトグレー色を使う	color = 'lightgrey'
リストとリストについて散布図を描画して、バツマーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='x', c=rgb)
ミントクリーム色のヒストグラムを描画する	plt.hist(データ列, color='mintcream')
イエローグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='yellowgreen')
リストをビン数nでビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
棒グラフをダークターコイズ色で描画する	plt.bar(データ列x, データ列y, color='darkturquoise')
実数がNaNか調べる	math.isnan(x)
ダークグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkgray')
リストを反転する	reversed(aList)
データフレームのリストカラムの母標準偏差	df[aList].std(ddof=0)
グラフの凡例を表示する	plt.legend()
白色の散布図を描画する	plt.scatter(データ列x, データ列y, color='white')
option: グラフの色をライトゴールドロディイエローに設定する	color = 'lightgoldenrodyellow'
ヒストグラムを白くする	plt.hist(データ列, color='w')
横棒グラフをシルバー色で描画する	plt.barh(データ列x, データ列y, color='silver')
横棒グラフをスプリンググリーン色で描画する	plt.barh(データ列x, データ列y, color='springgreen')
ビスク色のヒストグラムを描画する	plt.hist(データ列, color='bisque')
ヒストグラムの色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
整数nがセットのどれかか調べる	n in aSet
option: ダークグリーン色を使う	color = 'darkgreen'
データフレームのカラムが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
ゴーストホワイト色のヒストグラムを描画する	plt.hist(データ列, color='ghostwhite')
文字列を黄色でプリントする	print(f'\033[33m{value}\033[0m')
ヒストグラムの色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
option: グラフの色をライトグレーに設定する	color = 'lightgrey'
タプルの要素を昇順にソートする	sorted(aTuple, reverse=True)
要素が集合に含まれるか調べる	element in aSet
ヒストグラムをパレットトルコイズ色で描画する	plt.hist(データ列, color='paleturquoise')
実数を実数で整数除算する	x // y
データ列をヒストグラムにする	plt.hist(データ列)
データ列の値が欠損値か調べる	ds.isna()
ヒストグラムをスラグレー色で描画する	plt.hist(データ列, color='slategrey')
データフレームの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
データフレームの相関行列	df.corr()
nが無限に続く数列	itertools.repeat(n)
散布図の色をダークオリーブグリーンにする	plt.scatter(データ列x, データ列y, color='darkolivegreen')
散布図に黒いバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x', c='k')
折れ線グラフのダイアモンドマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='D', markersize=2.0)
ファイルをUTF8でオープンする]	open(filepath, encoding='utf-8')
折れ線グラフをフクシア色で描画する	plt.plot(データ列x, データ列y, color='fuchsia')
データ列の各データ値の出現数	ds.value_counts()
折れ線グラフを色付きの実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='#800080')
折れ線グラフに青いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='b')
option: エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
データフレームをに箱ひげ図で可視化する	sns.boxplot(x='カテゴリ列', y='列', data=df)
折れ線グラフの色をシアンに設定する	plt.plot(データ列x, データ列y, color='cyan')
日付データにn秒分、加算する	aDate + datetime.timedelta(seconds=n)
棒グラフの色をシーグリーンにする	plt.bar(データ列x, データ列y, color='seagreen')
赤い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='r')
折れ線グラフの色をグリーンに設定する	plt.plot(データ列x, データ列y, color='green')
データフレームの列をドロップして、更新する	df.drop(column, axis=1, inplace=True)
ロバストな線形クラス分類の準備をする	model = sklearn.linear_model.HuberClassifier()
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
リストとリストについての散布図に赤いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', c='r')
文字列をコロンで分割して、文字列リストに変換する	s.split(':')
データフレームの中の列をビン分割する	pd.cut(df[col], aList)
散布図の色をブルーバイオレットにする	plt.scatter(データ列x, データ列y, color='blueviolet')
year年month月を日付に変換する	datetime.date(year=year, month=month, day=1)
集合が空か調べる	len(aSet) == 0
横棒グラフをカーキ色で描画する	plt.barh(データ列x, データ列y, color='khaki')
データフレームの欠損値を最小値で埋める	df.fillna(df.min())
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
配列を等間隔でn個にビン分割する	pd.cut(aArray, n)
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(データ列x, データ列y, color='antiquewhite')
カテゴリで色分けして、データフレームを回帰直線付き散布図にする	sns.regplot(x='列名', y='列名', hue='カテゴリ列', data=df)
横棒グラフの色をミディアムシアグリーンにする	plt.barh(データ列x, データ列y, color='mediumseagreen')
タン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='tan')
散布図の色をトマトにする	plt.scatter(データ列x, データ列y, color='tomato')
リストとリストについての散布図に赤い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', c='r')
文字列を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
折れ線グラフを小麦色色で描画する	plt.plot(データ列x, データ列y, color='wheat')
折れ線グラフの色をライムグリーンに設定する	plt.plot(データ列x, データ列y, color='limegreen')
散布図を茶色色で描画する	plt.scatter(データ列x, データ列y, color='brown')
option: マーカーの色をシアンにする	markerfacecolor = 'cyan'
折れ線グラフの丸マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='o', markersize=2.0)
散布図を耐火レンガ色で描画する	plt.scatter(データ列x, データ列y, color='firebrick')
折れ線グラフをホットピンク色で描画する	plt.plot(データ列x, データ列y, color='hotpink')
丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o')
option: 配列のデータ型を指定する	dtype = bool
グリッドの線の種類を破線に変更する	plt.grid(linestyle='dashed')
seabornのデフォルトを適用する	sns.set()
グラフの描画で明るくカラーパレットを使う	sns.set(pallete='bright')
option: マーカーの色をミディアムスプリンググリーンにする	markerfacecolor = 'mediumspringgreen'
ライトグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightgreen')
nマイナスn2	n - n2
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()
データ列間の決定係数を求める	sklearn.metrics.r2_score(データ列, データ列2)
ダークカーキ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkkhaki')
集合に要素を追加する	aSet.add(element)
散布図に黒いバツマーカーを描画する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='k')
散布図を赤くする	plt.scatter(データ列x, データ列y, color='r')
横棒グラフをライトグレー色で描画する	plt.barh(データ列x, データ列y, color='lightgrey')
横棒グラフの色をパレットトルコイズにする	plt.barh(データ列x, データ列y, color='paleturquoise')
option: グラフの色をマゼンタに設定する	color = 'magenta'
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列x, データ列y, color='lightgreen')
ヒストグラムをダークターコイズ色で描画する	plt.hist(データ列, color='darkturquoise')
配列間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
レモンシフォン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lemonchiffon')
ダーク・スラテグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkslategrey')
フローラルホワイト色のヒストグラムを描画する	plt.hist(データ列, color='floralwhite')
グリッド線を黒くする	plt.grid(color='k')
option: 四角マーカーを描画する	marker = 's'
本日が何曜日か知る	datetime.datetime.today().weekday()
折れ線グラフをフォレストグリーン色で描画する	plt.plot(データ列x, データ列y, color='forestgreen')
実数のn乗	pow(x, n)
折れ線グラフに赤い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='r')
option: グラフの色をダークオーキッドに設定する	color = 'darkorchid'
散布図をライトスレイグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightslategrey')
データフレームのリストカラムの欠損値を直前の値で埋める	df[aList].fillna(method='ffill')
折れ線グラフをダークスラテグレー色で描画する	plt.plot(データ列x, データ列y, color='darkslategray')
リストとリストについて散布図を描画して、マーカーを三角に設定する	plt.plot(データ列x, データ列y, marker='^')
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
データフレームのカラムを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
データ列の日	ds.dt.day
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
ミディアムスプリンググリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumspringgreen')
散布図をダークシアグリーン色で描画する	plt.scatter(データ列x, データ列y, color='darkseagreen')
正則化付き線形回帰モデルを作る	model = sklearn.linear_model.ElasticNet()
option: グラフの色をインディゴに設定する	color = 'indigo'
最初のプログラムを書く	print('Hello World')
ナバホホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='navajowhite')
データフレームを複数の列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
オブジェクトは数値か調べる	isinstance(obj, (int,float))
右三角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='>')
サドルブラウン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='saddlebrown')
ライトスレイグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightslategray')
本日をタプルに変換する	datetime.datetime.today().timetuple()
シスル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='thistle')
日付時刻データをエポック秒に変換する	aDatetime.timestamp()
散布図の色を暗い赤にする	plt.scatter(データ列x, データ列y, color='darkred')
タプルをひとつ置きに取り出す	aTuple[::2]
日付データををn日後に進める	aDate + datetime.timedelta(days=n)
折れ線グラフを半透明の破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', alpha=0.5)
文字列を部分文字列で二分し、後半の文字列を使う	s.partition(sub)[-1]
データフレームをグループ化し、それぞれの列に対し標準偏差を求める	df.groupby(column)[column2].std()
横棒グラフをミディアムブルー色で描画する	plt.barh(データ列x, データ列y, color='mediumblue')
ターコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='turquoise')
実数を切り下げる	math.floor(x)
option: マーカーの色をリネンにする	markerfacecolor = 'linen'
パパイヤウィップ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='papayawhip')
ダークシアン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkcyan')
折れ線グラフを青緑色で描画する	plt.plot(データ列x, データ列y, color='teal')
文字列を部分文字列で区切って、文字列リストに変換する	s.split(sub)
折れ線グラフの色をブラックに設定する	plt.plot(データ列x, データ列y, color='black')
option: マーカーの色をミディアムアクアマリンにする	markerfacecolor = 'mediumaquamarine'
行列の転置行列	aArray.T
折れ線グラフをブランチドアーモンド色で描画する	plt.plot(データ列x, データ列y, color='blanchedalmond')
散布図をパレットトルコイズ色で描画する	plt.scatter(データ列x, データ列y, color='paleturquoise')
行列の行ごとの最小値	np.min(aArray, axis=1)
サポートベクターマシンで回帰分析を行う	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
ローングリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lawngreen')
データ列のタイムゾーンを文字列に設定する	ds.tz_convert(s)
アルファベットを全部使う	string.ascii_letters
サーモン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='salmon')
実数の床	math.floor(x)
日付時刻データををn週間後に進める	aDatetime + datetime.timedelta(weeks=n)
option: 追加モードを使う	mode = 'a'
棒グラフの横幅を調整する	plt.bar(ラベル列, データ列, width=0.5)
散布図のダイアモンドマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='#800080')
ゲインズボロ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='gainsboro')
散布図の色をミディアムスレートブルーにする	plt.scatter(データ列x, データ列y, color='mediumslateblue')
散布図にrgbのダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D', c=rgb)
グラフを画面用に設定する	sns.set(context='notebook')
option: グラフの色をシーグリーンに設定する	color = 'seagreen'
データ列の欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
option: グラフの色をナバホホワイトに設定する	color = 'navajowhite'
折れ線グラフを青紫色で描画する	plt.plot(データ列x, データ列y, color='violet')
n割るmの有理数表現	fractions.Fraction(numerator=n, denominator=m)
青いグリッド線を引く	plt.grid(color='b')
折れ線グラフの星マーカーを赤くする	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='r')
キーが辞書に存在しないとき、要素を追加する	aDict.setdefault(key, element)
折れ線グラフの色をミントクリームに設定する	plt.plot(データ列x, データ列y, color='mintcream')
散布図の色をタンにする	plt.scatter(データ列x, データ列y, color='tan')
ミッドナイトブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='midnightblue')
option: カデットブルー色を使う	color = 'cadetblue'
棒グラフをライトスカイブルー色で描画する	plt.bar(データ列x, データ列y, color='lightskyblue')
ヒストグラムをピーチパフ色で描画する	plt.hist(データ列, color='peachpuff')
横棒グラフをミディアムアクアマリン色で描画する	plt.barh(データ列x, データ列y, color='mediumaquamarine')
文字列が文字列リストのいづれか調べる	s in aStringList
Pandasで、フォーマットfmtでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
ヒストグラムをシルバー色で描画する	plt.hist(データ列, color='silver')
棒グラフをシアン色で描画する	plt.bar(データ列x, データ列y, color='cyan')
FIXME	np.linalg.eig(aArray)
option: エラーを無視するように設定する	errors = 'ignore'
シャルトリューズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='chartreuse')
空の辞書	{}
ヒストグラムの線の種類を実線に設定する	plt.hist(データ列, linestyle='solid')
データフレームを転置する	df.T
横棒グラフの色をダークグレーにする	plt.barh(データ列x, データ列y, color='darkgray')
折れ線グラフの三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='#800080')
ロバストな線形回帰分析の準備をする	model = sklearn.linear_model.HuberRegressor()
リストとリストについての散布図にrgbの左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', c=rgb)
option: マーカーの色を変更する	markerfacecolor = '#800080'
十六進文字列を整数に変換する	int(s, 16)
ゴーストホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='ghostwhite')
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(データ列x, データ列y, color='darkslategray')
option: グラフの色を紺に設定する	color = 'darkblue'
折れ線グラフを貝殻色で描画する	plt.plot(データ列x, データ列y, color='seashell')
スレートブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='slateblue')
配列の合計値	np.sum(aArray)
折れ線グラフをシャルトリューズ色で描画する	plt.plot(データ列x, データ列y, color='chartreuse')
オレンジレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='orangered')
データフレームのそれぞれのグループごとの最大値	df.groupby(column).max()
option: グラフの種類を破線に設定する	linestyle = 'dashed'
データフレームを複数の列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
option: セパレータを文字列にする	sep = s
文字列の中のASCII限定として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
ヒストグラムの色を黄色に設定する	plt.hist(データ列, color='yellow')
タプル内の要素が少なくともひとつ真か調べる	any(aTuple)
サドルブラウン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='saddlebrown')
回帰モデルを交差検証する	sklearn.model_selection.cross_val_score(model, 説明変数, 目的変数, cv=5, scoring='r2')
フローラルホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='floralwhite')
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
黒いバツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x', c='k')
文字列を太字にする	f'\033[1m{value}\033[0m'
標準エラーを使う	sys.stderr
実数の双曲線正接の逆数	math.atanh(x)
ローングリーン色のヒストグラムを描画する	plt.hist(データ列, color='lawngreen')
文字列の中の複数行対応として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
折れ線グラフの丸マーカーを青くする	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='b')
散布図をコーンフラワーブルー色で描画する	plt.scatter(データ列x, データ列y, color='cornflowerblue')
両端キューをデキューする	deq.popleft()
等差数列を配列に変換する	np.arange(開始値, 終了値, 等差)
データフレームを列の値によってグループ化する	df.groupby(column)
グリッド線を青くする	plt.grid(color='b')
日付時刻データが火曜日か調べる	aDatetime.weekday() == 1
データ列をn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
折れ線グラフの色を貝殻に設定する	plt.plot(データ列x, データ列y, color='seashell')
棒グラフの色をダークグレーにする	plt.bar(データ列x, データ列y, color='darkgray')
データフレームを複数の列によってソートする	df.sort_values(by=column)
ヒストグラムをライトグリーン色で描画する	plt.hist(データ列, color='lightgreen')
散布図のダイアモンドマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='D', markeredgewidth=2.5)
option: マーカーの色をダーク・スラテグレーにする	markerfacecolor = 'darkslategrey'
未定値	None
棒グラフの色をオリベドラブにする	plt.bar(データ列x, データ列y, color='olivedrab')
折れ線グラフのバツマーカーを黒くする	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='k')
ヒストグラムをシーグリーン色で描画する	plt.hist(データ列, color='seagreen')
文字列が無限に繰り返すイテラブル	itertools.repeat(element)
rgbの星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*', c=rgb)
文字列を白色でプリントできる文字列に変換する	f'\033[37m{value}\033[0m'
ファイルをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
データフレームの重複した行をマスクする	df.duplicated()
黒いヒストグラムを描画する	plt.hist(データ列, color='k')
イテラブルのそれぞれを関数でフィルタする	filter(func, iterable)
option: オーキッド色を使う	color = 'orchid'
配列の内積	np.dot(aArray, aArray2)
リストとリストについての散布図に四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s')
棒グラフをダークグリーン色で描画する	plt.bar(データ列x, データ列y, color='darkgreen')
オールドレース色の散布図を描画する	plt.scatter(データ列x, データ列y, color='oldlace')
option: マーカーの色をクリムゾンにする	markerfacecolor = 'crimson'
一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot')
ヒストグラムをシアン色で描画する	plt.hist(データ列, color='cyan')
データフレームから型リストで指定されたデータ型の列を抽出する	df.select_dtypes(include=typeList)
データフレームの中にある文字列の合計を数える	df.isin([value]).sum()
ダークスラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategray')
文字列をマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
空列	[]
Pandasで、エポック秒の文字列から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
本日が何年か知る	datetime.datetime.today().year
スピアマンの相関係数を求める	scipy.stats.spearmanr(データ列, データ列2)
データフレームを二つの列によって降順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
ヒストグラムをスプリンググリーン色で描画する	plt.hist(データ列, color='springgreen')
データフレームのカラムの欠損値をxで埋める	df[col].fillna(x)
日付データからn週間分、減算する	aDate - datetime.timedelta(weeks=n)
ヒストグラムをレモンシフォン色で描画する	plt.hist(データ列, color='lemonchiffon')
棒グラフをアリスブルー色で描画する	plt.bar(データ列x, データ列y, color='aliceblue')
本日を文字列でフォーマットして文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
横棒グラフの色をミスティローズにする	plt.barh(データ列x, データ列y, color='mistyrose')
棒グラフの色をペルーにする	plt.bar(データ列x, データ列y, color='peru')
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
option: 暗い赤色を使う	color = 'darkred'
ヒストグラムを点線で描画する	plt.hist(データ列, linestyle='dotted')
ピアソン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
データフレームのカラムが何日か見る	df[col].dt.day
データフレームのカラムの空文字をドロップする	df[col].replace('', np.nan).dropna()
ミスティローズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mistyrose')
文字列の先頭	s[0]
option: ミッドナイトブルー色を使う	color = 'midnightblue'
リストとリストについての散布図に黒い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', c='k')
折れ線グラフの色をリネンに設定する	plt.plot(データ列x, データ列y, color='linen')
ヒストグラムをフォレストグリーン色で描画する	plt.hist(データ列, color='forestgreen')
二つの文字列を辞書順で比較する	s < s2
棒グラフの色をホワイトスモークにする	plt.bar(データ列x, データ列y, color='whitesmoke')
option: ライトイエロー色を使う	color = 'lightyellow'
データを四分位点で標準化する	sklearn.preprocessing.RobustScaler().fit_transform(データ)
横棒グラフをパールバイオレットレッド色で描画する	plt.barh(データ列x, データ列y, color='palevioletred')
option: マーカーの色をデピンクにする	markerfacecolor = 'deeppink'
option: 切片を算出しない	fit_intercept = False
スチールブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='steelblue')
option: デピンク色を使う	color = 'deeppink'
特異値分解を行う	model = sklearn.decomposition.TruncatedSVD(n_components=n)
リストとリストについての散布図に星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*')
散布図の色をダークバイオレットにする	plt.scatter(データ列x, データ列y, color='darkviolet')
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=column)
フォレストグリーン色のヒストグラムを描画する	plt.hist(データ列, color='forestgreen')
データフレームを各列毎にグループ化して、文字列というグループを使う	df.groupby(column).get_group(s)
散布図に赤い大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X', c='r')
データフレームを複数の列によってソートして、更新する	df.sort_values(by=column, inplace=True)
多次元データを主成分分析で淡く次元に次元削減する	sklearn.decomposition.PCA(n_components=三).fit_transform(多次元データ)
棒グラフの色をライムグリーンにする	plt.bar(データ列x, データ列y, color='limegreen')
アクア色の散布図を描画する	plt.scatter(データ列x, データ列y, color='aqua')
option: マーカーの色をゴールデンロッドにする	markerfacecolor = 'goldenrod'
散布図の色を白にする	plt.scatter(データ列x, データ列y, color='white')
データフレームのカラムの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
ゲインズボロ色のヒストグラムを描画する	plt.hist(データ列, color='gainsboro')
option: 破壊的に操作する	inplace = True
nがn2か調べる	n == n2
アリスブルー色のヒストグラムを描画する	plt.hist(データ列, color='aliceblue')
折れ線グラフをライトゴールドロディイエロー色で描画する	plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')
グラフ描画でカーネル密度推定を使う	sns.kdeplot(x='列名', hue='カテゴリ列', data=df)
散布図の色をリネンにする	plt.scatter(データ列x, データ列y, color='linen')
スプリンググリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='springgreen')
option: ピーチパフ色を使う	color = 'peachpuff'
散布図の色を耐火レンガにする	plt.scatter(データ列x, データ列y, color='firebrick')
nが1、もしくは2か調べる	n == 1 or n == 2
棒グラフの色をオールドレースにする	plt.bar(データ列x, データ列y, color='oldlace')
option: ミスティローズ色を使う	color = 'mistyrose'
option: パレットトルコイズ色を使う	color = 'paleturquoise'
折れ線グラフに赤い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='r')
棒グラフの色をミスティローズにする	plt.bar(データ列x, データ列y, color='mistyrose')
データフレームの中で、列の重複を見る	df.duplicated(subset=column)
日付時刻データの分数	aDatetime.minute
ダークカーキ色のヒストグラムを描画する	plt.hist(データ列, color='darkkhaki')
rgbの左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<', c=rgb)
散布図をミッドナイトブルー色で描画する	plt.scatter(データ列x, データ列y, color='midnightblue')
散布図をミディアムオーキッド色で描画する	plt.scatter(データ列x, データ列y, color='mediumorchid')
棒グラフの色をロージーブラウンにする	plt.bar(データ列x, データ列y, color='rosybrown')
文字列が正規表現にマッチさせる	re.match(pattern, s)
オブジェクトのプロパティの値を値に設定する	setattr(obj, プロパティ名, 値)
日付時刻データからn時間分、減算する	aDatetime - datetime.timedelta(hours=n)
横棒グラフをミディアムターコイズ色で描画する	plt.barh(データ列x, データ列y, color='mediumturquoise')
横棒グラフの色をリネンにする	plt.barh(データ列x, データ列y, color='linen')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列x, データ列y, color='lightslategray')
標準出力を使う	sys.stdout
ヒストグラムをスカイブルー色で描画する	plt.hist(データ列, color='skyblue')
option: ヘッダを自動的な連番に設定する	header = None
データ列の値が正規分布にしたがって発生する確率を求める	scipy.stats.norm.pdf(データ列, loc=平均値, scale=標準偏差)
ロージーブラウン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='rosybrown')
option: バツマーカーを使う	marker = 'x'
配列のスカラー倍	aArray * n
option: マーカーの線幅を変更する	markeredgewidth = 2.5
整数nをn2分の一にする	n //= n2
データフレームのリストカラムの中にいくつ文字列があるか数える	df[aList].isin([value]).sum()
option: 線の幅を3.0ポイントに設定する	linewidth = 3.0
折れ線グラフの色をプラムに設定する	plt.plot(データ列x, データ列y, color='plum')
全要素を０で初期化した複素数型の行列	np.zeros(行数, 列数, dtype=bool)
ライムグリーン色のヒストグラムを描画する	plt.hist(データ列, color='limegreen')
ヒストグラムをチョコレート色で描画する	plt.hist(データ列, color='chocolate')
棒グラフの色をフローラルホワイトにする	plt.bar(データ列x, データ列y, color='floralwhite')
散布図に大バツマーカーを使う	plt.scatter(データ列x, データ列y, marker='X')
棒グラフをミッドナイトブルー色で描画する	plt.bar(データ列x, データ列y, color='midnightblue')
横棒グラフをミディアムスプリンググリーン色で描画する	plt.barh(データ列x, データ列y, color='mediumspringgreen')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ヒストグラムの色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
データフレームから指定された４つの列を抽出する	df[[column, column2, column3, column4]]
茶色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='brown')
折れ線グラフの四角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='r')
棒グラフをオレンジ色で描画する	plt.bar(データ列x, データ列y, color='orange')
文字コードに対応する文字	chr(unicode)
折れ線グラフをプラム色で描画する	plt.plot(データ列x, データ列y, color='plum')
実数の二進対数	math.log2(x)
ターコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='turquoise')
イテラブルから両端キューを作る	collections.deque(iterable)
option: バイナリモードに設定する	mode = 'rb'
散布図のバツマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='k')
データ列の折れ線グラフを描画して、色をカラーコードで設定する	plt.plot(データ列x, データ列y, color='#800080')
タン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='tan')
棒グラフをプラム色で描画する	plt.bar(データ列x, データ列y, color='plum')
データフレームのカラムの日	df[col].dt.day
数式を微分する	sympy.diff(e)
イテラブルから重複を取り除く	set(iterable)
横棒グラフの色をラベンダーブラッシュにする	plt.barh(データ列x, データ列y, color='lavenderblush')
データフレームの指定されたデータ型の列名を列挙する	df.select_dtypes(型).columns
文字列がリストに含まれないか調べる	element not in aList
option: マーカーの色をタンにする	markerfacecolor = 'tan'
横棒グラフの色をミディアムパープルにする	plt.barh(データ列x, データ列y, color='mediumpurple')
散布図の色をダークゴールデンロッドにする	plt.scatter(データ列x, データ列y, color='darkgoldenrod')
散布図をロージーブラウン色で描画する	plt.scatter(データ列x, データ列y, color='rosybrown')
日付時刻データにn週間分、加算する	aDatetime + datetime.timedelta(weeks=n)
チョコレート色のヒストグラムを描画する	plt.hist(データ列, color='chocolate')
文字列の先頭から空白を取り除く	s.lstrip()
データ列のヒストグラムを描画する	plt.hist(データ列)
丸印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='o')
白い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='w')
散布図のポイントマーカーを黒くする	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='k')
option: マーカーの色をネイビーにする	markerfacecolor = 'navy'
全ての印字可能な文字	string.printable
option: マーカーの色をスレートブルーにする	markerfacecolor = 'slateblue'
横棒グラフをモカシン色で描画する	plt.barh(データ列x, データ列y, color='moccasin')
最初のカテゴリーを除外してデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
耐火レンガ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='firebrick')
ファイルからストリームをオープンして]、fileとする	file = open(filepath)
データフレームのどの値が頻出か見る	df.mode()
棒グラフを貝殻色で描画する	plt.bar(データ列x, データ列y, color='seashell')
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
横棒グラフの色をライトブルーにする	plt.barh(データ列x, データ列y, color='lightblue')
データフレームのカラムの欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を中央値で埋める	df[col].fillna(df[col].median())
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列x, データ列y, color='lightslategrey')
折れ線グラフに黒いダイアモンドマーカーを描画する	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='k')
ヒストグラムの色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
option: マーカーの色をゴールドにする	markerfacecolor = 'gold'
横棒グラフの色をハニーデューにする	plt.barh(データ列x, データ列y, color='honeydew')
グラフの色を暗くする	sns.set(pallete='dark')
散布図の色をミディアムバイオレットレッドにする	plt.scatter(データ列x, データ列y, color='mediumvioletred')
棒グラフをレベッカパープル色で描画する	plt.bar(データ列x, データ列y, color='rebeccapurple')
option: グラフの色をシエナに設定する	color = 'sienna'
ヒストグラムの色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
散布図のバツマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='x', markeredgewidth=2.5)
日付データの曜日を整数で使う	aDate.weekday()
二変数の最小値	min(x, y)
データフレームの列がxより小さい行を抽出する	df[df[column] < x]
パープル色の線グラフを描画する	plt.plot(データ列x, データ列y, color='purple')
タプルをn倍する	aTuple * n
辞書をソートしてJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
折れ線グラフの色をホワイトスモークに設定する	plt.plot(データ列x, データ列y, color='whitesmoke')
option: マーカーの色をライトグリーンにする	markerfacecolor = 'lightgreen'
散布図の星マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='#800080')
集合の補集合	aSet.difference(aSet2)
折れ線グラフの大バツマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='X', markersize=2.0)
ダークターコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkturquoise')
ミディアムターコイズ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumturquoise')
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(データ列x, データ列y, color='papayawhip')
option: ミディアムオーキッド色を使う	color = 'mediumorchid'
折れ線グラフにラベルを付ける	plt.plot(データ列x, データ列y, label='ラベル')
折れ線グラフを半透明の実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', alpha=0.5)
option: 下三角マーカーを描画する	marker = 'v'
二つのカウンタの共通する要素	aCounter & aCounter2
リストを縦軸、リストを横軸として、大きさnの散布図を描画する	plt.scatter(データ列x, データ列y, s=n)
データフレームから型リストで指定されたデータ型の列を除外する	df.select_dtypes(exclude=typeList)
データフレームの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
ダークサーモン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darksalmon')
棒グラフの色をミディアムスプリンググリーンにする	plt.bar(データ列x, データ列y, color='mediumspringgreen')
ライトシアン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightcyan')
システム時刻で乱数を初期化する	random.seed()
option: グラフの色をホワイトスモークに設定する	color = 'whitesmoke'
カテゴリで色分けして、データフレームの全カラムの相関を可視化する	sns.pairplot(df, hue='カテゴリ列')
部分文字列が部分文字列で始まるか調べる	s.startswith(sub)
データフレームの中の列と列に重複があれば、マスクする	df.duplicated(subset=[column, column2])
option: グラフの色をラベンダーブラッシュに設定する	color = 'lavenderblush'
データフレームを回帰直線付き散布図にする	sns.regplot(data=df, x='列名', y='列名')
文字の文字コード	ord(ch)
データフレームの列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
option: グラフの色をミディアムオーキッドに設定する	color = 'mediumorchid'
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(データ列x, データ列y, color='mediumspringgreen')
横棒グラフをシャルトリューズ色で描画する	plt.barh(データ列x, データ列y, color='chartreuse')
散布図の左三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='b')
横棒グラフを淡いピンク色色で描画する	plt.barh(データ列x, データ列y, color='lightpink')
折れ線グラフをダークターコイズ色で描画する	plt.plot(データ列x, データ列y, color='darkturquoise')
本日の日付時刻	datetime.datetime.now()
リストの先頭を取り除く	aList[1:]
上位集合もしくは等しいか調べる	aSet > aSet2
配列の全要素の値を変更する	aArray[:, :] = 指定の値
ピーチパフ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='peachpuff')
両端キューの最大長	deq.maxlen
ヒストグラムの色をブラックに設定する	plt.hist(データ列, color='black')
アルファベットの大文字列	string.ascii_uppercase
実数を三乗する	x ** 3
ビン数を設定してヒストグラムを描画する	plt.hist(データ列, bins=区関数)
折れ線グラフをフローラルホワイト色で描画する	plt.plot(データ列x, データ列y, color='floralwhite')
ゼロ埋めされたブール型の配列	np.zeros(要素数, dtype=np.int32)
ヒストグラムの色をタンに設定する	plt.hist(データ列, color='tan')
option: グラフの色をピンクに設定する	color = 'pink'
実数の逆正接	math.atan(x)
データ列の曜日が何日目か見る	ds.dt.dayofweek
データ列間の平方根平均二乗誤差を求める	np.sqrt(sklearn.metrics.mean_squared_error(データ列, データ列2))
暗い赤色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkred')
句読点文字を全部使う	string.punctuation
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategray')
空行をプリントする	print()
折れ線グラフの丸マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='o', markeredgewidth=2.5)
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(データ列x, データ列y, color='darkseagreen')
option: インディアンレッド色を使う	color = 'indianred'
イテラブルを集合に変換する	set(iterable)
ヒストグラムをスチールブルー色で描画する	plt.hist(データ列, color='steelblue')
ライトグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightgrey')
option: グラフの種類を一点鎖線に設定する	linestyle = 'dashbot'
option: ライトサーモン色を使う	color = 'lightsalmon'
分子n、分母mの有理数を作る	fractions.Fraction(numerator=n, denominator=m)
散布図の色をシアンにする	plt.scatter(データ列x, データ列y, color='cyan')
ミディアムブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumblue')
横棒グラフの色をライムにする	plt.barh(データ列x, データ列y, color='lime')
ヒストグラムをディムグレー色で描画する	plt.hist(データ列, color='dimgrey')
ダークオーキッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkorchid')
青色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='blue')
文字列を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
ファイルの絶対パス	os.path.abspath(filepath)
二つの変数をそれぞれ定義する	x, y = i, j
option: マーカーの色をダークグリーンにする	markerfacecolor = 'darkgreen'
ヒストグラムをダークシアン色で描画する	plt.hist(データ列, color='darkcyan')
レベッカパープル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='rebeccapurple')
ホワイトスモーク色のヒストグラムを描画する	plt.hist(データ列, color='whitesmoke')
青緑色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='teal')
データフレームのカラムの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
シャルトリューズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='chartreuse')
option: ローングリーン色を使う	color = 'lawngreen'
タプルをnからナンバリングする	enumerate(aTuple, start=n)
オプションで、出力先を標準エラーに設定する	file = sys.stderr
ダークゴールデンロッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkgoldenrod')
シャピロ・ウィルク検定を行う	scipy.stats.shapiro(データ列)
ミスティローズ色のヒストグラムを描画する	plt.hist(データ列, color='mistyrose')
青い一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='b')
アンティークホワイト色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='antiquewhite')
数字を全部使う	string.digits
データフレームのリストカラムの中に文字列があるか調べる	df[aList].isin([value])
データフレームのリストカラムの欠損値を平均値に設定する	df[aList].fillna(df[aList].mean())
集合にイテラブルを追加更新する	aSet.update(iterable)
棒グラフの色をライトコーラルにする	plt.bar(データ列x, データ列y, color='lightcoral')
日付データの月数	aDate.month
折れ線グラフをネイビー色で描画する	plt.plot(データ列x, データ列y, color='navy')
ライトグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightgrey')
パープル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='purple')
ヒストグラムの色を紺碧に設定する	plt.hist(データ列, color='azure')
ライトゴールドロディイエロー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')
ヒストグラムをライトスカイブルー色で描画する	plt.hist(データ列, color='lightskyblue')
八進文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
文字列を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
辞書を階層化する	collections.ChainMap(aDict)
文字列中の正規表現を新しい文字列で置き換える	re.sub(pattern, newsub, s)
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(データ列x, データ列y, color='lightgoldenrodyellow')
ロバスト分類モデルを作る	model = sklearn.linear_model.RANSACClassifier(random_state=0)
棒グラフの色をホットピンクにする	plt.bar(データ列x, データ列y, color='hotpink')
ディムグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='dimgray')
option: セパレータをスラッシュにする	sep = '/'
配列の平均値	np.mean(aArray)
棒グラフの色をバリーウッドにする	plt.bar(データ列x, データ列y, color='burlywood')
option: グラフの色をスチールブルーに設定する	color = 'steelblue'
大量のデータ列が正規分布に従うか仮説検定する	scipy.stats.kstest(データ列, 'norm')
ヒストグラムの色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
集合＼集合	aSet.difference(aSet2)
nとn2の値を足してnに代入する	n += n2
データフレームのリストカラムの第三四分位数	df[aList].quantile(0.75)
棒グラフの色をアリスブルーにする	plt.bar(データ列x, データ列y, color='aliceblue')
ペルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='peru')
option: マーカーの色をダークカーキにする	markerfacecolor = 'darkkhaki'
文字列中にひとつでも非大文字が含まれるか調べる	any(not c.isupper() for c in s)
データフレームを二つの列によってソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
オブジェクトのメモリビュー	memoryview(obj)
文字列を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
横棒グラフの色をベージュにする	plt.barh(データ列x, データ列y, color='beige')
データフレームの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
データ列の欠損値を直後の値に設定する	ds.fillna(method='bfill')
ヒストグラムを描画して、半透明ににする	plt.hist(データ列x, alpha=0.5)
棒グラフを淡いピンク色色で描画する	plt.bar(データ列x, データ列y, color='lightpink')
ピーチパフ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='peachpuff')
スプリンググリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='springgreen')
線形モデルの切片	model.intercept_
要素が全て初期値の配列	np.full(要素数, 初期値, dtype=np.int)
NaN	math.nan
ゴールデンロッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='goldenrod')
棒グラフをグリーン色で描画する	plt.bar(データ列x, データ列y, color='green')
nをn2で割った余り	n % n2
option: ピンク色を使う	color = 'pink'
真	True
散布図の色をロイヤルブルーにする	plt.scatter(データ列x, データ列y, color='royalblue')
散布図のマーカーを星にする	plt.scatter(データ列x, データ列y, marker='*')
散布図をライトグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightgrey')
横棒グラフの色をグリーンにする	plt.barh(データ列x, データ列y, color='green')
散布図をシスル色で描画する	plt.scatter(データ列x, データ列y, color='thistle')
ラベンダー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lavender')
折れ線グラフの左三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='<', markersize=2.0)
散布図の丸マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='k')
散布図をビスク色で描画する	plt.scatter(データ列x, データ列y, color='bisque')
option: グラフの色をブラックに設定する	color = 'black'
リストとリストについての散布図に赤い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', c='r')
折れ線グラフの色をビスクに設定する	plt.plot(データ列x, データ列y, color='bisque')
散布図に黒い三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^', c='k')
データフレームのリスト列のヒートマップを描画する	sns.heatmap(df[aList].corr())
データ列の欠損値を直前の値に設定する	ds.fillna(method='ffill')
散布図の色を紺碧にする	plt.scatter(データ列x, データ列y, color='azure')
棒グラフの色をディープスカイブルーにする	plt.bar(データ列x, データ列y, color='deepskyblue')
コーラル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='coral')
ブランチドアーモンド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='blanchedalmond')
ミントクリーム色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mintcream')
自分自身をモジュールとして	sys.modules[__name__]
横棒グラフをプラム色で描画する	plt.barh(データ列x, データ列y, color='plum')
文字列モジュールをインポートする	import string
オブジェクトはバイト列クラスか調べる	isinstance(obj, bytes)
日付時刻データが何曜日か知る	aDatetime.weekday()
レモンシフォン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lemonchiffon')
データ列の欠損値を直前の値で埋める	ds.fillna(method='ffill')
シルバー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='silver')
option: グラフの色をミディアムアクアマリンに設定する	color = 'mediumaquamarine'
文字列に漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
現在処理中の例外を情報	sys.exc_info()
日付データが何日か知る	aDate.day
ペルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='peru')
カウンタのそれぞれの項目を、そのカウントだけ列挙する	aCounter.elements()
データ列が何時か見る	ds.dt.hour
サーモン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='salmon')
横棒グラフを紺碧色で描画する	plt.barh(データ列x, データ列y, color='azure')
予測値とデータの離れ具合を可視化する	sns.residplot(x='列名', y='列名', data=df)
折れ線グラフを赤い実線で描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='r')
カーキ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='khaki')
トマト色のヒストグラムを描画する	plt.hist(データ列, color='tomato')
棒グラフの色をレモンシフォンにする	plt.bar(データ列x, データ列y, color='lemonchiffon')
option: ライトスレイグレー色を使う	color = 'lightslategrey'
ミディアムスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumslateblue')
横棒グラフの色を淡いピンク色にする	plt.barh(データ列x, データ列y, color='lightpink')
データ列の最頻値	ds.mode()
option: マーカーの色をパレットトルコイズにする	markerfacecolor = 'paleturquoise'
ライトコーラル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightcoral')
文字列を太字でプリントする	print(f'\033[1m{value}\033[0m')
折れ線グラフの色をミディアムブルーに設定する	plt.plot(データ列x, データ列y, color='mediumblue')
データフレームをグループ化して、ヒストグラムにする	sns.histplot(df, x='列名', hue='カテゴリ名')
option: ホットピンク色を使う	color = 'hotpink'
データフレームのそれぞれのグループごとの個数	df.groupby(column).count()
データフレームからランダムにn行を抽出する	df.sample(n)
option: マーカーの色をライトグレーにする	markerfacecolor = 'lightgrey'
横棒グラフをブルーバイオレット色で描画する	plt.barh(データ列x, データ列y, color='blueviolet')
option: グラフの色をコーラルに設定する	color = 'coral'
リストとリストについて散布図を描画して、左三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='<', c=rgb)
散布図をミディアムブルー色で描画する	plt.scatter(データ列x, データ列y, color='mediumblue')
option: グラフの色をダークサーモンに設定する	color = 'darksalmon'
option: ダークカーキ色を使う	color = 'darkkhaki'
ヒストグラムをミディアムパープル色で描画する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
散布図にrgbの大バツマーカーを使う	plt.plot(データ列x, データ列y, marker='X', c=rgb)
リストを等量でn個にビン分割する	pd.qcut(aList, n)
折れ線グラフに赤い星マーカーを描画する	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='r')
ライトコーラル色のヒストグラムを描画する	plt.hist(データ列, color='lightcoral')
グリーンイエロー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='greenyellow')
リストとリストについて散布図を描画して、マーカーを下三角に設定する	plt.plot(データ列x, データ列y, marker='v')
option: マーカーの色をライトサーモンにする	markerfacecolor = 'lightsalmon'
横軸の目盛に文字列を付ける	plt.xticks([0, 60, 90], ['不可', '可', '秀'])
文字列の左側から部分文字列を取り除く	s.lstrip(sub)
モジュールを検索するパス	sys.path
棒グラフの色をライトスレイグレーにする	plt.bar(データ列x, データ列y, color='lightslategrey')
イテラブルとイテラブルの直積	itertools.product(iterable, iterable2)
横棒グラフをロージーブラウン色で描画する	plt.barh(データ列x, データ列y, color='rosybrown')
文字列を部分文字列で分けたときの後半の文字列	s.partition(sub)[-1]
棒グラフをターコイズ色で描画する	plt.bar(データ列x, データ列y, color='turquoise')
Pandasのバージョンを表示する	print(pd.__version__)
predicateFuncが真とならないイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
option: 改行コードを旧Macに設定する	newline = '\r'
棒グラフをゲインズボロ色で描画する	plt.bar(データ列x, データ列y, color='gainsboro')
ヒストグラムをオレンジ色で描画する	plt.hist(データ列, color='orange')
ロイヤルブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='royalblue')
棒グラフをスプリンググリーン色で描画する	plt.bar(データ列x, データ列y, color='springgreen')
rgbの右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>', c=rgb)
データフレームを二つの列によって昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
無限にカウントアップする	itertools.count()
スレートブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='slateblue')
option: ポイントマーカーを描画する	marker = '.'
option: マーカーの色をコーンフラワーブルーにする	markerfacecolor = 'cornflowerblue'
二つの配列を行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
nが5の倍数か調べる	n % 5 == 0
データフレームの欠損値をxに設定する	df.fillna(x)
データフレームの列をヒストグラムで描画する	plt.hist(df[column])
横棒グラフを小麦色色で描画する	plt.barh(データ列x, データ列y, color='wheat')
左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<')
データフレームのカラムの欠損値を最小値に設定する	df[col].fillna(df[col].min())
横棒グラフの色をミディアムブルーにする	plt.barh(データ列x, データ列y, color='mediumblue')
ヒストグラムをライトイエロー色で描画する	plt.hist(データ列, color='lightyellow')
データ列の分散	ds.var()
日付時刻データが日付時刻データと同時か調べる	aDatetime == aDatetime2
ライトサーモン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightsalmon')
アンティークホワイト色のヒストグラムを描画する	plt.hist(データ列, color='antiquewhite')
データフレームの列をカテゴリデータに変換する	df[col].astype(object)
カウンタをイテラブルで更新する	aCounter.update(iterable)
ハローワールドとプリントする	print('Hello World')
日付時刻データにn分分、加算する	aDatetime + datetime.timedelta(minutes=n)
配列の最小値	np.min(aArray)
棒グラフをブラック色で描画する	plt.bar(データ列x, データ列y, color='black')
棒グラフの色をアクアマリンにする	plt.bar(データ列x, データ列y, color='aquamarine')
茶色色のヒストグラムを描画する	plt.hist(データ列, color='brown')
ヒストグラムをライム色で描画する	plt.hist(データ列, color='lime')
カテゴリデータ列を数値化する	sklearn.preprocessing.LabelEncoder().fit_transform(データ列)
option: 昇順にする	ascending = True
横棒グラフをサドルブラウン色で描画する	plt.barh(データ列x, データ列y, color='saddlebrown')
グラフを表示する	plt.show()
棒グラフの色を青にする	plt.bar(データ列x, データ列y, color='blue')
折れ線グラフの右三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='>', markeredgewidth=2.5)
option: ライトスレイグレー色を使う	color = 'lightslategray'
option: マーカーの色をホワイトスモークにする	markerfacecolor = 'whitesmoke'
タプルの中の最大値	max(aTuple)
ヒストグラムの色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
紺色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkblue')
データフレームの列をインデックスに設定する	df.set_index(column)
データフレームを二つの列によって昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
折れ線グラフの星マーカーを青くする	plt.plot(データ列x, データ列y, marker='*', markerfacecolor='b')
横棒グラフをダークオリーブグリーン色で描画する	plt.barh(データ列x, データ列y, color='darkolivegreen')
実数の逆余弦	math.acos(x)
データフレームを各列と列の組み合わせ毎にグループ化して、個数を求める	df.groupby([column, column2], as_index=False).count()
データフレームから最後の列を除く	df[df.columns[:-1]]
棒グラフを赤くする	plt.bar(データ列x, データ列y, color='r')
一点鎖線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='dashbot')
散布図の色をダークシアンにする	plt.scatter(データ列x, データ列y, color='darkcyan')
データフレームの列を折れ線グラフで可視化する	plt.plot(df[column], df[column])
option: マーカーの色をアリスブルーにする	markerfacecolor = 'aliceblue'
横棒グラフの色をレモンシフォンにする	plt.barh(データ列x, データ列y, color='lemonchiffon')
ダークカーキ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkkhaki')
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
データフレームのカラムの年	df[col].dt.year
両端キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(データ列x, データ列y, color='mediumturquoise')
リストの文字列が最初に見つかるインデックス	aList.index(element)
散布図をダークスラテグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkslategray')
JSONLファイルを読み込む	pd.read_json(filename, orient='records', lines=True)
横棒グラフの色をシスルにする	plt.barh(データ列x, データ列y, color='thistle')
データフレームを各列毎にグループ化して、列の標準偏差を求める	df.groupby(column)[column2].std()
散布図をライトゴールドロディイエロー色で描画する	plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')
棒グラフの色をライトイエローにする	plt.bar(データ列x, データ列y, color='lightyellow')
文字列中に部分文字列がいくつか含まれるか調べる	s.count(sub)
数式を簡略にする	sympy.sympify(e)
リストのn番目からn2番目までの部分	aList[n:n2]
ヒストグラムの色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
文字列全体を正規表現にマッチさせる	re.fullmatch(pattern, s)
文字列全体を複数行対応として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
折れ線グラフのバツマーカーを青くする	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='b')
モデルの予測値と実測値を比較する	pd.DataFrame({'実測': 目的変数, '予測': model.predict(説明変数)})
データフレームを各グループごとに散布図にする	sns.scatterplot(data=df, x='列名', y='列名', hue='カテゴリ列')
option: 四角マーカーを使う	marker = 's'
散布図の色をダークオレンジにする	plt.scatter(データ列x, データ列y, color='darkorange')
黒い丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o', c='k')
棒グラフの色をスカイブルーにする	plt.bar(データ列x, データ列y, color='skyblue')
平均値付き箱ひげ図を描画する	plt.boxplot(データ列, showmeans=True)
コマンド引数の一覧	sys.argv[1:]
文字列の両端から部分文字列を取り除く	s.strip(sub)
option: エンコーディングを文字コードtextに設定する	encoding = text
散布図に赤い右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>', c='r')
ヒストグラムを青色で描画する	plt.hist(データ列, color='blue')
データフレームを10の位で丸める	df.round(-1)
改行なしに文字列をプリントする	print(value, end='')
ISO書式の文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ファイル名がCSVファイルか調べる	filename.endswith('.csv')
要素ひとつのりスト	[element]
赤い散布図を描画する	plt.scatter(データ列x, データ列y, color='r')
棒グラフをタン色で描画する	plt.bar(データ列x, データ列y, color='tan')
ヒストグラムの色をサーモンに設定する	plt.hist(データ列, color='salmon')
option: 右三角マーカーを使う	marker = '>'
現在が何分か知る	datetime.date.today().minute
円グラフでデータ列の割合を可視化する	plt.pie(データ列, startangle=90)
クリムゾン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='crimson')
データ列の正規分布を判定する	scipy.stats.shapiro(データ列)
ダークスレートブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkslateblue')
散布図をピンク色で描画する	plt.scatter(データ列x, データ列y, color='pink')
ライトブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightblue')
フォレストグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='forestgreen')
year年を日付時刻に変換する	datetime.datetime(year=year, month=1, day=1)
横棒グラフの色をブルーバイオレットにする	plt.barh(データ列x, データ列y, color='blueviolet')
文字列は全て識別子名か調べる	s.isidentifier()
配列の標準偏差	np.std(aArray)
日付時刻データが何日か知る	aDatetime.day
整数nの八進表現	oct(n)
ターコイズ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='turquoise')
ヒストグラムの色をインディゴに設定する	plt.hist(データ列, color='indigo')
多次元データを多次元尺度構成法でパステル調に次元に次元削減する	sklearn.manifold.MSD(n_components=N).fit_transform(多次元データ)
Pandasで、文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
イテラブルを文字列リストに変換して、カンマで連結する	','.join(map(str, iterable))
多次元データを特異値分解で淡く次元に次元削減する	sklearn.decomposition.TruncatedSVD(n_components=三).fit_transform(多次元データ)
option: グラフの色をイエローグリーンに設定する	color = 'yellowgreen'
データフレームの各カテゴリごとの散布図に回帰直線を加える	sns.regplot(x='列名', y='列名', hue='カテゴリ列', data=df)
アクアマリン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='aquamarine')
データフレームを欠損値を含めて列の値でグループ化する	df.groupby(column, dropna=False)
二つのカウンタのいずれかに含まれる要素	aCounter | aCounter2
黄色い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='y')
折れ線グラフの色をピンクに設定する	plt.plot(データ列x, データ列y, color='pink')
事前に正規表現をコンパイルする	re.compile(pattern)
option: マーカーの色をプラムにする	markerfacecolor = 'plum'
データフレームを二つの列によってソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
カウンタを少ない順に列挙する	aCounter.most_common()[::-1]
散布図をブランチドアーモンド色で描画する	plt.scatter(データ列x, データ列y, color='blanchedalmond')
日付時刻データが木曜日か調べる	aDatetime.weekday() == 3
データフレームのカラムの尖度	df[col].skew()
日付時刻データが何時か知る	aDatetime.hour
綺麗なグラフを使う準備をする	import seaborn as sns
標準エラーを得る	sys.stderr
リストを複製する	aList.copy()
ヒストグラムの色をシスルに設定する	plt.hist(データ列, color='thistle')
option: グラフの色を赤に設定する	color = 'red'
折れ線グラフの三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='^', markersize=2.0)
折れ線グラフの左三角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='k')
option: マーカーの色をディムグレーにする	markerfacecolor = 'dimgrey'
リストの長さだけ繰り返す	range(len(aList))
辞書のキーを列挙する	aDict.keys()
アイボリー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='ivory')
データフレームの全カラムの相関を可視化する	sns.pairplot(df)
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategrey')
ファイルを文字列の示すエンコーディングでオープンする]	open(filepath, encoding=s)
文字列の先頭でASCII限定として正規表現にマッチさせる	re.match(pattern, s, flags=re.ASCI)
散布図をオレンジ色で描画する	plt.scatter(データ列x, データ列y, color='orange')
データフレームをインデックスによって昇順にソートする	df.sort_index(ascending=True)
散布図にダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D')
散布図の色をグレーにする	plt.scatter(データ列x, データ列y, color='gray')
タプルの要素を昇順にソートする	sorted(aTuple, reverse=False)
データ列の歪度	ds.kurt()
棒グラフをライトスレイグレー色で描画する	plt.bar(データ列x, データ列y, color='lightslategray')
データフレームの中の欠損値がある行を削除する	df.dropna()
実数の双曲線正接	math.tanh(x)
横棒グラフの色をモカシンにする	plt.barh(データ列x, データ列y, color='moccasin')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
itertoolsモジュールをインポートする	import itertools
横棒グラフの色をピンクにする	plt.barh(データ列x, データ列y, color='pink')
option: どのカラムもインデックスに設定しない	index_col = None
option: スレートブルー色を使う	color = 'slateblue'
ダーク・スラテグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkslategrey')
アルファベットの大文字を全部使う	string.ascii_uppercase
折れ線グラフを耐火レンガ色で描画する	plt.plot(データ列x, データ列y, color='firebrick')
グラフの用途をスライドに設定する	sns.set(context='talk')
ヒストグラムをダークシアグリーン色で描画する	plt.hist(データ列, color='darkseagreen')
散布図の四角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='#800080')
現在の作業ディレクトリ	os.getcwd()
折れ線グラフをアリスブルー色で描画する	plt.plot(データ列x, データ列y, color='aliceblue')
棒グラフの色をミディアムスレートブルーにする	plt.bar(データ列x, データ列y, color='mediumslateblue')
棒グラフの色をダーク・スラテグレーにする	plt.bar(データ列x, データ列y, color='darkslategrey')
データフレームの欠損値を平均値に設定する	df.fillna(df.mean())
nとn2が等しいか調べる	n == n2
散布図の色をプラムにする	plt.scatter(データ列x, データ列y, color='plum')
コーラル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='coral')
散布図に赤い左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<', c='r')
散布図の丸マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='#800080')
option: マーカーの色を暗い赤にする	markerfacecolor = 'darkred'
散布図の色をパールゴールデンロッドにする	plt.scatter(データ列x, データ列y, color='palegoldenrod')
グリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='green')
ミディアムアクアマリン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumaquamarine')
option: グラフの色をディープスカイブルーに設定する	color = 'deepskyblue'
実数を小数点以下第一位で丸める	round(x, 1)
Pandasで、データ列を日付データに変換する	pd.to_datetime(ds)
真上位集合か調べる	aSet > aSet2
ペルー色のヒストグラムを描画する	plt.hist(データ列, color='peru')
三変数の最小値	min(x, y, z)
データフレームの平均と信頼区間を描画する	sns.pointplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
シスル色のヒストグラムを描画する	plt.hist(データ列, color='thistle')
小麦色色のヒストグラムを描画する	plt.hist(データ列, color='wheat')
三自然数の最小公倍数	math.lcm(n, n2, n3)
折れ線グラフをオリーブ色で描画する	plt.plot(データ列x, データ列y, color='olive')
データ列の折れ線グラフを描画して、ラベル付けする	plt.plot(データ列x, データ列y, label='ラベル')
データ列の中に文字列と文字列がいくつあるか数える	ds.isin([value, value2]).sum()
カウンタからゼロカウントを取り除く	+aCounter
ヒストグラムをアイボリー色で描画する	plt.hist(データ列, color='ivory')
ヒストグラムを黄色色で描画する	plt.hist(データ列, color='yellow')
オブジェクトはタプルクラスか調べる	isinstance(obj, tuple)
リストとリストについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(データ列x, データ列y, marker='D')
ヒストグラムの色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
モカシン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='moccasin')
ファイルからn文字、読み込む	f.read(n)
データフレームの累積分布を描画する	sns.ecdfplot(x='列名', data=df)
棒グラフをドジャーブルー色で描画する	plt.bar(データ列x, データ列y, color='dodgerblue')
ヒストグラムをゴーストホワイト色で描画する	plt.hist(データ列, color='ghostwhite')
事前にASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
アンティークホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='antiquewhite')
ファイルを文字コードtextで書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
ヒストグラムを貝殻色で描画する	plt.hist(データ列, color='seashell')
option: グラフの色を耐火レンガに設定する	color = 'firebrick'
グリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='green')
option: ライトコーラル色を使う	color = 'lightcoral'
折れ線グラフを破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed')
option: マーカーの色をインディゴにする	markerfacecolor = 'indigo'
茶色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='brown')
散布図に赤い四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s', c='r')
シエナ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='sienna')
配列の行ごとの合計値	np.sum(aArray, axis=1)
黒い三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^', c='k')
横棒グラフの色をターコイズにする	plt.barh(データ列x, データ列y, color='turquoise')
option: オレンジレッド色を使う	color = 'orangered'
棒グラフをアクア色で描画する	plt.bar(データ列x, データ列y, color='aqua')
インデント幅nで、辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をカウンタに変換する	collections.Counter(aDict)
タプルの要素を逆順にする	aTuple[::-1]
文字列を改行で区切る	s.splitlines()
option: グラフの色をアンティークホワイトに設定する	color = 'antiquewhite'
option: グラフの色をディムグレーに設定する	color = 'dimgrey'
nがn2で割り切れるか調べる	n % n2 == 0
リストの要素を昇順にソートする	sorted(aList, reverse=True)
アクア色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='aqua')
データフレームのカラムのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
横棒グラフの色をブランチドアーモンドにする	plt.barh(データ列x, データ列y, color='blanchedalmond')
二つの文字列を改行で区切ってプリントする	print(value, value2, sep='\n')
リストを展開してプリントする	print(*aList)
耐火レンガ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='firebrick')
データ列を二つ並べて箱ひげ図にする	plt.boxplot([データ列, データ列])
散布図の色をフォレストグリーンにする	plt.scatter(データ列x, データ列y, color='forestgreen')
棒グラフをパールバイオレットレッド色で描画する	plt.bar(データ列x, データ列y, color='palevioletred')
散布図の左三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='r')
文字列の接頭辞が部分文字列か調べる	s.startswith(sub)
文字列の中で正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
ダークオレンジ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkorange')
ヒストグラムの色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
折れ線グラフをライトブルー色で描画する	plt.plot(データ列x, データ列y, color='lightblue')
x,y,zをそれぞれn,n2,n3とする	x, y, z = n, n2, n3
option: グラフの色をライトスレイグレーに設定する	color = 'lightslategrey'
文字列の先頭で正規表現にマッチするか見る	re.match(pattern, s)
現在の秒数	datetime.date.today().second
散布図のマーカーを青くする	plt.scatter(データ列x, データ列y, markerfacecolor='b')
本日が何月か知る	datetime.datetime.today().month
option: マーカーの色をレベッカパープルにする	markerfacecolor = 'rebeccapurple'
散布図を小麦色色で描画する	plt.scatter(データ列x, データ列y, color='wheat')
データフレームのカラムの中の欠損値の合計を数える	df[col].isna().sum()
横棒グラフの色をダークシアグリーンにする	plt.barh(データ列x, データ列y, color='darkseagreen')
カウンタから最頻出な項目の件数	aCounter.most_common()[1]
データフレームを二つの列によってまとめたグループ	df.groupby(['A', 'B'])
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategray')
nからn2までのstepごとによるスライス	slice(n, n2, step)
ヒストグラムをブラック色で描画する	plt.hist(データ列, color='black')
折れ線グラフのマーカーを左三角にする	plt.plot(データ列x, データ列y, marker='<')
横棒グラフをスレートブルー色で描画する	plt.barh(データ列x, データ列y, color='slateblue')
辞書からキーで指定された項目をポップする	aDict.pop(key)
縦棒グラフを描画する	plt.bar(ラベル列, データ列)
カウンタの正の数のみ残す	+aCounter
ピアソンの相関係数を求める	scipy.stats.pearsonr(データ列, データ列2)
option: グラフの色をクリムゾンに設定する	color = 'crimson'
0からnの範囲	range(n)
タプルをリストに変換する	list(aTuple)
日付時刻データをn週間前に戻す	aDatetime - datetime.timedelta(weeks=n)
折れ線グラフの丸マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='#800080')
横棒グラフをライトコーラル色で描画する	plt.barh(データ列x, データ列y, color='lightcoral')
データフレームからカテゴリデータの列を抽出する	df.select_dtypes('object')
フローラルホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='floralwhite')
リストとリストについての散布図に赤い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', c='r')
黄色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='yellow')
折れ線グラフの色をマルーンに設定する	plt.plot(データ列x, データ列y, color='maroon')
ナバホホワイト色の散布図を描画する	plt.scatter(データ列x, データ列y, color='navajowhite')
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
ブルーバイオレット色の線グラフを描画する	plt.plot(データ列x, データ列y, color='blueviolet')
ヒストグラムを二つ並べて描画する	plt.hist([データ列, データ列], color=['b', 'r'])
散布図のバツマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='x', markersize=2.0)
オリーブ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='olive')
両端キューを空にする	deq.clear()
散布図の三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='#800080')
棒グラフを青色で描画する	plt.bar(データ列x, データ列y, color='blue')
ミディアムブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumblue')
散布図の色をアンティークホワイトにする	plt.scatter(データ列x, データ列y, color='antiquewhite')
折れ線グラフの色をグリーンイエローに設定する	plt.plot(データ列x, データ列y, color='greenyellow')
ピンク色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='pink')
文字列の中で大文字・小文字を無視して正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
折れ線グラフの色をスレートブルーに設定する	plt.plot(データ列x, データ列y, color='slateblue')
ダーク・スラテグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkslategrey')
データフレームの列のユニークな値	df[col].unique()
文字列を文字リストに変換する	list(s)
データ列の値が正規分布にしたがって発生する累積確率を求める	scipy.stats.norm.cdf(データ列, loc=平均値, scale=標準偏差)
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
スレートブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='slateblue')
散布図の色をマゼンタにする	plt.scatter(データ列x, データ列y, color='magenta')
ファイルをUTF8で書き込み用にオープンする]	open(filepath, mode='w', encoding='utf-8')
ヒストグラムをロージーブラウン色で描画する	plt.hist(データ列, color='rosybrown')
year年month月day日hour時minute分の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
８進数字を全部使う	string.octdigits
リストとリストについての散布図に左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<')
折れ線グラフの色をベージュに設定する	plt.plot(データ列x, データ列y, color='beige')
棒グラフをフクシア色で描画する	plt.bar(データ列x, データ列y, color='fuchsia')
散布図のマーカーを下三角にする	plt.scatter(データ列x, データ列y, marker='v')
棒グラフの色をレベッカパープルにする	plt.bar(データ列x, データ列y, color='rebeccapurple')
文字列を右寄せにする	s.rjust(文字列幅)
全ての十六進数字	string.hexdigits
グリッド線	plt.grid(color='#800080')
ベクトルの演算をする	import numpy as np
辞書からキーの値	aDict.get(key)
折れ線グラフの色をダークマゼンタに設定する	plt.plot(データ列x, データ列y, color='darkmagenta')
オールドレース色の線グラフを描画する	plt.plot(データ列x, データ列y, color='oldlace')
折れ線グラフをクリムゾン色で描画する	plt.plot(データ列x, データ列y, color='crimson')
データ列の欠損値を最大値に設定する	ds.fillna(ds.max())
連立方程式の解を求める	sympy.solve([e, e2])
option: 丸マーカーを描画する	marker = 'o'
option: 色の透明度を設定する	alpha = 0.5
データフレームをインポートする	import pandas as pd
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
リストとリストについての散布図に赤い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', c='r')
横棒グラフをダークスレートブルー色で描画する	plt.barh(データ列x, データ列y, color='darkslateblue')
ヒストグラムを実線で描画する	plt.hist(データ列, linestyle='solid')
商と余りを同時に計算する	divmod(x, y)
option: 改行をセパレータで使う	sep = '\n'
データフレームの中で何行、重複するか見る	df.duplicated().sum()
コーンフラワーブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cornflowerblue')
ミディアムブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumblue')
アンティークホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='antiquewhite')
散布図を青くする	plt.scatter(データ列x, データ列y, color='b')
横棒グラフの色を青緑にする	plt.barh(データ列x, データ列y, color='teal')
横棒グラフの色をサーモンにする	plt.barh(データ列x, データ列y, color='salmon')
Pandasのバージョンを見る	print(pd.__version__)
棒グラフの色をダークオーキッドにする	plt.bar(データ列x, データ列y, color='darkorchid')
パパイヤウィップ色のヒストグラムを描画する	plt.hist(データ列, color='papayawhip')
横棒グラフの色をクリムゾンにする	plt.barh(データ列x, データ列y, color='crimson')
折れ線グラフの色をダークターコイズに設定する	plt.plot(データ列x, データ列y, color='darkturquoise')
option: ミディアムパープル色を使う	color = 'mediumpurple'
スラグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='slategrey')
折れ線グラフの色をダークカーキに設定する	plt.plot(データ列x, データ列y, color='darkkhaki')
横棒グラフをローングリーン色で描画する	plt.barh(データ列x, データ列y, color='lawngreen')
文字列が片仮名か調べる	('ァ' <= ch <= 'ン')
散布図をオーキッド色で描画する	plt.scatter(データ列x, データ列y, color='orchid')
データフレームのカラムの欠損値をxに設定する	df[col].fillna(x)
option: エラーがあるとき、例外を発生させるように設定する	errors = 'strict'
option: マーカーの色を青にする	markerfacecolor = 'blue'
散布図の色をフローラルホワイトにする	plt.scatter(データ列x, データ列y, color='floralwhite')
option: グラフの色をゴールドに設定する	color = 'gold'
ライトスチールブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightsteelblue')
option: マーカーの色をライトブルーにする	markerfacecolor = 'lightblue'
カウンタのキーとカウントを列挙する	aCounter.items()
辞書に辞書の項目を更新する	aDict.update(aDict2)
ファイルの拡張子	os.path.splitext(filepath)[1].lstrip('.')
コマンドの第二引数を知る	sys.argv[1]
箱ひげ図にラベルを付ける	plt.boxplot([データ列, データ列], labels=['A', 'B'])
棒グラフをラベンダー色で描画する	plt.bar(データ列x, データ列y, color='lavender')
棒グラフを紺色で描画する	plt.bar(データ列x, データ列y, color='darkblue')
横棒グラフをスカイブルー色で描画する	plt.barh(データ列x, データ列y, color='skyblue')
シーグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='seagreen')
データ列を四分位数ごとにビン分割する	pd.qcut(ds, 4)
有理数を分母の最大値を指定して近似する	q.limit_denominator(max_denominator=1000000)
文字列を隔離する	sys.intern(s)
文字列を最後の部分文字列で二分し、後半の文字列を使う	s.rpartition(sub)[-1]
タプルを展開してプリントする	print(*aTuple)
パールバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='palevioletred')
横棒グラフをミディアムパープル色で描画する	plt.barh(データ列x, データ列y, color='mediumpurple')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
折れ線グラフを半透明の点線で描画する	plt.plot(データ列x, データ列y, linestyle='dotted', alpha=0.5)
シーグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='seagreen')
predicateFuncが真となるイテラブルの要素	itertools.takewhile(predicateFunc, iterable)
変数が無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, oo)
散布図の星マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='*', markerfacecolor='k')
option: マーカーを丸に変更する	marker = 'o'
棒グラフの色をインディアンレッドにする	plt.bar(データ列x, データ列y, color='indianred')
option: グラフの色をサーモンに設定する	color = 'salmon'
ヒストグラムの色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
データ列が何月か見る	ds.dt.month
文字列を最後の部分文字列で二分し、前半の文字列を使う	s.rpartition(sub)[0]
折れ線グラフの色をコーンズシルクに設定する	plt.plot(データ列x, データ列y, color='cornsilk')
折れ線グラフのポイントマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='.', markeredgewidth=2.5)
option: グラフの色をミディアムバイオレットレッドに設定する	color = 'mediumvioletred'
データフレームのカラムの中央値	df[col].median()
折れ線グラフをライトスレイグレー色で描画する	plt.plot(データ列x, データ列y, color='lightslategray')
文字列の末尾から部分文字列を探す	s.rfind(sub)
オレンジレッド色のヒストグラムを描画する	plt.hist(データ列, color='orangered')
option: マーカーの色を赤にする	markerfacecolor = 'red'
横棒グラフをゴーストホワイト色で描画する	plt.barh(データ列x, データ列y, color='ghostwhite')
散布図に青い左三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='b')
パーセプトロンで回帰分析を行う	model = sklearn.neural_network.MLPRegressor(hidden_layer_sizes=(10, 10))
アクアマリン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='aquamarine')
三変数の最大値	max(x, y, z)
棒グラフの色をパレットトルコイズにする	plt.bar(データ列x, データ列y, color='paleturquoise')
option: マーカーの色をインディアンレッドにする	markerfacecolor = 'indianred'
青紫色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='violet')
ロイヤルブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='royalblue')
横棒グラフの色をライトスチールブルーにする	plt.barh(データ列x, データ列y, color='lightsteelblue')
文字列内にひとつでも大文字が含まれるか調べる	any(c.isupper() for c in s)
ヒストグラムをオリーブ色で描画する	plt.hist(データ列, color='olive')
確率的勾配降下で回帰分析を行う	model = sklearn.linear_model.SGDRegressor()
year年を日付に変換する	datetime.date(year=year, month=1, day=1)
二つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
棒グラフの色をミディアムパープルにする	plt.bar(データ列x, データ列y, color='mediumpurple')
ブルーバイオレット色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='blueviolet')
日付データを文字列でフォーマットして文字列に変換する	"aDate.strftime(""%d/%m/%y"")"
データ列を中央値でビン分割する	pd.qcut(ds, 2)
データフレームの指定された列をリストとして抽出する	df[column].values.tolist()
データフレームを各列毎にグループ化して、列の個数を求める	df.groupby(column)[column2].count()
ダークシアグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkseagreen')
option: グラフの色をダークマゼンタに設定する	color = 'darkmagenta'
option: マーカーの色を黄色にする	markerfacecolor = 'yellow'
横棒グラフの色をダークスラテグレーにする	plt.barh(データ列x, データ列y, color='darkslategray')
ヒストグラムをライトブルー色で描画する	plt.hist(データ列, color='lightblue')
散布図をホットピンク色で描画する	plt.scatter(データ列x, データ列y, color='hotpink')
データ列の相関係数を求める	scipy.stats.pearsonr(データ列, データ列2)
浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
データ列の曜日数	ds.dt.dayofweek
ゴールド色のヒストグラムを描画する	plt.hist(データ列, color='gold')
option: プラム色を使う	color = 'plum'
文字列が全てアスキー文字か調べる	s.isascii()
イエローグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='yellowgreen')
option: ライム色を使う	color = 'lime'
option: グラフの色をライトグリーンに設定する	color = 'lightseagreen'
散布図のポイントマーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='.', markersize=2.0)
プラム色の散布図を描画する	plt.scatter(データ列x, データ列y, color='plum')
黄色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='yellow')
ディープスカイブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='deepskyblue')
横棒グラフの色をマルーンにする	plt.barh(データ列x, データ列y, color='maroon')
ディープスカイブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='deepskyblue')
文字列を空白で区切って、整数リストに変換する	map(int, s.split())
多次元データをt-SNEで濃く次元に次元削減する	sklearn.manifold.TSNE(n_components=二).fit_transform(多次元データ)
棒グラフをバリーウッド色で描画する	plt.bar(データ列x, データ列y, color='burlywood')
タプルの末尾からn番目以前の部分を取り出す	aTuple[:-n]
データフレームの欠損値を最大値で埋める	df.fillna(df.max())
データフレームをグループ化し、それぞれの列に対し分散を求める	df.groupby(column)[column2].var()
逆順の両端キュー	reversed(deq)
option: マーカーの色をダークバイオレットにする	markerfacecolor = 'darkviolet'
option: マーカーの色を耐火レンガにする	markerfacecolor = 'firebrick'
日付データををn分後に進める	aDate + datetime.timedelta(minutes=n)
タプルの最初の文字列を探す	aTuple.index(element)
横棒グラフをグレー色で描画する	plt.barh(データ列x, データ列y, color='gray')
option: マーカーの色をライムにする	markerfacecolor = 'lime'
折れ線グラフの色をロージーブラウンに設定する	plt.plot(データ列x, データ列y, color='rosybrown')
赤いダイアモンドマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='D', c='r')
データフレームの列を目的変数にする	目的変数 = df['列名']
ダークグレー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkgray')
option: 配列のデータ型を指定する	dtype = np.int8
オリベドラブ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='olivedrab')
option: 文字列をセパレータで使う	sep = s
実数の逆双曲線正弦	math.asinh(x)
ダークオリーブグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkolivegreen')
横棒グラフの色をオリーブにする	plt.barh(データ列x, データ列y, color='olive')
棒グラフをミディアムパープル色で描画する	plt.bar(データ列x, データ列y, color='mediumpurple')
ライトイエロー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightyellow')
配列のユニークな要素	np.unique(aArray)
option: マーカーの色をグリーンにする	markerfacecolor = 'green'
黒い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='k')
リストを逆順にする	aList[::-1]
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
ヒストグラムの色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
散布図にダイアモンドマーカーを使う	plt.scatter(データ列x, データ列y, marker='D')
円周率	math.pi
横棒グラフの色をダークサーモンにする	plt.barh(データ列x, データ列y, color='darksalmon')
ポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.')
折れ線グラフの左三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='<', markeredgewidth=2.5)
option: 赤色を使う	color = 'red'
散布図をスプリンググリーン色で描画する	plt.scatter(データ列x, データ列y, color='springgreen')
ペールグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='palegreen')
kを底とする実数の対数	math.log(x, k)
option: マーカーの色をライトスレイグレーにする	markerfacecolor = 'lightslategray'
折れ線グラフのポイントマーカーを黒くする	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='k')
データフレームを小数点以下n桁で丸める	df.round(n)
option: マーカーの色をダークサーモンにする	markerfacecolor = 'darksalmon'
実数の双曲線正弦の逆数	math.asinh(x)
散布図の下三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='r')
ダークバイオレット色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkviolet')
折れ線グラフの三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='b')
文字列を走査し、正規表現に大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
データ列の中にある文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
データフレームの指定された列をリストに変換する	df[column].values.tolist()
データ列が何秒か見る	ds.dt.second
散布図をディムグレー色で描画する	plt.scatter(データ列x, データ列y, color='dimgray')
円グラフを時計回りに描画する	plt.pie(データ列, startangle=90, counterclock=False)
折れ線グラフに赤い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='r')
散布図のマーカーをバツにする	plt.scatter(データ列x, データ列y, marker='x')
横棒グラフをライトブルー色で描画する	plt.barh(データ列x, データ列y, color='lightblue')
option: マーカーの色をダークオレンジにする	markerfacecolor = 'darkorange'
ファイルからの入力ストリームを使う	open(filepath)
時間を使う	import time
リストから文字列を取り除く	aList.remove(element)
K最近傍法でクラス分類を行う	model = sklearn.neighbors.KNeighborsClassifier(n_neighbors=5)
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
破線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='dashed')
横棒グラフの色をスチールブルーにする	plt.barh(データ列x, データ列y, color='steelblue')
日付時刻データをタプルに変換する	aDatetime.timetuple()
ランダムフォレストで回帰分析を行う	model = sklearn.ensemble.RandomForestRegressor()
数式の変数を数式で置き換える	e.subs(z, e2)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
棒グラフの色をライトスレイグレーにする	plt.bar(データ列x, データ列y, color='lightslategray')
ミディアムバイオレットレッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumvioletred')
折れ線グラフを暗い赤色で描画する	plt.plot(データ列x, データ列y, color='darkred')
データフレームから重複した行を削除する	df.drop_duplicates()
文字列の大文字と小文字を交換する	s.swapcase()
横棒グラフをパープル色で描画する	plt.barh(データ列x, データ列y, color='purple')
棒グラフの色をスラグレーにする	plt.bar(データ列x, データ列y, color='slategray')
ダークシアン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkcyan')
option: グラフの色をプラムに設定する	color = 'plum'
データフレームから指定されたデータ型の列名の一覧	df.select_dtypes(型).columns
折れ線グラフの色をオレンジレッドに設定する	plt.plot(データ列x, データ列y, color='orangered')
タプルの合計値	sum(aTuple)
option: マーカーの色をダークオリーブグリーンにする	markerfacecolor = 'darkolivegreen'
散布図をシルバー色で描画する	plt.scatter(データ列x, データ列y, color='silver')
データフレームのそれぞれのグループごとの平均値	df.groupby(column).mean()
ピーチパフ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='peachpuff')
データフレームを'A'列によってによって破壊的にソートする	df.sort_values(by='A', inplace=True)
ヒストグラムをカーキ色で描画する	plt.hist(データ列, color='khaki')
標準出力のバッファをフラッシュする	sys.stdout.flush()
折れ線グラフのラベルを設定する	plt.plot(データ列x, データ列y, label='ラベル')
散布図の右三角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='k')
文字列を緑色にする	f'\033[32m{value}\033[0m'
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
折れ線グラフをロージーブラウン色で描画する	plt.plot(データ列x, データ列y, color='rosybrown')
nかつn2	n and n2
リストとリストについての散布図に黒い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', c='k')
文字列を部分文字列で二分する	s.partition(sub)
イテラブルにイテラブルを続ける	itertools.chain(iterable, iterable2)
色付きの実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='#800080')
ファイルのディレクトリ名	os.path.dirname(filepath)
標準入力から1文字だけ読む	sys.stdin.read(1)
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(データ列x, データ列y, color='sandybrown')
整数nの二進表現	bin(n)
option: オールドレース色を使う	color = 'oldlace'
ヒストグラムをスレートブルー色で描画する	plt.hist(データ列, color='slateblue')
縦軸の目盛を整数のみにする	plt.yticks(np.arange(最小値, 最大値, 間隔))
散布図をライムグリーン色で描画する	plt.scatter(データ列x, データ列y, color='limegreen')
集合の濃度	len(aSet)
配列の形状	aArray.shape
ロイヤルブルー色のヒストグラムを描画する	plt.hist(データ列, color='royalblue')
散布図をイエローグリーン色で描画する	plt.scatter(データ列x, データ列y, color='yellowgreen')
データフレームを列によってグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
横棒グラフの色をチョコレートにする	plt.barh(データ列x, データ列y, color='chocolate')
散布図の色をチョコレートにする	plt.scatter(データ列x, データ列y, color='chocolate')
nとn2の排他的論理和	n ^ n2
option: グラフの色を青紫に設定する	color = 'violet'
ヒストグラムと勾配ブースティングでクラス分類を行う	model = sklearn.ensemble.HistGradientBoostingClassifier()
ヒストグラムの色を茶色に設定する	plt.hist(データ列, color='brown')
横棒グラフの色をホットピンクにする	plt.barh(データ列x, データ列y, color='hotpink')
横棒グラフをビスク色で描画する	plt.barh(データ列x, データ列y, color='bisque')
ライム色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lime')
データ列間の平均二乗誤差を求める	sklearn.metrics.mean_squared_error(データ列, データ列2)
文字列をシンボルに変換する	sympy.Symbol(s)
横棒グラフの色を青紫にする	plt.barh(データ列x, データ列y, color='violet')
option: グラフの色をスレートブルーに設定する	color = 'slateblue'
散布図をダークサーモン色で描画する	plt.scatter(データ列x, データ列y, color='darksalmon')
文字列の両端から空白を取り除く	s.strip()
文字列の先頭で複数行対応として正規表現にマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
データフレームの各次元の大きさを見る	df.shape
整数をゼロ埋めした文字列に変換する	str(n).zfill(文字列幅)
ヒストグラムの色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
option: シルバー色を使う	color = 'silver'
シーグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='seagreen')
棒グラフの色をブルーバイオレットにする	plt.bar(データ列x, データ列y, color='blueviolet')
文字列を右トリムする	s.rstrip()
year年month月day日hour時minute分を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
Pythonパスにディレクトリを追加する	sys.path.append(dir)
事前に複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
黒い下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v', c='k')
赤い丸マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='o', c='r')
横棒グラフの色をビスクにする	plt.barh(データ列x, データ列y, color='bisque')
横棒グラフの色をライトグレーにする	plt.barh(データ列x, データ列y, color='lightgrey')
文字列を下線付きにする	f'\033[4m{value}\033[0m'
データフレームの列の文字列長を列として使う	df[col].str.len()
option: シャルトリューズ色を使う	color = 'chartreuse'
日付データが金曜日か調べる	aDate.weekday() == 4
散布図をシーグリーン色で描画する	plt.scatter(データ列x, データ列y, color='seagreen')
ファイルをバイナリ書き込みモードでオープンする]	open(filepath, mode='wb')
ヒストグラムをライトサーモン色で描画する	plt.hist(データ列, color='lightsalmon')
集合の浅いコピー	aSet.copy()
データフレームに重複があるか見る	df.duplicated()
棒グラフの色を黄色にする	plt.bar(データ列x, データ列y, color='yellow')
データフレームの列名を指定された列の名前一覧に置き換える	df.columns = columns
ライトイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightyellow')
折れ線グラフのマーカーを丸にする	plt.plot(データ列x, データ列y, marker='o')
データフレームの先頭n行	df.head(n)
カウンタ同士で積集合演算する	aCounter & aCounter2
折れ線グラフの色をシスルに設定する	plt.plot(データ列x, データ列y, color='thistle')
辞書のキーを列挙する	list(aDict)
二つのオブジェクトが等しいか調べる	obj == obj2
横棒グラフを暗い赤色で描画する	plt.barh(データ列x, データ列y, color='darkred')
折れ線グラフの色をインディゴに設定する	plt.plot(データ列x, データ列y, color='indigo')
リストをビン分割する	pd.cut(aList, aList)
散布図に四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s')
ヒストグラムの色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(データ列x, データ列y, color='forestgreen')
横棒グラフの色をオールドレースにする	plt.barh(データ列x, データ列y, color='oldlace')
横棒グラフをライトスチールブルー色で描画する	plt.barh(データ列x, データ列y, color='lightsteelblue')
データ列のユニークな値	ds.unique()
データ列をインポートする	import pandas as pd
折れ線グラフの色を耐火レンガに設定する	plt.plot(データ列x, データ列y, color='firebrick')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(データ列x, データ列y, color='blueviolet')
ヒストグラムをダークグレー色で描画する	plt.hist(データ列, color='darkgray')
option: ダークグレー色を使う	color = 'darkgrey'
散布図に赤いポイントマーカーを描画する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='r')
オブジェクトのバイトサイズ	sys.getsizeof(obj)
option: マーカーの色をラベンダーにする	markerfacecolor = 'lavender'
データフレームのリストカラムのどの値が頻出か見る	df[aList].mode()
ヒストグラムをオーキッド色で描画する	plt.hist(データ列, color='orchid')
データフレームのカラムの曜日の名前	df[col].dt.weekday_name
実数のn乗	x ** n
スクリプトの名前	sys.argv[0]
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
文字列の変数名を数式に変換する	sympy.Symbol(s)
データフレームをグループ化し、それぞれの列に対し個数を求める	df.groupby(column)[column2].count()
本日の日付時刻	datetime.datetime.today()
棒グラフの色をダークグリーンにする	plt.bar(データ列x, データ列y, color='darkgreen')
ライトサーモン色のヒストグラムを描画する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
全要素を０で初期化した三二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
散布図に黒いポイントマーカーを描画する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='k')
nとn2の商	n / n2
青紫色の散布図を描画する	plt.scatter(データ列x, データ列y, color='violet')
三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^')
ヒストグラムの色をライムに設定する	plt.hist(データ列, color='lime')
折れ線グラフに三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^')
リストとリストを連結する	aList + aList2
散布図に青いポイントマーカーを描画する	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='b')
行列の行ごとの標準偏差	np.std(aArray, axis=1)
データを最大最小値で標準化する	sklearn.preprocessing.MinMaxScaler().fit_transform(データ)
ヒストグラムの色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
二つの文字列をケースを無視して比較する	s.casefold() < s2.casefold()
棒グラフの色を紺にする	plt.bar(データ列x, データ列y, color='darkblue')
折れ線グラフの四角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='s', markerfacecolor='#800080')
データフレームからランダムに抽出する	df.sample()
スラグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='slategrey')
option: シアン色を使う	color = 'cyan'
アクア色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='aqua')
データフレームのヒストグラムを横に並べて、可視化する	sns.displot(df, x='列名', col='カテゴリ名')
散布図をミントクリーム色で描画する	plt.scatter(データ列x, データ列y, color='mintcream')
折れ線グラフの下三角マーカーを黒くする	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='k')
option: ミディアムスプリンググリーン色を使う	color = 'mediumspringgreen'
option: グラフの色をオレンジレッドに設定する	color = 'orangered'
nが-9以上、9以下か調べる	-9 <= n <= 9
実数に実数を掛ける	x * y
サーモン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='salmon')
option: 貝殻色を使う	color = 'seashell'
横棒グラフの色をダークグレーにする	plt.barh(データ列x, データ列y, color='darkgrey')
バイオリン図を描画する	sns.violinplot(x='カテゴリ列', y='列', data=df)
折れ線グラフをマゼンタ色で描画する	plt.plot(データ列x, データ列y, color='magenta')
文字列がタプルに含まれないか調べる	element not in aTuple
グラフの補助目盛を有効にする	plt.minorticks_on()
データフレームから列を二つ選択する	df[[column, column2]]
折れ線グラフの色をゴールドに設定する	plt.plot(データ列x, データ列y, color='gold')
既存の配列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
データフレームの指定された列を配列に変換する	df[column].values
カデットブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='cadetblue')
折れ線グラフの下三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='r')
折れ線グラフをアクアマリン色で描画する	plt.plot(データ列x, データ列y, color='aquamarine')
option: グラフの色をダークゴールデンロッドに設定する	color = 'darkgoldenrod'
黒い右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>', c='k')
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
オリベドラブ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='olivedrab')
行列の行ごとの最大値	np.max(aArray, axis=1)
散布図の左三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='<', markerfacecolor='#800080')
タプルをナンバリングする	enumerate(aTuple)
ヒストグラムをナバホホワイト色で描画する	plt.hist(データ列, color='navajowhite')
データフレームのリストカラムを丸めて、整数型にする	df[aList].round().astype(int)
リストとリストについての散布図にrgbのバツマーカーを描画する	plt.plot(データ列x, データ列y, marker='x', c=rgb)
文字列の開始位置以降が部分文字列で始まるか調べる	s.startswith(sub, start)
データ列の母標準偏差	ds.std(ddof=0)
棒グラフをオリーブ色で描画する	plt.bar(データ列x, データ列y, color='olive')
散布図の色をパープルにする	plt.scatter(データ列x, データ列y, color='purple')
折れ線グラフをシルバー色で描画する	plt.plot(データ列x, データ列y, color='silver')
option: ターコイズ色を使う	color = 'turquoise'
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
option: マーカーの色をシエナにする	markerfacecolor = 'sienna'
option: 配列のデータ型を指定する	dtype = np.int16
数式の積分を求める	sympy.integrate(e)
横棒グラフを青緑色で描画する	plt.barh(データ列x, データ列y, color='teal')
option: 淡いピンク色色を使う	color = 'lightpink'
ファイルから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
散布図を白色で描画する	plt.scatter(データ列x, データ列y, color='white')
散布図をダークスレートブルー色で描画する	plt.scatter(データ列x, データ列y, color='darkslateblue')
配列を転置する	aArray.T
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(データ列x, データ列y, color='midnightblue')
色名とカラーコードの対応表を使う	matplotlib.colors.cnames
ファイルを書き込みできるようにオープンする]	open(filepath, mode='w')
散布図をパールバイオレットレッド色で描画する	plt.scatter(データ列x, データ列y, color='palevioletred')
折れ線グラフをライトグレー色で描画する	plt.plot(データ列x, データ列y, color='lightgray')
横棒グラフの色をパールゴールデンロッドにする	plt.barh(データ列x, データ列y, color='palegoldenrod')
新しい線形回帰モデルを作る	model = sklearn.linear_model.LinearRegression()
横棒グラフをミントクリーム色で描画する	plt.barh(データ列x, データ列y, color='mintcream')
ヒストグラムをパールバイオレットレッド色で描画する	plt.hist(データ列, color='palevioletred')
データフレームを各列毎にグループ化して、列の最小値を求める	df.groupby(column)[column2].min()
データフレームの中に文字列と文字列がいくつあるか数える	df.isin([value, value2]).sum()
実数の三乗	x ** 3
イエローグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='yellowgreen')
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(データ列x, データ列y, color='darkslategrey')
データフレームのリストカラムの欠損値を直後の値で埋める	df[aList].fillna(method='bfill')
ミディアムバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumvioletred')
option: マーカーの色をオリーブにする	markerfacecolor = 'olive'
文字列の接尾辞が部分文字列か調べる	s.endswith(sub)
点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted')
option: マーカーの色をダークシアグリーンにする	markerfacecolor = 'darkseagreen'
棒グラフの色をライトスチールブルーにする	plt.bar(データ列x, データ列y, color='lightsteelblue')
棒グラフを小麦色色で描画する	plt.bar(データ列x, データ列y, color='wheat')
データフレームを列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
横棒グラフの色をフクシアにする	plt.barh(データ列x, データ列y, color='fuchsia')
ダークサーモン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darksalmon')
横棒グラフの色をオレンジレッドにする	plt.barh(データ列x, データ列y, color='orangered')
データ列の中央値	ds.median()
ネイピア数	math.e
シアン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='cyan')
乱数シードをnで固定する	random.seed(n)
横棒グラフをアンティークホワイト色で描画する	plt.barh(データ列x, データ列y, color='antiquewhite')
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
option: マーカーの色を紺にする	markerfacecolor = 'darkblue'
CSVファイルTSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
option: セパレータをタブにする	sep = '\t'
データ列の年	ds.dt.year
ファイルをオープンして]、バイナリストリームを使う	open(filepath, mode='rb')
option: マーカーの色をミディアムターコイズにする	markerfacecolor = 'mediumturquoise'
横棒グラフの色をバリーウッドにする	plt.barh(データ列x, データ列y, color='burlywood')
option: グラフの色をグリーンイエローに設定する	color = 'greenyellow'
option: グラフの色を暗い赤に設定する	color = 'darkred'
ダークバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='darkviolet')
配列の次元を変形する	aArray.reshape(行数, 列数)
辞書の浅いコピーを作る	aDict.copy()
散布図をシエナ色で描画する	plt.scatter(データ列x, データ列y, color='sienna')
散布図を紺色で描画する	plt.scatter(データ列x, データ列y, color='darkblue')
散布図に赤いダイアモンドマーカーを使う	plt.plot(データ列x, データ列y, marker='D', c='r')
ミディアムブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumblue')
折れ線グラフをダークオレンジ色で描画する	plt.plot(データ列x, データ列y, color='darkorange')
データフレームのカラムを10の位で丸める	df[col].round(-1)
両端キューの先頭から要素を取り除く	deq.popleft()
散布図の色をミディアムターコイズにする	plt.scatter(データ列x, データ列y, color='mediumturquoise')
データフレームの行を条件でフィルタするには	df[(df[column] == x) & (df[column2] == x2)]
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
折れ線グラフをダークシアン色で描画する	plt.plot(データ列x, データ列y, color='darkcyan')
折れ線グラフの色を黄色に設定する	plt.plot(データ列x, データ列y, color='yellow')
散布図に丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o')
0からnまでのスライス	slice(n)
option: ダークシアグリーン色を使う	color = 'darkseagreen'
option: グラフの色をライトサーモンに設定する	color = 'lightsalmon'
データフレームが重複しているか調べる	df.duplicated()
横棒グラフの色をカーキにする	plt.barh(データ列x, データ列y, color='khaki')
option: マーカーの大きさを変更する	markersize = 2.0
文字列の接頭辞から部分文字列を取り除く	s.removeprefix(sub)
横棒グラフの色をライトゴールドロディイエローにする	plt.barh(データ列x, データ列y, color='lightgoldenrodyellow')
日付時刻データの曜日を整数で使う	aDatetime.weekday()
散布図の色をアイボリーにする	plt.scatter(データ列x, データ列y, color='ivory')
散布図の三角マーカーの大きさを変更する	plt.scatter(データ列x, データ列y, marker='^', markersize=2.0)
ポイント印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='.')
xが-9以上、9以下か調べる	-9 <= x <= 9
文字列を走査し、正規表現にマッチするか見る	re.search(pattern, s)
赤い星マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='*', c='r')
データフレームのカラムの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
二進文字列を整数に変換する	int(s, 2)
クラス分類の正解率を求める	sklearn.metrics.accuracy_score(正解データ列, 予測データ列)
ふたつの集合の対称差集合	aSet.symmetric_difference(aSet2)
横棒グラフの色をミディアムアクアマリンにする	plt.barh(データ列x, データ列y, color='mediumaquamarine')
ロードされたモジュールの一覧	sys.modules
オブジェクトはリストかタプルか調べる	isinstance(obj, (list)
コマンドラインフラグの状態	sys.flags
nからn2までのスライス	slice(n, n2)
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgrey')
棒グラフの色をダークスレートブルーにする	plt.bar(データ列x, データ列y, color='darkslateblue')
カウンタの項目のカウント	aCounter[element]
データフレームを'A'列の値によってグループ化する	df.groupby('A')
日付時刻データをn日前に戻す	aDatetime - datetime.timedelta(days=n)
折れ線グラフを淡いピンク色色で描画する	plt.plot(データ列x, データ列y, color='lightpink')
散布図を白くする	plt.scatter(データ列x, データ列y, color='w')
散布図にポイントマーカーを使う	plt.scatter(データ列x, データ列y, marker='.')
データフレームをJSONLファイルにヘッダを付けずに保存する	df.to_csv(filename, header=None)
集合から別の集合の要素を全て取り除く	aSet.difference_update(aSet2)
横棒グラフをゴールド色で描画する	plt.barh(データ列x, データ列y, color='gold')
モデルの平均二乗誤差を求める	sklearn.metrics.mean_squared_error(目的変数, model.predict(説明変数))
文字列の開始位置から終了位置までの範囲で部分文字列の出現をカウントする	s.count(sub, start, end)
エクセルファイルファイルからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
棒グラフの色をライトゴールドロディイエローにする	plt.bar(データ列x, データ列y, color='lightgoldenrodyellow')
パウダーブルー色のヒストグラムを描画する	plt.hist(データ列, color='powderblue')
アイボリー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='ivory')
option: ダークターコイズ色を使う	color = 'darkturquoise'
散布図の下三角マーカーを青くする	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='b')
ミディアムオーキッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumorchid')
グラフの横軸のラベルを設定する	plt.xlabel('x軸ラベル')
棒グラフをダークオレンジ色で描画する	plt.bar(データ列x, データ列y, color='darkorange')
棒グラフをゴーストホワイト色で描画する	plt.bar(データ列x, データ列y, color='ghostwhite')
option: 大バツマーカーを描画する	marker = 'X'
データフレームのリストカラムの値をValueMapでまとめて置き換える	df[aList].replace(ValueMap)
データフレームを列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
文字列中の部分文字列を新しい文字列に置き換える	s.replace(sub, newsub)
棒グラフの色をシャルトリューズにする	plt.bar(データ列x, データ列y, color='chartreuse')
円グラフを真円にする	plt.axis('equals')
ダークシアン色のヒストグラムを描画する	plt.hist(データ列, color='darkcyan')
黒い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='k')
データフレームの列がx以上かつx2未満の行を抽出する	df[(x <= df[column]) & (df[column] < x2)]
列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, on=column, how='outer')
二つのオブジェクトが同一参照か調べる	obj is obj2
ユーザから入力される	int(input())
ファイル全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
棒グラフをロージーブラウン色で描画する	plt.bar(データ列x, データ列y, color='rosybrown')
データフレームをJSONLファイルに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ライムグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='limegreen')
JSON形式の文字列を辞書に変換する	json.loads(jsonString)
ダークグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkgrey')
事前に大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
棒グラフをアイボリー色で描画する	plt.bar(データ列x, データ列y, color='ivory')
ヒストグラムの色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v')
データ列の中に文字列があるか調べる	ds.isin([value])
散布図の色をライトグレーにする	plt.scatter(データ列x, データ列y, color='lightgrey')
レモンシフォン色のヒストグラムを描画する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムをライトグレー色で描画する	plt.hist(データ列, color='lightgray')
シアン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cyan')
散布図に左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<')
文字列をバイト列に変換する	bytes(s)
ヒストグラムをローングリーン色で描画する	plt.hist(データ列, color='lawngreen')
紺碧色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='azure')
option: バイナリモードを使う	mode = 'rb'
データフレームから列を４つ選択する	df[[column, column2, column3, column4]]
棒グラフをコーラル色で描画する	plt.bar(データ列x, データ列y, color='coral')
折れ線グラフの色をダークサーモンに設定する	plt.plot(データ列x, データ列y, color='darksalmon')
実数のk進対数	math.log(x, k)
両端キューの要素をインプレースに反転する	deq.reverse()
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(データ列x, データ列y, color='paleturquoise')
日付時刻データををn秒後に進める	aDatetime + datetime.timedelta(seconds=n)
ヒストグラムの色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
アルファベットの文字列	string.ascii_letters
日付時刻データにn時間分、加算する	aDatetime + datetime.timedelta(hours=n)
ダークオリーブグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkolivegreen')
文字列が文字列より辞書順で前か調べる	s < s2
パパイヤウィップ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='papayawhip')
自然数の最大公約数	math.gcd(n, n2)
文字列をセパレータで分割して、文字列リストに変換する	s.split(sep)
データ列を横棒グラフにする	plt.barh(ラベル列, データ列)
二変数の最大値	max(x, y)
ミディアムスレートブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumslateblue')
文字列の終了位置より前に部分文字列が含まれるか調べる	s.find(sub, 0, end) != -1
文字列の末尾から範囲を指定して部分文字列を探す	s.find(sub, start, end)
ライトスカイブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightskyblue')
横棒グラフをパウダーブルー色で描画する	plt.barh(データ列x, データ列y, color='powderblue')
option: グリーン色を使う	color = 'green'
option: ホワイトスモーク色を使う	color = 'whitesmoke'
配列をn個にビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
散布図の色をダークシアグリーンにする	plt.scatter(データ列x, データ列y, color='darkseagreen')
ハニーデュー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='honeydew')
折れ線グラフのマーカーをダイアモンドにする	plt.plot(データ列x, データ列y, marker='D')
日付データをn分前に戻す	aDate - datetime.timedelta(minutes=n)
データフレームの値が欠損値か調べる	df.isna()
棒グラフの色をミディアムオーキッドにする	plt.bar(データ列x, データ列y, color='mediumorchid')
チョコレート色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='chocolate')
クリムゾン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='crimson')
ファイルをオープンして]、書き込みストリームを使う	open(filepath, mode='w')
ヒストグラムの色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
nがn2で割り切れないか調べる	n % n2 != 0
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
折れ線グラフのバツマーカーの色を変更する	plt.plot(データ列x, データ列y, marker='x', markerfacecolor='#800080')
日付時刻データが日付時刻データより後ろか調べる	aDatetime > aDatetime2
散布図をナバホホワイト色で描画する	plt.scatter(データ列x, データ列y, color='navajowhite')
折れ線グラフの線の種類を点線に設定する	plt.plot(データ列x, データ列y, linestyle='dotted')
横棒グラフの色をライトイエローにする	plt.barh(データ列x, データ列y, color='lightyellow')
option: グラフの色をゲインズボロに設定する	color = 'gainsboro'
棒グラフをパレットトルコイズ色で描画する	plt.bar(データ列x, データ列y, color='paleturquoise')
グラフの中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
折れ線グラフをダークグリーン色で描画する	plt.plot(データ列x, データ列y, color='darkgreen')
文字列をシンボルにして、変数にする	z = sympy.Symbol(s)
リストとリストについて散布図を描画して、マーカーを右三角に設定する	plt.plot(データ列x, データ列y, marker='>')
横棒グラフの色をホワイトスモークにする	plt.barh(データ列x, データ列y, color='whitesmoke')
散布図をマルーン色で描画する	plt.scatter(データ列x, データ列y, color='maroon')
文字列が全て大文字か調べる	s.isupper()
option: 欠損値を先頭にする	na_position = 'first'
折れ線グラフの色をオーキッドに設定する	plt.plot(データ列x, データ列y, color='orchid')
データフレームの列を破壊的に削除する	df.drop(column, axis=1, inplace=True)
折れ線グラフの右三角マーカーの色を変更する	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='#800080')
ダークグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkgreen')
散布図に青い右三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='>', markerfacecolor='b')
横棒グラフを青くする	plt.barh(データ列x, データ列y, color='b')
整数nの八進文字列	oct(n)[2:]
グリッド線	plt.grid(linewidth=3.0)
ヒストグラムの色をシルバーに設定する	plt.hist(データ列, color='silver')
ヒストグラムの色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ダークシアグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkseagreen')
ヒストグラムをラベンダー色で描画する	plt.hist(データ列, color='lavender')
黒いポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.', c='k')
散布図に赤い三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^', c='r')
折れ線グラフをグリーン色で描画する	plt.plot(データ列x, データ列y, color='green')
折れ線グラフの下三角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='v', markersize=2.0)
散布図の色をダークターコイズにする	plt.scatter(データ列x, データ列y, color='darkturquoise')
配列のユニークな要素とその個数	u, counts = np.unique(aArray, return_counts=True)
文字列はタイトルケースか調べる	s.istitle()
実数を実数で割る	x / y
クラスのサブクラスか調べる	issubclass(サブクラス, クラス)
イテラブルを両端キューに変換する	collections.deque(iterable)
Pythonのバージョン	sys.version
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
カウンタを高頻出方から列挙する	aCounter.most_common()
配列を平坦にする	aArray.flatten()
両端キューの先頭にイテラブルの各要素を追加する	deq.extendleft(iterable)
ドジャーブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='dodgerblue')
棒グラフをゴールデンロッド色で描画する	plt.bar(データ列x, データ列y, color='goldenrod')
データフレームのカラムの母標準偏差	df[col].std(ddof=0)
日付時刻データを浮動小数点数に変換する	aDatetime.timestamp()
折れ線グラフをダークオーキッド色で描画する	plt.plot(データ列x, データ列y, color='darkorchid')
横棒グラフをラベンダー色で描画する	plt.barh(データ列x, データ列y, color='lavender')
データフレームのリストカラムの欠損値を中央値で埋める	df[aList].fillna(df[aList].median())
要素∈集合	element in aSet
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(データ列x, データ列y, color='floralwhite')
折れ線グラフのポイントマーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='.', markersize=2.0)
データフレームのカラムの歪度	df[col].kurt()
データフレームをグループ化し、それぞれの列に対し最大値を求める	df.groupby(column)[column2].max()
エクセルファイルファイルから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
二つの浮動小数点数が十分に近いか調べる	math.isclose(x, x2)
折れ線グラフの色をペルーに設定する	plt.plot(データ列x, データ列y, color='peru')
横棒グラフを黄色くする	plt.barh(データ列x, データ列y, color='y')
日付時刻データの日数	aDatetime.day
黄色色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='yellow')
散布図の色を紺にする	plt.scatter(データ列x, データ列y, color='darkblue')
option: マーカーの色をペールグリーンにする	markerfacecolor = 'palegreen'
棒グラフの色をフクシアにする	plt.bar(データ列x, データ列y, color='fuchsia')
散布図をライム色で描画する	plt.scatter(データ列x, データ列y, color='lime')
黄色色のヒストグラムを描画する	plt.hist(データ列, color='yellow')
シーグリーン色のヒストグラムを描画する	plt.hist(データ列, color='seagreen')
横棒グラフの色をスノーにする	plt.barh(データ列x, データ列y, color='snow')
実数の逆正弦	math.asin(x)
nわるn2	n / n2
ヒストグラムの色をマゼンタに設定する	plt.hist(データ列, color='magenta')
折れ線グラフをトマト色で描画する	plt.plot(データ列x, データ列y, color='tomato')
白いヒストグラムを描画する	plt.hist(データ列, color='w')
リストのn番目以降の部分を取り出す	aList[n:]
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリストカラムの中に文字列と文字列がいくつあるか数える	df[aList].isin([value, value2]).sum()
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
横棒グラフの色をデピンクにする	plt.barh(データ列x, データ列y, color='deeppink')
ヒストグラムをダークマゼンタ色で描画する	plt.hist(データ列, color='darkmagenta')
散布図をダークグレー色で描画する	plt.scatter(データ列x, データ列y, color='darkgrey')
辞書からキーの値か、もしくは要素を得る	aDict.get(key, element)
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
データフレームの列からユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
棒グラフの色をベージュにする	plt.bar(データ列x, データ列y, color='beige')
黒いグリッド線を引く	plt.grid(color='k')
ライトグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightseagreen')
折れ線グラフの色をオレンジに設定する	plt.plot(データ列x, データ列y, color='orange')
データ列を等量でビン数nでビン分割する	pd.qcut(ds, n)
option: 大文字・小文字を無視する	flag = re.IGNORECASE
option: グラフの色をミディアムシアグリーンに設定する	color = 'mediumseagreen'
折れ線グラフの色をバリーウッドに設定する	plt.plot(データ列x, データ列y, color='burlywood')
棒グラフをピンク色で描画する	plt.bar(データ列x, データ列y, color='pink')
整数nが配列のどれかか調べる	n in aArray
折れ線グラフを青い破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='b')
正則化付き線形回帰分析の準備をする	model = sklearn.linear_model.ElasticNet()
ヒストグラムの色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
新しいリッジ回帰とロッソ回帰のハイブリットモデルを作る	model = sklearn.linear_model.ElasticNet()
棒グラフを耐火レンガ色で描画する	plt.bar(データ列x, データ列y, color='firebrick')
nをn2分の一にする	n /= n2
棒グラフの色を淡いピンク色にする	plt.bar(データ列x, データ列y, color='lightpink')
日付データをn時間前に戻す	aDate - datetime.timedelta(hours=n)
散布図の下三角マーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='#800080')
折れ線グラフをペルー色で描画する	plt.plot(データ列x, データ列y, color='peru')
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームを丸めて、整数型にする	df.round().astype(int)
データフレームのカラムの第一四分位数	df[col].quantile(0.25)
データフレームのリストカラムの欠損値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームを100の位で丸める	df.round(-2)
散布図の色をディムグレーにする	plt.scatter(データ列x, データ列y, color='dimgray')
イテラブルをカウンタに変換する	collections.Counter(iterable)
数式を積分する	sympy.integrate(e)
折れ線グラフを青い一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='b')
ヒストグラムを三つ並べて描画する	plt.hist([データ列, データ列, データ列], color=['b', 'r', 'g'])
option: グラフの色を青に設定する	color = 'blue'
option: マーカーの色をシャルトリューズにする	markerfacecolor = 'chartreuse'
グリッドの線の種類を点線に変更する	plt.grid(linestyle='dotted')
横棒グラフをライトグリーン色で描画する	plt.barh(データ列x, データ列y, color='lightgreen')
文字列に日本語が含まれるか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
nの桁数	len(str(n))
rgbのバツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='x', c=rgb)
棒グラフをブランチドアーモンド色で描画する	plt.bar(データ列x, データ列y, color='blanchedalmond')
折れ線グラフをミッドナイトブルー色で描画する	plt.plot(データ列x, データ列y, color='midnightblue')
nをn2だけ左シフトする	n << n2
折れ線グラフをデピンク色で描画する	plt.plot(データ列x, データ列y, color='deeppink')
標準正規分布の確率密度関数	scipy.stats.norm.pdf(x)
折れ線グラフに黒い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', markerfacecolor='k')
バリーウッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='burlywood')
nかけるn2	n * n2
多次元データを多次元尺度構成法で淡く次元に次元削減する	sklearn.manifold.MSD(n_components=三).fit_transform(多次元データ)
横棒グラフをダークターコイズ色で描画する	plt.barh(データ列x, データ列y, color='darkturquoise')
散布図の色をブランチドアーモンドにする	plt.scatter(データ列x, データ列y, color='blanchedalmond')
option: グラフの色をダークバイオレットに設定する	color = 'darkviolet'
option: マーカーの色をライトスカイブルーにする	markerfacecolor = 'lightskyblue'
ヒストグラムと勾配ブースティングで回帰分析を行う	model = sklearn.ensemble.HistGradientBoostingRegressor()
モカシン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='moccasin')
多次元データを特異値分解でパステル調に次元に次元削減する	sklearn.decomposition.TruncatedSVD(n_components=N).fit_transform(多次元データ)
option: グラフの色を小麦色に設定する	color = 'wheat'
文字列をISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
棒グラフをサーモン色で描画する	plt.bar(データ列x, データ列y, color='salmon')
option: 改行の代わりに文字列を用いる	end = s
リストをナンバリングする	enumerate(aList)
ヒストグラムをアクアマリン色で描画する	plt.hist(データ列, color='aquamarine')
n割るn2を切り上げる	(n + n2 - 1) // n2
nullに等しい値	None
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgray')
option: バッファリングのサイズを設定する	buffering = 4096
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列x, データ列y, color='dimgray')
散布図の色をグレーにする	plt.scatter(データ列x, データ列y, color='grey')
日付時刻データが月曜日か調べる	aDatetime.weekday() == 0
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
横棒グラフの色をシエナにする	plt.barh(データ列x, データ列y, color='sienna')
棒グラフをハニーデュー色で描画する	plt.bar(データ列x, データ列y, color='honeydew')
データ列の欠損値を中央値に設定する	ds.fillna(ds.median())
散布図を青緑色で描画する	plt.scatter(データ列x, データ列y, color='teal')
折れ線グラフをオレンジ色で描画する	plt.plot(データ列x, データ列y, color='orange')
文字列中から正規表現にマッチする文字列を探す	re.search(pattern, s)
バギングで回帰分析を行う	model = sklearn.ensemble.BaggingRegressor(n_estimators=10)
棒グラフの色をオレンジにする	plt.bar(データ列x, データ列y, color='orange')
ヒストグラムをサンディーブラウン色で描画する	plt.hist(データ列, color='sandybrown')
二つのデータフレームを縦方向に連結する	pd.concat([df, df2], axis=0)
UNIXコマンドtextを実行する	os.system(text)
折れ線グラフの色をダークグリーンに設定する	plt.plot(データ列x, データ列y, color='darkgreen')
ヒストグラムの色をシアンに設定する	plt.hist(データ列, color='cyan')
リストの要素をソートする	sorted(aList)
横棒グラフの色を紺にする	plt.barh(データ列x, データ列y, color='darkblue')
青い棒グラフを描画する	plt.bar(データ列x, データ列y, color='b')
棒グラフの色をグレーにする	plt.bar(データ列x, データ列y, color='gray')
データ列の尖度	ds.skew()
散布図をパウダーブルー色で描画する	plt.scatter(データ列x, データ列y, color='powderblue')
カデットブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='cadetblue')
全要素を初期値で初期化した行列	np.full((行数, 列数), 初期値, dtype=np.int)
predicateFuncが真となるイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
ミディアムスレートブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumslateblue')
改行	'\n'
折れ線グラフをダークシアグリーン色で描画する	plt.plot(データ列x, データ列y, color='darkseagreen')
option: グラフの色をパレットトルコイズに設定する	color = 'paleturquoise'
横棒グラフをミディアムオーキッド色で描画する	plt.barh(データ列x, データ列y, color='mediumorchid')
横棒グラフの色をシーグリーンにする	plt.barh(データ列x, データ列y, color='seagreen')
散布図の色をゴーストホワイトにする	plt.scatter(データ列x, データ列y, color='ghostwhite')
折れ線グラフをアクア色で描画する	plt.plot(データ列x, データ列y, color='aqua')
データフレームのカラムのどの値が頻出か見る	df[col].mode()
集合をイミュータブルなセットに変換する	frozenset(aSet)
文字列リストを連結してひとつの文字列にする	''.join(aStringList)
赤色の散布図を描画する	plt.scatter(データ列x, データ列y, color='red')
データフレームの中の列をn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
nを切り捨てながら半分にする	n //= 2
option: ダーク・スラテグレー色を使う	color = 'darkslategrey'
リストとリストについて散布図を描画して、右三角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='>', c=rgb)
散布図をアクアマリン色で描画する	plt.scatter(データ列x, データ列y, color='aquamarine')
ヒストグラムをピンク色で描画する	plt.hist(データ列, color='pink')
横棒グラフの色をグレーにする	plt.barh(データ列x, データ列y, color='gray')
ミディアムシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムの色をペルーに設定する	plt.hist(データ列, color='peru')
折れ線グラフの色をドジャーブルーに設定する	plt.plot(データ列x, データ列y, color='dodgerblue')
散布図の色をネイビーにする	plt.scatter(データ列x, データ列y, color='navy')
ヒストグラムをダークスレートブルー色で描画する	plt.hist(データ列, color='darkslateblue')
文字列を黄色にする	f'\033[33m{value}\033[0m'
両端キューに要素をプッシュする	deq.append(element)
散布図のポイントマーカーを青くする	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='b')
Pandasで、フォーマットで文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
ヒストグラムをコーラル色で描画する	plt.hist(データ列, color='coral')
文字列のケースを入れ替える	s.swapcase()
ヒストグラムの色をピンクに設定する	plt.hist(データ列, color='pink')
文字列を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
縦軸の目盛の表示を変更する	plt.yticks(目盛りの値リスト)
横棒グラフをホワイトスモーク色で描画する	plt.barh(データ列x, データ列y, color='whitesmoke')
文字列の開始位置からと終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
折れ線グラフをラベンダーブラッシュ色で描画する	plt.plot(データ列x, データ列y, color='lavenderblush')
パレットトルコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='paleturquoise')
貝殻色のヒストグラムを描画する	plt.hist(データ列, color='seashell')
折れ線グラフをダークオリーブグリーン色で描画する	plt.plot(データ列x, データ列y, color='darkolivegreen')
文字列中から正規表現に複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
折れ線グラフに青い大バツマーカーを描画する	plt.plot(データ列x, データ列y, marker='X', markerfacecolor='b')
データフレームのカラムの欠損値を最大値で埋める	df[col].fillna(df[col].max())
全要素を1で初期化した行列	np.ones(行数, 列数, dtype=np.int)
散布図の色をライトイエローにする	plt.scatter(データ列x, データ列y, color='lightyellow')
辞書から最後の項目をポップする	aDict.popitem()
折れ線グラフをタン色で描画する	plt.plot(データ列x, データ列y, color='tan')
option: エンコーディングをUTF8に設定する	encoding = 'utf-8'
散布図の色をシーグリーンにする	plt.scatter(データ列x, データ列y, color='seagreen')
xを印字できる文字列にする	ascii(x)
データフレームの列のユニークな値の個数	df[col].nunique()
折れ線グラフにバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x')
データを平均と分散で標準化を行う	sklearn.preprocessing.StandardScaler().fit_transform(データ)
オールドレース色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='oldlace')
両端キューの末尾にイテラブルの各要素を追加する	deq.extend(iterable)
折れ線グラフを半透明の一点鎖線で描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', alpha=0.5)
データ列のノルムを揃える	"sklearn.preprocessing.Normalizer(norm=""l2"").fit_transform(データ列)"
データフレームの先頭	df.head()
棒グラフの色をペールグリーンにする	plt.bar(データ列x, データ列y, color='palegreen')
プログラムの実行を異常終了する	sys.exit(1)
データフレームの列がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データ列が何年か見る	ds.dt.year
ファイルを追加モードでオープンする]	open(filepath, mode='a')
ライトスカイブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightskyblue')
散布図の色をミッドナイトブルーにする	plt.scatter(データ列x, データ列y, color='midnightblue')
ライトシアン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lightcyan')
データフレームのリストカラムの欠損値を直後の値に設定する	df[aList].fillna(method='bfill')
散布図に赤い三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='r')
option: マゼンタ色を使う	color = 'magenta'
文字列中から部分文字列を探す	s.find(sub)
option: マーカーの色をバリーウッドにする	markerfacecolor = 'burlywood'
折れ線グラフをオレンジレッド色で描画する	plt.plot(データ列x, データ列y, color='orangered')
option: ダークゴールデンロッド色を使う	color = 'darkgoldenrod'
折れ線グラフの色を青紫に設定する	plt.plot(データ列x, データ列y, color='violet')
棒グラフを茶色色で描画する	plt.bar(データ列x, データ列y, color='brown')
データフレームをTSVファイルでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
横棒グラフをディープスカイブルー色で描画する	plt.barh(データ列x, データ列y, color='deepskyblue')
データフレームを'A'列によって昇順にソートする	df.sort_values(by='A', ascending=True)
散布図に星マーカーを使う	plt.plot(データ列x, データ列y, marker='*')
データフレームのカラムの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
リストの最初の文字列を探す	aList.index(element)
棒グラフの色をモカシンにする	plt.bar(データ列x, データ列y, color='moccasin')
散布図をスラグレー色で描画する	plt.scatter(データ列x, データ列y, color='slategrey')
自然数個からk個取り出したときの順列の総数	math.perm(n, k)
データフレームの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
集合から任意の要素を取り出す	aSet.pop()
データ列の欠損値を中央値で埋める	ds.fillna(ds.median())
option: グラフの色をシアンに設定する	color = 'cyan'
ライム色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='lime')
散布図にポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.')
青色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='blue')
ファイルからディレクトリ名を使う	os.path.dirname(filepath)
棒グラフの色をスレートブルーにする	plt.bar(データ列x, データ列y, color='slateblue')
横棒グラフをアクア色で描画する	plt.barh(データ列x, データ列y, color='aqua')
予測データの混同行列を求める	混同行列 = sklearn.metrics.confusion_matrix(正解データ列, 予測データ列)
ダークシアグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkseagreen')
リストとリストについての散布図にrgbのポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', c=rgb)
ロージーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='rosybrown')
ライトグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgreen')
散布図の色を青にする	plt.scatter(データ列x, データ列y, color='blue')
option: ペルー色を使う	color = 'peru'
シスル色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='thistle')
散布図をカーキ色で描画する	plt.scatter(データ列x, データ列y, color='khaki')
棒グラフの色をターコイズにする	plt.bar(データ列x, データ列y, color='turquoise')
option: バイナリ書き込みモードに設定する	mode = 'wb'
パウダーブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='powderblue')
ヒストグラムの色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
青色の散布図を描画する	plt.scatter(データ列x, データ列y, color='blue')
現在の分数	datetime.date.today().minute
散布図の色をローングリーンにする	plt.scatter(データ列x, データ列y, color='lawngreen')
オレンジレッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='orangered')
折れ線グラフの色をアリスブルーに設定する	plt.plot(データ列x, データ列y, color='aliceblue')
option: ライムグリーン色を使う	color = 'limegreen'
データフレームから散布図を作り、回帰直線を加える	sns.regplot(data=df, x='列名', y='列名')
アイボリー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='ivory')
散布図の色をダークサーモンにする	plt.scatter(データ列x, データ列y, color='darksalmon')
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列を青色でプリントする	print(f'\033[34m{value}\033[0m')
散布図をゴーストホワイト色で描画する	plt.scatter(データ列x, データ列y, color='ghostwhite')
データフレームを各列毎にグループ化して、列の合計を求める	df.groupby(column)[column2].sum()
横棒グラフの色をコーンズシルクにする	plt.barh(データ列x, データ列y, color='cornsilk')
棒グラフを黄色色で描画する	plt.bar(データ列x, データ列y, color='yellow')
リストとリストについての散布図に黒い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', c='k')
散布図の色をライムにする	plt.scatter(データ列x, データ列y, color='lime')
折れ線グラフの色をパープルに設定する	plt.plot(データ列x, データ列y, color='purple')
上位集合か調べる	aSet.issuperset(aSet2)
ファイルをバイナリできるようにオープンする]	open(filepath, mode='rb')
実数以下の最大の整数	math.floor(x)
グレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='grey')
データフレームを列によってソートする	df.sort_values(by=column)
散布図の色をアリスブルーにする	plt.scatter(データ列x, データ列y, color='aliceblue')
二つのデータ列の残差を散布図として描画する	sns.residplot(x=データ列, y=データ列)
文字列をゼロ埋めする	s.zfill(文字列幅)
データ列の中に文字列と文字列があるか調べる	ds.isin([value, value2])
パウダーブルー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='powderblue')
option: ダークオレンジ色を使う	color = 'darkorange'
データフレームを'A'列によってソートして、NaNを先頭にする	df.sort_values(by='A', na_position='first')
数式を変数についてn階微分する	sympy.diff(e, z, n)
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
実数の双曲線余弦の逆数	math.acosh(x)
ラベンダー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lavender')
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
横棒グラフの色をトマトにする	plt.barh(データ列x, データ列y, color='tomato')
ゴールデンロッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='goldenrod')
ミディアムバイオレットレッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumvioletred')
実数が整数か調べる	x.is_integer()
aListn番目から要素をポップする	aList.pop(n)
横棒グラフをディムグレー色で描画する	plt.barh(データ列x, データ列y, color='dimgray')
散布図をマゼンタ色で描画する	plt.scatter(データ列x, データ列y, color='magenta')
データフレームから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
横棒グラフの色をシルバーにする	plt.barh(データ列x, データ列y, color='silver')
標準入力から1行だけ読む	sys.stdin.readline()
棒グラフをパパイヤウィップ色で描画する	plt.bar(データ列x, データ列y, color='papayawhip')
リストをビン数nでビン分割する	pd.cut(aList, n)
オレンジ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='orange')
散布図の色をゴールドにする	plt.scatter(データ列x, データ列y, color='gold')
行列の演算をする	import numpy as np
ヒストグラムをミディアムバイオレットレッド色で描画する	plt.hist(データ列, color='mediumvioletred')
棒グラフをインディゴ色で描画する	plt.bar(データ列x, データ列y, color='indigo')
option: パールバイオレットレッド色を使う	color = 'palevioletred'
nから無限にカウントアップする	itertools.count(start=n)
散布図の色をライトゴールドロディイエローにする	plt.scatter(データ列x, データ列y, color='lightgoldenrodyellow')
イテラブルを文字列リストに変換して、空白で連結する	' '.join(map(str, iterable))
ヒストグラムの色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
点線グラフを描画する	plt.plot(データ列x, データ列y, linestyle='dotted')
散布図をペルー色で描画する	plt.scatter(データ列x, データ列y, color='peru')
データフレームのリストカラムの欠損値を最頻値で埋める	df[aList].fillna(df[aList].mode().iloc[0])
データフレームをグループ化して、ヒストグラムで可視化する	sns.histplot(df, x='列名', hue='カテゴリ名')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
棒グラフをピーチパフ色で描画する	plt.bar(データ列x, データ列y, color='peachpuff')
オリーブ色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='olive')
折れ線グラフの色を暗い赤に設定する	plt.plot(データ列x, データ列y, color='darkred')
折れ線グラフの色をミディアムパープルに設定する	plt.plot(データ列x, データ列y, color='mediumpurple')
散布図をサドルブラウン色で描画する	plt.scatter(データ列x, データ列y, color='saddlebrown')
棒グラフをシーグリーン色で描画する	plt.bar(データ列x, データ列y, color='seagreen')
データフレームの値を正規表現patternでまとめてreplに置き換える	df.replace(pattern, repl, regex=True)
散布図の色をイエローグリーンにする	plt.scatter(データ列x, データ列y, color='yellowgreen')
実数を複素数に変換する	complex(x)
option: グラフの色をライトイエローに設定する	color = 'lightyellow'
リストとリストについての散布図に黒い四角マーカーを描画する	plt.plot(データ列x, データ列y, marker='s', c='k')
タプルの末尾を取り除く	aTuple[:-1]
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()//60
option: グラフの色をブランチドアーモンドに設定する	color = 'blanchedalmond'
折れ線グラフの色をグレーに設定する	plt.plot(データ列x, データ列y, color='gray')
リストとリストについての散布図に右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>')
option: グラフの色をダーク・スラテグレーに設定する	color = 'darkslategrey'
棒グラフの色をシエナにする	plt.bar(データ列x, データ列y, color='sienna')
データフレームをJSONLファイルに保存する	df.to_csv(filename, sep='\t')
勾配ブースティングでクラス分類を行う	model = sklearn.ensemble.GradientBoostingClassifier()
クラス分類の適合率を求める	sklearn.metrics.precision_score(正解データ列, 予測データ列)
リストの中の最小値	min(aList)
横棒グラフの色をローングリーンにする	plt.barh(データ列x, データ列y, color='lawngreen')
辞書のキーの値	aDict[key]
散布図の色をラベンダーにする	plt.scatter(データ列x, データ列y, color='lavender')
nとkのコンビネーション	math.comb(n, k)
横棒グラフの色をマゼンタにする	plt.barh(データ列x, データ列y, color='magenta')
横棒グラフを貝殻色で描画する	plt.barh(データ列x, データ列y, color='seashell')
データフレームの列がx以下の行を抽出する	df[df[column] <= x]
データフレームの列が文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
実数を実数で割った剰余	math.remainder(x, x2)
横棒グラフをパパイヤウィップ色で描画する	plt.barh(データ列x, データ列y, color='papayawhip')
折れ線グラフの色をサドルブラウンに設定する	plt.plot(データ列x, データ列y, color='saddlebrown')
space	' '
eの実数乗	math.exp(x)
bとn2から成るペア	(n, n2)
辞書にキーワード引数で更新する	aDict.update(**kwargs)
ファイルから1文字、読み込む	f.read(1)
棒グラフをビスク色で描画する	plt.bar(データ列x, データ列y, color='bisque')
配列の要素ごとの積	np.multiply(aArray, aArray2)
無限大	math.inf
実数の常用対数	math.log10(x)
option: グラフの色をダークグレーに設定する	color = 'darkgrey'
データフレームのpercent分位数	df.quantile(percent/100)
リストにリストを追加して拡張する	aList.extend(aList2)
データフレームの列をダミー変数に変換する	pd.get_dummies(df[column])
棒グラフの色をライトグリーンにする	plt.bar(データ列x, データ列y, color='lightgreen')
option: マーカーを右三角に変更する	marker = '>'
文字列の右側から空白を取り除く	s.rstrip()
option: ロージーブラウン色を使う	color = 'rosybrown'
データフレームを散布図で可視化して、カテゴリ別に色を変える	sns.scatterplot(data=df, x='列名', y='列名', hue='カテゴリ列')
集合をリストに変換する	list(aSet)
折れ線グラフの色をオリベドラブに設定する	plt.plot(データ列x, データ列y, color='olivedrab')
ネイビー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='navy')
ファイルの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
空白文字を全部使う	string.whitespace
ダークサーモン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darksalmon')
データフレームのリストカラムの欠損値をxに設定する	df[aList].fillna(x)
散布図の色をモカシンにする	plt.scatter(データ列x, データ列y, color='moccasin')
サポートベクターマシンでクラス分類を行う	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
ロバストな線形回帰モデルを作る	model = sklearn.linear_model.HuberRegressor()
option: マーカーの色を紺碧にする	markerfacecolor = 'azure'
パウダーブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='powderblue')
散布図に赤い丸マーカーを描画する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='r')
データフレームの列と列を削除する	df.drop([column, column2], axis=1)
nがn2よりも大きいか調べる	n > n2
ヒストグラムの色をラベンダーに設定する	plt.hist(データ列, color='lavender')
散布図にバツマーカーを使う	plt.plot(データ列x, データ列y, marker='x')
集合をイミュータブルに変換する	frozenset(aSet)
ミディアムターコイズ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumturquoise')
棒グラフの色をダークカーキにする	plt.bar(データ列x, データ列y, color='darkkhaki')
データフレームのカラムの中に文字列と文字列があるか調べる	df[col].isin([value, value2])
散布図をチョコレート色で描画する	plt.scatter(データ列x, データ列y, color='chocolate')
データフレームのカラムの中に文字列と文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
二次元リストの転置行列	[list(x) for x in list(zip(*aList))]
option: マーカーの色をライトイエローにする	markerfacecolor = 'lightyellow'
文字列の左側からタブを取り除く	s.lstrip('\t')
option: マーカーの色をマルーンにする	markerfacecolor = 'maroon'
折れ線グラフをグレー色で描画する	plt.plot(データ列x, データ列y, color='gray')
option: マーカーの色をパパイヤウィップにする	markerfacecolor = 'papayawhip'
リストの末尾を取り除く	aList[:-1]
ダークシアグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='darkseagreen')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列x, データ列y, color='darkgrey')
横棒グラフをミディアムバイオレットレッド色で描画する	plt.barh(データ列x, データ列y, color='mediumvioletred')
青い点線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dotted', color='b')
リストのn番目の要素を削除する	del aList[n]
タプルのn番目以降の部分を取り出す	aTuple[n:]
option: マーカーの色をオレンジにする	markerfacecolor = 'orange'
折れ線グラフの右三角マーカーを青くする	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='b')
散布図の大バツマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='X', markeredgewidth=2.5)
ヒストグラムの色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
イテラブルから複数個、ランダムに選ぶ	random.choices(iterable, k=n)
集合の全ての要素が別の集合に含まれるか調べる	aSet.issubset(aSet2)
散布図をミディアムバイオレットレッド色で描画する	plt.scatter(データ列x, データ列y, color='mediumvioletred')
オールドレース色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='oldlace')
データフレームの重複を見る	df.duplicated()
ロバスト推定でクラス分類を行う	model = sklearn.linear_model.RANSACClassifier(random_state=0)
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategrey')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列x, データ列y, color='darkgray')
折れ線グラフのマーカーを下三角にする	plt.plot(データ列x, データ列y, marker='v')
ダークオリーブグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkolivegreen')
option: アンティークホワイト色を使う	color = 'antiquewhite'
option: セパレータをカンマにする	sep = ','
カウンタを多い順に列挙する	aCounter.most_common()
棒グラフをライトスレイグレー色で描画する	plt.bar(データ列x, データ列y, color='lightslategrey')
ふたつの集合が共通の要素を持たないか調べる	aSet.isdisjoint(aSet2)
実数を十六進表記の文字列に変換する	x.hex()
リストとリストについての散布図にrgbの下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', c=rgb)
モカシン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='moccasin')
折れ線グラフに赤い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='r')
データフレームを'A'列によってまとめたグループ	df.groupby('A')
ファイルを追加できるようにオープンする]	open(filepath, mode='a')
キーが辞書に存在するか調べる	key in aDict
多次元データを主成分分析で濃く次元に次元削減する	sklearn.decomposition.PCA(n_components=二).fit_transform(多次元データ)
散布図の下三角マーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='v', markeredgewidth=2.5)
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列x, データ列y, color='lightgray')
ライムグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='limegreen')
折れ線グラフをイエローグリーン色で描画する	plt.plot(データ列x, データ列y, color='yellowgreen')
黒い大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X', c='k')
ヒストグラムの色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
アンサンブル学習でクラス分類を行う	sklearn.ensemble.VotingClassifier()
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
散布図の大バツマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='r')
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(データ列x, データ列y, color='blanchedalmond')
パールバイオレットレッド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='palevioletred')
散布図をミディアムスレートブルー色で描画する	plt.scatter(データ列x, データ列y, color='mediumslateblue')
option: グラフの色をオリーブに設定する	color = 'olive'
散布図をゲインズボロ色で描画する	plt.scatter(データ列x, データ列y, color='gainsboro')
年月日と時刻から日付時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
パールゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='palegoldenrod')
部分文字列を範囲を指定して探す	s.find(sub, start, end)
リストの中の最大値	max(aList)
折れ線グラフをパープル色で描画する	plt.plot(データ列x, データ列y, color='purple')
データフレームがどの程度、分散しているか見る	df.var()
ヒストグラムの色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
データ列を使う	import pandas as pd
決定木の重要度を可視化する	plt.barh(X.columns, model.feature_importances_)
データを標準化する	sklearn.preprocessing.StandardScaler().fit_transform(データ)
オーキッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='orchid')
日付データが何月か知る	aDate.month
データフレームのカラムを散布図で可視化する	sns.scatterplot(data=df, x='列名', y='列名')
ヒストグラムの色をトマトに設定する	plt.hist(データ列, color='tomato')
折れ線グラフの下三角マーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='v', markeredgewidth=2.5)
折れ線グラフをロイヤルブルー色で描画する	plt.plot(データ列x, データ列y, color='royalblue')
全要素が初期値の行列	np.full((行数, 列数), 初期値, dtype=np.int)
折れ線グラフの色をダークオーキッドに設定する	plt.plot(データ列x, データ列y, color='darkorchid')
両端キューが空でないか調べる	len(deq) != 0
ライトサーモン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightsalmon')
散布図の丸マーカーを青くする	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='b')
折れ線グラフをグレー色で描画する	plt.plot(データ列x, データ列y, color='grey')
ヒストグラムの色をマルーンに設定する	plt.hist(データ列, color='maroon')
棒グラフをカデットブルー色で描画する	plt.bar(データ列x, データ列y, color='cadetblue')
折れ線グラフをハニーデュー色で描画する	plt.plot(データ列x, データ列y, color='honeydew')
クラス分類の予測精度を見る	混同行列 = sklearn.metrics.confusion_matrix(正解データ列, 予測データ列)
実数の天井	math.ceil(x)
コーラル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='coral')
文字列全体が正規表現にASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
グラフのカラーパレットを指定する	sns.set(pallete=パレット名)
option: グラフの色をモカシンに設定する	color = 'moccasin'
ヒストグラムをグレー色で描画する	plt.hist(データ列, color='grey')
全要素が1の行列	np.ones(行数, 列数, dtype=np.int)
option: 改行しない	end = ''
option: グラフの色をアイボリーに設定する	color = 'ivory'
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
option: 追加モードに設定する	mode = 'a'
散布図をフォレストグリーン色で描画する	plt.scatter(データ列x, データ列y, color='forestgreen')
書式を辞書でフォーマットする	formatText.format_map(aDict)
折れ線グラフをディープスカイブルー色で描画する	plt.plot(データ列x, データ列y, color='deepskyblue')
現在の時間数	datetime.date.today().hour
棒グラフをダークバイオレット色で描画する	plt.bar(データ列x, データ列y, color='darkviolet')
ヒストグラムをネイビー色で描画する	plt.hist(データ列, color='navy')
棒グラフをサンディーブラウン色で描画する	plt.bar(データ列x, データ列y, color='sandybrown')
option: マーカーを星に変更する	marker = '*'
データフレームの欠損値を直前の値で埋める	df.fillna(method='ffill')
シエナ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='sienna')
n個の要素があるリスト	[element] * n
折れ線グラフに青い右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='b')
option: マーカーを下三角に変更する	marker = 'v'
散布図の色をコーンズシルクにする	plt.scatter(データ列x, データ列y, color='cornsilk')
リストとリストについて散布図を描画して、大バツマーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='X', c=rgb)
折れ線グラフの色をライトブルーに設定する	plt.plot(データ列x, データ列y, color='lightblue')
ファイルを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
棒グラフの色を茶色にする	plt.bar(データ列x, データ列y, color='brown')
二つのデータフレームを結合する	pd.merge(df, df2)
横棒グラフをイエローグリーン色で描画する	plt.barh(データ列x, データ列y, color='yellowgreen')
ブルーバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='blueviolet')
ヒストグラムをマルーン色で描画する	plt.hist(データ列, color='maroon')
データ列を丸める	ds.round()
データフレームの行と列を入れ替える	df.T
文字列中の片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
データ列の第三四分位数	ds.quantile(0.75)
グラフの用途を画面に設定する	sns.set(context='notebook')
サンディーブラウン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='sandybrown')
データフレームの行を範囲指定して抽出する	df[start:end]
横棒グラフをシスル色で描画する	plt.barh(データ列x, データ列y, color='thistle')
option: 小麦色色を使う	color = 'wheat'
ファイルの拡張子をtextに変更する	os.path.splitext(filepath)[0] + text
ヒストグラムをスノー色で描画する	plt.hist(データ列, color='snow')
データフレームのカラムが何秒か見る	df[col].dt.second
データ列を等間隔でn個にビン分割する	pd.cut(ds, n)
データフレームのリストカラムの尖度	df[aList].skew()
全要素を0で初期化した配列	np.zeros(要素数)
option: ディープスカイブルー色を使う	color = 'deepskyblue'
折れ線グラフをミディアムオーキッド色で描画する	plt.plot(データ列x, データ列y, color='mediumorchid')
横棒グラフをターコイズ色で描画する	plt.barh(データ列x, データ列y, color='turquoise')
散布図の色をライトシアンにする	plt.scatter(データ列x, データ列y, color='lightcyan')
日付を使う	import datetime
ダークスラテグレー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='darkslategray')
散布図を黄色くする	plt.scatter(データ列x, データ列y, color='y')
rgbの三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='^', c=rgb)
パレットトルコイズ色のヒストグラムを描画する	plt.hist(データ列, color='paleturquoise')
イテラブルをダミー変数に変換する	pd.get_dummies(iterable)
棒グラフをライトコーラル色で描画する	plt.bar(データ列x, データ列y, color='lightcoral')
データフレームの列が文字列が含まれない行を抽出する	df[not df[column].str.contains(s)]
option: 複素数型を使う	dtype = bool
ヒストグラムをアクア色で描画する	plt.hist(データ列, color='aqua')
option: グラフの色をミディアムターコイズに設定する	color = 'mediumturquoise'
両端キュー中の要素の数を数える	deq.count(element)
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
散布図の色をレモンシフォンにする	plt.scatter(データ列x, データ列y, color='lemonchiffon')
辞書に要素をキーとして加える	aDict[key] = element
自然数個のものからk個取り出したときの並べ方の総数	math.perm(n, k)
データフレームから列を三つ選択する	df[[column, column2, column3]]
棒グラフの色をライトサーモンにする	plt.bar(データ列x, データ列y, color='lightsalmon')
アンサンブル学習で回帰分析を行う	sklearn.ensemble.VotingRegressor()
データフレームをサンプリングする	df.sample()
リストとリストについての散布図にrgbの三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', c=rgb)
グラフの背景色を白くする	sns.set(style='whitegrid')
日付データを文字列でフォーマットする	"aDate.strftime(""%d/%m/%y"")"
シルバー色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='silver')
データフレームをJSONLファイルにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
赤い実線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='solid', color='r')
散布図の色をインディアンレッドにする	plt.scatter(データ列x, データ列y, color='indianred')
データフレームを列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
ヒストグラムの色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
データフレームの列をヒストグラムにする	plt.hist(df[column])
anemptystring	''
マゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='magenta')
折れ線グラフを色付きの破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='#800080')
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
カデットブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='cadetblue')
オブジェクトをデバッグ向けの文字列に変換する	repr(obj)
ファイルを全部、読み込む	f.read()
文字列内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
小麦色色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='wheat')
カラーバーを描画する	plt.colorbar()
青色の線グラフを描画する	plt.plot(データ列x, データ列y, color='blue')
データフレームをJSONLファイルに保存する	df.to_csv(filename)
折れ線グラフをミスティローズ色で描画する	plt.plot(データ列x, データ列y, color='mistyrose')
日付データにn分分、加算する	aDate + datetime.timedelta(minutes=n)
ゴーストホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='ghostwhite')
データフレームの二つのカラムを並べて箱ひげ図で可視化する	plt.boxplot([df['カラム'], df['カラム']])
散布図をライトグリーン色で描画する	plt.scatter(データ列x, データ列y, color='lightgreen')
横棒グラフをピーチパフ色で描画する	plt.barh(データ列x, データ列y, color='peachpuff')
データフレームのカラムの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
データフレームの尖度	df.skew()
データフレームのn行まで抽出する	df[:n]
JSONファイルのfをデータに変換する	json.load(fin)
rgbの四角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='s', c=rgb)
モデルを当てはめる	model.fit(説明変数, 目的変数)
ミディアムスプリンググリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumspringgreen')
棒グラフをミディアムアクアマリン色で描画する	plt.bar(データ列x, データ列y, color='mediumaquamarine')
x,y,zをそれぞれn,n2,n3に設定する	x, y, z = n, n2, n3
三角印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='^')
xの小数点以下'2'桁までをプリントする	print(':.2f'.format(x))
折れ線グラフに赤いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', markerfacecolor='r')
ヒストグラムをベージュ色で描画する	plt.hist(データ列, color='beige')
option: 先頭の行をヘッダに設定する	header = 0
option: マーカーの色をダークスレートブルーにする	markerfacecolor = 'darkslateblue'
棒グラフの色をライトブルーにする	plt.bar(データ列x, データ列y, color='lightblue')
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
二つの文字列を順にプリントする	print(value, value2)
マゼンタ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='magenta')
丸印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='o')
散布図をモカシン色で描画する	plt.scatter(データ列x, データ列y, color='moccasin')
横棒グラフをオレンジ色で描画する	plt.barh(データ列x, データ列y, color='orange')
ヒストグラムをミディアムスプリンググリーン色で描画する	plt.hist(データ列, color='mediumspringgreen')
横棒グラフの色をコーンフラワーブルーにする	plt.barh(データ列x, データ列y, color='cornflowerblue')
option: マーカーを三角に変更する	marker = '^'
切片なしの線形回帰分析の準備をする	model = sklearn.linear_model.LinearRegression(fit_intercept=False)
ファイルからバイナリ書き込みストリームをオープンして]、fとする	f = open(filepath, mode='wb')
散布図をスレートブルー色で描画する	plt.scatter(データ列x, データ列y, color='slateblue')
折れ線グラフの色をグレーに設定する	plt.plot(データ列x, データ列y, color='grey')
option: マーカーの色をオーキッドにする	markerfacecolor = 'orchid'
option: グラフの色をアクアマリンに設定する	color = 'aquamarine'
ラジアンの角度	math.degrees(x)
ふたつの集合が互いに素か調べる	aSet.isdisjoint(aSet2)
右三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='>')
インディゴ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='indigo')
option: ASCII文字に限定する	flag = re.ASCII
option: バッファリングを無効にする	buffering = 0
コマンド引数を列挙する	sys.argv[1:]
散布図にバツマーカーを使う	plt.scatter(データ列x, データ列y, marker='x')
option: マーカーの色を青紫にする	markerfacecolor = 'violet'
アンティークホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='antiquewhite')
イテラブルを文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
グリッド線	plt.grid(alpha=0.5)
フクシア色のヒストグラムを描画する	plt.hist(データ列, color='fuchsia')
ライム色のヒストグラムを描画する	plt.hist(データ列, color='lime')
ヒストグラムでカラーマップを使う	"plt.hist(データ列x, color=plt.get_cmap(""Spectral""))"
黒い棒グラフを描画する	plt.bar(データ列x, データ列y, color='k')
ライトグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightgray')
折れ線グラフをライトサーモン色で描画する	plt.plot(データ列x, データ列y, color='lightsalmon')
マルーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='maroon')
折れ線グラフをブルーバイオレット色で描画する	plt.plot(データ列x, データ列y, color='blueviolet')
option: ライトブルー色を使う	color = 'lightblue'
列'A'と列'B'をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
横棒グラフの色をオーキッドにする	plt.barh(データ列x, データ列y, color='orchid')
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
リストが空でないか調べる	len(aList) != 0
option: マーカーの色をアクアにする	markerfacecolor = 'aqua'
アイボリー色のヒストグラムを描画する	plt.hist(データ列, color='ivory')
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームから重複ありでランダムにn行をサンプリングする	df.sample(n, replace=True)
アリスブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='aliceblue')
データフレームのリストカラムの中にある文字列の合計を数える	df[aList].isin([value]).sum()
データ列をビン分割する	pd.cut(ds, aList)
散布図に赤いポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.', c='r')
イテラブルを累積する	itertools.accumulate(iterable, operator.mul)
散布図をレモンシフォン色で描画する	plt.scatter(データ列x, データ列y, color='lemonchiffon')
option: エンコーディングをSJISに設定する	encoding = 'shift_jis'
棒グラフをダークオーキッド色で描画する	plt.bar(データ列x, データ列y, color='darkorchid')
データを最大値で正規化する	sklearn.preprocessing.MaxAbsScaler().fit_transform(データ)
データフレームの中で、列と列に重複があるか見る	df.duplicated(subset=[column, column2])
行列の行	aArray[行番号]
データフレームを'A'列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
整数nを二進表現に変換する	bin(n)
ライトグレー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightgrey')
淡いピンク色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightpink')
横棒グラフをタン色で描画する	plt.barh(データ列x, データ列y, color='tan')
散布図に黒い星マーカーを使う	plt.plot(データ列x, データ列y, marker='*', c='k')
カウンタをリストに変換する	list(aCounter)
レベッカパープル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='rebeccapurple')
棒グラフの色を紺碧にする	plt.bar(データ列x, データ列y, color='azure')
ファイルをオープンして]、追加ストリームを使う	open(filepath, mode='a')
散布図をアンティークホワイト色で描画する	plt.scatter(データ列x, データ列y, color='antiquewhite')
自然数最小公倍数	math.lcm(n, n2)
ヒストグラムの色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
モデルの残差を求める	目的変数 - model.predict(説明変数)
赤いグリッド線を引く	plt.grid(color='r')
データフレームのインデックスの名前をまとめて、nameからname2に付け直す	df.rename(index={name: name2})
アクアマリン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='aquamarine')
ゴールド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='gold')
散布図に右三角マーカーを使う	plt.plot(データ列x, データ列y, marker='>')
アルファベットの小文字を全部使う	string.ascii_lowercase
nが3で割り切れるか調べる	n % 3 == 0
ミディアムターコイズ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='mediumturquoise')
ヒストグラムをアンティークホワイト色で描画する	plt.hist(データ列, color='antiquewhite')
リストとリストについての散布図にrgbの右三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='>', c=rgb)
データフレームからn番目の列を除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
rangeの無限バージョン	itertools.count(start=n, step=step)
棒グラフをダークスレートブルー色で描画する	plt.bar(データ列x, データ列y, color='darkslateblue')
データフレームのカラムを100の位で丸める	df[col].round(-2)
ヒストグラムの色をパープルに設定する	plt.hist(データ列, color='purple')
リストをひとつ置きに取り出す	aList[::2]
黒い左三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='<', c='k')
option: コーンフラワーブルー色を使う	color = 'cornflowerblue'
カウンタの項目を増やす	aCounter[element] += 1
ヒストグラムの色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ホワイトスモーク色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='whitesmoke')
ヒストグラムの色を紺に設定する	plt.hist(データ列, color='darkblue')
散布図のポイントマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='.', markerfacecolor='r')
オリーブ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='olive')
数値の符号を同じにする	math.copysign(x, x2)
データフレームのリストカラムがどの程度、分散しているか見る	df[aList].var()
ヒストグラムの色を小麦色に設定する	plt.hist(データ列, color='wheat')
option: マーカーの色をサドルブラウンにする	markerfacecolor = 'saddlebrown'
イテラブルの集合	set(iterable)
散布図をオレンジレッド色で描画する	plt.scatter(データ列x, データ列y, color='orangered')
列'A'と列'B'をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
ゼロ埋めされた複素数型の配列	np.zeros(要素数, dtype=bool)
ヒストグラムの色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
一方に含まれ、他方に含まれない集合	aSet.difference(aSet2)
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
標準出力を得る	sys.stdout
イテラブルを累加したイテラブル	itertools.accumulate(iterable)
文字列を空白で区切る	s.split()
option: マーカーの色をゲインズボロにする	markerfacecolor = 'gainsboro'
二次元リストを転置する	[list(x) for x in list(zip(*aList))]
棒グラフをグリーンイエロー色で描画する	plt.bar(データ列x, データ列y, color='greenyellow')
折れ線グラフの色を紺に設定する	plt.plot(データ列x, データ列y, color='darkblue')
横棒グラフをドジャーブルー色で描画する	plt.barh(データ列x, データ列y, color='dodgerblue')
option: 配列のデータ型を指定する	dtype = np.int32
Pandasで、データフレームのcollを日付データに変換する	pd.to_datetime(df[col])
ドジャーブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='dodgerblue')
辞書をJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
散布図に黒いポイントマーカーを使う	plt.plot(データ列x, データ列y, marker='.', c='k')
横軸の目盛を非表示にする	plt.xticks([])
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
棒グラフの色を暗い赤にする	plt.bar(データ列x, データ列y, color='darkred')
カデットブルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='cadetblue')
ベージュ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='beige')
十六進数字を全部使う	string.hexdigits
ヒストグラムを描画し、合計を1にする	plt.hist(データ列, density=True)
棒グラフの色をディムグレーにする	plt.bar(データ列x, データ列y, color='dimgrey')
リストの文字列の位置をエラーなく使う	aList.index(element) if element in aList else -1
散布図をパープル色で描画する	plt.scatter(データ列x, データ列y, color='purple')
決定木を可視化する	sklearn.tree.plot_tree(model, feature_names=X.columns, filled=True)
横棒グラフの色をディムグレーにする	plt.barh(データ列x, データ列y, color='dimgray')
実数を切り上げる	math.ceil(x)
データフレームから数値データの列を抽出する	df.select_dtypes('number')
棒グラフをダークオリーブグリーン色で描画する	plt.bar(データ列x, データ列y, color='darkolivegreen')
ビスク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='bisque')
変数が0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
numpyを使う	import numpy as np
未初期化の行列	np.empty((行数, 列数), dtype=np.int)
ペルー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='peru')
文字列が漢字か調べる	('\u4E00' <= ch <= '\u9FD0')
トマト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='tomato')
nからstep間隔で無限にカウントアップする	itertools.count(start=n, step=step)
棒グラフの色をアンティークホワイトにする	plt.bar(データ列x, データ列y, color='antiquewhite')
散布図のマーカーを大バツにする	plt.scatter(データ列x, データ列y, marker='X')
日付データと日付データの時間差が何分か知る	(aDate - aDate2).total_seconds()//60
option: 黄色色を使う	color = 'yellow'
横棒グラフの色をアリスブルーにする	plt.barh(データ列x, データ列y, color='aliceblue')
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
リストの末尾からn番目以前の部分を取り出す	aList[:-n]
ヒストグラムを紺色で描画する	plt.hist(データ列, color='darkblue')
n割るn2の切り上げ	(n + n2 - 1) // n2
オブジェクトを文字列に変換する	str(obj)
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
ヒストグラムをレベッカパープル色で描画する	plt.hist(データ列, color='rebeccapurple')
散布図をディープスカイブルー色で描画する	plt.scatter(データ列x, データ列y, color='deepskyblue')
データフレームの散布図にロジスティック回帰を加える	sns.regplot(x='列名', y='列名', data=df, logistic=True)
実数から実数を引く	x - y
データフレームのリストカラムの中にいくつ欠損値があるか数える	df[aList].isna().sum()
データフレームを1000の位で丸める	df.round(-3)
データフレームのリストカラムを100の位で丸めて、整数型にする	df[aList].round(-2).astype(int)
リストをリストを境界値としてビン分割する	pd.cut(aList, aList)
折れ線グラフをレベッカパープル色で描画する	plt.plot(データ列x, データ列y, color='rebeccapurple')
ライトブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightblue')
棒グラフの色をスラグレーにする	plt.bar(データ列x, データ列y, color='slategrey')
文字列を代数計算の変数に変換する	sympy.Symbol(s)
ヒストグラムをダークオリーブグリーン色で描画する	plt.hist(データ列, color='darkolivegreen')
データフレームを列によってグループ化して、それぞれのグループごとの合計を求める	df.groupby(column).sum()
半透明の一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', alpha=0.5)
ライトイエロー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightyellow')
データフレームを各列と列の組み合わせ毎にグループ化して、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
ファイルが存在しないか調べる	not os.path.exists(filepath)
散布図のマーカーの大きさを指定する	plt.scatter(データ列x, データ列y, s=n)
折れ線グラフの四角マーカーの大きさを変更する	plt.plot(データ列x, データ列y, marker='s', markersize=2.0)
ライトスチールブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightsteelblue')
データ列をリストを境界値としてビン分割する	pd.cut(ds, aList)
option: 丸マーカーを使う	marker = 'o'
ライトグリーン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='lightseagreen')
リストをイミュータブルにする	tuple(aList)
印字可能な文字を全部使う	string.printable
日付データにn日分、加算する	aDate + datetime.timedelta(days=n)
リストとリストについての散布図に赤い丸マーカーを描画する	plt.plot(データ列x, データ列y, marker='o', c='r')
散布図の三角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='^', markerfacecolor='r')
散布図に黒い下三角マーカーを描画する	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='k')
スプリンググリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='springgreen')
データフレームを列によってグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
横棒グラフを耐火レンガ色で描画する	plt.barh(データ列x, データ列y, color='firebrick')
グリッド線	plt.grid(linestyle='--')
横棒グラフの色をライトサーモンにする	plt.barh(データ列x, データ列y, color='lightsalmon')
ミディアムパープル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumpurple')
リネン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='linen')
紺碧色の線グラフを描画する	plt.plot(データ列x, データ列y, color='azure')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgray')
棒グラフをオリベドラブ色で描画する	plt.bar(データ列x, データ列y, color='olivedrab')
乱数シードをnで初期化する	random.seed(n)
ヒストグラムをドジャーブルー色で描画する	plt.hist(データ列, color='dodgerblue')
カウンタ同士でユニオン	aCounter | aCounter2
データフレームを見る	df.head()
グラフの見栄えを綺麗にする	import seaborn as sns
ベージュ色のヒストグラムを描画する	plt.hist(データ列, color='beige')
チョコレート色の線グラフを描画する	plt.plot(データ列x, データ列y, color='chocolate')
アヤメのデータセットをロードする	sns.load_dataset('iris')
横棒グラフを黄色色で描画する	plt.barh(データ列x, データ列y, color='yellow')
散布図の下三角マーカーを黒くする	plt.scatter(データ列x, データ列y, marker='v', markerfacecolor='k')
イテラブルのコンビネーション	itertools.combinations(iterable, n)
赤い棒グラフを描画する	plt.bar(データ列x, データ列y, color='r')
イテラブルを累加する	itertools.accumulate(iterable)
ヒストグラムをペールグリーン色で描画する	plt.hist(データ列, color='palegreen')
青緑色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='teal')
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
ミディアムスプリンググリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumspringgreen')
実数の正弦	math.sin(x)
数式を簡単にする	sympy.sympify(e)
option: マーカーの色をライトコーラルにする	markerfacecolor = 'lightcoral'
縦棒グラフを積み上げにする	plt.bar(ラベル列, データ列, bottom=データ列y, color='#800080')
日付データからn時間分、減算する	aDate - datetime.timedelta(hours=n)
二つのリストから辞書	dict(zip(aList, aList2))
改行する	print()
折れ線グラフのマーカーを四角にする	plt.plot(データ列x, データ列y, marker='s')
全ての８進数字	string.octdigits
折れ線グラフの線の種類を実線に設定する	plt.plot(データ列x, データ列y, linestyle='solid')
デピンク色のヒストグラムを描画する	plt.hist(データ列, color='deeppink')
文字列を左寄せにする	s.ljust(文字列幅)
ドジャーブルー色のヒストグラムを描画する	plt.hist(データ列, color='dodgerblue')
横棒グラフの色をダークマゼンタにする	plt.barh(データ列x, データ列y, color='darkmagenta')
option: ミディアムブルー色を使う	color = 'mediumblue'
ファイルからストリームを読み込み、fileとする	file = open(filepath)
日付時刻データが水曜日か調べる	aDatetime.weekday() == 2
データフレームのヒートマップを描画する	sns.heatmap(df.corr())
散布図の色をダークマゼンタにする	plt.scatter(データ列x, データ列y, color='darkmagenta')
データフレームのカラムの欠損値を最大値に設定する	df[col].fillna(df[col].max())
折れ線グラフをアンティークホワイト色で描画する	plt.plot(データ列x, データ列y, color='antiquewhite')
option: グラフの色を貝殻に設定する	color = 'seashell'
option: 改行コードをUNIXに設定する	newline = '\n'
option: グラフの色をライトグリーンに設定する	color = 'lightgreen'
データフレームのカラムの中にある文字列の合計を数える	df[col].isin([value]).sum()
折れ線グラフを赤い破線で描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='r')
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
nをn2で整数除算する	n // n2
ランダム性を強化したランダムフォレストでクラス分類を行う	model = sklearn.ensemble.ExtraTreeClassifier(n_estimators=10)
配列を四分位数ごとにビン分割する	pd.qcut(aArray, 4)
リッジ回帰とロッソ回帰のハイブリッド分析の準備をする	model = sklearn.linear_model.ElasticNet()
散布図に左三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='<')
option: ハニーデュー色を使う	color = 'honeydew'
JSON形式の文字列をデータに変換する	json.loads(b.decode('unicode-escape'))
折れ線グラフに左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<')
日付時刻データをn秒前に戻す	aDatetime - datetime.timedelta(seconds=n)
タプルの各要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
イテラブルを文字列リストに変換して、タブで連結する	'\t'.join(map(str, iterable))
横棒グラフの色をピーチパフにする	plt.barh(データ列x, データ列y, color='peachpuff')
データフレームのリスト列の相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
ヒストグラムを一点鎖線で描画する	plt.hist(データ列, linestyle='dashbot')
横棒グラフの色をrgbに設定する	plt.barh(ラベル列, データ列, color=rgb)
FIXME:カテゴリーデータを出現頻度順にソートする	df['A'].value_counts().sort_index().index
散布図に三角マーカーを使う	plt.scatter(データ列x, データ列y, marker='^')
ペールグリーン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='palegreen')
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(データ列x, データ列y, marker='D', markerfacecolor='b')
option: グラフの色をマルーンに設定する	color = 'maroon'
ヒストグラムを赤色で描画する	plt.hist(データ列, color='red')
データフレームから列を一つ選択する	df[[column]]
棒グラフをスノー色で描画する	plt.bar(データ列x, データ列y, color='snow')
混同行列をヒートマップで確認する	sns.heatmap(混同行列, annot=True, cmap='Reds')
文字列の接尾辞から部分文字列を取り除く	s.removesuffix(sub)
ピアソン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
option: 左三角マーカーを使う	marker = '<'
option: マーカーの色をグリーンイエローにする	markerfacecolor = 'greenyellow'
データフレームを各列と列の組み合わせ毎にグループ化して、分散を求める	df.groupby([column, column2], as_index=False).var()
散布図をダークグリーン色で描画する	plt.scatter(データ列x, データ列y, color='darkgreen')
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(データ列x, データ列y, color='cornflowerblue')
データフレームを列によってソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
ダークスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='darkslateblue')
option: マーカーの色をロイヤルブルーにする	markerfacecolor = 'royalblue'
文字列を部分文字列で区切る	s.split(sub)
等間隔の配列を作る＼	np.arange(開始値, 終了値, 等差)
勾配ブースティング回帰木を作る	model = sklearn.ensemble.GradientBoostingRegressor()
集合を空にする	aSet.clear()
折れ線グラフをライトコーラル色で描画する	plt.plot(データ列x, データ列y, color='lightcoral')
変数がマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
データフレームのリストカラムの中に文字列と文字列があるか調べる	df[aList].isin([value, value2])
option: グラフの色をレモンシフォンに設定する	color = 'lemonchiffon'
パープル色のヒストグラムを描画する	plt.hist(データ列, color='purple')
箱ひげ図を二つ並べて描画する	plt.boxplot([データ列, データ列])
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
白い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='w')
ゲインズボロ色の散布図を描画する	plt.scatter(データ列x, データ列y, color='gainsboro')
棒グラフの色をハニーデューにする	plt.bar(データ列x, データ列y, color='honeydew')
文字列の開始位置からと終了位置までの間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
散布図をインディゴ色で描画する	plt.scatter(データ列x, データ列y, color='indigo')
耐火レンガ色の線グラフを描画する	plt.plot(データ列x, データ列y, color='firebrick')
折れ線グラフをターコイズ色で描画する	plt.plot(データ列x, データ列y, color='turquoise')
データフレームの列と列のヒートマップを描画する	sns.heatmap(df[[column, column2]].corr())
折れ線グラフをダークカーキ色で描画する	plt.plot(データ列x, データ列y, color='darkkhaki')
散布図の大バツマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='X', markerfacecolor='#800080')
データ列のタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
赤い破線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashed', color='r')
グラフ中の(x,y)の位置に凡例を表示する	plt.legend(loc=(x, y))
棒グラフの色をミディアムバイオレットレッドにする	plt.bar(データ列x, データ列y, color='mediumvioletred')
ヒストグラムをシスル色で描画する	plt.hist(データ列, color='thistle')
決定木を表示する	sklearn.tree.plot_tree(model, feature_names=X.columns, filled=True)
折れ線グラフに黒い下三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='v', markerfacecolor='k')
nが負の数か調べる	n < 0
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgrey')
散布図の色をペールグリーンにする	plt.scatter(データ列x, データ列y, color='palegreen')
ヒストグラムのビン数を設定する	plt.hist(データ列, bins=区関数)
データフレームが正規分布からどの程度、尖っているか見る	df.skew()
日付時刻データのタイムゾーン	aDatetime.timetz()
データフレームのカウントプロットを描画する	sns.countplot(x='列名', data=df)
option: マーカーの色をライムグリーンにする	markerfacecolor = 'limegreen'
データフレームのリストカラムが正規分布からどの程度、尖っているか見る	df[aList].skew()
文字列の右側から改行を取り除く	s.rstrip('\n')
ピアソン相関係数でデータフレームの相関行列	df.corr(method='pearson')
折れ線グラフの色を茶色に設定する	plt.plot(データ列x, データ列y, color='brown')
棒グラフを白くする	plt.bar(データ列x, データ列y, color='w')
折れ線グラフの色をシャルトリューズに設定する	plt.plot(データ列x, データ列y, color='chartreuse')
リストとリストについて散布図を描画して、四角マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='s', c=rgb)
折れ線グラフをスノー色で描画する	plt.plot(データ列x, データ列y, color='snow')
文字列を末尾から空白で区切る	s.rsplit()
データフレームの中にいくつ欠損値があるか数える	df.isna().sum()
データフレームを'A'列によってソートして、更新する	df.sort_values(by='A', inplace=True)
折れ線グラフをグリーンイエロー色で描画する	plt.plot(データ列x, データ列y, color='greenyellow')
option: マーカーの色をドジャーブルーにする	markerfacecolor = 'dodgerblue'
実数の小数点以下を丸める	round(x)
リストの先頭のn要素を取り除く	aList[n:]
データを外れ値に頑健な標準化を行う	sklearn.preprocessing.RobustScaler().fit_transform(データ)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームの先頭n行	df.head(n)
formatパターンの文字列を日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
サドルブラウン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='saddlebrown')
横棒グラフを茶色色で描画する	plt.barh(データ列x, データ列y, color='brown')
ファイルをディレクトリ名とファイル名に分割する	os.path.split(filepath)
スノー色のヒストグラムを描画する	plt.hist(データ列, color='snow')
データフレームの棒グラフを各カテゴリごとに縦横に並べる	sns.catplot(kind='bar', y='列名', col='カテゴリ名', row='カテゴリ名', data=df)
ヒストグラムの色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
散布図をデピンク色で描画する	plt.scatter(データ列x, データ列y, color='deeppink')
散布図をオリーブ色で描画する	plt.scatter(データ列x, データ列y, color='olive')
積み上げ横棒グラフを描画する	plt.barh(ラベル列, データ列, bottom=データ列y, color='#800080')
データフレームのカラムの秒	df[col].dt.second
リストとリストについて散布図を描画して、丸マーカーの色をrgbに設定する	plt.plot(データ列x, データ列y, marker='o', c=rgb)
option: 読み込みモードに設定する	mode = 'r'
option: グラフの色をダークオリーブグリーンに設定する	color = 'darkolivegreen'
ヒストグラムをマゼンタ色で描画する	plt.hist(データ列, color='magenta')
多次元データを多次元尺度構成法で濃く次元に次元削減する	sklearn.manifold.MSD(n_components=二).fit_transform(多次元データ)
散布図のマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, markeredgewidth=2.5)
データフレームの列の一覧	df.info()
ミディアムシアグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='mediumseagreen')
ヒストグラムをグリーン色で描画する	plt.hist(データ列, color='green')
日付時刻データが日曜日か調べる	aDatetime.weekday() == 6
乱数の行列	np.random.random((行数, 列数))
折れ線グラフをビスク色で描画する	plt.plot(データ列x, データ列y, color='bisque')
データフレームのヒストグラムを縦横に並べて、可視化する	sns.displot(df, x='列名', col='カテゴリ名', row='カテゴリ名')
配列の要素ごとに加算する	aArray + aArray2
文字列をカンマで分割して、文字列リストに変換する	s.split(',')
散布図に黒い丸マーカーを描画する	plt.scatter(データ列x, データ列y, marker='o', markerfacecolor='k')
横棒グラフの色をダークスレートブルーにする	plt.barh(データ列x, データ列y, color='darkslateblue')
データフレームを各列と列の組み合わせ毎にグループ化して、最小値を求める	df.groupby([column, column2], as_index=False).min()
横棒グラフの色をライトグレーにする	plt.barh(データ列x, データ列y, color='lightgray')
棒グラフの色をサーモンにする	plt.bar(データ列x, データ列y, color='salmon')
カウンタの上位を列挙する	aCounter.most_common(k)
両端キューの先頭	deq[0]
ヒストグラムを耐火レンガ色で描画する	plt.hist(データ列, color='firebrick')
option: レベッカパープル色を使う	color = 'rebeccapurple'
本日の月数	datetime.datetime.today().month
option: スラッシュをセパレータで使う	sep = '/'
リストとリストについての散布図に赤い左三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='<', c='r')
option: マーカーの色をダークオーキッドにする	markerfacecolor = 'darkorchid'
リストの先頭	aList[0]
タプルを反転する	reversed(aTuple)
辞書のキーとその値をペアとして取り出す	aDict.items()
標準入力を得る	sys.stdin
option: ダークスレートブルー色を使う	color = 'darkslateblue'
ネイビー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='navy')
option: グラフの色をミディアムスプリンググリーンに設定する	color = 'mediumspringgreen'
ナバホホワイト色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='navajowhite')
日付時刻データの日付	aDatetime.date()
日付時刻データと日付時刻データの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
整数nを八進表現に変換する	oct(n)
折れ線グラフをダークゴールデンロッド色で描画する	plt.plot(データ列x, データ列y, color='darkgoldenrod')
datetimeをインスタンス化する	datetime.datetime(年, 月, 日, 時, 分, 秒)
リストとリストについての散布図を大きさnで描画する	plt.scatter(データ列x, データ列y, s=n)
ヒストグラムを描画して、ビン数を設定する	plt.hist(データ列, bins=区関数)
データフレームの中で、列と列の重複を見る	df.duplicated(subset=[column, column2])
棒グラフの色をグリーンにする	plt.bar(データ列x, データ列y, color='green')
データフレームを配列に変換する	df.values
ファイルをバイナリ書き込みできるようにオープンする]	open(filepath, mode='wb')
折れ線グラフの色をマゼンタに設定する	plt.plot(データ列x, データ列y, color='magenta')
option: マーカーの色をミディアムパープルにする	markerfacecolor = 'mediumpurple'
文字列はPythonのキーワードか調べる	keyword.iskeyword(s)
散布図の色をレベッカパープルにする	plt.scatter(データ列x, データ列y, color='rebeccapurple')
スピアマン相関係数でデータフレームの相関行列	df.corr(method='spearman')
ヒストグラムの色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
棒グラフの色をパパイヤウィップにする	plt.bar(データ列x, データ列y, color='papayawhip')
option: グラフの色を紺碧に設定する	color = 'azure'
散布図をスカイブルー色で描画する	plt.scatter(データ列x, データ列y, color='skyblue')
ヒストグラムの色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
折れ線グラフをライトグレー色で描画する	plt.plot(データ列x, データ列y, color='lightgrey')
option: ダークマゼンタ色を使う	color = 'darkmagenta'
折れ線グラフをピーチパフ色で描画する	plt.plot(データ列x, データ列y, color='peachpuff')
option: オリーブ色を使う	color = 'olive'
ローングリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lawngreen')
横棒グラフの色をミッドナイトブルーにする	plt.barh(データ列x, データ列y, color='midnightblue')
散布図をディムグレー色で描画する	plt.scatter(データ列x, データ列y, color='dimgrey')
横棒グラフをデピンク色で描画する	plt.barh(データ列x, データ列y, color='deeppink')
データフレームの列を文字列にリネームする	df.rename(columns={column: name})
棒グラフをペルー色で描画する	plt.bar(データ列x, データ列y, color='peru')
折れ線グラフの丸マーカーを赤くする	plt.plot(データ列x, データ列y, marker='o', markerfacecolor='r')
計算機イプシロン	sys.float_info.epsilon
スラグレー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='slategray')
インディアンレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='indianred')
nを半分にする	n /= 2
両端キューをポップする	deq.pop()
option: BOM付きを使う	encoding = 'utf_8_sig'
横棒グラフを積み上げにする	plt.barh(ラベル列, データ列, bottom=データ列y, color='#800080')
リネン色の線グラフを描画する	plt.plot(データ列x, データ列y, color='linen')
実数の余弦の逆数	math.acos(x)
散布図の四角マーカーを赤くする	plt.scatter(データ列x, データ列y, marker='s', markerfacecolor='r')
データフレームのリストカラムの値が欠損値か調べる	df[aList].isna()
数式を数値に変換する	float(e)
棒グラフの色を赤にする	plt.bar(データ列x, データ列y, color='red')
横棒グラフをライトスレイグレー色で描画する	plt.barh(データ列x, データ列y, color='lightslategray')
クラスが名前付きタプルか調べる	issubclass(C, tuple)
データフレームを列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
棒グラフの色をサドルブラウンにする	plt.bar(データ列x, データ列y, color='saddlebrown')
xが真か調べる	bool(x)
横棒グラフをサンディーブラウン色で描画する	plt.barh(データ列x, データ列y, color='sandybrown')
プラム色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='plum')
データ列の値を正規表現patternでまとめてreplに置き換える	ds.replace(pattern, repl, regex=True)
横棒グラフをスノー色で描画する	plt.barh(データ列x, データ列y, color='snow')
ヒストグラムの色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
黄色い折れ線グラフを描画する	plt.plot(データ列x, データ列y, color='y')
リストとリストについて散布図を描画して、マーカーを左三角に設定する	plt.plot(データ列x, データ列y, marker='<')
ダークゴールデンロッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='darkgoldenrod')
オブジェクトのプロパティを削除する	delattr(obj, プロパティ名)
棒グラフをライトグリーン色で描画する	plt.bar(データ列x, データ列y, color='lightgreen')
モデルの残差をヒストグラムにする	plt.hist(目的変数 - model.predict(説明変数))
データ列が何日か見る	ds.dt.day
データフレームの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
散布図の色をシスルにする	plt.scatter(データ列x, データ列y, color='thistle')
ミディアムバイオレットレッド色の線グラフを描画する	plt.plot(データ列x, データ列y, color='mediumvioletred')
折れ線グラフを茶色色で描画する	plt.plot(データ列x, データ列y, color='brown')
データフレームを各列と列の組み合わせ毎にグループ化して、合計を求める	df.groupby([column, column2], as_index=False).sum()
リストの末尾	aList[-1]
タプルの先頭のn要素を取り除く	aTuple[n:]
rgbの大バツマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='X', c=rgb)
散布図の色をオレンジにする	plt.scatter(データ列x, データ列y, color='orange')
散布図の色をダークカーキにする	plt.scatter(データ列x, データ列y, color='darkkhaki')
横棒グラフの色を白にする	plt.barh(データ列x, データ列y, color='white')
本日の日数	datetime.datetime.today().day
折れ線グラフの三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='r')
散布図をダークバイオレット色で描画する	plt.scatter(データ列x, データ列y, color='darkviolet')
散布図にrgbの丸マーカーを使う	plt.plot(データ列x, データ列y, marker='o', c=rgb)
データフレームのカラムの中にいくつ欠損値があるか数える	df[col].isna().sum()
文字列の開始位置と終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
散布図をライトスレイグレー色で描画する	plt.scatter(データ列x, データ列y, color='lightslategray')
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(データ列x, データ列y, color='mediumseagreen')
実数を二乗する	x ** 2
棒グラフをインディアンレッド色で描画する	plt.bar(データ列x, データ列y, color='indianred')
散布図にrgbの三角マーカーを使う	plt.plot(データ列x, データ列y, marker='^', c=rgb)
カウンタの下位を列挙する	aCounter.most_common()[:-n-1:-1]
ブルーバイオレット色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='blueviolet')
四角印で散布図を描画する	plt.scatter(データ列x, データ列y, marker='s')
ダイアモンド印でデータ列の折れ線グラフを描画する	plt.plot(データ列x, データ列y, marker='D')
リストの全ての要素をクリアにする	aList.clear()
ゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='goldenrod')
ヒストグラムをパープル色で描画する	plt.hist(データ列, color='purple')
option: グラフの色をスカイブルーに設定する	color = 'skyblue'
カデットブルー色のヒストグラムを描画する	plt.hist(データ列, color='cadetblue')
横棒グラフの色をライトスレイグレーにする	plt.barh(データ列x, データ列y, color='lightslategray')
ミディアムバイオレットレッド色の散布図を描画する	plt.scatter(データ列x, データ列y, color='mediumvioletred')
散布図をプラム色で描画する	plt.scatter(データ列x, データ列y, color='plum')
データフレームを'A'列によってによって降順にソートする	df.sort_values(by='A', ascending=False)
サポートベクター分類モデルを作る	model = sklearn.svm.SVR(kernel='rbf', C=1e3, gamma=0.1, epsilon=0.1)
データフレームのリストカラムの要約統計量	df[aList].describe()
二つの文字列をカンマで区切ってプリントする	print(value, value2, sep=',')
オブジェクトのプロパティの値を設定する	setattr(obj, プロパティ名, 値)
横棒グラフの色をアイボリーにする	plt.barh(データ列x, データ列y, color='ivory')
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
ヒストグラムをダークゴールデンロッド色で描画する	plt.hist(データ列, color='darkgoldenrod')
option: 配列のデータ型を指定する	dtype = np.uint8
散布図の色をスラグレーにする	plt.scatter(データ列x, データ列y, color='slategrey')
rgbの下三角マーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='v', c=rgb)
散布図の色をスチールブルーにする	plt.scatter(データ列x, データ列y, color='steelblue')
データ列の平均値	ds.mean()
散布図に黒い左三角マーカーを使う	plt.plot(データ列x, データ列y, marker='<', c='k')
ライトコーラル色の散布図を描画する	plt.scatter(データ列x, データ列y, color='lightcoral')
縦軸の目盛に文字列を付ける	plt.yticks([0, 60, 90], ['不可', '可', '秀'])
横棒グラフの色をドジャーブルーにする	plt.barh(データ列x, データ列y, color='dodgerblue')
option: グラフの色をバリーウッドに設定する	color = 'burlywood'
ライムグリーン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='limegreen')
ヒストグラムの色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
文字列を赤色でプリントする	print(f'\033[31m{value}\033[0m')
散布図の色をシエナにする	plt.scatter(データ列x, データ列y, color='sienna')
オールドレース色のヒストグラムを描画する	plt.hist(データ列, color='oldlace')
散布図の色をハニーデューにする	plt.scatter(データ列x, データ列y, color='honeydew')
折れ線グラフに四角マーカーを使う	plt.plot(データ列x, データ列y, marker='s')
ダークスレートブルー色の散布図を描画する	plt.scatter(データ列x, データ列y, color='darkslateblue')
データ列が正規分布からどの程度、歪んでいるか見る	ds.kurt()
横棒グラフの色をグリーンイエローにする	plt.barh(データ列x, データ列y, color='greenyellow')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightgreen')
option: グラフの色をグリーンに設定する	color = 'green'
散布図の色をオリーブにする	plt.scatter(データ列x, データ列y, color='olive')
オレンジ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='orange')
ヒストグラムの色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
option: グラフの色をダークカーキに設定する	color = 'darkkhaki'
option: マーカーを四角に変更する	marker = 's'
ピンク色の散布図を描画する	plt.scatter(データ列x, データ列y, color='pink')
イテラブルを2回あわせた直積	itertools.product(iterable, repeat=2)
ネイビー色の線グラフを描画する	plt.plot(データ列x, データ列y, color='navy')
折れ線グラフの大バツマーカーの線幅を変更する	plt.plot(データ列x, データ列y, marker='X', markeredgewidth=2.5)
データ列のユニークな値の個数	ds.nunique()
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(データ列x, データ列y, color='mediumslateblue')
option: マーカーの色をビスクにする	markerfacecolor = 'bisque'
ヒストグラムの色をアクアに設定する	plt.hist(データ列, color='aqua')
横棒グラフをダークグレー色で描画する	plt.barh(データ列x, データ列y, color='darkgray')
棒グラフの色をイエローグリーンにする	plt.bar(データ列x, データ列y, color='yellowgreen')
nが3の倍数か調べる	n % 3 == 0
リストに応じて、散布図の色を変える	plt.scatter(データ列x, データ列y, c=aList, cmap='Blues')
シアン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='cyan')
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(データ列x, データ列y, color='mediumvioletred')
赤い一点鎖線でデータ列の推移を描画する	plt.plot(データ列x, データ列y, linestyle='dashbot', color='r')
nの二乗	n ** 2
データフレームの散布図に多項式回帰を加える	sns.regplot(data=df, x='列名', y='列名', order=2)
偽陰性を避けたい指標を使う	sklearn.metrics.recall_score(正解データ列, 予測データ列)
データフレームの重複した行のみを抽出する	df[df.duplicated(keep=False)]
xを整数に変換する	int(x)
データフレームのそれぞれのグループごとの分散	df.groupby(column).var()
ヒストグラムを小麦色色で描画する	plt.hist(データ列, color='wheat')
散布図の色をマルーンにする	plt.scatter(データ列x, データ列y, color='maroon')
棒グラフの色を小麦色にする	plt.bar(データ列x, データ列y, color='wheat')
横棒グラフの色をオレンジにする	plt.barh(データ列x, データ列y, color='orange')
散布図をミディアムシアグリーン色で描画する	plt.scatter(データ列x, データ列y, color='mediumseagreen')
文字列の中で複数行対応として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
折れ線グラフの右三角マーカーを赤くする	plt.plot(データ列x, データ列y, marker='>', markerfacecolor='r')
ヒストグラムをライトゴールドロディイエロー色で描画する	plt.hist(データ列, color='lightgoldenrodyellow')
文字列を走査し、正規表現に複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
散布図にrgbの星マーカーを使う	plt.plot(データ列x, データ列y, marker='*', c=rgb)
データフレームのカラムを丸めて、整数型にする	df[col].round().astype(int)
横棒グラフの色を青にする	plt.barh(データ列x, データ列y, color='blue')
散布図をアイボリー色で描画する	plt.scatter(データ列x, データ列y, color='ivory')
折れ線グラフの色をアクアマリンに設定する	plt.plot(データ列x, データ列y, color='aquamarine')
nにn2をかける	n * n2
折れ線グラフをライムグリーン色で描画する	plt.plot(データ列x, データ列y, color='limegreen')
カテゴリで色分けして、データフレームをに箱ひげ図で可視化する	sns.boxplot(x='カテゴリ列', y='列', hue='カテゴリ列', data=df)
変数について数式の微分を行う	sympy.diff(e, z)
TSVファイルをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
スチールブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='steelblue')
散布図の色をインディゴにする	plt.scatter(データ列x, データ列y, color='indigo')
散布図のバツマーカーの色を変更する	plt.scatter(データ列x, データ列y, marker='x', markerfacecolor='#800080')
折れ線グラフをサドルブラウン色で描画する	plt.plot(データ列x, データ列y, color='saddlebrown')
文字列全体が正規表現に複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
配列の次元数	aArray.ndim
option: マーカーの色をカーキにする	markerfacecolor = 'khaki'
データ列のpercent分位数	ds.quantile(percent/100)
Pandasで、フォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
データフレームのn行以降抽出する	df[n:]
文字列の終了位置まで部分文字列を探す	s.find(sub, 0, end)
グラフの縦軸を対数に変更する	plt.yscale('log')
nをn2乗に増やす	n **= n2
データフレームの分散	df.var()
スクリプトファイルの絶対パス	os.path.abspath(__file__)
リストとリストについて散布図を描画して、マーカーを四角に設定する	plt.plot(データ列x, データ列y, marker='s')
文字列を正規表現で分割する	re.split(pattern, s)
文字列中にひとつでも非小文字が含まれるか調べる	any(not c.islower() for c in s)
文字列中の部分文字列の出現をカウントする	s.count(sub)
両端キューのstart〜endの部分要素	collections.deque(itertools.islice(deq, start, end))
データフレームを100の位で丸めて、整数型にする	df.round(-2).astype(int)
グラフの用途をポスターに設定する	sns.set(context='poster')
青い横棒グラフを描画する	plt.barh(データ列x, データ列y, color='b')
ヒストグラムを半透明にする	plt.hist(データ列x, alpha=0.5)
日付データにn週間分、加算する	aDate + datetime.timedelta(weeks=n)
棒グラフをコーンフラワーブルー色で描画する	plt.bar(データ列x, データ列y, color='cornflowerblue')
ダークシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkseagreen')
散布図のポイントマーカーの線幅を変更する	plt.scatter(データ列x, データ列y, marker='.', markeredgewidth=2.5)
スカイブルー色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='skyblue')
option: マーカーの色をレモンシフォンにする	markerfacecolor = 'lemonchiffon'
データ列の欠損値を最小値に設定する	ds.fillna(ds.min())
ヒストグラムでデータ列を可視化する	plt.hist(データ列)
横棒グラフをコーンズシルク色で描画する	plt.barh(データ列x, データ列y, color='cornsilk')
0からN未満までの配列	np.arange(N)
連立方程式を解く	sympy.solve([e, e2])
データフレームを複数の列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
サーモン色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='salmon')
データ列をインポートする	import pandas as pd
option: マーカーの色をマゼンタにする	markerfacecolor = 'magenta'
折れ線グラフに黒い三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^', markerfacecolor='k')
散布図のダイアモンドマーカーを赤くする	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='r')
option: マーカーの色をサーモンにする	markerfacecolor = 'salmon'
書式をargsを引数としてフォーマットする	formatText.format(*args)
データ列を10の位で丸める	ds.round(-1)
データフレームを列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
インディアンレッド色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='indianred')
散布図をシャルトリューズ色で描画する	plt.scatter(データ列x, データ列y, color='chartreuse')
ファイルを書き込みモードでオープンして]、fとする	f = open(filepath, mode='w')
文字列を文字コード列に変換する	[ord(ch) for ch in s]
散布図をライトサーモン色で描画する	plt.scatter(データ列x, データ列y, color='lightsalmon')
配列と同じ大きさの空配列を作る	np.empty_like(aArray)
リストとリストについての散布図に黒いポイントマーカーを描画する	plt.plot(データ列x, データ列y, marker='.', c='k')
コレクションを使う	import collections
文字列を走査し、正規表現にASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
ヒストグラムの色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
折れ線グラフをブラック色で描画する	plt.plot(データ列x, データ列y, color='black')
ライトコーラル色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='lightcoral')
ファイルから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
主成分分析を行う	model = sklearn.decomposition.PCA(n_components=n)
赤いポイントマーカーで散布図を描画する	plt.plot(データ列x, データ列y, marker='.', c='r')
青いヒストグラムを描画する	plt.hist(データ列, color='b')
折れ線グラフの線の種類を一点鎖線に設定する	plt.plot(データ列x, データ列y, linestyle='dashbot')
白色のヒストグラムを描画する	plt.hist(データ列, color='white')
横棒グラフをレベッカパープル色で描画する	plt.barh(データ列x, データ列y, color='rebeccapurple')
散布図に黒いダイアモンドマーカーを描画する	plt.scatter(データ列x, データ列y, marker='D', markerfacecolor='k')
横棒グラフをオールドレース色で描画する	plt.barh(データ列x, データ列y, color='oldlace')
箱ひげ図を描画して、平均線を加える	plt.boxplot(データ列, meanline=True)
折れ線グラフの色をライトイエローに設定する	plt.plot(データ列x, データ列y, color='lightyellow')
折れ線グラフの色を淡いピンク色に設定する	plt.plot(データ列x, データ列y, color='lightpink')
データ列を箱ひげ図にする	plt.boxplot(データ列)
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
option: ダークシアン色を使う	color = 'darkcyan'
エクセルファイルファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
小麦色色の散布図を描画する	plt.scatter(データ列x, データ列y, color='wheat')
データフレームの欠損値を中央値で埋める	df.fillna(df.median())
日付時刻データをn時間前に戻す	aDatetime - datetime.timedelta(hours=n)
フローラルホワイト色の線グラフを描画する	plt.plot(データ列x, データ列y, color='floralwhite')
折れ線グラフの色を赤に設定する	plt.plot(データ列x, データ列y, color='red')
棒グラフの色をミントクリームにする	plt.bar(データ列x, データ列y, color='mintcream')
グラフの中に枠なしの凡例を入れる	plt.legend(frameon=False)
リストのn番目の	aList[n]
ヒストグラムの色をベージュに設定する	plt.hist(データ列, color='beige')
ブランチドアーモンド色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='blanchedalmond')
オブジェクトの参照カウント	sys.getrefcount(obj)
option: シエナ色を使う	color = 'sienna'
グラフを描画する準備をする	import matplotlib.pyplot as plt
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列x, データ列y, color='lightseagreen')
eの乗数	math.exp(x)
散布図をライトシアン色で描画する	plt.scatter(データ列x, データ列y, color='lightcyan')
疑似乱数を生成する	random.random()
横棒グラフの色をグレーにする	plt.barh(データ列x, データ列y, color='grey')
散布図をインディアンレッド色で描画する	plt.scatter(データ列x, データ列y, color='indianred')
配列の全要素を指定の値にする	aArray[:, :] = 指定の値
リストとリストについての散布図に三角マーカーを描画する	plt.plot(データ列x, データ列y, marker='^')
サドルブラウン色の棒グラフを描画する	plt.bar(データ列x, データ列y, color='saddlebrown')
フォレストグリーン色の散布図を描画する	plt.scatter(データ列x, データ列y, color='forestgreen')
横棒グラフの色をアクアにする	plt.barh(データ列x, データ列y, color='aqua')
実部と虚部から複素数	complex(x, y)
ヒストグラムをダークサーモン色で描画する	plt.hist(データ列, color='darksalmon')
棒グラフをミスティローズ色で描画する	plt.bar(データ列x, データ列y, color='mistyrose')
option: シスル色を使う	color = 'thistle'
横棒グラフの色をミディアムスプリンググリーンにする	plt.barh(データ列x, データ列y, color='mediumspringgreen')
散布図に赤い下三角マーカーを使う	plt.plot(データ列x, データ列y, marker='v', c='r')
option: マーカーの色を茶色にする	markerfacecolor = 'brown'
option: 星マーカーを使う	marker = '*'
オリーブ色の横棒グラフを描画する	plt.barh(データ列x, データ列y, color='olive')
