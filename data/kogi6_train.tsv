空行をプリントする	print()
改行する	print()
文字列をプリントする	print(value)
数値をプリントする	print(value)
変数をプリントする	print(value)
文字列を表示する	print(value)
リストをプリントする	print(value)
数値を表示する	print(value)
二つの文字列を順にプリントする	print(value, value2)
２つの文字列を順に出力する	print(value, value2)
２つのリストを順にプリントする	print(value, value2)
２つの変数をプリントする	print(value, value2)
二つの値を順にプリントする	print(value, value2)
二つの文字列をプリントする	print(value, value2)
三つの文字列を順にプリントする	print(value, value2, value3)
三つの文字列を順に出力する	print(value, value2, value3)
3つの変数を順に出力する	print(value, value2, value3)
三つの変数をプリントする	print(value, value2, value3)
三つの実行結果を順にプリントする	print(value, value2, value3)
＜オプション＞改行の代わりに文字列を用いる	end = s
＜オプション＞文字列を改行の代わりに用いる	end = s
＜オプション＞改行しない	end = ''
＜オプション＞改行しないように設定する	end = ''
＜オプション＞改行なし	end = ''
改行なしに文字列をプリントする	print(value, end='')
改行しなくて実行結果を出力する	print(value, end='')
改行せずリストをプリントする	print(value, end='')
改行なしに実行結果を出力する	print(value, end='')
文字列を改行なしにプリントする	print(value, end='')
改行なしに文字列を表示する	print(value, end='')
値を改行しないで表示する	print(value, end='')
文字列の出力を改行なしに行う	print(value, end='')
数値の出力を改行せずに行う	print(value, end='')
変数の出力を改行なしに行う	print(value, end='')
改行なしに二つの文字列をプリントする	print(value, value2, end='')
改行せず二つの文字列をプリントする	print(value, value2, end='')
二つのリストを改行なしにプリントする	print(value, value2, end='')
二つの数値を改行なしにプリントする	print(value, value2, end='')
改行なしに２つの文字列をプリントする	print(value, value2, end='')
改行なしに二つの文字列を表示する	print(value, value2, end='')
改行なしに２つのリストをプリントする	print(value, value2, end='')
リストを展開してプリントする	print(*aList)
リストの値のみプリントする	print(*aList)
タプルを展開してプリントする	print(*aTuple)
タプルを展開して表示する	print(*aTuple)
組の値だけ表示する	print(*aTuple)
タプルの値だけプリントする	print(*aTuple)
＜オプション＞セパレータをカンマにする	sep = ','
＜オプション＞区切り記号をカンマにする	sep = ','
＜オプション＞カンマをセパレータで使う	sep = ','
＜オプション＞カンマをセパレータで用いる	sep = ','
＜オプション＞カンマを分割記号で用いる	sep = ','
＜オプション＞カンマを区切りで用いる	sep = ','
＜オプション＞セパレータをタブにする	sep = '\t'
＜オプション＞分割記号をタブにする	sep = '\t'
＜オプション＞タブをセパレータで使う	sep = '\t'
＜オプション＞タブをセパレータで使用する	sep = '\t'
＜オプション＞タブをセパレータで用いる	sep = '\t'
＜オプション＞セパレータをコロンにする	sep = ':'
＜オプション＞コロンをセパレータで使う	sep = ':'
＜オプション＞コロンをセパレータで使用する	sep = ':'
＜オプション＞セパレータをスラッシュにする	sep = '/'
＜オプション＞分割記号をスラッシュにする	sep = '/'
＜オプション＞スラッシュをセパレータで使う	sep = '/'
＜オプション＞スラッシュをセパレータで使用する	sep = '/'
＜オプション＞スラッシュを区切り記号で使う	sep = '/'
＜オプション＞セパレータを改行にする	sep = '\n'
＜オプション＞改行をセパレータで使う	sep = '\n'
＜オプション＞改行をセパレータで用いる	sep = '\n'
＜オプション＞改行をセパレータで使用する	sep = '\n'
＜オプション＞セパレータを文字列にする	sep = s
＜オプション＞文字列をセパレータで使う	sep = s
＜オプション＞文字列を区切りで使う	sep = s
＜オプション＞文字列を分割記号で使用する	sep = s
＜オプション＞文字列をセパレータで用いる	sep = s
＜オプション＞セパレータを使わない	sep = ''
二つの文字列をカンマで区切ってプリントする	print(value, value2, sep=',')
カンマで区切って二つの文字列をプリントする	print(value, value2, sep=',')
二つの変数をカンマで区切って表示する	print(value, value2, sep=',')
二つの文字列をタブで区切ってプリントする	print(value, value2, sep='\t')
2つの実行結果をタブで区切ってプリントする	print(value, value2, sep='\t')
二つの変数をタブで区切って出力する	print(value, value2, sep='\t')
タブで区切って２つの文字列をプリントする	print(value, value2, sep='\t')
二つの数値をタブで区切ってプリントする	print(value, value2, sep='\t')
2つの値をタブで区切ってプリントする	print(value, value2, sep='\t')
二つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
コロンで区切って２つの変数をプリントする	print(value, value2, sep=':')
2つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
２つの文字列をコロンで区切ってプリントする	print(value, value2, sep=':')
2つの変数をコロンで区切ってプリントする	print(value, value2, sep=':')
コロンで区切って2つの変数を表示する	print(value, value2, sep=':')
二つの文字列をスラッシュで区切ってプリントする	print(value, value2, sep='/')
スラッシュで区切って二つのリストをプリントする	print(value, value2, sep='/')
２つの数値をスラッシュで区切ってプリントする	print(value, value2, sep='/')
二つのリストをスラッシュで区切ってプリントする	print(value, value2, sep='/')
スラッシュで区切って二つの文字列をプリントする	print(value, value2, sep='/')
２つの文字列をスラッシュで区切って出力する	print(value, value2, sep='/')
スラッシュで区切って二つの数値をプリントする	print(value, value2, sep='/')
二つの文字列を改行で区切ってプリントする	print(value, value2, sep='\n')
改行で区切って二つの変数をプリントする	print(value, value2, sep='\n')
改行で区切って2つの数値をプリントする	print(value, value2, sep='\n')
改行で区切って２つのリストを表示する	print(value, value2, sep='\n')
2つの数値を改行で区切って出力する	print(value, value2, sep='\n')
二つの文字列を文字列で区切ってプリントする	print(value, value2, sep=s)
二つの実行結果を文字列で区切って表示する	print(value, value2, sep=s)
文字列で区切って二つの文字列を出力する	print(value, value2, sep=s)
ハローワールドとプリントする	print('Hello World')
ハローワールドを出力する	print('Hello World')
ハローワールドをプリントする	print('Hello World')
こんにちは世界と表示する	print('Hello World')
試しに何か動かす	print('Hello World')
何か試しに動かしてみる	print('Hello World')
最初のプログラムを書く	print('Hello World')
文字列を黒色でプリントする	print(f'\033[30m{value}\033[0m')
文字列を黒色で表示する	print(f'\033[30m{value}\033[0m')
リストを黒色でプリントする	print(f'\033[30m{value}\033[0m')
黒色でリストをプリントする	print(f'\033[30m{value}\033[0m')
文字列を赤色でプリントする	print(f'\033[31m{value}\033[0m')
赤色で実行結果を表示する	print(f'\033[31m{value}\033[0m')
リストを赤色でプリントする	print(f'\033[31m{value}\033[0m')
赤色で文字列を出力する	print(f'\033[31m{value}\033[0m')
数値を赤色で表示する	print(f'\033[31m{value}\033[0m')
赤色で文字列をプリントする	print(f'\033[31m{value}\033[0m')
文字列を緑色でプリントする	print(f'\033[32m{value}\033[0m')
変数を緑色で表示する	print(f'\033[32m{value}\033[0m')
緑色で文字列をプリントする	print(f'\033[32m{value}\033[0m')
緑色で変数を表示する	print(f'\033[32m{value}\033[0m')
文字列を緑色で出力する	print(f'\033[32m{value}\033[0m')
文字列を緑色で表示する	print(f'\033[32m{value}\033[0m')
文字列を黄色でプリントする	print(f'\033[33m{value}\033[0m')
黄色で文字列を表示する	print(f'\033[33m{value}\033[0m')
黄色で数値をプリントする	print(f'\033[33m{value}\033[0m')
文字列を黄色で表示する	print(f'\033[33m{value}\033[0m')
数値を黄色で表示する	print(f'\033[33m{value}\033[0m')
黄色で実行結果を表示する	print(f'\033[33m{value}\033[0m')
文字列を青色でプリントする	print(f'\033[34m{value}\033[0m')
実行結果を青色でプリントする	print(f'\033[34m{value}\033[0m')
青色で文字列をプリントする	print(f'\033[34m{value}\033[0m')
文字列を青色で表示する	print(f'\033[34m{value}\033[0m')
数値を青色でプリントする	print(f'\033[34m{value}\033[0m')
文字列をマゼンタでプリントする	print(f'\033[35m{value}\033[0m')
マゼンタで文字列を出力する	print(f'\033[35m{value}\033[0m')
文字列をマゼンタで表示する	print(f'\033[35m{value}\033[0m')
マゼンタで数値をプリントする	print(f'\033[35m{value}\033[0m')
数値を紫色で表示する	print(f'\033[35m{value}\033[0m')
マゼンタでリストをプリントする	print(f'\033[35m{value}\033[0m')
文字列をシアンでプリントする	print(f'\033[36m{value}\033[0m')
文字列をシアンで表示する	print(f'\033[36m{value}\033[0m')
文字列を水色でプリントする	print(f'\033[36m{value}\033[0m')
値をシアンで表示する	print(f'\033[36m{value}\033[0m')
文字列を白色でプリントする	print(f'\033[37m{value}\033[0m')
数値を白色でプリントする	print(f'\033[37m{value}\033[0m')
実行結果を白色でプリントする	print(f'\033[37m{value}\033[0m')
変数を白色で表示する	print(f'\033[37m{value}\033[0m')
数値を白色で表示する	print(f'\033[37m{value}\033[0m')
文字列を太字でプリントする	print(f'\033[1m{value}\033[0m')
太文字で数値をプリントする	print(f'\033[1m{value}\033[0m')
太字で数値をプリントする	print(f'\033[1m{value}\033[0m')
実行結果を太字で出力する	print(f'\033[1m{value}\033[0m')
変数を太文字でプリントする	print(f'\033[1m{value}\033[0m')
変数を太字でプリントする	print(f'\033[1m{value}\033[0m')
文字列を太文字でプリントする	print(f'\033[1m{value}\033[0m')
文字列を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
下線付きでリストをプリントする	print(f'\033[4m{value}\033[0m')
下線付きで文字列をプリントする	print(f'\033[4m{value}\033[0m')
変数を下線付きで出力する	print(f'\033[4m{value}\033[0m')
数値を下線付きでプリントする	print(f'\033[4m{value}\033[0m')
文字列を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
変数を黒色でプリントできる文字列に変換する	f'\033[30m{value}\033[0m'
文字列を黒色で表示できる文字列に変換する	f'\033[30m{value}\033[0m'
文字列を黒色にする	f'\033[30m{value}\033[0m'
リストを黒色化する	f'\033[30m{value}\033[0m'
リストを黒色にする	f'\033[30m{value}\033[0m'
値を黒色にする	f'\033[30m{value}\033[0m'
数値を黒色化する	f'\033[30m{value}\033[0m'
文字列を赤色でプリントできる文字列に変換する	f'\033[31m{value}\033[0m'
文字列を赤色でプリントできる文字列にする	f'\033[31m{value}\033[0m'
値を赤色で表示できる文字列にする	f'\033[31m{value}\033[0m'
数値を赤色で表示できる文字列に変換する	f'\033[31m{value}\033[0m'
リストを赤色でプリントできる文字列にする	f'\033[31m{value}\033[0m'
文字列を赤色にする	f'\033[31m{value}\033[0m'
文字列を赤色化する	f'\033[31m{value}\033[0m'
変数を赤色化する	f'\033[31m{value}\033[0m'
リストを赤色にする	f'\033[31m{value}\033[0m'
文字列を緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
文字列を緑色で表示できる文字列にする	f'\033[32m{value}\033[0m'
数値を緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
文字列を緑色でプリントできる文字列にする	f'\033[32m{value}\033[0m'
リストを緑色でプリントできる文字列にする	f'\033[32m{value}\033[0m'
リストを緑色でプリントできる文字列に変換する	f'\033[32m{value}\033[0m'
文字列を緑色にする	f'\033[32m{value}\033[0m'
文字列を緑色化する	f'\033[32m{value}\033[0m'
リストを緑色にする	f'\033[32m{value}\033[0m'
数値を緑色にする	f'\033[32m{value}\033[0m'
変数を緑色化する	f'\033[32m{value}\033[0m'
文字列を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
変数を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
値を黄色でプリントできる文字列に変換する	f'\033[33m{value}\033[0m'
文字列を黄色にする	f'\033[33m{value}\033[0m'
数値を黄色化する	f'\033[33m{value}\033[0m'
変数を黄色にする	f'\033[33m{value}\033[0m'
文字列を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
変数を青色で表示できる文字列にする	f'\033[34m{value}\033[0m'
実行結果を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
実行結果を青色で表示できる文字列にする	f'\033[34m{value}\033[0m'
リストを青色でプリントできる文字列にする	f'\033[34m{value}\033[0m'
変数を青色でプリントできる文字列に変換する	f'\033[34m{value}\033[0m'
文字列を青色にする	f'\033[34m{value}\033[0m'
リストを青色化する	f'\033[34m{value}\033[0m'
変数を青色化する	f'\033[34m{value}\033[0m'
変数を青色にする	f'\033[34m{value}\033[0m'
文字列をマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
文字列をマゼンタでプリントできる文字列にする	f'\033[35m{value}\033[0m'
リストをマゼンタでプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
実行結果を紫色でプリントできる文字列に変換する	f'\033[35m{value}\033[0m'
文字列をマゼンタにする	f'\033[35m{value}\033[0m'
数値を紫色にする	f'\033[35m{value}\033[0m'
値をマゼンタにする	f'\033[35m{value}\033[0m'
リストをマゼンタ化する	f'\033[35m{value}\033[0m'
リストをマゼンタにする	f'\033[35m{value}\033[0m'
変数をマゼンタ化する	f'\033[35m{value}\033[0m'
文字列をシアンでプリントできる文字列に変換する	f'\033[36m{value}\033[0m'
リストをシアンで表示できる文字列に変換する	f'\033[36m{value}\033[0m'
文字列を水色でプリントできる文字列にする	f'\033[36m{value}\033[0m'
変数をシアンで表示できる文字列にする	f'\033[36m{value}\033[0m'
数値を水色で表示できる文字列に変換する	f'\033[36m{value}\033[0m'
文字列をシアンにする	f'\033[36m{value}\033[0m'
値をシアンにする	f'\033[36m{value}\033[0m'
文字列を水色化する	f'\033[36m{value}\033[0m'
数値をシアン化する	f'\033[36m{value}\033[0m'
値を水色にする	f'\033[36m{value}\033[0m'
数値をシアンにする	f'\033[36m{value}\033[0m'
文字列を白色でプリントできる文字列に変換する	f'\033[37m{value}\033[0m'
変数を白色で表示できる文字列にする	f'\033[37m{value}\033[0m'
リストを白色で表示できる文字列に変換する	f'\033[37m{value}\033[0m'
変数を白色でプリントできる文字列にする	f'\033[37m{value}\033[0m'
文字列を白色にする	f'\033[37m{value}\033[0m'
文字列を白色化する	f'\033[37m{value}\033[0m'
実行結果を白色にする	f'\033[37m{value}\033[0m'
変数を白色化する	f'\033[37m{value}\033[0m'
数値を白色にする	f'\033[37m{value}\033[0m'
文字列を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
数値を太文字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
変数を太字で表示できる文字列にする	f'\033[1m{value}\033[0m'
変数を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
数値を太字でプリントできる文字列に変換する	f'\033[1m{value}\033[0m'
実行結果を太字でプリントできる文字列にする	f'\033[1m{value}\033[0m'
文字列を太字にする	f'\033[1m{value}\033[0m'
数値を太字化する	f'\033[1m{value}\033[0m'
数値を太字にする	f'\033[1m{value}\033[0m'
変数を太文字にする	f'\033[1m{value}\033[0m'
文字列を下線付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
変数を下線付きで表示できる文字列にする	f'\033[4m{value}\033[0m'
変数を下線付きでプリントできる文字列に変換する	f'\033[4m{value}\033[0m'
文字列を下線付きでプリントできる文字列にする	f'\033[4m{value}\033[0m'
文字列を下線付きにする	f'\033[4m{value}\033[0m'
リストを下線付き化する	f'\033[4m{value}\033[0m'
数値を下線付き化する	f'\033[4m{value}\033[0m'
数値をアンダーライン付きにする	f'\033[4m{value}\033[0m'
実行結果を下線付き化する	f'\033[4m{value}\033[0m'
xの小数点以下'1'桁までをプリントする	print(':.1f'.format(x))
xの小数点以下'1'桁まで出力する	print(':.1f'.format(x))
xの小数点以下'1'桁までプリントする	print(':.1f'.format(x))
xの小数点以下'2'桁までをプリントする	print(':.2f'.format(x))
xの小数点以下'2'桁までを表示する	print(':.2f'.format(x))
xの小数点以下'3'桁までをプリントする	print(':.3f'.format(x))
xの小数点以下'3'桁まで表示する	print(':.3f'.format(x))
xの小数点以下'4'桁までをプリントする	print(':.4f'.format(x))
xの小数点以下'4'桁までを出力する	print(':.4f'.format(x))
xの小数点以下'5'桁までをプリントする	print(':.5f'.format(x))
xの小数点以下'5'桁まで表示する	print(':.5f'.format(x))
xの小数点以下'5'桁までを出力する	print(':.5f'.format(x))
xの小数点以下'1'桁までの文字列に変換する	':.1f'.format(x)
xの小数点以下'1'桁の文字列にする	':.1f'.format(x)
xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)
xの小数点以下'3'桁までの文字列に変換する	':.3f'.format(x)
xの小数点以下'3'桁の文字列に変換する	':.3f'.format(x)
xの小数点以下'4'桁までの文字列に変換する	':.4f'.format(x)
xの小数点以下'4'桁の文字列に変換する	':.4f'.format(x)
xの小数点以下'4'桁までの文字列にする	':.4f'.format(x)
xの小数点以下'5'桁までの文字列に変換する	':.5f'.format(x)
xの小数点以下'5'桁までの文字列にする	':.5f'.format(x)
標準入力から1行読み取る	input()
ユーザから入力される	input()
ユーザの入力を整数として受け取る	int(input())
ユーザが整数を入力する	int(input())
ユーザから入力される	int(input())
変数を定義する	x = n
変数をスワップする	x, y = y, x
変数を入れ替える	x, y = y, x
リストの要素をスワップする	aList[i], aList[j] = aList[j], aList[i]
二つの変数を同じ値にする	x = y = n
二つの変数をそれぞれ定義する	x, y = i, j
x,y,zをそれぞれn,n2,n3とする	x, y, z = n, n2, n3
x,y,zにそれぞれn,n2,n3を代入する	x, y, z = n, n2, n3
x,y,zをそれぞれn,n2,n3に設定する	x, y, z = n, n2, n3
xの絶対値	abs(x)
xを論理値に変換する	bool(x)
xが真か調べる	bool(x)
xが真か	bool(x)
xが真	bool(x)
x,yの複素数	complex(x, y)
x,yの複素数を求める	complex(x, y)
xとyの商と余りを同時に求める	divmod(x, y)
商と余りを同時に計算する	divmod(x, y)
xとyの商と余りを同時に算出する	divmod(x, y)
xを浮動小数点数に変換する	float(x)
浮動小数点数に変換する	float(x)
xを整数に変換する	int(x)
整数にする	int(x)
xを印字できる文字列にする	ascii(x)
xの印字可能な文字列	ascii(x)
xのハッシュ値	hash(x)
ハッシュ値	hash(x)
二変数の最大値	max(x, y)
二数の最大値	max(x, y)
二変数の一番小さい値	max(x, y)
２変数の最大値を算出する	max(x, y)
二変数の最小値	min(x, y)
2数の最小値	min(x, y)
二変数の最小の値	min(x, y)
二数の最も小さい値	min(x, y)
２数の最小値	min(x, y)
２変数の一番小さい値	min(x, y)
三変数の最大値	max(x, y, z)
3変数の最も大きい値	max(x, y, z)
３つの最大値	max(x, y, z)
三変数の最大の値を求める	max(x, y, z)
3変数の最も大きい値を算出する	max(x, y, z)
三数の最大値	max(x, y, z)
三変数の最小値	min(x, y, z)
3変数の最も小さい値	min(x, y, z)
３変数の最小値	min(x, y, z)
３変数の一番小さい値	min(x, y, z)
３変数の最小値を求める	min(x, y, z)
三数の最小値	min(x, y, z)
xを浮動小数点数型に変換する	float(x)
xを浮動小数点数型にする	float(x)
xを整数に変換する	int(x)
xを文字列に変換する	str(x)
nかつn2	n and n2
nまたはn2	n or n2
nではない	not n
nを否定する	not n
真	True
偽	False
nullに等しい値	None
nullに等しいもの	None
NULLに等しい値	None
未定値	None
コレクションを使う	import collections
データ構造を用いる	import collections
データ構造を使う	import collections
空の両端キュー	collections.deque()
空の両端キューを作る	collections.deque()
空の双方向キューを生成する	collections.deque()
空の両端キューを生成する	collections.deque()
イテラブルから両端キューを作る	collections.deque(iterable)
イテラブルから双方向キューを作成する	collections.deque(iterable)
列からキューを生成する	collections.deque(iterable)
スタックを列から作る	collections.deque(iterable)
双方向キューをリストから生成する	collections.deque(iterable)
シーケンスからスタックを準備する	collections.deque(iterable)
イテラブルを両端キューに変換する	collections.deque(iterable)
列を両端キューに変換する	collections.deque(iterable)
シーケンスを双方向キューにする	collections.deque(iterable)
列を双方向キューにする	collections.deque(iterable)
列を両端キューにする	collections.deque(iterable)
両端キューの長さを制限する	collections.deque(maxlen=n)
最大長を指定して、両端キュー	collections.deque(maxlen=n)
上限のある双方向キュー	collections.deque(maxlen=n)
上限長のある両端キューを作る	collections.deque(maxlen=n)
最大長を指定して、双方向キューを作る	collections.deque(maxlen=n)
上限を指定して、両端キューを作成する	collections.deque(maxlen=n)
最大長nの両端キューを作る	collections.deque(maxlen=n)
最大長nのキューを作成する	collections.deque(maxlen=n)
最大長nの双方向キューを作る	collections.deque(maxlen=n)
上限nの両端キューを新規生成する	collections.deque(maxlen=n)
上限nの両端キューを生成する	collections.deque(maxlen=n)
上限長nの両端キューを用意する	collections.deque(maxlen=n)
イテラブルの長さを制限する	collections.deque(iterable, maxlen=n)
列の長さを制限する	collections.deque(iterable, maxlen=n)
最大長nの両端キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
イテラブルから最大長nのデックを作成する	collections.deque(iterable, maxlen=n)
上限長nの双方向キューをイテラブルから作る	collections.deque(iterable, maxlen=n)
最大長nの両端キューをイテラブルから用意する	collections.deque(iterable, maxlen=n)
イテラブルから最大長nの両端キューを用意する	collections.deque(iterable, maxlen=n)
両端キューの先頭に要素を追加する	deq.appendleft(element)
要素を両端キューの先頭に追加する	deq.appendleft(element)
値を両端キューの左に追加する	deq.appendleft(element)
両端キューの先頭に数値を追加する	deq.appendleft(element)
両端キューの最初に値を追加する	deq.appendleft(element)
両端キューの最初に要素を入れる	deq.appendleft(element)
両端キューの最初に要素を追加する	deq.appendleft(element)
両端キューに要素をエンキューする	deq.appendleft(element)
要素をスタックにエンキューする	deq.appendleft(element)
要素を両端キューにエンキューする	deq.appendleft(element)
要素を両端キューにenqueueする	deq.appendleft(element)
両端キューに値をエンキューする	deq.appendleft(element)
キューに値をエンキューする	deq.appendleft(element)
両端キューの末尾に要素を追加する	deq.append(element)
両端キューの最後に要素をつけ加える	deq.append(element)
双方向キューの末尾に値を追加する	deq.append(element)
値をキューの末尾に付け加える	deq.append(element)
双方向キューの末尾に要素を追加する	deq.append(element)
双方向キューの末尾に文字列を追加する	deq.append(element)
双方向キューの右に要素を追加する	deq.append(element)
両端キューに要素をプッシュする	deq.append(element)
双方向キューに値を積む	deq.append(element)
双方向キューに数値をスタックする	deq.append(element)
キューに要素を積む	deq.append(element)
両端キューに値をスタックする	deq.append(element)
要素をスタックにプッシュする	deq.append(element)
両端キューの先頭にイテラブルの各要素を追加する	deq.extendleft(iterable)
双方向キューの最初にシーケンスの要素を付け加える	deq.extendleft(iterable)
両端キューの先頭にイテラブルの値を付け加える	deq.extendleft(iterable)
シーケンスの各要素を順に両端キューの最初に追加する	deq.extendleft(iterable)
両端キューの左にシーケンスの各値を追加する	deq.extendleft(iterable)
双方向キューの最初にイテラブルの各要素を追加する	deq.extendleft(iterable)
双方向キューの先頭に列の各要素を付け加える	deq.extendleft(iterable)
両端キューの末尾にイテラブルの各要素を追加する	deq.extend(iterable)
双方向キューの最後にイテラブルの各要素を順に追加する	deq.extend(iterable)
シーケンスの各要素を順に両端キューの末尾に追加する	deq.extend(iterable)
イテラブルの各データを両端キューの末尾に追加する	deq.extend(iterable)
両端キューの末尾にイテラブルの各要素を順に追加する	deq.extend(iterable)
イテラブルの値を双方向キューの末尾に入れる	deq.extend(iterable)
タプルの各データを両端キューの末尾に入れる	deq.extend(iterable)
両端キューのn番目に要素を挿入する	deq.insert(n, element)
スタックのn番目に値を挿入する	deq.insert(n, element)
両端キューのn番目に要素を差し込む	deq.insert(n, element)
両端キューのn番目に値を差し込む	deq.insert(n, element)
両端キューのn番目にデータを挿入する	deq.insert(n, element)
双方向キューのn番目に値を挿入する	deq.insert(n, element)
両端キューの先頭から要素を取り除く	deq.popleft()
デックの先頭から値を取り除く	deq.popleft()
両端キューの最初から要素を取り除く	deq.popleft()
要素を両端キューの先頭から取り除く	deq.popleft()
キューの先頭から要素を取り除く	deq.popleft()
スタックの最初から値を取り出す	deq.popleft()
両端キューの先頭からデータを取り除く	deq.popleft()
両端キューをデキューする	deq.popleft()
双方向キューを要素を出す	deq.popleft()
両端キューを要素を出す	deq.popleft()
両端キューをdequeue	deq.popleft()
両端キューの末尾から要素を取り除く	deq.pop()
双方向キューの末尾から要素を取り除く	deq.pop()
双方向キューの最後から値を削除する	deq.pop()
両端キューの右側から値を取り除く	deq.pop()
両端キューの末尾からデータを取り除く	deq.pop()
要素を両端キューの末尾から取り除く	deq.pop()
両端キューをポップする	deq.pop()
双方向キューをポップする	deq.pop()
両端キューから最初の要素を取り除く	deq.remove(element)
双方向キューから最初の要素を取り除く	deq.remove(element)
スタックから最初の値を取り除く	deq.remove(element)
キューから最初の要素を削除する	deq.remove(element)
両端キューから値を取り除く	deq.remove(element)
双方向キューから最初の値を取り除く	deq.remove(element)
両端キューを空にする	deq.clear()
キューを空にする	deq.clear()
双方向キューを全て取り除く	deq.clear()
両端キューをクリアする	deq.clear()
両端キューの要素を右にn個分ローテンションする	deq.rotate(n)
右にn個分キューの順序を回転させる	deq.rotate(n)
双方向キューのデータを右にn個分ローテンションする	deq.rotate(n)
双方向キューの要素をn個分ローテンションする	deq.rotate(n)
双方向キューの要素をn個分回転させる	deq.rotate(n)
n個分双方向キューの順序をローテンションする	deq.rotate(n)
右に両端キューのデータをn個分回転させる	deq.rotate(n)
両端キューの要素を左にn個分ローテンションする	deq.rotate(-n)
n個分双方向キューの順を左にローテンションする	deq.rotate(-n)
両端キューのデータを左にn個分ローテンションする	deq.rotate(-n)
双方向キューの要素を左にn個分ローテンションする	deq.rotate(-n)
左に両端キューの要素をn個分ローテンションする	deq.rotate(-n)
デックの値を左にn個分回転させる	deq.rotate(-n)
n個分左に両端キューの要素を回転させる	deq.rotate(-n)
両端キューの最大長	deq.maxlen
スタックの最大長を見る	deq.maxlen
双方向キューの最大長	deq.maxlen
両端キューの大きさ	len(deq)
キューの大きさ	len(deq)
キューの大きさを求める	len(deq)
双方向キューのサイズ	len(deq)
両端キューが空か調べる	len(deq) == 0
キューが空であるか調べる	len(deq) == 0
両端キューは空か調べる	len(deq) == 0
双方向キューが空か	len(deq) == 0
双方向キューが空か調べる	len(deq) == 0
双方向キューは空であるか調べる	len(deq) == 0
キューが空	len(deq) == 0
両端キューが空でないか調べる	len(deq) != 0
双方向キューが空でないかどうか	len(deq) != 0
双方向キューは空でないか調べる	len(deq) != 0
スタックが空でないかどうか調べる	len(deq) != 0
キューは空でないかどうか調べる	len(deq) != 0
両端キューが空でないかどうか調べる	len(deq) != 0
両端キューの中に要素が含まれてるか調べる	element in deq
値が双方向キューの中に存在するか調べる	element in deq
キューの中に文字列があるか	element in deq
両端キューの中に要素が含まれてるか確認する	element in deq
値が両端キューの中にあるか	element in deq
両端キューの中に値があるか	element in deq
値は両端キューの中に含まれてる	element in deq
両端キューの先頭	deq[0]
キューの先頭	deq[0]
双方向キューの左側を見る	deq[0]
両端キューの左を使う	deq[0]
スタックの最初	deq[0]
双方向キューの左	deq[0]
両端キューの先頭を使う	deq[0]
両端キューの末尾	deq[-1]
両端キューの末尾の要素	deq[-1]
両端キューの末尾の要素を求める	deq[-1]
両端キューの末尾を見る	deq[-1]
双方向キューの最後の値を使う	deq[-1]
両端キューの最後	deq[-1]
双方向キューの末尾を使う	deq[-1]
両端キューのn番目	deq[n]
両端キューのn番目を使う	deq[n]
両端キューのn番目の値を求める	deq[n]
双方向キューのn番目	deq[n]
双方向キューのn番目の要素を見る	deq[n]
両端キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
両端キューから指定された範囲を取り出す	collections.deque(itertools.islice(deq, start, end))
双方向キューから部分を取り出す	collections.deque(itertools.islice(deq, start, end))
両端キューのstart〜endの部分要素	collections.deque(itertools.islice(deq, start, end))
キューのstart〜endの要素を使う	collections.deque(itertools.islice(deq, start, end))
両端キューのstart〜endの要素	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart〜endの値を使う	collections.deque(itertools.islice(deq, start, end))
両端キューのstart番目からend番目の部分要素	collections.deque(itertools.islice(deq, start, end))
両端キューのstart番目からendの部分要素を使う	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart番目からend番目の部分要素	collections.deque(itertools.islice(deq, start, end))
双方向キューのstart番目からend番目の部分データを求める	collections.deque(itertools.islice(deq, start, end))
デックのstart番目からendの部分要素を使う	collections.deque(itertools.islice(deq, start, end))
両端キュー中の要素のインデックス	deq.index(element)
双方向キュー中の値の位置を使う	deq.index(element)
両端キュー中の要素のインデックスを使う	deq.index(element)
デック中の値のインデックス	deq.index(element)
双方向キュー中の要素の位置	deq.index(element)
両端キュー中の要素の数を数える	deq.count(element)
キュー中の文字列の数を数える	deq.count(element)
両端キュー中の値の数を数える	deq.count(element)
両端キュー中の要素を数える	deq.count(element)
双方向キュー中の要素の数をカウントする	deq.count(element)
双方向キュー中の要素を数える	deq.count(element)
両端キュー中の要素の数をカウントする	deq.count(element)
両端キューの要素をインプレースに反転する	deq.reverse()
両端キューの要素を反転する	deq.reverse()
双方向キューの要素をインプレースに反転する	deq.reverse()
インプレースにデックの値を反転する	deq.reverse()
インプレースに両端キューの要素を反転する	deq.reverse()
双方向キューの要素を反転する	deq.reverse()
逆順の両端キュー	reversed(deq)
逆順の双方向キューを求める	reversed(deq)
逆順の双方向キュー	reversed(deq)
両端キューをリストに変換する	list(deq)
キューをリストに変換する	list(deq)
双方向キューをリストにする	list(deq)
双方向キューをリストに変換する	list(deq)
両端キューをタプルに変換する	tuple(deq)
双方向キューをタプルに変換する	tuple(deq)
両端キューをタプルにする	tuple(deq)
空のカウンタ	collections.Counter()
イテラブルからカウンタを作る	collections.Counter(iterable)
イテラブルから多重集合を作る	collections.Counter(iterable)
列からカウンタを作る	collections.Counter(iterable)
イテラブルから新しい計数器を作成する	collections.Counter(iterable)
イテラブルからカウンタを準備する	collections.Counter(iterable)
イテラブルから多重集合を用意する	collections.Counter(iterable)
多重集合をイテラブルから作る	collections.Counter(iterable)
イテラブルをカウンタに変換する	collections.Counter(iterable)
列を多重集合にする	collections.Counter(iterable)
列をカウンタに変換する	collections.Counter(iterable)
辞書からカウンタを作る	collections.Counter(aDict)
マッピングからカウンタを作る	collections.Counter(aDict)
辞書からカウンタを新規生成する	collections.Counter(aDict)
マッピングからカウンタを新規生成する	collections.Counter(aDict)
辞書から多重集合を用意する	collections.Counter(aDict)
辞書からカウンタを生成する	collections.Counter(aDict)
辞書からカウンタを作成する	collections.Counter(aDict)
辞書をカウンタに変換する	collections.Counter(aDict)
マッピングをカウンタに変換する	collections.Counter(aDict)
辞書をカウンタにする	collections.Counter(aDict)
タプルを多重集合に変換する	collections.Counter(aDict)
カウンタのそれぞれの項目を、そのカウントだけ列挙する	aCounter.elements()
カウンタの各項目をカウントだけ列挙する	aCounter.elements()
カウンタの値を、そのカウントだけリストとして得る	aCounter.elements()
カウンタのそれぞれの項目をカウントだけ列挙する	aCounter.elements()
カウンタのそれぞれの文字列を出現回数だけ列挙する	aCounter.elements()
カウンタの各項目を、そのカウントだけ列挙する	aCounter.elements()
カウンタのそれぞれの要素をカウントだけ列挙する	aCounter.elements()
カウンタを高頻出方から列挙する	aCounter.most_common()
カウンタを高頻度な方から列挙する	aCounter.most_common()
カウンタを高頻出な方から列挙する	aCounter.most_common()
カウンタを多い順に列挙する	aCounter.most_common()
多い順番にカウンタを列挙する	aCounter.most_common()
カウンタを多い順にリストとして得る	aCounter.most_common()
カウンタを少ない順に列挙する	aCounter.most_common()[::-1]
少ない順番にカウンタを列挙する	aCounter.most_common()[::-1]
カウンタを少ない方から列挙する	aCounter.most_common()[::-1]
カウンタを低頻出方から列挙する	aCounter.most_common()[::-1]
カウンタを低頻出な方から列挙する	aCounter.most_common()[::-1]
カウンタを低頻出な方からリストとして得る	aCounter.most_common()[::-1]
低頻出方からカウンタを列挙する	aCounter.most_common()[::-1]
カウンタの上位を列挙する	aCounter.most_common(k)
カウンタのKトップを列挙する	aCounter.most_common(k)
カウンタのktopを列挙する	aCounter.most_common(k)
カウンタの下位を列挙する	aCounter.most_common()[:-n-1:-1]
カウンタのボトムを列挙する	aCounter.most_common()[:-n-1:-1]
カウンタの最頻出な項目	aCounter.most_common()[0]
カウンタの最頻出の要素	aCounter.most_common()[0]
カウンタの最も頻出な項目	aCounter.most_common()[0]
カウンタの最頻出な文字列	aCounter.most_common()[0]
カウンタから最頻出な項目の件数	aCounter.most_common()[1]
カウンタから最頻出の項目の件数	aCounter.most_common()[1]
カウンタから最頻出な項目の件数を求める	aCounter.most_common()[1]
カウンタから最も頻出な項目の件数	aCounter.most_common()[1]
カウンタから最も頻出な項目の件数を求める	aCounter.most_common()[1]
カウンタをイテラブルで更新する	aCounter.update(iterable)
イテラブルでカウンタを更新する	aCounter.update(iterable)
カウンタをシーケンスとして更新する	aCounter.update(iterable)
イテラブルをカウントして、カウンタを更新する	aCounter.update(iterable)
イテラブルを出現回数して、カウンタを更新する	aCounter.update(iterable)
シーケンスを出現回数して、カウンタを更新する	aCounter.update(iterable)
イテラブルを回数して、カウンタを更新する	aCounter.update(iterable)
カウンタをイテラブルをカウントして、更新する	aCounter.update(iterable)
イテラブルを出現回数してカウンタを更新する	aCounter.update(iterable)
カウンタを辞書で更新する	aCounter.update(aDict)
カウンタを辞書を用いて更新する	aCounter.update(aDict)
カウンタをマッピングとして更新する	aCounter.update(aDict)
マッピングでカウンタを更新する	aCounter.update(aDict)
カウンタからイテラブルをカウントして引く	aCounter.subtract(iterable)
カウンタからリストをカウントして引く	aCounter.subtract(iterable)
カウンタからイテラブルを出現回数して引く	aCounter.subtract(iterable)
カウンタからイテラブルを出現回数して減らす	aCounter.subtract(iterable)
カウンタからイテラブルをカウントして減らす	aCounter.subtract(iterable)
カウンタからリストをカウントして減らす	aCounter.subtract(iterable)
カウンタから辞書を引く	aCounter.subtract(aDict)
カウンタからマッピングを引く	aCounter.subtract(aDict)
カウンタから辞書を減らす	aCounter.subtract(aDict)
カウンタの項目を増やす	aCounter[element] += 1
カウンタの要素を増やす	aCounter[element] += 1
カウンタの項目のカウント	aCounter[element]
カウンタの項目のカウントを使う	aCounter[element]
カウンタの項目のカウントを求める	aCounter[element]
カウンタの項目の出現回数	aCounter[element]
カウンタのキーのカウント	aCounter[element]
カウンタの全数	aCounter.total()
カウンタの項目一覧	aCounter.keys()
カウンタの文字列一覧	aCounter.keys()
カウンタの文字列一覧を使う	aCounter.keys()
カウンタの要素一覧	aCounter.keys()
カウンタの項目一覧を使う	aCounter.keys()
カウンタの項目を列挙する	aCounter.keys()
カウンタの要素を列挙する	aCounter.keys()
カウンタの項目をリストとして得る	aCounter.keys()
カウンタの項目数	len(aCounter)
カウンタのキー数	len(aCounter)
カウンタの項目数を見る	len(aCounter)
カウンタの文字列数	len(aCounter)
カウンタをリセットする	aCounter.clear()
カウンタをクリアする	aCounter.clear()
カウンタのユニークな項目を列挙する	list(aCounter)
カウンタのユニークな文字列をリストとして得る	list(aCounter)
カウンタをリストに変換する	list(aCounter)
カウンタを集合に変換する	set(aCounter)
カウンタをセットにする	set(aCounter)
カウンタを集合にする	set(aCounter)
カウンタを辞書に変換する	dict(aCounter)
カウンタのキーとカウントを列挙する	aCounter.items()
ペアリストpairsからカウンタを作る	collections.Counter(dict(pairs))
ペアリストpairsからカウンタを構築する	collections.Counter(dict(pairs))
ペアリストpairsからカウンタを用意する	collections.Counter(dict(pairs))
ペアリストpairsからカウンタを新規生成する	collections.Counter(dict(pairs))
カウンタからゼロカウントを取り除く	+aCounter
カウンタからゼロカウントを取り出す	+aCounter
カウンタからゼロ回数を取り除く	+aCounter
カウンタからゼロ出現回数を削除する	+aCounter
カウンタの正の数のみ残す	+aCounter
カウンタ同士で積集合	aCounter & aCounter2
カウンタ同士で積集合を求める	aCounter & aCounter2
カウンタの積集合	aCounter & aCounter2
カウンタ間で交わり	aCounter & aCounter2
カウンタ間で積集合	aCounter & aCounter2
二つのカウンタの共通する要素	aCounter & aCounter2
２つのカウンタの共通する要素	aCounter & aCounter2
2つのカウンタの共通する要素	aCounter & aCounter2
2つのカウンタの共通する要素を求める	aCounter & aCounter2
二つのカウンタの共通する要素を求める	aCounter & aCounter2
カウンタ同士で積集合演算する	aCounter & aCounter2
カウンタ同士で交わり演算する	aCounter & aCounter2
カウンタ同士で∩演算する	aCounter & aCounter2
カウンタ間で積集合演算する	aCounter & aCounter2
カウンタ同士でユニオン	aCounter | aCounter2
カウンタ間でユニオンを計算する	aCounter | aCounter2
カウンタ同士でユニオンを計算する	aCounter | aCounter2
カウンタ同士で和集合	aCounter | aCounter2
カウンタ間でユニオン	aCounter | aCounter2
二つのカウンタのいずれかに含まれる要素	aCounter | aCounter2
二つのカウンタのいずれかに含まれる要素を求める	aCounter | aCounter2
２つのカウンタのいずれかに含まれる要素	aCounter | aCounter2
2つのカウンタのいずれかに含まれる値	aCounter | aCounter2
2つのカウンタのいずれかに含まれる要素を求める	aCounter | aCounter2
二つのカウンタのいずれかに含まれる値	aCounter | aCounter2
カウンタ同士でユニオン演算する	aCounter | aCounter2
カウンタ同士で∪演算する	aCounter | aCounter2
カウンタのユニオン演算する	aCounter | aCounter2
カウンタ間で和集合演算する	aCounter | aCounter2
カウンタ間で∪演算する	aCounter | aCounter2
名前付きタプルを定義する	C = collections.namedtuple('クラス名', プロパティ名)
クラスが名前付きタプルか調べる	issubclass(C, tuple)
クラスが名前付きタプルか	issubclass(C, tuple)
クラス名が名前付きタプルか	issubclass(C, tuple)
クラスが名前付きタプルか確認する	issubclass(C, tuple)
型が名前付きタプル	issubclass(C, tuple)
クラスは名前付きタプル	issubclass(C, tuple)
名前付きタプルをパラメータからインスタンス化する	C._make(パラメータ)
データから名前付きタプルをインスタンス化する	C._make(パラメータ)
オブジェクトが名前付きタプルか調べる	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプル型かテストする	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプルか確認する	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプルかどうかテストする	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
オブジェクトが名前付きタプル	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
名前付きタプルを辞書に変換する	aNamedTupleObject._asdict()
空のチェーンマップ	collections.ChainMap()
ルートのチェーンマップ	collections.ChainMap()
ルートの階層化辞書	collections.ChainMap()
空の階層化マップを生成する	collections.ChainMap()
空の階層化マップ	collections.ChainMap()
辞書をチェーンマップに変換する	collections.ChainMap(aDict)
マッピングを階層化マップに変換する	collections.ChainMap(aDict)
タプルをチェーンマップに変換する	collections.ChainMap(aDict)
辞書を階層化する	collections.ChainMap(aDict)
マッピングを階層化する	collections.ChainMap(aDict)
辞書をネスト化する	collections.ChainMap(aDict)
二つの辞書をチェーンする	collections.ChainMap(aDict, aDict2)
2つの辞書を階層的につなぐ	collections.ChainMap(aDict, aDict2)
二つの辞書を階層的につなぐ	collections.ChainMap(aDict, aDict2)
二つのタプルをチェーンする	collections.ChainMap(aDict, aDict2)
二つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
２つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
2つの辞書を階層化する	collections.ChainMap(aDict, aDict2)
日付を使う	import datetime
日付を用いる	import datetime
時刻を使う	import datetime
時刻を使用する	import datetime
時間を使う	import time
時間を使用する	import time
タイムスタンプをインポートする	import time
本日の日付時刻	datetime.datetime.now()
今日のタイムスタンプ	datetime.datetime.now()
本日のタイムスタンプ	datetime.datetime.now()
year年の日付時刻	datetime.datetime(year=year, month=1, day=1)
year年を日付時刻に変換する	datetime.datetime(year=year, month=1, day=1)
year年をタイムスタンプに変換する	datetime.datetime(year=year, month=1, day=1)
year年を日付時刻にする	datetime.datetime(year=year, month=1, day=1)
year年day月の日付時刻	datetime.datetime(year=year, month=month, day=1)
year年day月のタイムスタンプ	datetime.datetime(year=year, month=month, day=1)
year年day月の日付時刻をオブジェクト化する	datetime.datetime(year=year, month=month, day=1)
year年day月を日付時刻に変換する	datetime.datetime(year=year, month=month, day=1)
year年day月をタイムスタンプに変換する	datetime.datetime(year=year, month=month, day=1)
year年month月day日の日付時刻	datetime.datetime(year=year, month=month, day=day)
year年month月day日を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day)
year年month月day日hour時の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時の日付時刻をオブジェクト化する	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時を日付時刻にする	datetime.datetime(year=year, month=month, day=day, hour=hour)
year年month月day日hour時minute分の日付時刻	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分のタイムスタンプ	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分を日付時刻に変換する	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
year年month月day日hour時minute分をタイムスタンプにする	datetime.datetime(year=year, month=month, day=day, hour=hour, minute=minute)
datetimeをインスタンス化する	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時刻から日付時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時間から日付時刻を作る	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時間から日付時刻	datetime.datetime(年, 月, 日, 時, 分, 秒)
年月日と時間からタイムスタンプ	datetime.datetime(年, 月, 日, 時, 分, 秒)
日付と時間からタイムスタンプ	datetime.datetime(年, 月, 日, 時, 分, 秒)
エポック秒を日付時刻に変換する	datetime.datetime.fromtimestamp(timestamp)
エポック秒から日付時刻に変換する	datetime.datetime.fromtimestamp(timestamp)
エポック秒から日付時刻にする	datetime.datetime.fromtimestamp(timestamp)
エポック秒を日付時刻にする	datetime.datetime.fromtimestamp(timestamp)
ISO書式の文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO書式の文字列を日付時刻にする	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO書式の文字列から日付時刻にする	datetime.datetime.fromisoformat(日付の書かれた文字列)
ISO書式の文字列をタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列を日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列をISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からISO書式で日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列をタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からISO書式を用いてタイムスタンプに変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列をISO書式を用いて日付時刻に変換する	datetime.datetime.fromisoformat(日付の書かれた文字列)
文字列からformatのパターンで日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
formatのパターンで文字列から日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
文字列からformatのパターンでタイムスタンプにする	datetime.datetime.strptime(日付の書かれた文字列, format)
文字列からformatのパターンとして日付時刻にする	datetime.datetime.strptime(日付の書かれた文字列, format)
文字列からformatのパターンとしてタイムスタンプにする	datetime.datetime.strptime(日付の書かれた文字列, format)
formatパターンの文字列を日付時刻に変換する	datetime.datetime.strptime(日付の書かれた文字列, format)
本日の日付時刻	datetime.datetime.today()
現在のローカルな日付時刻	datetime.datetime.today()
本日のローカルな日付時刻	datetime.datetime.today()
本日のローカルなタイムスタンプ	datetime.datetime.today()
今日のタイムスタンプ	datetime.datetime.today()
今日の日付時刻	datetime.datetime.today()
日付時刻データをエポック秒に変換する	aDatetime.timestamp()
日付時刻データを浮動小数点数に変換する	aDatetime.timestamp()
日付時刻データを数値に変換する	aDatetime.timestamp()
日付時刻データのタイムゾーン	aDatetime.timetz()
タイムスタンプデータのタイムゾーン	aDatetime.timetz()
日付時刻データの日付	aDatetime.date()
日付時刻データの日付を使う	aDatetime.date()
日付時刻データの日付を求める	aDatetime.date()
日付時刻データの時刻	aDatetime.time()
日付時刻データの時間	aDatetime.time()
タイムスタンプデータの時間	aDatetime.time()
year年の日付	datetime.date(year=year, month=1, day=1)
year年を日付に変換する	datetime.date(year=year, month=1, day=1)
year年month月の日付	datetime.date(year=year, month=month, day=1)
year年month月を日付に変換する	datetime.date(year=year, month=month, day=1)
year年month月day日の日付	datetime.date(year=year, month=month, day=day)
year年month月day日を日付に変換する	datetime.date(year=year, month=month, day=day)
本日の日付	datetime.date.today()
本日の日付を使う	datetime.date.today()
現在の日付	datetime.date.today()
明日の日付	datetime.date.today() + datetime.timedelta(days=1)
明日の日付を見る	datetime.date.today() + datetime.timedelta(days=1)
昨日の日付	datetime.date.today() - datetime.timedelta(days=1)
日付時刻データの年数	aDatetime.year
日付時刻データの年数を使う	aDatetime.year
日付時刻データの年	aDatetime.year
日付時刻データが何年か知る	aDatetime.year
日付データの年数	aDate.year
日付データの年を求める	aDate.year
日付データが何年か知る	aDate.year
本日の年数	datetime.datetime.today().year
本日の年数を使う	datetime.datetime.today().year
本日が何年か知る	datetime.datetime.today().year
本日は何年か知る	datetime.datetime.today().year
現在は何年か知る	datetime.datetime.today().year
日付時刻データの月数	aDatetime.month
日付時刻データの月	aDatetime.month
タイムスタンプデータの月	aDatetime.month
日付時刻データの月数を使う	aDatetime.month
日付時刻データが何月か知る	aDatetime.month
日付データの月数	aDate.month
日付データの月を使う	aDate.month
日付データの月	aDate.month
日付データが何月か知る	aDate.month
本日の月数	datetime.datetime.today().month
現在の月数	datetime.datetime.today().month
本日が何月か知る	datetime.datetime.today().month
本日は何月か知る	datetime.datetime.today().month
今日が何月か知る	datetime.datetime.today().month
日付時刻データの日数	aDatetime.day
日付時刻データの日	aDatetime.day
日付時刻データの日数を使う	aDatetime.day
日付時刻データの日数を見る	aDatetime.day
日付時刻データが何日か知る	aDatetime.day
日付データの日数	aDate.day
日付データの日	aDate.day
日付データの日を使う	aDate.day
日付データが何日か知る	aDate.day
本日の日数	datetime.datetime.today().day
今日の日数	datetime.datetime.today().day
本日の日を求める	datetime.datetime.today().day
本日が何日か知る	datetime.datetime.today().day
今日が何日か知る	datetime.datetime.today().day
本日は何日か知る	datetime.datetime.today().day
日付時刻データの曜日を整数で使う	aDatetime.weekday()
日付時刻データの曜日を整数で見る	aDatetime.weekday()
日付時刻データの曜日を整数で求める	aDatetime.weekday()
タイムスタンプデータの曜日を整数で求める	aDatetime.weekday()
日付時刻データの曜日を使う	aDatetime.weekday()
日付時刻データが何曜日か知る	aDatetime.weekday()
タイムスタンプデータが何曜日か知る	aDatetime.weekday()
日付データの曜日を整数で使う	aDate.weekday()
日付データの曜日を求める	aDate.weekday()
日付データの曜日を使う	aDate.weekday()
日付データが何曜日か知る	aDate.weekday()
本日の曜日を整数で使う	datetime.datetime.today().weekday()
本日の曜日を整数で見る	datetime.datetime.today().weekday()
今日の曜日を整数で求める	datetime.datetime.today().weekday()
本日の曜日を整数で求める	datetime.datetime.today().weekday()
本日が何曜日か知る	datetime.datetime.today().weekday()
今日が何曜日か知る	datetime.datetime.today().weekday()
現在が何曜日か知る	datetime.datetime.today().weekday()
日付時刻データが月曜日か調べる	aDatetime.weekday() == 0
タイムスタンプデータが月曜日か判定する	aDatetime.weekday() == 0
タイムスタンプデータが月曜日か確認する	aDatetime.weekday() == 0
タイムスタンプデータが月曜日	aDatetime.weekday() == 0
日付データが月曜日か調べる	aDate.weekday() == 0
日付データが月曜日かテストする	aDate.weekday() == 0
日付データが月曜日かどうか調べる	aDate.weekday() == 0
日付データが月曜日か	aDate.weekday() == 0
本日が月曜日か調べる	datetime.datetime.today().weekday() == 0
今日が月曜日かどうか調べる	datetime.datetime.today().weekday() == 0
現在が月曜日か調べる	datetime.datetime.today().weekday() == 0
本日が月曜日か	datetime.datetime.today().weekday() == 0
本日が月曜日	datetime.datetime.today().weekday() == 0
日付時刻データが火曜日か調べる	aDatetime.weekday() == 1
タイムスタンプデータが火曜日かどうかテストする	aDatetime.weekday() == 1
タイムスタンプデータが火曜日か調べる	aDatetime.weekday() == 1
日付データが火曜日か調べる	aDate.weekday() == 1
日付データが火曜日	aDate.weekday() == 1
日付データが火曜日か判定する	aDate.weekday() == 1
日付データが火曜日か確認する	aDate.weekday() == 1
本日が火曜日か調べる	datetime.datetime.today().weekday() == 1
今日が火曜日	datetime.datetime.today().weekday() == 1
現在が火曜日	datetime.datetime.today().weekday() == 1
本日が火曜日かどうか調べる	datetime.datetime.today().weekday() == 1
現在が火曜日か確認する	datetime.datetime.today().weekday() == 1
本日が火曜日	datetime.datetime.today().weekday() == 1
日付時刻データが水曜日か調べる	aDatetime.weekday() == 2
タイムスタンプデータが水曜日かどうか調べる	aDatetime.weekday() == 2
日付時刻データが水曜日かどうか調べる	aDatetime.weekday() == 2
タイムスタンプデータが水曜日か調べる	aDatetime.weekday() == 2
日付データが水曜日か調べる	aDate.weekday() == 2
日付データが水曜日か確認する	aDate.weekday() == 2
日付データが水曜日かどうか調べる	aDate.weekday() == 2
本日が水曜日か調べる	datetime.datetime.today().weekday() == 2
今日が水曜日かどうか確認する	datetime.datetime.today().weekday() == 2
今日が水曜日か	datetime.datetime.today().weekday() == 2
今日が水曜日か調べる	datetime.datetime.today().weekday() == 2
本日が水曜日	datetime.datetime.today().weekday() == 2
本日が水曜日か	datetime.datetime.today().weekday() == 2
日付時刻データが木曜日か調べる	aDatetime.weekday() == 3
日付時刻データが木曜日かどうか調べる	aDatetime.weekday() == 3
日付時刻データが木曜日か	aDatetime.weekday() == 3
日付データが木曜日か調べる	aDate.weekday() == 3
日付データが木曜日	aDate.weekday() == 3
日付データが木曜日かどうか調べる	aDate.weekday() == 3
本日が木曜日か調べる	datetime.datetime.today().weekday() == 3
現在が木曜日か調べる	datetime.datetime.today().weekday() == 3
現在が木曜日かどうか調べる	datetime.datetime.today().weekday() == 3
本日が木曜日かどうか	datetime.datetime.today().weekday() == 3
日付時刻データが金曜日か調べる	aDatetime.weekday() == 4
タイムスタンプデータが金曜日か調べる	aDatetime.weekday() == 4
日付時刻データが金曜日か判定する	aDatetime.weekday() == 4
日付時刻データが金曜日	aDatetime.weekday() == 4
日付データが金曜日か調べる	aDate.weekday() == 4
日付データが金曜日かどうか調べる	aDate.weekday() == 4
日付データが金曜日	aDate.weekday() == 4
本日が金曜日か調べる	datetime.datetime.today().weekday() == 4
現在が金曜日かテストする	datetime.datetime.today().weekday() == 4
本日が金曜日かどうか調べる	datetime.datetime.today().weekday() == 4
本日が金曜日か	datetime.datetime.today().weekday() == 4
日付時刻データが土曜日か調べる	aDatetime.weekday() == 5
タイムスタンプデータが土曜日かどうか調べる	aDatetime.weekday() == 5
日付時刻データが土曜日	aDatetime.weekday() == 5
タイムスタンプデータが土曜日	aDatetime.weekday() == 5
日付データが土曜日か調べる	aDate.weekday() == 5
日付データが土曜日か確認する	aDate.weekday() == 5
日付データが土曜日かどうか調べる	aDate.weekday() == 5
日付データが土曜日かどうか	aDate.weekday() == 5
本日が土曜日か調べる	datetime.datetime.today().weekday() == 5
今日が土曜日か調べる	datetime.datetime.today().weekday() == 5
現在が土曜日か調べる	datetime.datetime.today().weekday() == 5
今日が土曜日	datetime.datetime.today().weekday() == 5
本日が土曜日かどうか	datetime.datetime.today().weekday() == 5
日付時刻データが日曜日か調べる	aDatetime.weekday() == 6
タイムスタンプデータが日曜日かどうか確認する	aDatetime.weekday() == 6
日付時刻データが日曜日かどうか調べる	aDatetime.weekday() == 6
タイムスタンプデータが日曜日かどうか調べる	aDatetime.weekday() == 6
日付時刻データが日曜日	aDatetime.weekday() == 6
日付データが日曜日か調べる	aDate.weekday() == 6
日付データが日曜日かどうか	aDate.weekday() == 6
日付データが日曜日か	aDate.weekday() == 6
日付データが日曜日	aDate.weekday() == 6
日付データが日曜日か確認する	aDate.weekday() == 6
本日が日曜日か調べる	datetime.datetime.today().weekday() == 6
現在が日曜日かどうか	datetime.datetime.today().weekday() == 6
今日が日曜日か調べる	datetime.datetime.today().weekday() == 6
今日が日曜日	datetime.datetime.today().weekday() == 6
日付時刻データをタプルに変換する	aDatetime.timetuple()
日付時刻データをタプルにする	aDatetime.timetuple()
日付データをタプルに変換する	aDate.timetuple()
本日をタプルに変換する	datetime.datetime.today().timetuple()
現在をタプルに変換する	datetime.datetime.today().timetuple()
現在をタプルにする	datetime.datetime.today().timetuple()
日付時刻データをISO形式の文字列に変換する	aDatetime.isoformat()
日付時刻データをISO書式の文字列に変換する	aDatetime.isoformat()
タイムスタンプデータをISO書式の文字列に変換する	aDatetime.isoformat()
日付時刻データをISO形式の文字列にする	aDatetime.isoformat()
日付時刻データをISO8601書式の文字列にする	aDatetime.isoformat()
日付データをISO形式の文字列に変換する	aDate.isoformat()
本日をISO形式の文字列に変換する	datetime.datetime.today().isoformat()
現在をISO形式の文字列にする	datetime.datetime.today().isoformat()
本日をISO書式の文字列に変換する	datetime.datetime.today().isoformat()
日付時刻データを文字列でフォーマットして文字列に変換する	"aDatetime.strftime(""%d/%m/%y"")"
タイムスタンプデータを文字列でフォーマットして文字列にする	"aDatetime.strftime(""%d/%m/%y"")"
日付時刻データを文字列でフォーマットして文字列にする	"aDatetime.strftime(""%d/%m/%y"")"
日付時刻データを文字列でフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
タイムスタンプデータを文字列でフォーマットする	"aDatetime.strftime(""%d/%m/%y"")"
日付データを文字列でフォーマットして文字列に変換する	"aDate.strftime(""%d/%m/%y"")"
文字列でフォーマットして日付データを文字列に変換する	"aDate.strftime(""%d/%m/%y"")"
日付データを文字列でフォーマットする	"aDate.strftime(""%d/%m/%y"")"
本日を文字列でフォーマットして文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列でフォーマットして文字列にする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
現在を文字列でフォーマットして文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
文字列でフォーマットして現在を文字列に変換する	"datetime.datetime.today().strftime(""%d/%m/%y"")"
文字列でフォーマットして本日を文字列にする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
現在を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
本日を文字列を使ってフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
今日を文字列でフォーマットする	"datetime.datetime.today().strftime(""%d/%m/%y"")"
日付時刻データの時間数	aDatetime.hour
タイムスタンプデータの時間数を見る	aDatetime.hour
日付時刻データの時間を使う	aDatetime.hour
日付時刻データが何時か知る	aDatetime.hour
タイムスタンプデータは何時か知る	aDatetime.hour
現在の時間数	datetime.date.today().hour
現在の時刻を使う	datetime.date.today().hour
現在の時間数を見る	datetime.date.today().hour
現在が何時か知る	datetime.date.today().hour
日付時刻データの分数	aDatetime.minute
タイムスタンプデータの分を見る	aDatetime.minute
タイムスタンプデータの分数を見る	aDatetime.minute
日付時刻データが何分か知る	aDatetime.minute
日付時刻データは何分か知る	aDatetime.minute
現在の分数	datetime.date.today().minute
現在の分	datetime.date.today().minute
現在が何分か知る	datetime.date.today().minute
日付時刻データの秒数	aDatetime.second
タイムスタンプデータの秒数を使う	aDatetime.second
日付時刻データの秒	aDatetime.second
日付時刻データが何秒か知る	aDatetime.second
現在の秒数	datetime.date.today().second
現在の秒数を使う	datetime.date.today().second
現在が何秒か知る	datetime.date.today().second
現在のミリ秒	int(time.time() * 1000)
現在のタイムスタンプ	int(time.time())
現在のエポック秒	int(time.time())
日付時刻データををn週間後に進める	aDatetime + datetime.timedelta(weeks=n)
日付時刻データにn週間分、加算する	aDatetime + datetime.timedelta(weeks=n)
日付時刻データにn週間分、加える	aDatetime + datetime.timedelta(weeks=n)
日付時刻データにn週間を加算する	aDatetime + datetime.timedelta(weeks=n)
タイムスタンプデータにn週間を加える	aDatetime + datetime.timedelta(weeks=n)
日付データををn週間後に進める	aDate + datetime.timedelta(weeks=n)
日付データにn週間分、加算する	aDate + datetime.timedelta(weeks=n)
日付データにn週間分足す	aDate + datetime.timedelta(weeks=n)
日付時刻データをn週間前に戻す	aDatetime - datetime.timedelta(weeks=n)
日付時刻データをn週間前にする	aDatetime - datetime.timedelta(weeks=n)
タイムスタンプデータをn週間前にする	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分、減算する	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分減算する	aDatetime - datetime.timedelta(weeks=n)
日付時刻データからn週間分、減らす	aDatetime - datetime.timedelta(weeks=n)
日付データをn週間前に戻す	aDate - datetime.timedelta(weeks=n)
日付データからn週間分、減算する	aDate - datetime.timedelta(weeks=n)
日付データからn週間分、減らす	aDate - datetime.timedelta(weeks=n)
日付時刻データををn日後に進める	aDatetime + datetime.timedelta(days=n)
日付時刻データにn日分、加算する	aDatetime + datetime.timedelta(days=n)
日付時刻データにn日分加算する	aDatetime + datetime.timedelta(days=n)
日付時刻データにn日分加える	aDatetime + datetime.timedelta(days=n)
タイムスタンプデータにn日分、加算する	aDatetime + datetime.timedelta(days=n)
日付データををn日後に進める	aDate + datetime.timedelta(days=n)
日付データにn日分、加算する	aDate + datetime.timedelta(days=n)
日付データにn日を足す	aDate + datetime.timedelta(days=n)
日付データにn日分加える	aDate + datetime.timedelta(days=n)
日付データにn日を加える	aDate + datetime.timedelta(days=n)
日付時刻データをn日前に戻す	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータをn日前に戻す	aDatetime - datetime.timedelta(days=n)
日付時刻データからn日分、減算する	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータからn日分減算する	aDatetime - datetime.timedelta(days=n)
タイムスタンプデータからn日分、減算する	aDatetime - datetime.timedelta(days=n)
日付データをn日前に戻す	aDate - datetime.timedelta(days=n)
日付データからn日分、減算する	aDate - datetime.timedelta(days=n)
日付データからn日分減らす	aDate - datetime.timedelta(days=n)
日付時刻データををn時間後に進める	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間分、加算する	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間分加える	aDatetime + datetime.timedelta(hours=n)
タイムスタンプデータにn時間分、加算する	aDatetime + datetime.timedelta(hours=n)
日付時刻データにn時間分加算する	aDatetime + datetime.timedelta(hours=n)
日付データををn時間後に進める	aDate + datetime.timedelta(hours=n)
日付データにn時間分、加算する	aDate + datetime.timedelta(hours=n)
日付データにn時間分加算する	aDate + datetime.timedelta(hours=n)
日付データにn時間分、加える	aDate + datetime.timedelta(hours=n)
日付データにn時間を加える	aDate + datetime.timedelta(hours=n)
日付データにn時間を加算する	aDate + datetime.timedelta(hours=n)
日付時刻データをn時間前に戻す	aDatetime - datetime.timedelta(hours=n)
日付時刻データからn時間分、減算する	aDatetime - datetime.timedelta(hours=n)
タイムスタンプデータからn時間を減らす	aDatetime - datetime.timedelta(hours=n)
日付データをn時間前に戻す	aDate - datetime.timedelta(hours=n)
日付データからn時間分、減算する	aDate - datetime.timedelta(hours=n)
日付データからn時間を減算する	aDate - datetime.timedelta(hours=n)
日付データからn時間分、減らす	aDate - datetime.timedelta(hours=n)
日付データからn時間分減算する	aDate - datetime.timedelta(hours=n)
日付時刻データををn分後に進める	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分分、加算する	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分分加える	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分分加算する	aDatetime + datetime.timedelta(minutes=n)
タイムスタンプデータにn分分、加える	aDatetime + datetime.timedelta(minutes=n)
日付時刻データにn分を加算する	aDatetime + datetime.timedelta(minutes=n)
日付データををn分後に進める	aDate + datetime.timedelta(minutes=n)
日付データにn分分、加算する	aDate + datetime.timedelta(minutes=n)
日付データにn分を加算する	aDate + datetime.timedelta(minutes=n)
日付データにn分分加える	aDate + datetime.timedelta(minutes=n)
日付データにn分分、足す	aDate + datetime.timedelta(minutes=n)
日付データにn分分、加える	aDate + datetime.timedelta(minutes=n)
日付時刻データをn分前に戻す	aDatetime - datetime.timedelta(minutes=n)
タイムスタンプデータをn分前に戻す	aDatetime - datetime.timedelta(minutes=n)
日付時刻データからn分、減算する	aDatetime - datetime.timedelta(minutes=n)
日付時刻データからn分減算する	aDatetime - datetime.timedelta(minutes=n)
タイムスタンプデータからn分、減算する	aDatetime - datetime.timedelta(minutes=n)
日付データをn分前に戻す	aDate - datetime.timedelta(minutes=n)
日付データからn分、減算する	aDate - datetime.timedelta(minutes=n)
日付データからn分減算する	aDate - datetime.timedelta(minutes=n)
日付データからn分、減らす	aDate - datetime.timedelta(minutes=n)
日付時刻データををn秒後に進める	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分、加算する	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分加算する	aDatetime + datetime.timedelta(seconds=n)
日付時刻データにn秒分、加える	aDatetime + datetime.timedelta(seconds=n)
日付データををn秒後に進める	aDate + datetime.timedelta(seconds=n)
日付データにn秒分、加算する	aDate + datetime.timedelta(seconds=n)
日付データにn秒分加える	aDate + datetime.timedelta(seconds=n)
日付時刻データをn秒前に戻す	aDatetime - datetime.timedelta(seconds=n)
タイムスタンプデータをn秒前に戻す	aDatetime - datetime.timedelta(seconds=n)
日付時刻データからn秒分、減算する	aDatetime - datetime.timedelta(seconds=n)
日付時刻データからn秒分減らす	aDatetime - datetime.timedelta(seconds=n)
日付データをn秒前に戻す	aDate - datetime.timedelta(seconds=n)
日付データからn秒分、減算する	aDate - datetime.timedelta(seconds=n)
日付データからn秒分、減らす	aDate - datetime.timedelta(seconds=n)
日付データからn秒分減算する	aDate - datetime.timedelta(seconds=n)
日付時刻データが日付時刻データより前か調べる	aDatetime < aDatetime2
日付時刻データは日付時刻データより早い	aDatetime < aDatetime2
タイムスタンプデータがタイムスタンプデータより前か調べる	aDatetime < aDatetime2
日付時刻データがタイムスタンプデータより先か	aDatetime < aDatetime2
タイムスタンプデータはタイムスタンプデータより前か調べる	aDatetime < aDatetime2
タイムスタンプデータが日付時刻データより前	aDatetime < aDatetime2
日付データが日付データより前か調べる	aDate < aDate2
日付データが日付データより先かどうか	aDate < aDate2
日付データが日付データより前かどうか確認する	aDate < aDate2
日付データが日付データより前か確認する	aDate < aDate2
日付データは日付データより前	aDate < aDate2
日付データが日付データより早いか調べる	aDate < aDate2
日付時刻データが日付時刻データより後ろか調べる	aDatetime > aDatetime2
タイムスタンプデータが日付時刻データよりあと	aDatetime > aDatetime2
日付時刻データが日付時刻データより後ろかどうか調べる	aDatetime > aDatetime2
日付時刻データはタイムスタンプデータより後ろか調べる	aDatetime > aDatetime2
タイムスタンプデータは日付時刻データより後ろ	aDatetime > aDatetime2
日付時刻データが日付時刻データより後ろ	aDatetime > aDatetime2
日付時刻データがタイムスタンプデータより後ろか調べる	aDatetime > aDatetime2
日付データが日付データより後ろか調べる	aDate > aDate2
日付データが日付データより遅いか調べる	aDate > aDate2
日付データが日付データより後ろか	aDate > aDate2
日付データが日付データより後ろ	aDate > aDate2
日付時刻データが日付時刻データと同時か調べる	aDatetime == aDatetime2
日付時刻データがタイムスタンプデータと同時かどうか調べる	aDatetime == aDatetime2
日付時刻データがタイムスタンプデータと同時か調べる	aDatetime == aDatetime2
日付時刻データが日付時刻データと同時	aDatetime == aDatetime2
日付時刻データは日付時刻データと同時か調べる	aDatetime == aDatetime2
タイムスタンプデータがタイムスタンプデータと同時か調べる	aDatetime == aDatetime2
日付データが日付データと同時か調べる	aDate == aDate2
日付データが日付データと同時	aDate == aDate2
日付データが日付データと同時かどうか確認する	aDate == aDate2
日付時刻データと日付時刻データの時間差	aDatetime - aDatetime2
日付時刻データと日付時刻データの時間差を求める	aDatetime - aDatetime2
日付時刻データとタイムスタンプデータの時間差	aDatetime - aDatetime2
日付データと日付データの時間差	aDate - aDate2
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差を秒で計算する	(aDatetime - aDatetime2).total_seconds()
タイムスタンプデータと日付時刻データの時間差を秒で求める	(aDatetime - aDatetime2).total_seconds()
タイムスタンプデータと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
日付時刻データと日付時刻データの時間差は何秒か知る	(aDatetime - aDatetime2).total_seconds()
タイムスタンプデータとタイムスタンプデータの時間差が何秒か知る	(aDatetime - aDatetime2).total_seconds()
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()
日付データと日付データの時間差を秒数で算出する	(aDate - aDate2).total_seconds()
日付データと日付データの時間差を秒数で計算する	(aDate - aDate2).total_seconds()
日付データと日付データの時間差を秒で算出する	(aDate - aDate2).total_seconds()
日付データと日付データの時間差が何秒か知る	(aDate - aDate2).total_seconds()
日付時刻データと日付時刻データの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差を秒で求める	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差を秒数で計算する	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データとタイムスタンプデータの時間差を秒数で算出する	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差を秒で算出する	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データとタイムスタンプデータの時間差を秒数で求める	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差が何分か知る	(aDatetime - aDatetime2).total_seconds()//60
日付時刻データと日付時刻データの時間差は何分か知る	(aDatetime - aDatetime2).total_seconds()//60
日付データと日付データの時間差を秒数で求める	(aDate - aDate2).total_seconds()//60
日付データと日付データの時間差を秒数で算出する	(aDate - aDate2).total_seconds()//60
日付データと日付データの時間差が何分か知る	(aDate - aDate2).total_seconds()//60
空の辞書	{}
空のマッピング	{}
空のマップ	{}
変数名をキーとして、辞書	dict(name=element)
変数名をキーとして辞書	dict(name=element)
変数名をキーとして、マップ	dict(name=element)
変数名を項目名として、辞書	dict(name=element)
変数名を項目名として、辞書を用意する	dict(name=element)
辞書のキーの値	aDict[key]
辞書の項目名の値	aDict[key]
マッピングの項目名の値を得る	aDict[key]
マップのキーの値	aDict[key]
マッピングの項目名の値	aDict[key]
辞書のキーを列挙する	list(aDict)
タプルのキーを列挙する	list(aDict)
マップのキーを列挙する	list(aDict)
辞書のキー一覧	list(aDict)
マップの項目名一覧	list(aDict)
マッピングのキー一覧	list(aDict)
辞書のキー一覧を得る	list(aDict)
辞書の項目名一覧を見る	list(aDict)
辞書のキー一覧を参照する	list(aDict)
辞書の項目数	len(aDict)
マッピングの項目数	len(aDict)
マッピングのエントリ数	len(aDict)
辞書の項目数を得る	len(aDict)
タプルのエントリ数	len(aDict)
辞書の全項目をクリアする	aDict.clear()
辞書を空にする	aDict.clear()
タプルの全項目をクリアする	aDict.clear()
マッピングの全項目をクリアする	aDict.clear()
辞書をクリアする	aDict.clear()
マッピングの全をクリアする	aDict.clear()
辞書をコピーする	aDict.copy()
マッピングをコピーする	aDict.copy()
マップをコピーする	aDict.copy()
マップを複製する	aDict.copy()
マッピングを浅くコピーする	aDict.copy()
辞書の浅いコピーを作る	aDict.copy()
タプルのコピーを作る	aDict.copy()
辞書のコピーを生成する	aDict.copy()
マッピングの浅いコピーを作る	aDict.copy()
タプルの浅いコピーを作る	aDict.copy()
辞書のコピーを作る	aDict.copy()
辞書からキーの値	aDict.get(key)
辞書から項目名の値	aDict.get(key)
辞書からキーの値を得る	aDict.get(key)
タプルからキーの値を得る	aDict.get(key)
辞書のキーに対応した値	aDict.get(key)
辞書の項目名に対応した値	aDict.get(key)
辞書の項目名に対応した値を参照する	aDict.get(key)
辞書のキーに対応した値を得る	aDict.get(key)
マップのキーに対応した値	aDict.get(key)
タプルの項目名に対応した値	aDict.get(key)
辞書からキーの値をエラーなく得る	aDict.get(key, None)
エラーなく辞書から項目名の値を得る	aDict.get(key, None)
マッピングから項目名の値をエラーなく得る	aDict.get(key, None)
エラーなく辞書からキーの値を得る	aDict.get(key, None)
マッピングからキーの値をエラーなく参照する	aDict.get(key, None)
タプルから項目名の値をエラーなく見る	aDict.get(key, None)
辞書からキーの値か、もしくは要素を得る	aDict.get(key, element)
マップから項目名の値か、もしくは要素を参照する	aDict.get(key, element)
辞書から項目名の値かもしくは要素を参照する	aDict.get(key, element)
マッピングから項目名の値か、もしくは要素を得る	aDict.get(key, element)
マップから項目名の値か、もしくは要素を得る	aDict.get(key, element)
マッピングから項目名の値か、もしくは要素を参照する	aDict.get(key, element)
辞書からキーの値かもしくは要素を得る	aDict.get(key, element)
キーが辞書に存在するか調べる	key in aDict
タプルに項目名があるかどうか確認する	key in aDict
辞書にキーが存在し、いるか調べる	key in aDict
項目名が辞書に存在するか確認する	key in aDict
辞書に項目名が存在するか	key in aDict
キーがマッピングに存在する	key in aDict
キーがマッピングに存在するか調べる	key in aDict
キーが辞書上で定義済みか調べる	key in aDict
キーがマップ上で定義済みか調べる	key in aDict
マッピング上で項目名が定義されているか確認する	key in aDict
キーがマッピング上で定義されているか確認する	key in aDict
キーがタプル上で定義済み	key in aDict
項目名がマッピング上で定義されているか調べる	key in aDict
項目名が辞書上で定義されている	key in aDict
キーが辞書に存在するか調べる	key not in aDict
マッピングにキーが存在し、いる	key not in aDict
キーが辞書に存在する	key not in aDict
項目名が辞書に存在するか調べる	key not in aDict
項目名がタプルに存在する	key not in aDict
キーが辞書にある	key not in aDict
辞書にキーが存在するか調べる	key not in aDict
キーが辞書上で未定義か調べる	key not in aDict
項目名がマッピング上で未定義かどうか調べる	key not in aDict
キーがマップ上で未定義か調べる	key not in aDict
マッピング上でキーが未定義か	key not in aDict
項目名がマッピング上でまだ定義されていないか調べる	key not in aDict
項目名がタプル上でまだ定義されていないか調べる	key not in aDict
項目名がマッピング上で未定義かどうか	key not in aDict
辞書のキーとその値を列挙する	aDict.items()
辞書の項目名とその項目を列挙する	aDict.items()
マッピングの項目名とその値を列挙する	aDict.items()
辞書の項目名とその値を列挙する	aDict.items()
マッピングのキーとその値を列挙する	aDict.items()
辞書のキーとその値をペアとして取り出す	aDict.items()
タプルのキーとその値をペアとして取り出す	aDict.items()
マッピングのキーとその値をペアとして取り出す	aDict.items()
タプルの項目名とその値をペアとして取り出す	aDict.items()
マップのキーとその値をペアとして取り出す	aDict.items()
辞書のキーを列挙する	aDict.keys()
タプルの項目名を列挙する	aDict.keys()
マッピングのキーを列挙する	aDict.keys()
辞書のキーの一覧	aDict.keys()
タプルのキーの一覧	aDict.keys()
辞書の項目名の一覧	aDict.keys()
マッピングの項目名の一覧	aDict.keys()
辞書の値を列挙する	aDict.values()
タプルの値を列挙する	aDict.values()
マッピングの値を列挙する	aDict.values()
辞書の値の一覧	aDict.values()
辞書の値の一覧を得る	aDict.values()
マップのの一覧	aDict.values()
マッピングの値の一覧	aDict.values()
要素が辞書の値として含まれているか調べる	element in aDict.values()
要素が辞書の値として含まれているか	element in aDict.values()
要素はタプルの値として含まれている	element in aDict.values()
タプルの値として要素は含まれているか調べる	element in aDict.values()
マッピングの値として要素が含まれているかどうか調べる	element in aDict.values()
要素が辞書の値に含まれていないか調べる	element not in aDict.values()
要素は辞書の値に含まれていない	element not in aDict.values()
辞書の値に要素が含まれていないか	element not in aDict.values()
要素がタプルの値に含まれていないかどうか確認する	element not in aDict.values()
要素がタプルの値に含まれていないか調べる	element not in aDict.values()
要素はタプルの値に含まれていない	element not in aDict.values()
辞書のキーを要素に設定する	aDict[key] = element
辞書の項目名を要素に設定する	aDict[key] = element
マップの項目名を要素に設定する	aDict[key] = element
辞書のキーを要素に変更する	aDict[key] = element
辞書に要素をキーとして加える	aDict[key] = element
タプルに要素を項目名として加える	aDict[key] = element
マッピングに要素を項目名として加える	aDict[key] = element
マッピングに要素をキーとして加える	aDict[key] = element
キーが辞書に存在しないとき、要素を追加する	aDict.setdefault(key, element)
項目名が辞書に存在しない時、要素を追加する	aDict.setdefault(key, element)
キーがマッピングに存在しないとき、要素を追加する	aDict.setdefault(key, element)
項目名がマップに存在しないとき要素を追加する	aDict.setdefault(key, element)
項目名が辞書に存在しない場合、要素を追加する	aDict.setdefault(key, element)
キーが辞書にないとき、要素を追加する	aDict.setdefault(key, element)
マッピングに項目名がないとき要素を追加する	aDict.setdefault(key, element)
辞書に辞書の項目を更新する	aDict.update(aDict2)
マッピングに辞書の項目を更新する	aDict.update(aDict2)
辞書に辞書の項目を追加する	aDict.update(aDict2)
マッピングに辞書の値を更新する	aDict.update(aDict2)
辞書に辞書の値を更新する	aDict.update(aDict2)
マッピングにマッピングの項目を更新する	aDict.update(aDict2)
辞書にキーワード引数で更新する	aDict.update(**kwargs)
タプルにキーワード引数で更新する	aDict.update(**kwargs)
辞書にキーワード引数として追加する	aDict.update(**kwargs)
項目名ワード引数でマップに更新する	aDict.update(**kwargs)
マップにキーワード引数で追加する	aDict.update(**kwargs)
マップにキーワード引数として更新する	aDict.update(**kwargs)
キーワード引数でタプルに加えて、更新する	aDict.update(**kwargs)
ふたつの辞書を合体する	aDict | aDict2
ふたつのマップをマージする	aDict | aDict2
ふたつの辞書を結合する	aDict | aDict2
辞書からキーで指定された項目をポップする	aDict.pop(key)
項目名で指定された値を辞書からポップする	aDict.pop(key)
キーで指定された項目を辞書からポップする	aDict.pop(key)
マッピングから項目名で指定されたエントリをポップする	aDict.pop(key)
タプルから項目名で指定された項目を取り出す	aDict.pop(key)
項目名で指定されたエントリをマップからポップする	aDict.pop(key)
辞書から最後の項目をポップする	aDict.popitem()
最後に追加した項目を辞書からポップする	aDict.popitem()
辞書から最後の項目を取り出す	aDict.popitem()
最後の値をマッピングからポップする	aDict.popitem()
タプルから最後の項目を取り出す	aDict.popitem()
マッピングから最後に追加した項目を取り出す	aDict.popitem()
辞書のキーと値を入れ替える	{v: k for k, v in aDict.items()}
マップの項目名と値を入れ替える	{v: k for k, v in aDict.items()}
マップのキーと値を入れ替える	{v: k for k, v in aDict.items()}
マッピングのキーと値を入れ替える	{v: k for k, v in aDict.items()}
二つのリストから辞書	dict(zip(aList, aList2))
２つのリストからマッピング	dict(zip(aList, aList2))
二つのリストからマップを作成する	dict(zip(aList, aList2))
二つのリストから辞書を作る	dict(zip(aList, aList2))
辞書を浅くコピーする	dict(aDict)
マッピングを複製する	dict(aDict)
マッピングをコピーする	dict(aDict)
タプルを浅くコピーする	dict(aDict)
辞書のコピー	dict(aDict)
辞書のコピーを生成する	dict(aDict)
マップのコピー	dict(aDict)
タプルのコピー	dict(aDict)
タプルのコピーを生成する	dict(aDict)
辞書の内部もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
辞書の内部も複製する	{k: copy.copy(v) for k, v in aDict.items()}
マップの内部もコピーする	{k: copy.copy(v) for k, v in aDict.items()}
osモジュールをインポートする	import os
ファイルパスのセパレータ記号	os.sep
ファイルパスのセパレータ記号を使用する	os.sep
ファイルパスの区切り記号	os.sep
パスのセパレータ記号を使用する	os.sep
パスの区切り記号	os.sep
ファイルパスの区切り記号を見る	os.sep
現在の作業ディレクトリ	os.getcwd()
現在のワーキングディレクトリ	os.getcwd()
現在の作業ディレクトリを使う	os.getcwd()
現在の作業ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
filepathにカレント作業ディレクトリを変更する	os.chdir(os.dirname(filepath))
現在のワーキングディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
ディレクトリをfilepathに変更する	os.chdir(os.dirname(filepath))
UNIXコマンドtextを実行する	os.system(text)
ファイルのファイル名	os.path.basename(filepath)
ファイルの拡張子付きのファイル名	os.path.basename(filepath)
ファイルからファイル名を使う	os.path.basename(filepath)
ファイルから拡張子付きのファイル名を取り出す	os.path.basename(filepath)
ファイルの拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルの拡張子なしのファイル名	os.path.splitext(os.path.basename(filepath))[0]
ファイルパスのベースファイル名	os.path.splitext(os.path.basename(filepath))[0]
ファイルパスの拡張子なしのファイル名を見る	os.path.splitext(os.path.basename(filepath))[0]
ファイルの拡張子なしのファイル名を求める	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルパスから拡張子なしのファイル名を使う	os.path.splitext(os.path.basename(filepath))[0]
ファイルから拡張子なしのファイル名を見る	os.path.splitext(os.path.basename(filepath))[0]
ファイルからベースファイル名を取り出す	os.path.splitext(os.path.basename(filepath))[0]
ファイルの拡張子	os.path.splitext(filepath)[1].lstrip('.')
ファイルの拡張子を見る	os.path.splitext(filepath)[1].lstrip('.')
ファイルの拡張子を使う	os.path.splitext(filepath)[1].lstrip('.')
ファイルの拡張子をtextに変更する	os.path.splitext(filepath)[0] + text
ファイルのディレクトリ名	os.path.dirname(filepath)
ファイルのディレクトリ名を使う	os.path.dirname(filepath)
ファイルからディレクトリ名を使う	os.path.dirname(filepath)
ファイルからフォルダ名取り出す	os.path.dirname(filepath)
ファイルからディレクトリ名を見る	os.path.dirname(filepath)
ファイルからフォルダ名を使う	os.path.dirname(filepath)
ファイルの絶対パス	os.path.abspath(filepath)
ファイルパスの絶対パスを使う	os.path.abspath(filepath)
ファイルを絶対パスに変換する	os.path.abspath(filepath)
ファイルを絶対ファイルパスにする	os.path.abspath(filepath)
ファイルを絶対ファイルパスに変換する	os.path.abspath(filepath)
ファイルをディレクトリ名とファイル名に分割する	os.path.split(filepath)
ファイルパスをフォルダ名とファイル名に分割する	os.path.split(filepath)
ファイルをベース名と拡張子に分割する	os.path.splitext(filepath)
ファイルとfilenameを結合する	os.path.join(filepath, filename)
ファイルが存在するか調べる	os.path.exists(filepath)
ファイルパスが存在するか	os.path.exists(filepath)
ファイルが存在する	os.path.exists(filepath)
ファイルパスがあるか判定する	os.path.exists(filepath)
ファイルが存在しないか調べる	not os.path.exists(filepath)
ファイルがない	not os.path.exists(filepath)
ファイルがないかどうか調べる	not os.path.exists(filepath)
ファイルパスが存在しないか調べる	not os.path.exists(filepath)
ファイルのファイルサイズ	os.path.get_size(filepath)
スクリプトファイルの絶対パス	os.path.abspath(__file__)
スクリプトファイルの絶対パスを使う	os.path.abspath(__file__)
スクリプトファイルの絶対パスを見る	os.path.abspath(__file__)
スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのディレクトリ名を使う	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのフォルダパスを求める	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのディレクトリ名を求める	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルのフォルダ名	os.path.dirname(os.path.abspath(__file__))
スクリプトファイルと同じディレクトリのファイルのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
スクリプトファイルと同じディレクトリのファイルのパスを見る	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
スクリプトファイルと同じフォルダのファイルのパス	os.path.join(os.path.dirname(os.path.abspath(__file__)), filepath)
ファイルをオープンする]	open(filepath)
ファイルからの入力ストリームを使う	open(filepath)
ファイルのストリームを見る	open(filepath)
ファイルからの読み込みストリームを使う	open(filepath)
ファイルのストリームを使う	open(filepath)
ファイルパスからのストリームを見る	open(filepath)
ファイルからの入力ストリームを見る	open(filepath)
ファイルからストリームを読み込み、fileとする	file = open(filepath)
ファイルパスからストリームを読み込みfileとする	file = open(filepath)
ファイルパスからストリームを読み込んで、fileとする	file = open(filepath)
ファイルからストリームをオープンして]、fileとする	file = open(filepath)
ファイルからストリームを開いて]fileとする	file = open(filepath)
ファイルからストリームをオープンして]fileとする	file = open(filepath)
ファイルパスからストリームをオープンして]、fileとする	file = open(filepath)
ファイルを読み込みモードでオープンする]	open(filepath, mode='r')
ファイルを読み込み用に開く]	open(filepath, mode='r')
ファイルを読み込みモードとしてオープンする]	open(filepath, mode='r')
ファイルパスを読み込みモードで開く]	open(filepath, mode='r')
ファイルを読み込みモードを使ってオープンする]	open(filepath, mode='r')
読み込みモードとしてファイルを開く]	open(filepath, mode='r')
ファイルを読み込みできるようにオープンする]	open(filepath, mode='r')
読み込みできるようにファイルをオープンする]	open(filepath, mode='r')
ファイルを読み込みできるように開く]	open(filepath, mode='r')
ファイルをオープンして]、読み込みストリームを使う	open(filepath, mode='r')
ファイルをオープンして]、読み込みストリームを求める	open(filepath, mode='r')
ファイルをオープンして]読み込みストリームを使う	open(filepath, mode='r')
ファイルをバイナリモードでオープンする]	open(filepath, mode='rb')
バイナリ用にファイルをオープンする]	open(filepath, mode='rb')
ファイルをバイナリ用にオープンする]	open(filepath, mode='rb')
バイナリモードでファイルをオープンする]	open(filepath, mode='rb')
ファイルをバイナリモードを使ってオープンする]	open(filepath, mode='rb')
ファイルパスをバイナリ用にオープンする]	open(filepath, mode='rb')
ファイルをバイナリできるようにオープンする]	open(filepath, mode='rb')
ファイルパスをバイナリできるようにオープンする]	open(filepath, mode='rb')
バイナリできるようにファイルを開く]	open(filepath, mode='rb')
ファイルをオープンして]、バイナリストリームを使う	open(filepath, mode='rb')
ファイルを開いて]バイナリストリームを使う	open(filepath, mode='rb')
ファイルをオープンして]、バイナリストリームを見る	open(filepath, mode='rb')
ファイルを書き込みモードでオープンする]	open(filepath, mode='w')
書き込み用にファイルをオープンする]	open(filepath, mode='w')
ファイルを書き込みモードを使ってオープンする]	open(filepath, mode='w')
ファイルを書き込みモードで開く]	open(filepath, mode='w')
書き込みモードとしてファイルをオープンする]	open(filepath, mode='w')
ファイルを書き込みできるようにオープンする]	open(filepath, mode='w')
ファイルパスを書き込みできるようにオープンする]	open(filepath, mode='w')
書き込みできるようにファイルをオープンする]	open(filepath, mode='w')
ファイルをオープンして]、書き込みストリームを使う	open(filepath, mode='w')
ファイルをオープンして]書き込みストリームを見る	open(filepath, mode='w')
ファイルを開いて]書き込みストリームを使う	open(filepath, mode='w')
ファイルパスをオープンして]、書き込みストリームを使う	open(filepath, mode='w')
ファイルをオープンして]、書き込みストリームを求める	open(filepath, mode='w')
ファイルをバイナリ書き込みモードでオープンする]	open(filepath, mode='wb')
バイナリ書き込みモードを用いてファイルパスをオープンする]	open(filepath, mode='wb')
バイナリ書き込みモードでファイルを開く]	open(filepath, mode='wb')
バイナリ書き込みモードでファイルをオープンする]	open(filepath, mode='wb')
ファイルをバイナリ書き込みモードとして開く]	open(filepath, mode='wb')
ファイルをバイナリ書き込みできるようにオープンする]	open(filepath, mode='wb')
バイナリ書き込みできるようにファイルをオープンする]	open(filepath, mode='wb')
バイナリ書き込みできるようにファイルを開く]	open(filepath, mode='wb')
ファイルパスをバイナリ書き込みできるようにオープンする]	open(filepath, mode='wb')
ファイルをオープンして]、バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルをオープンして]バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルをオープンして]、バイナリ書き込みストリームを見る	open(filepath, mode='wb')
ファイルパスを開いて]、バイナリ書き込みストリームを使う	open(filepath, mode='wb')
ファイルを追加モードでオープンする]	open(filepath, mode='a')
追加用にファイルをオープンする]	open(filepath, mode='a')
ファイルパスを追加用に開く]	open(filepath, mode='a')
ファイルを追加モードとしてオープンする]	open(filepath, mode='a')
ファイルを追加用にオープンする]	open(filepath, mode='a')
ファイルを追加できるようにオープンする]	open(filepath, mode='a')
追加できるようにファイルをオープンする]	open(filepath, mode='a')
ファイルパスを追加できるようにオープンする]	open(filepath, mode='a')
ファイルをオープンして]、追加ストリームを使う	open(filepath, mode='a')
ファイルを開いて]、追加ストリームを使う	open(filepath, mode='a')
ファイルをオープンして]追加ストリームを使う	open(filepath, mode='a')
ファイルパスをオープンして]追加ストリームを求める	open(filepath, mode='a')
ファイルをオープンして]、追加ストリームを求める	open(filepath, mode='a')
ファイルを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
ファイルを読み込みモードで開いて]、fとする	f = open(filepath, mode='r')
読み込みモードでファイルを開いて]、fとする	f = open(filepath, mode='r')
ファイルパスを読み込みモードでオープンして]、fとする	f = open(filepath, mode='r')
ファイルを読み込みモードで開き]、fとする	f = open(filepath, mode='r')
ファイルを読み込み用にオープンして]、fとする	f = open(filepath, mode='r')
ファイルから読み込みストリームをオープンして]、fとする	f = open(filepath, mode='r')
ファイルから読み込みストリームをオープンして]fとする	f = open(filepath, mode='r')
ファイルパスから読み込みストリームをオープンして]、fとする	f = open(filepath, mode='r')
ファイルをバイナリモードでオープンして]、fとする	f = open(filepath, mode='rb')
ファイルをバイナリモードでオープンして]fとする	f = open(filepath, mode='rb')
ファイルパスをバイナリモードとして開いて]fとする	f = open(filepath, mode='rb')
ファイルパスをバイナリモードでオープンして]、fとする	f = open(filepath, mode='rb')
ファイルからバイナリストリームをオープンして]、fとする	f = open(filepath, mode='rb')
ファイルパスからバイナリストリームをオープンして]、fとする	f = open(filepath, mode='rb')
ファイルを書き込みモードでオープンして]、fとする	f = open(filepath, mode='w')
ファイルを書き込み用にオープンして]fとする	f = open(filepath, mode='w')
ファイルを書き込みモードとして開いて]、fとする	f = open(filepath, mode='w')
ファイルを書き込みモードで開いて]、fとする	f = open(filepath, mode='w')
ファイルから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
ファイルパスから書き込みストリームをオープンして]、fとする	f = open(filepath, mode='w')
ファイルから書き込みストリームを開き]、fとする	f = open(filepath, mode='w')
ファイルをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
ファイルパスをバイナリ書き込みモードで開いて]、fとする	f = open(filepath, mode='wb')
バイナリ書き込みモードでファイルをオープンして]、fとする	f = open(filepath, mode='wb')
ファイルパスをバイナリ書き込みモードでオープンして]、fとする	f = open(filepath, mode='wb')
バイナリ書き込みモードでファイルパスをオープンして]fとする	f = open(filepath, mode='wb')
ファイルをバイナリ書き込みモードで開いて]fとする	f = open(filepath, mode='wb')
ファイルからバイナリ書き込みストリームをオープンして]、fとする	f = open(filepath, mode='wb')
ファイルからバイナリ書き込みストリームをオープンして]fとする	f = open(filepath, mode='wb')
ファイルを追加モードでオープンして]、fとする	f = open(filepath, mode='a')
ファイルを追加モードとしてオープンして]、fとする	f = open(filepath, mode='a')
ファイルを追加モードとして開いて]、fとする	f = open(filepath, mode='a')
ファイルパスを追加モードとしてオープンして]、fとする	f = open(filepath, mode='a')
ファイルパスを追加モードとしてオープンして]fとする	f = open(filepath, mode='a')
ファイルから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
ファイルパスから追加ストリームをオープンして]fとする	f = open(filepath, mode='a')
ファイルパスから追加ストリームをオープンして]、fとする	f = open(filepath, mode='a')
ファイルから追加ストリームをオープンして]fとする	f = open(filepath, mode='a')
＜オプション＞読み込みモードに設定する	mode = 'r'
＜オプション＞読み込み用に変更する	mode = 'r'
＜オプション＞読み込み用に設定する	mode = 'r'
＜オプション＞読み込みモードに指定する	mode = 'r'
＜オプション＞読み込みモードを使う	mode = 'r'
＜オプション＞バイナリモードに設定する	mode = 'rb'
＜オプション＞バイナリモードに変更する	mode = 'rb'
＜オプション＞バイナリモードを使う	mode = 'rb'
＜オプション＞バイナリモードを用いる	mode = 'rb'
＜オプション＞書き込みモードに設定する	mode = 'w'
＜オプション＞書き込みモードにする	mode = 'w'
＜オプション＞書き込みモードを使う	mode = 'w'
＜オプション＞書き込みモードを用いる	mode = 'w'
＜オプション＞バイナリ書き込みモードに設定する	mode = 'wb'
＜オプション＞バイナリ書き込みモードにする	mode = 'wb'
＜オプション＞バイナリ書き込みモードを使う	mode = 'wb'
＜オプション＞バイナリ書き込みモードを使用する	mode = 'wb'
＜オプション＞追加モードに設定する	mode = 'a'
＜オプション＞追加用に変更する	mode = 'a'
＜オプション＞追加モードに変更する	mode = 'a'
＜オプション＞追加モードにする	mode = 'a'
＜オプション＞追加モードを使う	mode = 'a'
＜オプション＞追加モードを用いる	mode = 'a'
ファイルをUTF8でオープンする]	open(filepath, encoding='utf-8')
ファイルパスをUTF8としてオープンする]	open(filepath, encoding='utf-8')
ファイルをUTF8として開く]	open(filepath, encoding='utf-8')
UTF8でファイルをオープンする]	open(filepath, encoding='utf-8')
ファイルをSJISでオープンする]	open(filepath, encoding='shift_jis')
ファイルパスをSJISでオープンする]	open(filepath, encoding='shift_jis')
SJISを使ってファイルパスを開く]	open(filepath, encoding='shift_jis')
SJISでファイルをオープンする]	open(filepath, encoding='shift_jis')
ファイルをSJISとしてオープンする]	open(filepath, encoding='shift_jis')
ファイルをEUCでオープンする]	open(filepath, encoding='euc_jp')
ファイルパスをEUCとしてオープンする]	open(filepath, encoding='euc_jp')
EUCでファイルをオープンする]	open(filepath, encoding='euc_jp')
ファイルをBOM付きでオープンする]	open(filepath, encoding='utf_8_sig')
BOM付きでファイルパスをオープンする]	open(filepath, encoding='utf_8_sig')
ファイルパスをBOM付きでオープンする]	open(filepath, encoding='utf_8_sig')
BOM付きを使ってファイルパスをオープンする]	open(filepath, encoding='utf_8_sig')
BOM付きでファイルを開く]	open(filepath, encoding='utf_8_sig')
BOM付きとしてファイルを開く]	open(filepath, encoding='utf_8_sig')
ファイルを文字コードtextでオープンする]	open(filepath, encoding=text)
ファイルを文字コードtextで開く]	open(filepath, encoding=text)
文字コードtextでファイルパスを開く]	open(filepath, encoding=text)
文字コードtextでファイルをオープンする]	open(filepath, encoding=text)
ファイルを文字列の示すエンコーディングでオープンする]	open(filepath, encoding=s)
ファイルを文字列の示すエンコーディングとしてオープンする]	open(filepath, encoding=s)
ファイルを文字列の示す文字コードでオープンする]	open(filepath, encoding=s)
ファイルをUTF8で書き込み用にオープンする]	open(filepath, mode='w', encoding='utf-8')
UTF8で書き込み用にファイルをオープンする]	open(filepath, mode='w', encoding='utf-8')
書き込み用にUTF8でファイルパスを開く]	open(filepath, mode='w', encoding='utf-8')
ファイルパスをUTF8として書き込みできるようにオープンする]	open(filepath, mode='w', encoding='utf-8')
ファイルパスをUTF8で書き込みできるようにオープンする]	open(filepath, mode='w', encoding='utf-8')
書き込み用にファイルをUTF8でオープンする]	open(filepath, mode='w', encoding='utf-8')
ファイルをSJISで書き込み用にオープンする]	open(filepath, mode='w', encoding='shift_jis')
書き込みできるようにSJISとしてファイルをオープンする]	open(filepath, mode='w', encoding='shift_jis')
SJISでファイルを書き込み用に開く]	open(filepath, mode='w', encoding='shift_jis')
ファイルをSJISで書き込みできるようにオープンする]	open(filepath, mode='w', encoding='shift_jis')
SJISで書き込みできるようにファイルをオープンする]	open(filepath, mode='w', encoding='shift_jis')
ファイルをSJISとして書き込み用にオープンする]	open(filepath, mode='w', encoding='shift_jis')
ファイルをEUCで書き込み用にオープンする]	open(filepath, mode='w', encoding='euc_jp')
EUCでファイルを書き込み用にオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルパスを書き込み用にEUCでオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルパスをEUCで書き込み用にオープンする]	open(filepath, mode='w', encoding='euc_jp')
ファイルをBOM付きで書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
BOM付きでファイルを書き込み用にオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
書き込み用にファイルをBOM付きで開く]	open(filepath, mode='w', encoding='utf_8_sig')
書き込みできるようにBOM付きを用いてファイルをオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
BOM付きでファイルを書き込みできるようにオープンする]	open(filepath, mode='w', encoding='utf_8_sig')
ファイルを文字コードtextで書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
ファイルを文字コードtextを用いて書き込み用にオープンする]	open(filepath, mode='w', encoding=text)
書き込み用にファイルパスを文字コードtextでオープンする]	open(filepath, mode='w', encoding=text)
ファイルを文字コードtextで書き込みできるようにオープンする]	open(filepath, mode='w', encoding=text)
書き込みできるようにファイルを文字コードtextとしてオープンする]	open(filepath, mode='w', encoding=text)
ファイルを文字コードtextで書き込み用に開く]	open(filepath, mode='w', encoding=text)
ファイルを文字列の示すエンコーディングで書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
文字列の示すエンコーディングとしてファイルパスを書き込み用にオープンする]	open(filepath, mode='w', encoding=s)
ファイルパスを文字列の示すエンコーディングで書き込み用に開く]	open(filepath, mode='w', encoding=s)
ファイルを文字列の示すエンコーディングで書き込み用に開く]	open(filepath, mode='w', encoding=s)
ファイルを書き込み用に文字列の示すエンコーディングでオープンする]	open(filepath, mode='w', encoding=s)
文字列の示す文字コードでファイルを書き込みできるようにオープンする]	open(filepath, mode='w', encoding=s)
ファイルを文字列の示す文字コードで書き込みできるように開く]	open(filepath, mode='w', encoding=s)
既存のファイルをUTF8で追加できるようにオープンする]	open(filepath, mode='a', encoding='utf-8')
ファイルを追加できるようにUTF8でオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルをUTF8として追加できるようにオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルを追加できるようにUTF8でオープンする]	open(filepath, mode='a', encoding='utf-8')
既存のファイルをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルパスをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
ファイルをSJISで追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルをSJISとして追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
ファイルをSJISを用いて追加できるようにオープンする]	open(filepath, mode='a', encoding='shift_jis')
既存のファイルをEUCで追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
ファイルをEUCとして追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
EUCで既存のファイルを追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルパスをEUCで追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルをEUCとして追加できるようにオープンする]	open(filepath, mode='a', encoding='euc_jp')
既存のファイルをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
ファイルをBOM付きで追加できるようにオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
既存のファイルをBOM付きで追加できるように開く]	open(filepath, mode='a', encoding='utf_8_sig')
追加できるように既存のファイルパスをBOM付きで開く]	open(filepath, mode='a', encoding='utf_8_sig')
BOM付きで追加できるように既存のファイルをオープンする]	open(filepath, mode='a', encoding='utf_8_sig')
既存のファイルを文字コードtextで追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルを追加できるように文字コードtextでオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルを文字コードtextで追加できるように開く]	open(filepath, mode='a', encoding=text)
ファイルパスを文字コードtextとして追加できるようにオープンする]	open(filepath, mode='a', encoding=text)
既存のファイルを文字列の示すエンコーディングで追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
既存のファイルを文字列の示すエンコーディングを使って追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
ファイルを文字列の示すエンコーディングとして追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
ファイルを文字列の示す文字コードで追加できるように開く]	open(filepath, mode='a', encoding=s)
既存のファイルパスを文字列の示す文字コードで追加できるようにオープンする]	open(filepath, mode='a', encoding=s)
文字列の示すエンコーディングで追加できるようにファイルをオープンする]	open(filepath, mode='a', encoding=s)
既存のファイルを文字列の示す文字コードで追加できるように開く]	open(filepath, mode='a', encoding=s)
＜オプション＞エンコーディングをUTF8に設定する	encoding = 'utf-8'
＜オプション＞文字コードをUTF8に変更する	encoding = 'utf-8'
＜オプション＞文字コードをUTF8に指定する	encoding = 'utf-8'
＜オプション＞UTF8を使う	encoding = 'utf-8'
＜オプション＞UTF8を使用する	encoding = 'utf-8'
＜オプション＞エンコーディングをSJISに設定する	encoding = 'shift_jis'
＜オプション＞文字コードをSJISに設定する	encoding = 'shift_jis'
＜オプション＞SJISを使う	encoding = 'shift_jis'
＜オプション＞SJISを用いる	encoding = 'shift_jis'
＜オプション＞エンコーディングをEUCに設定する	encoding = 'euc_jp'
＜オプション＞EUCを使う	encoding = 'euc_jp'
＜オプション＞エンコーディングをBOM付きに設定する	encoding = 'utf_8_sig'
＜オプション＞文字コードをBOM付きに指定する	encoding = 'utf_8_sig'
＜オプション＞文字コードをBOM付きにセットする	encoding = 'utf_8_sig'
＜オプション＞エンコーディングをBOM付きに指定する	encoding = 'utf_8_sig'
＜オプション＞エンコーディングをBOM付きにする	encoding = 'utf_8_sig'
＜オプション＞文字コードをBOM付きに変更する	encoding = 'utf_8_sig'
＜オプション＞BOM付きを使う	encoding = 'utf_8_sig'
＜オプション＞エンコーディングを文字コードtextに設定する	encoding = text
＜オプション＞文字コードを文字コードtextにする	encoding = text
＜オプション＞エンコーディングを文字コードtextにする	encoding = text
＜オプション＞文字コードtextを使う	encoding = text
＜オプション＞文字コードtextを用いる	encoding = text
＜オプション＞エンコーディングを文字列の示すエンコーディングに設定する	encoding = s
＜オプション＞文字コードを文字列の示す文字コードに変更する	encoding = s
＜オプション＞文字コードを文字列の示すエンコーディングに変更する	encoding = s
＜オプション＞エンコーディングを文字列の示す文字コードに設定する	encoding = s
＜オプション＞文字コードを文字列の示すエンコーディングに設定する	encoding = s
＜オプション＞文字列の示すエンコーディングを使う	encoding = s
＜オプション＞文字列の示すエンコーディングを使用する	encoding = s
＜オプション＞バッファリングを無効にする	buffering = 0
＜オプション＞バッファリングのサイズを設定する	buffering = 4096
＜オプション＞バッファのサイズを設定する	buffering = 4096
＜オプション＞バッファリングのサイズを指定する	buffering = 4096
＜オプション＞エラーがあるとき、例外を発生させるように設定する	errors = 'strict'
＜オプション＞エラーがあるとき例外を発生させるようにセットする	errors = 'strict'
＜オプション＞エラーがあるとき例外を発生させるように設定する	errors = 'strict'
＜オプション＞エラーがあるとき例外を発生させる	errors = 'strict'
＜オプション＞エラーを無視するように設定する	errors = 'ignore'
＜オプション＞エラーを無視する	errors = 'ignore'
＜オプション＞改行コードをUNIXに設定する	newline = '\n'
＜オプション＞改行コードをUNIXに指定する	newline = '\n'
＜オプション＞改行コードを旧Macに設定する	newline = '\r'
＜オプション＞改行コードをWindowsに設定する	newline = '\r\n'
＜オプション＞改行コードをWindowsに指定する	newline = '\r\n'
＜オプション＞改行コードを動作環境依存に設定する	newline = None
＜オプション＞改行コードを動作環境依存に指定する	newline = None
ファイルをクローズする	f.close()
入力ストリームを閉じる	f.close()
ストリームをクローズする	f.close()
入力ストリームをクローズする	f.close()
ファイルを全部、読み込む	f.read()
ストリームを全部読む	f.read()
ファイルを全て読み込む	f.read()
ファイルを全部、読む	f.read()
ファイルから1文字、読み込む	f.read(1)
ファイルから1文字、読む	f.read(1)
出力ストリームから1文字読む	f.read(1)
出力ストリームから1バイト、読み込む	f.read(1)
ファイルからn文字、読み込む	f.read(n)
ストリームからn文字、読み込む	f.read(n)
ファイルからnバイト、読み込む	f.read(n)
入力ストリームからn文字、読み込む	f.read(n)
ファイルからn文字読み込む	f.read(n)
ファイル全体を行単位で分割して読み込む	f.readlines()
入力ストリーム全体をリストとして読み込む	f.readlines()
ファイル全体を行分割して読み込む	f.readlines()
入力ストリーム全体を行分割して読み込む	f.readlines()
ファイル全体を行単位で分割してリストに変換する	[s.strip() for s in f.readlines()]
出力ストリーム全体を行単位で分割してリストにする	[s.strip() for s in f.readlines()]
ファイル全体を行単位で分割してリストにする	[s.strip() for s in f.readlines()]
ファイル全体を行ごとに分割してリストに変換する	[s.strip() for s in f.readlines()]
ファイルを一行ずつ読み込む	f.readline()
入力ストリームを一行ずつ読み込む	f.readline()
ファイルを改行を取り除いて一行ずつ読み込む	f.readline()
ファイルを改行なしで一行ずつ読み込む	f.readline()
ファイルに文字列を書き込む	f.write(s)
文字列をファイルに書き込む	f.write(s)
文字列をファイルに書く	f.write(s)
ファイルにxを文字列に変換して書き込む	f.write(str(x))
ファイルにxを文字列にして書き込む	f.write(str(x))
ファイルにxを文字列にして書く	f.write(str(x))
出力ストリームにxを文字列に変換して書き込む	f.write(str(x))
実数が正の数か調べる	x > 0
整数が正の数か調べる	x > 0
実数が正の数	x > 0
実数が正か	x > 0
浮動小数点数が正の数かどうか調べる	x > 0
浮動小数点数が正の数か	x > 0
実数が負の数か調べる	x < 0
実数が負の数か	x < 0
浮動小数点数が負の数かどうか調べる	x < 0
浮動小数点数が負の数か調べる	x < 0
実数を二乗する	x ** 2
実数を２乗する	x ** 2
数を二乗する	x ** 2
実数の二乗	x ** 2
整数の二乗	x ** 2
実数の２乗	x ** 2
実数の二乗を求める	x ** 2
浮動小数点数の二乗	x ** 2
実数を三乗する	x ** 3
浮動小数点数を三乗する	x ** 3
実数を3乗する	x ** 3
実数を３乗する	x ** 3
実数の三乗	x ** 3
浮動小数点数の三乗	x ** 3
整数の三乗	x ** 3
浮動小数点数の３乗	x ** 3
数の3乗	x ** 3
実数をn乗する	x ** n
浮動小数点数をn乗する	x ** n
実数のn乗	x ** n
数のn乗	x ** n
実数のn乗を求める	x ** n
実数に実数を加える	x + y
整数に実数を加える	x + y
浮動小数点数に実数を加算する	x + y
実数に浮動小数点数を加算する	x + y
実数に数を足す	x + y
実数を実数に加算する	x + y
数を浮動小数点数に加える	x + y
実数から実数を引く	x - y
浮動小数点数を浮動小数点数から引く	x - y
実数を実数から引く	x - y
浮動小数点数から実数を引く	x - y
浮動小数点数から浮動小数点数を引く	x - y
実数から浮動小数点数を引く	x - y
実数に実数を掛ける	x * y
実数を数に掛ける	x * y
実数を実数に掛ける	x * y
整数を実数にかける	x * y
実数を浮動小数点数に掛ける	x * y
浮動小数点数に実数をかける	x * y
浮動小数点数に浮動小数点数を乗算する	x * y
実数を実数で割る	x / y
実数を整数で割る	x / y
数を実数で割る	x / y
実数を実数で除算する	x / y
実数で実数を除する	x / y
実数を数で割る	x / y
実数を実数で割って、切り捨てる	x // y
実数を数で割って、切り捨てる	x // y
実数を数で割って切り捨てる	x // y
実数を整数で除算して切り捨てる	x // y
実数を数で除算して切り捨てる	x // y
浮動小数点数を実数で除算して、小数点以下を切り捨てる	x // y
実数を実数で整数除算する	x // y
実数を浮動小数点数で	x // y
実数を実数で	x // y
実数で実数を整数除算する	x // y
実数を数で整数除算する	x // y
実数を実数で割った余り	x % y
整数を整数で割った余り	x % y
実数を浮動小数点数で除算した余り	x % y
実数を実数で除した余り	x % y
実数を浮動小数点数で割った余り	x % y
実数を整数に変換する	int(x)
実数を文字列に変換する	str(x)
実数を文字列にする	str(x)
数を文字列に変換する	str(x)
実数の複素数	complex(x)
浮動小数点数の複素数を計算する	complex(x)
実数の複素数を求める	complex(x)
実数の複素数を計算する	complex(x)
実数を複素数に変換する	complex(x)
浮動小数点数を複素数に変換する	complex(x)
数を複素数に変換する	complex(x)
実部と虚部から複素数	complex(x, y)
商と余りを同時に計算する	divmod(x, y)
実数のn乗	pow(x, n)
実数のn乗を求める	pow(x, n)
数のn乗を計算する	pow(x, n)
実数のn乗の実数剰余	pow(x, n, y)
数のn乗の実数剰余	pow(x, n, y)
数のn乗の実数剰余を求める	pow(x, n, y)
実数のn乗して実数による余り	pow(x, n, y)
実数のn乗して数による余りを求める	pow(x, n, y)
実数のn乗して浮動小数点数による余り	pow(x, n, y)
整数のn乗して実数による余りを求める	pow(x, n, y)
実数の小数点以下を丸める	round(x)
実数の小数点を四捨五入する	round(x)
実数を小数点以下第一位で丸める	round(x, 1)
実数を小数点以下第一位で四捨五入する	round(x, 1)
浮動小数点数を小数点以下第一位で丸める	round(x, 1)
実数を小数点第一位で四捨五入する	round(x, 1)
実数を小数点以下で丸める	round(x, n)
実数を小数点で四捨五入する	round(x, n)
数を小数点で丸める	round(x, n)
数を小数点以下で丸める	round(x, n)
実数を十の位で丸める	round(x, -1)
実数を十の位で四捨五入する	round(x, -1)
浮動小数点数を十の位で四捨五入する	round(x, -1)
実数を百の位で丸める	round(x, -2)
実数を百の位で四捨五入する	round(x, -2)
数を百の位で丸める	round(x, -2)
実数を千の位で丸める	round(x, -3)
数を千の位で丸める	round(x, -3)
実数を万の位で丸める	round(x, -4)
浮動小数点数を万の位で四捨五入する	round(x, -4)
浮動小数点数を万の位で丸める	round(x, -4)
Pythonのバージョン	sys.version
浮動小数点数の最大値	sys.float_info.max
浮動小数点数の最小値	sys.float_info.min
floatの最小値	sys.float_info.min
浮動小数点数の最小値を計算する	sys.float_info.min
計算機イプシロン	sys.float_info.epsilon
実数が整数か調べる	x.is_integer()
実数が整数	x.is_integer()
実数の値が整数か調べる	x.is_integer()
浮動小数点数が整数	x.is_integer()
実数を十六進表記の文字列に変換する	x.hex()
浮動小数点数を十六進表記の文字列に変換する	x.hex()
数を十六進表記の文字列に変換する	x.hex()
実数を十六進文字列に変換する	x.hex()
十六進表記の文字列を浮動小数点数に変換する	float.fromhex(十六進表記の文字列)
十六進表記の文字列を浮動小数点数にする	float.fromhex(十六進表記の文字列)
有理数を使う	import fractions
有理数を用いる	import fractions
分数を用いる	import fractions
分数を使う	import fractions
分子n、分母mの有理数を作る	fractions.Fraction(numerator=n, denominator=m)
分子n分母mの有理数を作る	fractions.Fraction(numerator=n, denominator=m)
n割るmの有理数表現	fractions.Fraction(numerator=n, denominator=m)
分子と分母から有理数を作る	fractions.Fraction(分子, 分母)
分子と分母から分数を用意する	fractions.Fraction(分子, 分母)
分子と分母から有理数を新規生成する	fractions.Fraction(分子, 分母)
分子と分母から有理数を生成する	fractions.Fraction(分子, 分母)
分子割る分母	fractions.Fraction(分子, 分母)
有理数の分子	q.numerator
有理数の分母	q.denominator
有理数を分母の最大値を指定して近似する	q.limit_denominator(max_denominator=1000000)
浮動小数点数の有理数近似	q.limit_denominator(max_denominator=1000000)
n進文字列を整数に変換する	int(s, n)
n進数文字列を整数に変換する	int(s, n)
二進文字列を整数に変換する	int(s, 2)
2進文字列を整数に変換する	int(s, 2)
二進数文字列を整数に変換する	int(s, 2)
2進数文字列を整数に変換する	int(s, 2)
八進文字列を整数に変換する	int(s, 8)
十六進文字列を整数に変換する	int(s, 16)
十六進数文字列を整数に変換する	int(s, 16)
16進数文字列を整数に変換する	int(s, 16)
n進文字列をバイト列に変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進文字列をバイナリに変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進文字列をバイト列にする	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進数の文字列をバイト列に変換する	int(s, n).to_bytes(length=bytesize, byteorder='big')
n進文字列をバイナリにする	int(s, n).to_bytes(length=bytesize, byteorder='big')
二進文字列をバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
二進文字列をバイト列にする	int(s, 2).to_bytes(length=bytesize, byteorder='big')
二進文字列をbytesizeバイトのバイト列に変換する	int(s, 2).to_bytes(length=bytesize, byteorder='big')
八進文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
八進文字列をbytesizeバイトのバイナリに変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
8進文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
八進文字列をbytesizeバイトのバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
八進数の文字列をバイト列に変換する	int(s, 8).to_bytes(length=bytesize, byteorder='big')
十六進文字列をバイト列に変換する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
16進文字列をバイナリにする	int(s, 16).to_bytes(length=bytesize, byteorder='big')
十六進文字列をバイナリに変換する	int(s, 16).to_bytes(length=bytesize, byteorder='big')
十六進文字列をbytesizeバイトのバイナリにする	int(s, 16).to_bytes(length=bytesize, byteorder='big')
整数nの二進表現	bin(n)
整数nの二進数表現	bin(n)
整数nの二進表記	bin(n)
nの2進表現	bin(n)
nの二進数表現	bin(n)
整数nを二進表現に変換する	bin(n)
整数nを二進数リテラルに変換する	bin(n)
整数nを2進表現に変換する	bin(n)
整数nを二進表現にする	bin(n)
整数nを2進数リテラルに変換する	bin(n)
整数nを2進表現にする	bin(n)
整数nを2進リテラルに変換する	bin(n)
整数nの八進表現	oct(n)
整数nの八進表記	oct(n)
整数nの8進表現	oct(n)
整数nの八進表現を使う	oct(n)
整数nの八進表現を見る	oct(n)
整数nを八進表現に変換する	oct(n)
整数nを八進表記にする	oct(n)
nを八進表記にする	oct(n)
整数nを8進表現に変換する	oct(n)
整数nの十六進表現	hex(n)
整数nの十六進リテラル	hex(n)
整数nの16進表記を使う	hex(n)
nの十六進リテラル	hex(n)
整数nの十六進表現を使う	hex(n)
整数nを十六進表現に変換する	hex(n)
整数nを十六進表現にする	hex(n)
nを十六進表記に変換する	hex(n)
nを十六進表現に変換する	hex(n)
nを十六進数表記に変換する	hex(n)
整数nの二進文字列	bin(n)[2:]
整数nの二進数文字列	bin(n)[2:]
nの二進文字列	bin(n)[2:]
nの二進数文字列	bin(n)[2:]
整数nの2進文字列	bin(n)[2:]
整数nを二進文字列に変換する	bin(n)[2:]
整数nを二進数文字列にする	bin(n)[2:]
整数nの八進文字列	oct(n)[2:]
整数nの八進数文字列	oct(n)[2:]
nの八進数文字列を使う	oct(n)[2:]
整数nを八進文字列に変換する	oct(n)[2:]
整数nを8進文字列に変換する	oct(n)[2:]
nを八進文字列にする	oct(n)[2:]
整数nを八進数文字列に変換する	oct(n)[2:]
整数nの十六進文字列	hex(n)[2:]
整数nの十六進数文字列	hex(n)[2:]
整数nを十六進文字列に変換する	hex(n)[2:]
整数nを十六進文字列にする	hex(n)[2:]
整数nを十六進数文字列に変換する	hex(n)[2:]
整数nのビット長	n.bit_length()
整数nのビット長を確認する	n.bit_length()
整数nのバイト長	(n.bit_length() + 7) // 8
整数nのバイト長を確認する	(n.bit_length() + 7) // 8
nのバイト長を調べる	(n.bit_length() + 7) // 8
nのバイト長	(n.bit_length() + 7) // 8
nのバイト長を見る	(n.bit_length() + 7) // 8
整数nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
nをバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
整数nをバイナリに変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
nをバイト列にする	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
整数nを符号付きでバイト列に変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
符号付きで整数nをバイナリに変換する	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
nを符号付きでバイナリにする	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
整数nをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
符号なしでnをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
nをバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big')
整数nを符号なしでバイト列にする	n.to_bytes(length=bytesize, byteorder='big')
整数nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
nを符号付きで長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
符号付きで整数nを長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
符号付きでnを長さn2のバイト列に変換する	n.to_bytes(length=bytesize, byteorder='big', signed=True)
整数nを符号付きで長さn2のバイナリにする	n.to_bytes(length=bytesize, byteorder='big', signed=True)
nにn2を加える	n + n2
nプラスn2	n + n2
nプラスn2を求める	n + n2
n足すn2	n + n2
nとn2の和	n + n2
nからn2を引く	n - n2
nマイナスn2	n - n2
nマイナスn2を計算する	n - n2
n引くn2	n - n2
n引くn2を計算する	n - n2
nとn2の差	n - n2
nにn2をかける	n * n2
nかけるn2	n * n2
n掛けるn2	n * n2
nとn2の積	n * n2
nをn2で割る	n / n2
nわるn2	n / n2
nわるn2を算出する	n / n2
n÷n2	n / n2
n割るn2	n / n2
nとn2の商	n / n2
n2分のn	n / n2
nをn2で整数除算する	n // n2
nのn2乗	n ** n2
nのn2乗を求める	n ** n2
nの二乗	n ** 2
nの2乗を計算する	n ** 2
nの三乗	n ** 3
nの三乗を計算する	n ** 3
nをn2で割った余り	n % n2
nをn2で割ったモジュロを求める	n % n2
nをn2で割ったmod	n % n2
nをn2で割った結果の切り上げ	(n + n2 - 1) // n2
n割るn2を切り上げる	(n + n2 - 1) // n2
n割るn2の切り上げ	(n + n2 - 1) // n2
nをn2で割った結果を切り上げる	(n + n2 - 1) // n2
nとn2の論理積	n & n2
nとn2の論理和	n | n2
nとn2の論理和を求める	n | n2
nとn2の論理和を算出する	n | n2
nとn2の排他的論理和	n ^ n2
nとn2の排他的論理和を計算する	n ^ n2
nをn2だけ左シフトする	n << n2
nをn2だけ右シフトする	n >> n2
nをn2だけ増加させる	n += n2
nにn2を足して代入する	n += n2
nとn2の値を足してnに代入する	n += n2
nとn2の値を足してnとする	n += n2
nをn2だけ減少させる	n -= n2
nをn2だけ小さくする	n -= n2
nからn2の値を引いてnに代入する	n -= n2
nからn2を引いてnに代入する	n -= n2
nからn2の値を引いてnとする	n -= n2
nをn2倍にする	n *= n2
nにn2をかけた値をnに代入する	n *= n2
nにn2をかけた値をnにする	n *= n2
nをn2乗に増やす	n **= n2
nをn2分の一にする	n /= n2
nをn2分の１にする	n /= n2
nを半分にする	n /= 2
nを切り捨てながらn2分の一にする	n //= n2
nを切り捨てながらn2分の１にする	n //= n2
nを切り捨てながらn2分の1にする	n //= n2
整数nをn2分の一にする	n //= n2
整数nをn2分の１にする	n //= n2
nを切り捨てながら半分にする	n //= 2
整数nを半分にする	n //= 2
nをn2で割った余りをnに代入する	n %= n2
nをn2で割った余りをnとする	n %= n2
nとn2が等しいか調べる	n == n2
nとn2が等しいか判定する	n == n2
nとn2が等しいかどうか確認する	n == n2
nがn2と等しいか調べる	n == n2
nがn2と等しい	n == n2
nがn2と等しいかどうか調べる	n == n2
nはn2と等しいか確認する	n == n2
nがn2か調べる	n == n2
nはn2か調べる	n == n2
nがn2	n == n2
nがn2か	n == n2
nがn2より大きいか調べる	n > n2
nがn2より大きいかテストする	n > n2
nがn2よりも大きいか調べる	n > n2
nがn2よりも大きいかどうか調べる	n > n2
nがn2よりも大きいか判定する	n > n2
nがn2より小さいか調べる	n < n2
nがn2よりも小さいか調べる	n < n2
nがn2よりも小さいかテストする	n < n2
nがn2よりも小さい	n < n2
nがn2以上か調べる	n >= n2
nがn2以上	n >= n2
nがn2以下か調べる	n <= n2
nがn2以下か	n <= n2
nがn2未満、またはn3以上か調べる	n < n2 or n >= n3
nがn2未満またはn3以上	n < n2 or n >= n3
nがn2未満、それかn3以上かどうか	n < n2 or n >= n3
nがn2未満、もしくはn3以上か調べる	n < n2 or n >= n3
nがn2未満、もしくはn3以上かどうか	n < n2 or n >= n3
nがn2未満それかn3以上か	n < n2 or n >= n3
nがn2以下、または、n3以上か調べる	n <= n2 or n >= n3
nがn2以下、それかn3以上	n <= n2 or n >= n3
nがn2以下、もしくは、n3以上か	n <= n2 or n >= n3
nがn2以下、または、n3以上か	n <= n2 or n >= n3
nがn2以下、またはn3以上	n <= n2 or n >= n3
n2がn以上、かつ、n3以下か調べる	n <= n2 and n2 <= n3
n2がn以上かつn3以下	n <= n2 and n2 <= n3
n2がn以上、かつ、n3以下か確認する	n <= n2 and n2 <= n3
n2がn以上かつ、n3以下か	n <= n2 and n2 <= n3
n2がnより大きく、かつ、n3未満か調べる	n < n2 and n2 < n3
n2がnより大きく、かつ、n3より小さい	n < n2 and n2 < n3
n2がnより大きく、かつ、n3未満	n < n2 and n2 < n3
n2がnより大きく、かつn3より小さいか確認する	n < n2 and n2 < n3
n2がnより大きく、かつn3未満かどうか調べる	n < n2 and n2 < n3
nが偶数か調べる	n % 2 == 0
nが偶数かテストする	n % 2 == 0
nが偶数	n % 2 == 0
nが2で割り切れるか調べる	n % 2 == 0
nが2で割り切れる	n % 2 == 0
nが奇数か調べる	n % 2 == 1
nが奇数かどうか	n % 2 == 1
nが奇数か確認する	n % 2 == 1
nが2で割り切れないか調べる	n % 2 == 1
nが2で割り切れないか	n % 2 == 1
nが3の倍数か調べる	n % 3 == 0
nが3の倍数かどうか確認する	n % 3 == 0
nが3の倍数かどうか調べる	n % 3 == 0
nが3の倍数	n % 3 == 0
nが3で割り切れるか調べる	n % 3 == 0
nが3で割り切れるかどうか	n % 3 == 0
nが3で割り切れるかどうか調べる	n % 3 == 0
nが3で割り切れるか判定する	n % 3 == 0
nが5の倍数か調べる	n % 5 == 0
nが5の倍数かどうか調べる	n % 5 == 0
nが5の倍数か	n % 5 == 0
nが5で割り切れるか調べる	n % 5 == 0
nが5で割り切れるかどうか調べる	n % 5 == 0
nが5で割り切れる	n % 5 == 0
nがn2の倍数か調べる	n % n2 == 0
nがn2の倍数	n % n2 == 0
nがn2で割り切れるか調べる	n % n2 == 0
nがn2の倍数でないか調べる	n % n2 != 0
nがn2の倍数でないかどうか確認する	n % n2 != 0
nがn2の倍数でないか確認する	n % n2 != 0
nがn2で割り切れないか調べる	n % n2 != 0
nがn2で割り切れないか	n % n2 != 0
nが正の数か調べる	n > 0
nが正の整数か確認する	n > 0
nが正の整数かどうか調べる	n > 0
nが正の整数か	n > 0
nが正の整数	n > 0
nが正の数	n > 0
nが負の数か調べる	n < 0
nが負の数か確認する	n < 0
nが負の数	n < 0
nが負の数かどうか調べる	n < 0
nが一桁の数か調べる	-9 <= n <= 9
nが一桁の数か	-9 <= n <= 9
nが一桁の数	-9 <= n <= 9
nが一桁の数かどうか調べる	-9 <= n <= 9
nが-9以上、9以下か調べる	-9 <= n <= 9
nが-9以上9以下か調べる	-9 <= n <= 9
nが-9以上、9以下か	-9 <= n <= 9
nが-9以上9以下	-9 <= n <= 9
nが一桁の数か調べる	0 <= n <= 9
nが一桁の数	0 <= n <= 9
nが一桁の整数かどうか調べる	0 <= n <= 9
nが一桁の整数か判定する	0 <= n <= 9
nが一桁の数かどうか調べる	0 <= n <= 9
整数nがリストのどれかか調べる	n in aList
整数nはリストのどれかかどうか調べる	n in aList
整数nがリストのいづれかか調べる	n in aList
整数nがリストのいづれかか	n in aList
整数nはリストのいづれか	n in aList
整数nがセットのどれかか調べる	n in aSet
nはセットのどれかか調べる	n in aSet
整数nが集合のどれかか調べる	n in aSet
nがセットのどれかか調べる	n in aSet
nは集合のひとつか調べる	n in aSet
整数nがセットのどれかか	n in aSet
整数nがタプルのどれかか調べる	n in aTuple
整数nがタプルのどれかか判定する	n in aTuple
整数nがタプルのいづれかか調べる	n in aTuple
整数nは組のどれかか調べる	n in aTuple
nがタプルのどれかか確認する	n in aTuple
nがタプルのどれかか	n in aTuple
整数nが配列のどれかか調べる	n in aArray
整数nは配列のどれかかどうか調べる	n in aArray
nが配列のいづれかかどうか調べる	n in aArray
整数nが配列のどれかか	n in aArray
nが配列のどれかか調べる	n in aArray
nが配列のどれか	n in aArray
nが配列のいづれかかどうか確認する	n in aArray
nが1、もしくは2か調べる	n == 1 or n == 2
nが1、もしくは2か	n == 1 or n == 2
nが1もしくは2か	n == 1 or n == 2
nが1もしくは2かどうか確認する	n == 1 or n == 2
nが1、もしくは2	n == 1 or n == 2
nが1もしくは2か調べる	n == 1 or n == 2
nが1、もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
nが1、もしくは2、もしくは3に等しいか	n == 1 or n == 2 or n == 3
nが1もしくは2、もしくは3に等しいか調べる	n == 1 or n == 2 or n == 3
nが1、もしくは2、もしくは3に等しいか確認する	n == 1 or n == 2 or n == 3
nが1、もしくは2、もしくは3に等しい	n == 1 or n == 2 or n == 3
nの桁数	len(str(n))
nの桁数を算出する	len(str(n))
nが何桁か	len(str(n))
nの各桁の総和	sum(map(int, str(n)))
nの各桁の和を求める	sum(map(int, str(n)))
xが一桁の数か調べる	-9 <= x <= 9
xが一桁の数かどうか調べる	-9 <= x <= 9
xが一桁の数か	-9 <= x <= 9
xが一桁の数	-9 <= x <= 9
xが-9以上、9以下か調べる	-9 <= x <= 9
xが-9以上、9以下	-9 <= x <= 9
xが-9以上9以下	-9 <= x <= 9
xが-9以上、9以下か判定する	-9 <= x <= 9
xが-9以上9以下か調べる	-9 <= x <= 9
xが一桁の正の数か調べる	0 <= x <= 9
xが一桁の正の整数	0 <= x <= 9
xが1、もしくは2か調べる	x == 1 or x == 2
xが1、もしくは2	x == 1 or x == 2
xが1もしくは2か	x == 1 or x == 2
xが1、もしくは2か	x == 1 or x == 2
xが1もしくは2か調べる	x == 1 or x == 2
xが1、もしくは2、もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
xが1、もしくは2もしくは3に等しいか調べる	x == 1 or x == 2 or x == 3
xが1、もしくは2もしくは3に等しいか	x == 1 or x == 2 or x == 3
xが1、もしくは2、もしくは3に等しい	x == 1 or x == 2 or x == 3
xが1もしくは2、もしくは3に等しいか確認する	x == 1 or x == 2 or x == 3
itertoolsモジュールをインポートする	import itertools
nの無限数列	itertools.repeat(n)
nの無限な数列	itertools.repeat(n)
nの無限イテラブル	itertools.repeat(n)
nの無限数列を得る	itertools.repeat(n)
nの無限の整数イテラブルを求める	itertools.repeat(n)
nが無限に続く数列	itertools.repeat(n)
nが無限に続くリストを得る	itertools.repeat(n)
nが無限に続くリスト	itertools.repeat(n)
文字列が無限に繰り返すイテラブル	itertools.repeat(element)
文字列が無限に繰り返す列を得る	itertools.repeat(element)
オブジェクトがいつまでも繰り返すイテラブルを得る	itertools.repeat(element)
文字列が無限に続くイテラブル	itertools.repeat(element)
オブジェクトが無限に繰り返すイテラブルを得る	itertools.repeat(element)
文字列の無限イテラブル	itertools.repeat(element)
オブジェクトの無限イテラブル	itertools.repeat(element)
文字列の無限列	itertools.repeat(element)
文字列の無限イテラブルを得る	itertools.repeat(element)
文字列がn回繰り返すイテラブル	itertools.repeat(element, n)
文字列がn回続くイテラブルを得る	itertools.repeat(element, n)
n回文字列が繰り返すイテラブルを得る	itertools.repeat(element, n)
n回オブジェクトが続くイテラブル	itertools.repeat(element, n)
オブジェクトをn回繰り返す列	itertools.repeat(element, n)
無限にカウントアップする	itertools.count()
いつまでもカウントアップする	itertools.count()
0から始まる無限数列	itertools.count()
無限な数列	itertools.count()
無限リスト	itertools.count()
nから無限にカウントアップする	itertools.count(start=n)
nから無限に数え上げるする	itertools.count(start=n)
nからstep間隔で無限にカウントアップする	itertools.count(start=n, step=step)
いつまでもnからstep間隔で数え上げるする	itertools.count(start=n, step=step)
nからstep間隔でいつまでもカウントアップする	itertools.count(start=n, step=step)
rangeの無限バージョン	itertools.count(start=n, step=step)
rangeの無限版	itertools.count(start=n, step=step)
nから無限にカウントダウンする	itertools.count(start=n, step=-1)
いつまでもnからカウントダウンする	itertools.count(start=n, step=-1)
無限にnからカウントダウンする	itertools.count(start=n, step=-1)
イテラブルを無限に繰り返す	itertools.cycle(iterable)
無限にイテラブルを繰り返す	itertools.cycle(iterable)
イテラブルを周期的に繰り返す	itertools.cycle(iterable)
リストを無限に繰り返す	itertools.cycle(iterable)
イテラブルを累加する	itertools.accumulate(iterable)
イテラブルを累加したイテラブル	itertools.accumulate(iterable)
リストを累加した列を得る	itertools.accumulate(iterable)
リストを累加したイテラブル	itertools.accumulate(iterable)
列を累加したイテラブル	itertools.accumulate(iterable)
イテラブルを累積する	itertools.accumulate(iterable, operator.mul)
タプルを累積する	itertools.accumulate(iterable, operator.mul)
イテラブルを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
リストを累積したイテラブル	itertools.accumulate(iterable, operator.mul)
リストを累積した列	itertools.accumulate(iterable, operator.mul)
列を累積したイテラブル	itertools.accumulate(iterable, operator.mul)
イテラブルとイテラブルを連結する	itertools.chain(iterable, iterable2)
列と列をつなぐ	itertools.chain(iterable, iterable2)
配列とシーケンスを連結する	itertools.chain(iterable, iterable2)
イテラブルとリストをチェインする	itertools.chain(iterable, iterable2)
イテラブルとシーケンスを連結する	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続ける	itertools.chain(iterable, iterable2)
列にタプルを続ける	itertools.chain(iterable, iterable2)
シーケンスにイテラブルを続ける	itertools.chain(iterable, iterable2)
イテラブルに列を続ける	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続けたイテラブル	itertools.chain(iterable, iterable2)
列に列を続けたイテラブル	itertools.chain(iterable, iterable2)
イテラブルにイテラブルを続けた列を求める	itertools.chain(iterable, iterable2)
リストに列を続けた列	itertools.chain(iterable, iterable2)
イテラブルに列を続けた列	itertools.chain(iterable, iterable2)
リストに列を続けたイテラブル	itertools.chain(iterable, iterable2)
selectorsでマスクされたイテラブルの要素を取り出す	itertools.compress(iterable, selectors=iterable2)
selectorsでマスクされた列の要素を取り出す	itertools.compress(iterable, selectors=iterable2)
イテラブルの各要素に対して、predicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
イテラブルの各要素に対してpredicateFuncの適用が真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
イテラブルの各要素に対して、predicateFuncが真であればその要素を出力する	itertools.takewhile(predicateFunc, iterable)
列の各要素に対して、predicateFuncの適用がTrueであれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
列の各要素に対してpredicateFuncが真であれば、その要素を出力する	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となる列の部分	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となるシーケンスの部分を取り出す	itertools.takewhile(predicateFunc, iterable)
predicateFuncがTrueになる列の部分	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真になる列の要素	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真となる列の部分を取り出す	itertools.takewhile(predicateFunc, iterable)
predicateFuncが真とならないイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncがTrueとならない列の要素を取り出す	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真とならない列の要素を取り出す	itertools.dropwhile(predicateFunc, iterable)
predicateFuncを適用したとき真とならないイテラブルの部分	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真とならないイテラブルの要素を求める	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真とならないタプルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの要素を除去する	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真になる列の要素	itertools.dropwhile(predicateFunc, iterable)
predicateFuncがTrueとなるイテラブルの要素を取り除く	itertools.dropwhile(predicateFunc, iterable)
predicateFuncが真となるイテラブルの部分	itertools.dropwhile(predicateFunc, iterable)
イテラブルとイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルをペアのリストに変換する	itertools.zip_longest(iterable, iterable2)
列とイテラブルをペアのリストにする	itertools.zip_longest(iterable, iterable2)
シーケンスとイテラブルをペアのリストに変換する	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルをペアリングする	itertools.zip_longest(iterable, iterable2)
シーケンスとシーケンスをペア化する	itertools.zip_longest(iterable, iterable2)
イテラブルとリストをペア化する	itertools.zip_longest(iterable, iterable2)
リストとイテラブルをペア化する	itertools.zip_longest(iterable, iterable2)
シーケンスと列をペアリングする	itertools.zip_longest(iterable, iterable2)
シーケンスとタプルをペアリングする	itertools.zip_longest(iterable, iterable2)
不揃いな長さののzip	itertools.zip_longest(iterable, iterable2)
長さが一致しない版のzip	itertools.zip_longest(iterable, iterable2)
イテラブルとイテラブルの直積	itertools.product(iterable, iterable2)
列と列の直積	itertools.product(iterable, iterable2)
列とイテラブルの直積	itertools.product(iterable, iterable2)
列とシーケンスのデカルト積	itertools.product(iterable, iterable2)
シーケンスとシーケンスの直積	itertools.product(iterable, iterable2)
列とイテラブルのデカルト積	itertools.product(iterable, iterable2)
イテラブルと列の直積	itertools.product(iterable, iterable2)
イテラブルを2回あわせた直積	itertools.product(iterable, repeat=2)
列を2回あわせた直積	itertools.product(iterable, repeat=2)
列を2回あわせたデカルト積	itertools.product(iterable, repeat=2)
イテラブルを2回あわせたデカルト積を得る	itertools.product(iterable, repeat=2)
イテラブルの全順列	itertools.permutations(iterable)
イテラブルの全順列を得る	itertools.permutations(iterable)
シーケンスの全順列	itertools.permutations(iterable)
イテラブルの長さnの順列	itertools.permutations(iterable, n)
列の長さnの順列	itertools.permutations(iterable, n)
列自身の長さnの順列	itertools.permutations(iterable, n)
イテラブル自身の長さnの順列	itertools.permutations(iterable, n)
イテラブルの長さnの順列を求める	itertools.permutations(iterable, n)
イテラブルのコンビネーション	itertools.combinations(iterable, n)
イテラブルの組み合わせを求める	itertools.combinations(iterable, n)
列のコンビネーションを得る	itertools.combinations(iterable, n)
列の組み合わせを求める	itertools.combinations(iterable, n)
シーケンスのコンビネーションを得る	itertools.combinations(iterable, n)
イテラブルのコンビネーションを求める	itertools.combinations(iterable, n)
イテラブルの組み合わせ	itertools.combinations(iterable, n)
イテラブルの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
配列の重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
タプルの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
シーケンスの重複コンビネーション	itertools.combinations_with_replacement(iterable, n)
イテラブルの重複組み合わせ	itertools.combinations_with_replacement(iterable, n)
シーケンスの重複組み合せを得る	itertools.combinations_with_replacement(iterable, n)
JSONを使う	import json
JSONを用いる	import json
JSON形式の文字列を辞書に変換する	json.loads(jsonString)
JSONフォーマットの文字列を辞書に変換する	json.loads(jsonString)
JSON形式の文字列をデータに変換する	json.loads(jsonString)
JSON形式の文字列をデータにする	json.loads(jsonString)
JSON形式の文字列を読み込む	json.loads(jsonString)
JSONフォーマットの文字列をロードする	json.loads(jsonString)
JSON形式の文字列をロードする	json.loads(jsonString)
JSON文字列を読み込む	json.loads(jsonString)
JSON文字列をロードする	json.loads(jsonString)
JSON形式のバイト列を辞書に変換する	json.loads(b.decode('unicode-escape'))
JSONフォーマットのバイト列を辞書にする	json.loads(b.decode('unicode-escape'))
JSON形式の文字列をデータに変換する	json.loads(b.decode('unicode-escape'))
JSON文字列をデータに変換する	json.loads(b.decode('unicode-escape'))
JSON文字列をデータにする	json.loads(b.decode('unicode-escape'))
JSON形式の文字列をデータにする	json.loads(b.decode('unicode-escape'))
JSONファイルのファイル入力を辞書に変換する	json.load(fin)
JSONフォーマットのファイルを辞書に変換する	json.load(fin)
JSON形式のファイル入力を辞書にする	json.load(fin)
JSONファイルのファイル入力を辞書にする	json.load(fin)
JSONファイルのfをデータに変換する	json.load(fin)
JSON形式のfをデータに変換する	json.load(fin)
JSONファイルのfをデータにする	json.load(fin)
JSONファイルのファイル入力を読み込んで、dataとする	data = json.load(fin)
JSON形式のファイル入力を読み込んでdataとする	data = json.load(fin)
JSON形式の入力を読み込んでdataとする	data = json.load(fin)
JSONフォーマットのファイル入力を読み込んでdataとする	data = json.load(fin)
辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False)
辞書をJSONフォーマットの文字列にする	json.dumps(aDict, ensure_ascii=False)
タプルをJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False)
辞書をJSONフォーマットの文字列に変換する	json.dumps(aDict, ensure_ascii=False)
辞書をJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False)
インデント付きで辞書を文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
改行付きで辞書を文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
タプルをインデント付きで文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント付きで文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント付きでタプルを文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント付きで辞書を文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
マッピングをJSONフォーマットのインデント幅nの文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
マッピングをインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
タプルをインデント幅nのJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をインデント幅nのJSONフォーマットの文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
タプルをインデント幅nのJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで、辞書をJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nでタプルをJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nでマッピングをJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
インデント幅nで、マッピングをJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, indent=n)
辞書をソートしてJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
タプルを並べ直してJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書を並べ直してJSON形式の文字列に変換する	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書をソートしてJSON形式の文字列にする	json.dumps(aDict, ensure_ascii=False, sort_keys=True)
辞書をJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
マッピングをJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
辞書をJSONフォーマットでファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
辞書をJSON形式で出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
タプルをJSON形式でファイル出力に保存する	json.dump(aDict, fout, ensure_ascii=False)
空列	[]
空列を得る	[]
空のリスト	[]
空のタプル	()
空のタプルを得る	()
空の組を作る	()
要素ひとつのタプル	(element,)
文字列ひとつの組	(element,)
要素ひとつの組	(element,)
bとn2から成るペア	(n, n2)
要素ひとつのりスト	[element]
要素一つのりスト	[element]
要素ひとつのりストを作る	[element]
オブジェクトひとつのりスト	[element]
n個の要素があるリスト	[element] * n
長さnのリスト	[0] * n
n2行n列の二次元リスト	[[0] * n for _ in range(n2)]
n2行n列の2次元リスト	[[0] * n for _ in range(n2)]
n×n2の二次元リスト	[[0] * n for _ in range(n2)]
n×n2の二次元リストを作る	[[0] * n for _ in range(n2)]
n×n2の２次元リスト	[[0] * n for _ in range(n2)]
nxn2の二次元リスト	[[0] * n for _ in range(n2)]
nxn2の二次元リストを作る	[[0] * n for _ in range(n2)]
リストをタプルに変換する	tuple(aList)
リストをイミュータブルにする	tuple(aList)
タプルをリストに変換する	list(aTuple)
タプルをリストにする	list(aTuple)
タプルをミュータブルにする	list(aTuple)
リストの長さ	len(aList)
タプルの長さ	len(aTuple)
タプルの長さを見る	len(aTuple)
組の長さを知る	len(aTuple)
リストが空か調べる	len(aList) == 0
リストが空か	len(aList) == 0
リストが空でないか調べる	len(aList) != 0
リストが空でない	len(aList) != 0
リストが空でないか確認する	len(aList) != 0
リストとリストを連結する	aList + aList2
リストとリストを接続する	aList + aList2
タプルとタプルを連結する	aTuple + aTuple2
組と組を接続する	aTuple + aTuple2
タプルと組を結合する	aTuple + aTuple2
タプルと組を接続する	aTuple + aTuple2
リストをn倍する	aList * n
リストをn回、連結する	aList * n
リストをn回、結合する	aList * n
リストをn回、接続する	aList * n
タプルをn倍する	aTuple * n
タプルをn回、連結する	aTuple * n
タプルをn回、接続する	aTuple * n
組をn回、加える	aTuple * n
リストの先頭	aList[0]
リストの最初	aList[0]
リストの先頭の値	aList[0]
リストの最初を使う	aList[0]
タプルの先頭	aTuple[0]
タプルの最初	aTuple[0]
タプルの先頭の値を使う	aTuple[0]
タプルの先頭を使う	aTuple[0]
タプルの先頭の要素	aTuple[0]
タプルの最初の値	aTuple[0]
組の先頭の要素を求める	aTuple[0]
リストの末尾	aList[-1]
リストの末尾の要素を使う	aList[-1]
リストの最後を見る	aList[-1]
リストの末尾を見る	aList[-1]
リストの末尾を使う	aList[-1]
リストの末尾の要素	aList[-1]
タプルの末尾	aTuple[-1]
タプルの末尾を使う	aTuple[-1]
タプルの最後を使う	aTuple[-1]
リストのn番目の	aList[n]
リストのn番目のの要素	aList[n]
タプルのn番目の	aTuple[n]
タプルのn番目のを使う	aTuple[n]
タプルのn番目のの要素	aTuple[n]
リストの先頭を取り除く	aList[1:]
リストの先頭を除く	aList[1:]
タプルの先頭を取り除く	aTuple[1:]
タプルの最初を取り除く	aTuple[1:]
組の先頭を捨てる	aTuple[1:]
タプルの最初を除く	aTuple[1:]
リストの先頭のn要素を取り除く	aList[n:]
リストの最初のn要素を除く	aList[n:]
リストの先頭のn要素を捨てる	aList[n:]
リストの最初のn要素を捨てる	aList[n:]
リストのn番目以降の部分を取り出す	aList[n:]
リストのn番目以降の部分を得る	aList[n:]
タプルの先頭のn要素を取り除く	aTuple[n:]
組の最初のn要素を除く	aTuple[n:]
タプルの先頭のn要素を捨てる	aTuple[n:]
タプルのn番目以降の部分を取り出す	aTuple[n:]
組のn番目以降の部分を得る	aTuple[n:]
リストの末尾を取り除く	aList[:-1]
リストの最後を取り除く	aList[:-1]
リストの末尾を除く	aList[:-1]
タプルの末尾を取り除く	aTuple[:-1]
タプルの末尾を除く	aTuple[:-1]
組の最後を除く	aTuple[:-1]
リストの末尾のn要素を取り除く	aList[:-n]
リストの最後のn要素を取り除く	aList[:-n]
リストの最後のn要素を除く	aList[:-n]
リストの末尾からn番目以前の部分を取り出す	aList[:-n]
リストの末尾からn番目以前の要素を取り出す	aList[:-n]
リストの末尾からn番目以前の部分を抽出する	aList[:-n]
リストの末尾からn番目以前の部分を得る	aList[:-n]
リストの最後からn番目以前の部分を得る	aList[:-n]
タプルの末尾のn要素を取り除く	aTuple[:-n]
組の末尾のn要素を除く	aTuple[:-n]
タプルの末尾のn要素を除く	aTuple[:-n]
組の末尾のn要素を捨てる	aTuple[:-n]
タプルの最後のn要素を除く	aTuple[:-n]
タプルの末尾からn番目以前の部分を取り出す	aTuple[:-n]
組の最後からn番目以前の要素を取り出す	aTuple[:-n]
タプルの末尾からn番目以前の要素を得る	aTuple[:-n]
組の末尾からn番目以前の部分を取り出す	aTuple[:-n]
リストの要素を逆順にする	aList[::-1]
リストを逆順にする	aList[::-1]
タプルの要素を逆順にする	aTuple[::-1]
タプルの値を逆順にする	aTuple[::-1]
タプルを逆順にする	aTuple[::-1]
リストをひとつ置きに取り出す	aList[::2]
リストをひとつ飛ばしで取り出す	aList[::2]
ひとつ置きにリストを得る	aList[::2]
ひとつ飛ばしでリストを取り出す	aList[::2]
タプルをひとつ置きに取り出す	aTuple[::2]
ひとつ置きにタプルを取り出す	aTuple[::2]
タプルをひとつ飛ばしで抽出する	aTuple[::2]
タプルをひとつ置きに抽出する	aTuple[::2]
リストのn番目からn2番目までの部分	aList[n:n2]
リストのn番目からn2番目までを取り出す	aList[n:n2]
リストのn番目からn2番目までの部分を取り出す	aList[n:n2]
リストのn番目からn2番目	aList[n:n2]
タプルのn番目からn2番目までの部分	aTuple[n:n2]
組のn番目からn2番目まで	aTuple[n:n2]
タプルのn番目からn2番目までの部分を取り出す	aTuple[n:n2]
0からnまでのスライス	slice(n)
nからn2までのスライス	slice(n, n2)
nからn2までのstepごとによるスライス	slice(n, n2, step)
リストの合計値	sum(aList)
リストの総和	sum(aList)
リストの合計を求める	sum(aList)
リストの合計値を求める	sum(aList)
タプルの合計値	sum(aTuple)
タプルの合計値を求める	sum(aTuple)
リストの中の最小値	min(aList)
タプルの中の最小値	min(aTuple)
組の中の最小値を求める	min(aTuple)
タプルの中の最小値を求める	min(aTuple)
リストの中の最大値	max(aList)
リストの中の最大値を求める	max(aList)
タプルの中の最大値	max(aTuple)
タプルの中の一番大きい値	max(aTuple)
リストの平均値	sum(aList)/len(aList)
リストの平均値を計算する	sum(aList)/len(aList)
リストの平均を求める	sum(aList)/len(aList)
リストの平均値を求める	sum(aList)/len(aList)
タプルの平均値	sum(aTuple)/len(aTuple)
組の平均値を求める	sum(aTuple)/len(aTuple)
組の平均値	sum(aTuple)/len(aTuple)
組の平均	sum(aTuple)/len(aTuple)
リストの長さだけ繰り返す	range(len(aList))
リストの要素数だけ繰り返す	range(len(aList))
n個の数値イテラブル	range(n)
n個の数値イテラブルを使う	range(n)
n回の数値イテラブルを見る	range(n)
0からnの範囲	range(n)
0からnの範囲を使う	range(n)
0からnの範囲で	range(n)
nからn2の範囲	range(n, n2)
n個の整数列	list(range(n))
0から始まるn個の整数列	list(range(n))
0から始まるn個の整数列を作る	list(range(n))
n個の整数列を作る	list(range(n))
0からnまでの整数列	list(range(n+1))
0からnまでの整数列を作る	list(range(n+1))
1からnまでの整数列	list(range(1, n+1))
nからn2までの整数列	list(range(n, n2+1))
nからn2までの整数リスト	list(range(n, n2+1))
nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1, 2))
nからn2までのひとつ飛ばしの整数リストを作る	list(range(n, n2+1, 2))
nからn2までのひとつ飛ばしの整数リスト	list(range(n, n2+1, 2))
nからn2までのひとつ飛ばしの整数列を得る	list(range(n, n2+1, 2))
nまでの偶整数列	list(range(2, n, 2))
nまでの偶整数リストを作る	list(range(2, n, 2))
nまでの偶整数列を作る	list(range(2, n, 2))
nまでの奇整数列	list(range(1, n, 2))
nまでの奇整数リスト	list(range(1, n, 2))
リストに文字列を追加する	aList.append(element)
リストの末尾に要素を追加する	aList.append(element)
リストに要素を加える	aList.append(element)
リストにオブジェクトを加える	aList.append(element)
リストにリストを追加する	aList.extend(aList2)
リストの最後にリストを追加する	aList.extend(aList2)
リストにリストを加える	aList.extend(aList2)
リストにリストを追加して拡張する	aList.extend(aList2)
リストにリストを加えて拡張する	aList.extend(aList2)
リストにリストを加え、拡張する	aList.extend(aList2)
リストにリストを追加して広げる	aList.extend(aList2)
リストのn番目に文字列を挿入する	aList.insert(n, element)
リストのn番目に文字列を差し込む	aList.insert(n, element)
リストの末尾から要素をポップする	aList.pop()
リストの末尾から値を取り出す	aList.pop()
リストの最後から値を取り出す	aList.pop()
リストの末尾から要素を抽出する	aList.pop()
aListn番目から要素をポップする	aList.pop(n)
aListn番目から値をポップする	aList.pop(n)
aListn番目から要素を取り出す	aList.pop(n)
リストの全ての要素をクリアにする	aList.clear()
リストの全値を消去する	aList.clear()
リストの全ての値をクリアにする	aList.clear()
リストの全ての要素を消す	aList.clear()
リストから文字列を取り除く	aList.remove(element)
リストから文字列と等しい最初の要素を取り除く	aList.remove(element)
リストからオブジェクトを取り除く	aList.remove(element)
リストのn番目の要素を削除する	del aList[n]
リストのn番目の値を削除する	del aList[n]
リストのn番目の要素を消す	del aList[n]
文字列がリストの要素か調べる	element in aList
オブジェクトはリストの要素かどうか調べる	element in aList
オブジェクトはリストの要素	element in aList
文字列はリストの要素か調べる	element in aList
オブジェクトがリストの要素か	element in aList
文字列がリストに含まれるか調べる	element in aList
文字列がリストに含まれる	element in aList
文字列はリストに含まれるか調べる	element in aList
文字列がリストに含まれるかどうか	element in aList
オブジェクトがリストに含まれる	element in aList
文字列がリストに含まれるかどうか調べる	element in aList
文字列がタプルの要素か調べる	element in aTuple
文字列がタプルの要素	element in aTuple
文字列が組の要素か確認する	element in aTuple
文字列が組の要素	element in aTuple
オブジェクトがタプルの要素か調べる	element in aTuple
オブジェクトが組の要素か	element in aTuple
文字列がタプルの要素か	element in aTuple
文字列がタプルに含まれるか調べる	element in aTuple
文字列が組に含まれるか調べる	element in aTuple
文字列が組に含まれるかどうか調べる	element in aTuple
オブジェクトが組に含まれる	element in aTuple
オブジェクトがタプルに含まれるか調べる	element in aTuple
文字列がリストの要素でないか調べる	element not in aList
文字列がリストの要素でないかどうか調べる	element not in aList
文字列はリストの要素でないかどうか	element not in aList
オブジェクトがリストの要素でないか	element not in aList
オブジェクトはリストの要素でないか調べる	element not in aList
文字列がリストの要素でない	element not in aList
文字列がリストに含まれないか調べる	element not in aList
文字列はリストに含まれないか調べる	element not in aList
文字列はリストに含まれないか	element not in aList
文字列がリストに含まれないかどうか	element not in aList
文字列がリストに含まれないか確認する	element not in aList
オブジェクトはリストに含まれないかどうか調べる	element not in aList
文字列がタプルの要素でないか調べる	element not in aTuple
オブジェクトが組の要素でないかどうか調べる	element not in aTuple
オブジェクトがタプルの要素でないか調べる	element not in aTuple
文字列がタプルの要素でない	element not in aTuple
オブジェクトがタプルの要素でない	element not in aTuple
文字列が組の要素でない	element not in aTuple
文字列がタプルに含まれないか調べる	element not in aTuple
文字列は組に含まれないかどうか調べる	element not in aTuple
文字列がタプルに含まれない	element not in aTuple
文字列がタプルに含まれないかどうか調べる	element not in aTuple
文字列が組に含まれないか調べる	element not in aTuple
文字列がタプルに含まれないか	element not in aTuple
リストの文字列が最初に見つかるインデックス	aList.index(element)
リスト中の文字列が最初に見つかる位置	aList.index(element)
リストの文字列が最初に見つかる位置	aList.index(element)
リストの最初の文字列を探す	aList.index(element)
タプルの文字列が最初に見つかるインデックス	aTuple.index(element)
組のオブジェクトが最初に見つかるインデックスを探す	aTuple.index(element)
組のオブジェクトが最初に見つかる場所を探す	aTuple.index(element)
タプルのオブジェクトが最初に見つかるインデックス	aTuple.index(element)
タプル中の文字列が最初に見つかるインデックス	aTuple.index(element)
タプルの文字列が最初に見つかるインデックスを使う	aTuple.index(element)
タプルの最初の文字列を探す	aTuple.index(element)
タプル中の最初の文字列を探す	aTuple.index(element)
組の最初のオブジェクトを探す	aTuple.index(element)
リストの要素をソートする	sorted(aList)
リストの要素を並べる	sorted(aList)
リストの値をソートする	sorted(aList)
タプルの要素をソートする	sorted(aTuple)
タプルの要素を並べる	sorted(aTuple)
タプルの要素を並べ変える	sorted(aTuple)
組の要素をソートする	sorted(aTuple)
組の値を並べ変える	sorted(aTuple)
タプルの値を並べ変える	sorted(aTuple)
リストの要素を昇順にソートする	sorted(aList, reverse=False)
リストの要素を昇順に並べる	sorted(aList, reverse=False)
昇順にリストの要素をソートする	sorted(aList, reverse=False)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=False)
昇順に組をソートする	sorted(aTuple, reverse=False)
昇順にタプルの要素を並べ変える	sorted(aTuple, reverse=False)
昇順にタプルをソートする	sorted(aTuple, reverse=False)
タプルを昇順にソートする	sorted(aTuple, reverse=False)
タプルの要素を小さい方から並べ直す	sorted(aTuple, reverse=False)
タプルの値を小さい方から並べる	sorted(aTuple, reverse=False)
リストの要素を昇順にソートする	sorted(aList, reverse=True)
リストを小さい方から並べる	sorted(aList, reverse=True)
昇順にリストの要素をソートする	sorted(aList, reverse=True)
昇順にリストの値をソートする	sorted(aList, reverse=True)
リストを昇順に並べ直す	sorted(aList, reverse=True)
リストを昇順に並べる	sorted(aList, reverse=True)
タプルの要素を昇順にソートする	sorted(aTuple, reverse=True)
組を小さい順にソートする	sorted(aTuple, reverse=True)
組の要素を昇順に並べ直す	sorted(aTuple, reverse=True)
タプルの値を小さい順にソートする	sorted(aTuple, reverse=True)
リストの文字列の位置をエラーなく使う	aList.index(element) if element in aList else -1
リストの文字列の位置をエラーなく見る	aList.index(element) if element in aList else -1
エラーなくリストの文字列の位置を見る	aList.index(element) if element in aList else -1
エラーなくリストの文字列の位置を使う	aList.index(element) if element in aList else -1
リストの各要素を関数に適用した結果でソートする	sorted(aList, key=func)
リストの各要素を関数に適用した結果で並べ直す	sorted(aList, key=func)
リストの各値を関数に適用した結果で並べる	sorted(aList, key=func)
リストの各要素を関数に適用した結果で並べる	sorted(aList, key=func)
リストの要素を関数に適用した結果で並べ変える	sorted(aList, key=func)
タプルの各要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
組の要素を関数に適用した結果で並べ直す	sorted(aTuple, key=func)
組の各要素を関数に適用した結果でソートする	sorted(aTuple, key=func)
タプルの各値を関数に適用した結果でソートする	sorted(aTuple, key=func)
組の各値を関数に適用した結果で並べ直す	sorted(aTuple, key=func)
リストを複製する	aList.copy()
リストを反転する	reversed(aList)
リストを逆さにする	reversed(aList)
タプルを反転する	reversed(aTuple)
組を反転する	reversed(aTuple)
タプルを逆順にする	reversed(aTuple)
リスト内の要素が全て真か調べる	all(aList)
リスト中の要素が全て真か調べる	all(aList)
リスト内の要素が全て真	all(aList)
リスト中の要素は全て真か調べる	all(aList)
リスト内の要素が全て真かどうか調べる	all(aList)
タプル内の要素が全て真か調べる	all(aTuple)
タプル内の要素が全て真かどうか調べる	all(aTuple)
タプル中の要素が全て真か調べる	all(aTuple)
タプル内の要素が全て真	all(aTuple)
タプル中の要素が全て真か確認する	all(aTuple)
タプル内の要素が全て真か確認する	all(aTuple)
タプル中の要素は全て真か確認する	all(aTuple)
リスト内の要素が少なくともひとつ真か調べる	any(aList)
リスト中の要素が少なくともひとつ真か調べる	any(aList)
リスト内の要素は少なくともひとつ真か調べる	any(aList)
リスト中の要素が少なくとも一つ真か調べる	any(aList)
リスト中の要素が少なくともひとつ真	any(aList)
タプル内の要素が少なくともひとつ真か調べる	any(aTuple)
タプル内の要素は少なくともひとつ真かどうか調べる	any(aTuple)
タプル中の要素が少なくともひとつ真かどうか調べる	any(aTuple)
タプル内の要素が少なくともひとつ真かどうか調べる	any(aTuple)
タプル内の要素は少なくともひとつ真か調べる	any(aTuple)
タプルが少なくともひとつ真	any(aTuple)
組中の要素が少なくとも一つ真	any(aTuple)
リストを引数として展開して表示する	print(*aList)
リストを順に出力する	print(*aList)
リストを順に表示する	print(*aList)
タプルを引数として展開して表示する	print(*aTuple)
組を順に表示する	print(*aTuple)
タプルを順に出力する	print(*aTuple)
リストを引数として展開して表示する	print(*aList, sep=',')
リストを引数として展開してプリントする	print(*aList, sep=',')
リストをカンマ区切りで表示する	print(*aList, sep=',')
タプルを引数として展開して表示する	print(*aTuple, sep=',')
タプルをカンマ区切りで表示する	print(*aTuple, sep=',')
二次元リストをフラット化する	sum(aList)
2次元リストをフラット化する	sum(aList)
２次元リストをフラット化する	sum(aList)
二次元タプルをフラット化する	sum(aTuple)
2次元タプルをフラット化する	sum(aTuple)
2次元組をフラット化する	sum(aTuple)
二次元タプルをflattenする	sum(aTuple)
リストをナンバリングする	enumerate(aList)
リストを順序付けする	enumerate(aList)
タプルをナンバリングする	enumerate(aTuple)
タプルを番号付けする	enumerate(aTuple)
リストをnからナンバリングする	enumerate(aList, start=n)
タプルをnからナンバリングする	enumerate(aTuple, start=n)
組をnから順序付けする	enumerate(aTuple, start=n)
タプルをnから番号付けする	enumerate(aTuple, start=n)
組をnから順番付けする	enumerate(aTuple, start=n)
イテラブルのそれぞれを関数でフィルタする	filter(func, iterable)
イテラブルの各要素を関数でフィルタする	filter(func, iterable)
イテラブルを関数でフィルタする	filter(func, iterable)
イテラブルのそれぞれを関数でフィルタする	map(func, iterable)
リストを関数でフィルタする	map(func, iterable)
イテラブルを関数でフィルタする	map(func, iterable)
イテラブルの各要素を関数でフィルタする	map(func, iterable)
mathをインポートする	import math
mathを使う	import math
mathモジュールを使う	import math
mathモジュールをインポートする	import math
実数の平方根	math.sqrt(x)
小数点数の平方根	math.sqrt(x)
浮動小数点数の平方根	math.sqrt(x)
実数の天井	math.ceil(x)
実数の天井数	math.ceil(x)
小数点数の天井	math.ceil(x)
天井を求める	math.ceil(x)
実数以上の最小の整数	math.ceil(x)
実数を切り上げて整数に変換する	math.ceil(x)
切り上げて整数にする	math.ceil(x)
実数を切り上げる	math.ceil(x)
実数の床	math.floor(x)
小数点数の床を求める	math.floor(x)
床	math.floor(x)
床数	math.floor(x)
実数以下の最大の整数	math.floor(x)
実数を切り下げて整数に変換する	math.floor(x)
切り下げて整数に変換する	math.floor(x)
実数を切り下げる	math.floor(x)
浮動小数点数を切り下げる	math.floor(x)
自然数の最大公約数	math.gcd(n, n2)
二つの整数の最大公約数	math.gcd(n, n2)
整数の最大公約数	math.gcd(n, n2)
自然数の最大公約数を計算する	math.gcd(n, n2)
2つの整数の最大公約数	math.gcd(n, n2)
自然数最小公倍数	math.lcm(n, n2)
自然数最小公倍数を計算する	math.lcm(n, n2)
二つの整数最小公倍数	math.lcm(n, n2)
整数LCM	math.lcm(n, n2)
三自然数の最大公約数	math.gcd(n, n2, n3)
三自然数のGCD	math.gcd(n, n2, n3)
三整数の最大公約数を求める	math.gcd(n, n2, n3)
３自然数の最大公約数	math.gcd(n, n2, n3)
三自然数のGCDを計算する	math.gcd(n, n2, n3)
三自然数の最小公倍数	math.lcm(n, n2, n3)
三自然数の最小公倍数を計算する	math.lcm(n, n2, n3)
三自然数のLCMを求める	math.lcm(n, n2, n3)
nとkのコンビネーション	math.comb(n, k)
nとkのコンビネーションを算出する	math.comb(n, k)
nとkのコンビネーションを求める	math.comb(n, k)
nとkの組合せ	math.comb(n, k)
n個の集まりからk個重複なく選ぶ方法	math.comb(n, k)
n個の集まりからk個選ぶ方法	math.comb(n, k)
異なるn個のものからk個選ぶ場合の数	math.comb(n, k)
数値の符号を同じにする	math.copysign(x, x2)
実数の符号を同じにする	math.copysign(x, x2)
数値の符号をコピーにする	math.copysign(x, x2)
浮動小数点数の符号をコピーにする	math.copysign(x, x2)
実数の絶対値	math.fabs(x)
実数の絶対値を算出する	math.fabs(x)
実数の絶対値を求める	math.fabs(x)
自然数の階乗	math.factorial(n)
実数の仮数	math.frexp(x)[0]
小数点数の仮数部	math.frexp(x)[0]
実数の仮数を求める	math.frexp(x)[0]
浮動小数点数の仮数	math.frexp(x)[0]
実数の仮数部	math.frexp(x)[0]
浮動小数点数の仮数部	math.frexp(x)[0]
実数の仮数部を計算する	math.frexp(x)[0]
実数の指数	math.frexp(x)[1]
浮動小数点数の指数	math.frexp(x)[1]
小数点数の指数	math.frexp(x)[1]
二つの浮動小数点数が十分に近いか調べる	math.isclose(x, x2)
二つの浮動小数点数は十分に近いかどうか調べる	math.isclose(x, x2)
２つの浮動小数点数が十分に近いか確認する	math.isclose(x, x2)
２つの浮動小数点数は十分に近いか調べる	math.isclose(x, x2)
二つの浮動小数点数が十分に近いか	math.isclose(x, x2)
実数が有限か調べる	math.isfinite(x)
実数は有限かどうか確認する	math.isfinite(x)
実数が有限	math.isfinite(x)
実数は有限かどうか	math.isfinite(x)
実数が無限大か調べる	math.isinf(x)
実数が無限大かどうか	math.isinf(x)
実数が無限大か	math.isinf(x)
小数点数が無限大かどうか調べる	math.isinf(x)
実数が無限大	math.isinf(x)
実数は無限大か調べる	math.isinf(x)
実数がNaNか調べる	math.isnan(x)
実数が非数	math.isnan(x)
実数が非数か調べる	math.isnan(x)
小数点数が非数かどうか判定する	math.isnan(x)
実数が非数かどうか	math.isnan(x)
実数がNaNか	math.isnan(x)
実数の小数部	math.modf(x)[0]
実数の小数部を求める	math.modf(x)[0]
実数の整数部	math.modf(x)[1]
小数点数の整数部	math.modf(x)[1]
小数点数の整数部を算出する	math.modf(x)[1]
小数点数の整数部を計算する	math.modf(x)[1]
自然数の順列の総数	math.perm(n)
自然数の並べ方の総数	math.perm(n)
自然数個からk個取り出したときの順列の総数	math.perm(n, k)
自然数個からk個取り出した時の順列の総数	math.perm(n, k)
自然数個からk個取り出した時の並べ方の総数	math.perm(n, k)
自然数個からk個取り出したときの並べ方の総数	math.perm(n, k)
整数個からk個取り出した時の順列の総数	math.perm(n, k)
自然数個のものからk個取り出したときの並べ方の総数	math.perm(n, k)
自然数個のものからk個取り出した時の並べ方	math.perm(n, k)
自然数個のものからk個取り出したときの並べ方の総数を計算する	math.perm(n, k)
自然数個のものからk個取り出したときの並べ方	math.perm(n, k)
整数個のものからk個取り出した時の並べ方の総数	math.perm(n, k)
自然数個のものからk個取り出したときの並べ方を求める	math.perm(n, k)
実数を実数で割った剰余	math.remainder(x, x2)
実数を小数点数で割った剰余を算出する	math.remainder(x, x2)
浮動小数点数を実数で割った剰余	math.remainder(x, x2)
浮動小数点数を浮動小数点数で割った剰余	math.remainder(x, x2)
eの実数乗	math.exp(x)
eの浮動小数点数乗を求める	math.exp(x)
eの乗数	math.exp(x)
実数の自然対数	math.log(x)
自然対数	math.log(x)
浮動小数点数の自然対数	math.log(x)
kを底とする実数の対数	math.log(x, k)
kを底とする小数点数の対数を計算する	math.log(x, k)
kを底とする小数点数の対数を求める	math.log(x, k)
kを底とする小数点数の対数	math.log(x, k)
実数のk進対数	math.log(x, k)
小数点数のk進対数	math.log(x, k)
k進対数	math.log(x, k)
実数の二進対数	math.log2(x)
実数のバイナリ対数	math.log2(x)
実数の二進対数を求める	math.log2(x)
2を底とする実数の対数	math.log2(x)
2を底とする小数点数の対数	math.log2(x)
2を底とする対数を求める	math.log2(x)
実数の常用対数	math.log10(x)
10を底とする実数の対数	math.log10(x)
10を底とする浮動小数点数の対数	math.log10(x)
10を底とする実数の対数を算出する	math.log10(x)
10を底とする対数	math.log10(x)
実数の余弦	math.cos(x)
実数のコサインを算出する	math.cos(x)
実数のコサイン	math.cos(x)
cos	math.cos(x)
実数の正弦	math.sin(x)
実数の正弦を計算する	math.sin(x)
正弦を求める	math.sin(x)
実数のサイン	math.sin(x)
サイン	math.sin(x)
実数の正弦を求める	math.sin(x)
実数の正接	math.tan(x)
実数のtan	math.tan(x)
正接	math.tan(x)
実数のタンジェント	math.tan(x)
浮動小数点数の正接	math.tan(x)
実数の逆余弦	math.acos(x)
アークコサイン	math.acos(x)
逆余弦	math.acos(x)
実数のアークコサイン	math.acos(x)
実数の余弦の逆数	math.acos(x)
実数のcosの逆数	math.acos(x)
cosの逆数を求める	math.acos(x)
実数の逆正弦	math.asin(x)
アークサイン	math.asin(x)
実数のアークサインを計算する	math.asin(x)
実数の正弦の逆数	math.asin(x)
実数のサインの逆数	math.asin(x)
正弦の逆数	math.asin(x)
浮動小数点数の正弦の逆数を求める	math.asin(x)
実数の逆正接	math.atan(x)
逆正接	math.atan(x)
逆正接を計算する	math.atan(x)
実数の正接の逆数	math.atan(x)
タンジェントの逆数を求める	math.atan(x)
小数点数の正接の逆数	math.atan(x)
浮動小数点数のtanの逆数	math.atan(x)
正接の逆数	math.atan(x)
実数のタンジェントの逆数を求める	math.atan(x)
ラジアンの角度	math.degrees(x)
角度のラジアン	math.radians(degree)
実数の逆双曲線余弦	math.acosh(x)
小数点数の逆双曲線余弦	math.acosh(x)
逆双曲線余弦	math.acosh(x)
逆双曲線余弦を求める	math.acosh(x)
実数の双曲線余弦の逆数	math.acosh(x)
双曲線余弦の逆数	math.acosh(x)
実数の双曲線余弦の逆数を計算する	math.acosh(x)
実数の双曲線余弦の逆数を算出する	math.acosh(x)
実数の逆双曲線正弦	math.asinh(x)
実数の逆双曲線正弦を求める	math.asinh(x)
逆双曲線正弦を求める	math.asinh(x)
実数の双曲線正弦の逆数	math.asinh(x)
実数のハイパボリック・サインの逆数	math.asinh(x)
双曲線正弦の逆数	math.asinh(x)
実数の逆双曲線正接	math.atanh(x)
実数の逆双曲線正接を計算する	math.atanh(x)
実数の逆双曲線正接を求める	math.atanh(x)
実数の双曲線正接の逆数	math.atanh(x)
実数のハイパボリック・タンジェントの逆数を計算する	math.atanh(x)
実数のハイパボリック・タンジェントの逆数	math.atanh(x)
小数点数の双曲線正接の逆数	math.atanh(x)
実数の双曲線余弦	math.cosh(x)
小数点数のハイパボリック・コサインを求める	math.cosh(x)
小数点数の双曲線余弦	math.cosh(x)
実数の双曲線余弦を算出する	math.cosh(x)
実数のハイパボリック・コサイン	math.cosh(x)
小数点数の双曲線余弦を求める	math.cosh(x)
実数の双曲線正弦	math.sinh(x)
実数の双曲線正弦を求める	math.sinh(x)
浮動小数点数の双曲線正弦	math.sinh(x)
実数のハイパボリック・サインを求める	math.sinh(x)
実数の双曲線正接	math.tanh(x)
実数の双曲線正接を求める	math.tanh(x)
二点間のユークリッド距離	math.dist(point, point2)
二ベクトル間のユークリッド距離を求める	math.dist(point, point2)
2点間のユークリッド距離	math.dist(point, point2)
ベクトル間のユークリッド距離	math.dist(point, point2)
２点間のユークリッド距離	math.dist(point, point2)
実数とyの斜辺	math.hypot(x, y)
実数とyの斜辺を求める	math.hypot(x, y)
小数点数とyのノルム	math.hypot(x, y)
浮動小数点数とyのノルム	math.hypot(x, y)
原点から(実数,y)の距離	math.hypot(x, y)
原点から(小数点数,y)の距離を求める	math.hypot(x, y)
原点から(実数,y)の距離を算出する	math.hypot(x, y)
原点から点までの距離を求める	math.hypot(x, y)
原点から(実数,y)の距離を求める	math.hypot(x, y)
ガンマ関数	math.gamma(x)
ガンマ関数を使用する	math.gamma(x)
ガンマ関数の値	math.gamma(x)
ガンマ関数の値を計算する	math.gamma(x)
ガンマ関数の値を求める	math.gamma(x)
ガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)
円周率	math.pi
円周率を使う	math.pi
ネイピア数	math.e
自然対数の底	math.e
ネイピア数を使う	math.e
無限大	math.inf
NaN	math.nan
グラフを描画する準備をする	from sympy import N
プロットを描画する	from sympy import N
グラフを使う準備をする	from sympy import N
プロットを用いる準備をする	from sympy import N
グラフを使う	from sympy import N
綺麗なグラフを描画する準備をする	import seaborn as sns
綺麗なグラフを描く	import seaborn as sns
見やすいプロットを描画する準備をする	import seaborn as sns
見やすいプロットをプロットする準備をする	import seaborn as sns
綺麗なプロットを描画する準備をする	import seaborn as sns
見やすいグラフを描画する準備をする	import seaborn as sns
綺麗なグラフを使う準備をする	import seaborn as sns
綺麗なプロットを使用する準備をする	import seaborn as sns
綺麗なプロットを使う	import seaborn as sns
グラフの見栄えを綺麗にする	import seaborn as sns
プロットを綺麗にする	import seaborn as sns
グラフのデザインを綺麗にする	import seaborn as sns
プロットの見栄えを綺麗にする	import seaborn as sns
グラフの見た目を綺麗にする	import seaborn as sns
グラフの描画を見やすくする	import seaborn as sns
プロットを見やすくする	import seaborn as sns
グラフの見栄えを良くする	import seaborn as sns
グラフの見た目を良くする	import seaborn as sns
プロットの見栄えを良くする	import seaborn as sns
グラフの見た目をよくする	import seaborn as sns
seabornのデフォルトを適用する	sns.set()
seabornのデフォルト見栄えを適用する	sns.set()
seabornのデフォルトスタイルを適用する	sns.set()
グラフの見栄えをデフォルトでいい感じに設定する	sns.set()
グラフをデフォルトでいい感じに設定する	sns.set()
デフォルトでグラフをイイ感じに変更する	sns.set()
グラフの見栄えをデフォルトでいい感じにセットする	sns.set()
グラフの見栄えをいい感じに設定する	sns.set()
デフォルトでグラフをイイ感じに設定する	sns.set()
グラフの用途を論文に設定する	sns.set(context='paper')
論文にグラフの用途を設定する	sns.set(context='paper')
グラフを論文に設定する	sns.set(context='paper')
グラフの目的を論文に設定する	sns.set(context='paper')
プロットの用途を論文に設定する	sns.set(context='paper')
グラフを論文用に設定する	sns.set(context='paper')
プロットを論文用に設定する	sns.set(context='paper')
グラフの用途を画面に設定する	sns.set(context='notebook')
グラフの目的を画面に設定する	sns.set(context='notebook')
画面にグラフの用途を設定する	sns.set(context='notebook')
グラフの用途を画面に変更する	sns.set(context='notebook')
グラフの用途を画面に指定する	sns.set(context='notebook')
グラフを画面に変更する	sns.set(context='notebook')
グラフを画面用に設定する	sns.set(context='notebook')
グラフを画面用に指定する	sns.set(context='notebook')
プロットを画面用に変更する	sns.set(context='notebook')
グラフの用途をスライドに設定する	sns.set(context='talk')
グラフの用途をスライドにセットする	sns.set(context='talk')
スライドにグラフの用途をする	sns.set(context='talk')
プロットの目的をプレゼンに設定する	sns.set(context='talk')
グラフをプレゼンに設定する	sns.set(context='talk')
プレゼンにグラフの目的をセットする	sns.set(context='talk')
グラフをスライド用に設定する	sns.set(context='talk')
グラフをスライド用に変更する	sns.set(context='talk')
スライド用にグラフを設定する	sns.set(context='talk')
グラフの用途をポスターに設定する	sns.set(context='poster')
プロットの目的をポスターに設定する	sns.set(context='poster')
ポスターにプロットの用途を設定する	sns.set(context='poster')
グラフをポスターに変更する	sns.set(context='poster')
グラフをポスター用に設定する	sns.set(context='poster')
グラフをポスター用に変更する	sns.set(context='poster')
グラフをポスター用にセットする	sns.set(context='poster')
ポスター用にグラフを設定する	sns.set(context='poster')
プロットをポスター用に設定する	sns.set(context='poster')
グラフの色を濃くする	sns.set(pallete='deep')
グラフを濃くする	sns.set(pallete='deep')
プロットのカラーパレットを全般的に濃くする	sns.set(pallete='deep')
グラフのカラーパレットを濃くする	sns.set(pallete='deep')
グラフの色を濃くする	sns.set(pallete='deep')
カラーパレットを濃くする	sns.set(pallete='deep')
プロットの色を濃くする	sns.set(pallete='deep')
グラフの色を淡くする	sns.set(pallete='muted')
グラフの色を全般的に淡くする	sns.set(pallete='muted')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
プロットの色を淡くする	sns.set(pallete='muted')
プロットを淡くする	sns.set(pallete='muted')
グラフのカラーパレットを淡くする	sns.set(pallete='muted')
色を淡くする	sns.set(pallete='muted')
プロットのカラーパレットを淡くする	sns.set(pallete='muted')
プロットのパレットを淡くする	sns.set(pallete='muted')
グラフの色を淡くする	sns.set(pallete='muted')
グラフの色をパステル調にする	sns.set(pallete='pastel')
プロットの色を全般的にパステル調にする	sns.set(pallete='pastel')
プロットのカラーパレットを全般的にパステル調にする	sns.set(pallete='pastel')
グラフをパステル調にする	sns.set(pallete='pastel')
プロットの色をパステル調にする	sns.set(pallete='pastel')
グラフのカラーパレットをパステル調にする	sns.set(pallete='pastel')
プロットのパレットをパステル調にする	sns.set(pallete='pastel')
色をパステル調にする	sns.set(pallete='pastel')
グラフのカラーパレットを全般的にパステル調にする	sns.set(pallete='pastel')
グラフの色を暗くする	sns.set(pallete='dark')
グラフを暗くする	sns.set(pallete='dark')
グラフのパレットを暗くする	sns.set(pallete='dark')
プロットの色を全般的に暗くする	sns.set(pallete='dark')
グラフのカラーパレットを暗くする	sns.set(pallete='dark')
プロットのカラーパレットを暗くする	sns.set(pallete='dark')
プロットの色を暗くする	sns.set(pallete='dark')
グラフのカラーパレットを全般的に暗くする	sns.set(pallete='dark')
グラフの色を明るくする	sns.set(pallete='bright')
プロットのカラーパレットを全般的に明るくする	sns.set(pallete='bright')
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
グラフのカラーパレットを明るくする	sns.set(pallete='bright')
グラフの色を明るくする	sns.set(pallete='bright')
グラフの色を色差別なくする	sns.set(pallete='colorblind')
プロットの色を色差別なくする	sns.set(pallete='colorblind')
プロットの色を全般的に色差別なくする	sns.set(pallete='colorblind')
グラフのカラーパレットを全般的に色差別なくする	sns.set(pallete='colorblind')
プロットを色差別なくする	sns.set(pallete='colorblind')
グラフを全般的に色差別なくする	sns.set(pallete='colorblind')
グラフのカラーパレットを色差別なくする	sns.set(pallete='colorblind')
カラーパレットを全般的に色差別なくする	sns.set(pallete='colorblind')
色を色差別なくする	sns.set(pallete='colorblind')
グラフの色を色差別なくする	sns.set(pallete='colorblind')
グラフの描画で濃いカラーパレットを使う	sns.set(pallete='deep')
グラフの描画で濃い色調を使う	sns.set(pallete='deep')
プロットの描画で濃いカラーパレットを使う	sns.set(pallete='deep')
プロットの描画で濃いカラーパレットを用いる	sns.set(pallete='deep')
濃い色をグラフの描画で使う	sns.set(pallete='deep')
グラフの描画で淡いカラーパレットを使う	sns.set(pallete='muted')
淡い色をグラフの描画で用いる	sns.set(pallete='muted')
グラフの描画で淡い色を使う	sns.set(pallete='muted')
グラフの描画で淡いテーマを用いる	sns.set(pallete='muted')
淡い色テーマをプロットの描画で使用する	sns.set(pallete='muted')
グラフの描画で淡いカラーパレットを用いる	sns.set(pallete='muted')
グラフの描画でパステル調のカラーパレットを使う	sns.set(pallete='pastel')
パステル調のパレットをグラフの描画で使う	sns.set(pallete='pastel')
グラフの描画でパステル調のパレットを用いる	sns.set(pallete='pastel')
グラフの描画でパステル調のカラーパレットを使用する	sns.set(pallete='pastel')
パステル調の色をグラフの描画で使う	sns.set(pallete='pastel')
グラフの描画で暗いカラーパレットを使う	sns.set(pallete='dark')
グラフの描画で暗いカラーパレットを使用する	sns.set(pallete='dark')
プロットの描画で暗いカラーパレットを使う	sns.set(pallete='dark')
グラフの描画で暗い色を用いる	sns.set(pallete='dark')
グラフの描画で暗い色を使う	sns.set(pallete='dark')
プロットの描画で暗い色テーマを使用する	sns.set(pallete='dark')
グラフの描画で明るいカラーパレットを使う	sns.set(pallete='bright')
明るいカラーパレットをグラフの描画で用いる	sns.set(pallete='bright')
明るいカラーパレットをグラフの描画で使う	sns.set(pallete='bright')
グラフの描画で明るい色を使う	sns.set(pallete='bright')
プロットの描画で明るいカラーパレットを用いる	sns.set(pallete='bright')
グラフの描画で色差別ないカラーパレットを使う	sns.set(pallete='colorblind')
色差別ない色調をグラフの描画で使う	sns.set(pallete='colorblind')
色差別ない色使いをグラフの描画で使う	sns.set(pallete='colorblind')
色差別ないカラーパレットをグラフの描画で使う	sns.set(pallete='colorblind')
グラフのカラーパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
プロットのカラーパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
グラフのパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
グラフの色をpalleteNameで指定する	sns.set(pallete=palleteName)
グラフで使用するカラーパレットをpalleteNameで指定する	sns.set(pallete=palleteName)
グラフのカラーパレットをpalleteNameに設定する	sns.set(pallete=palleteName)
プロットのカラーパレットをpalleteNameに変更する	sns.set(pallete=palleteName)
グラフで使うカラーパレットをpalleteNameに指定する	sns.set(pallete=palleteName)
グラフで用いるカラーパレットをpalleteNameに設定する	sns.set(pallete=palleteName)
グラフで用いるカラーテーマをpalleteNameに設定する	sns.set(pallete=palleteName)
グラフで使うカラーパレットをpalleteNameに設定する	sns.set(pallete=palleteName)
グラフで使う色をpalleteNameに設定する	sns.set(pallete=palleteName)
グラフで使うフォントをfontNameに指定する	sns.set(font=fontName)
グラフの中のフォントをfontNameに設定する	sns.set(font=fontName)
グラフの中のフォントをfontNameにする	sns.set(font=fontName)
グラフの中のフォントをfontNameに変更する	sns.set(font=fontName)
プロットの中のフォントをfontNameに設定する	sns.set(font=fontName)
グラフで日本語を表示できるようにする	sns.set(font='IPAexGothic')
グラフで日本語を表示可能なようにする	sns.set(font='IPAexGothic')
プロットで日本語を使えるようにする	sns.set(font='IPAexGothic')
日本語をグラフで表示できるようにする	sns.set(font='IPAexGothic')
グラフで日本語フォントを表示できるようにする	sns.set(font='IPAexGothic')
グラフの中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
グラフの中の日本語フォントを利用可能にする	sns.set(font='IPAexGothic')
プロットの中の日本語フォントを有効にする	sns.set(font='IPAexGothic')
グラフのフォントを日本語表示に設定する	sns.set(font='IPAexGothic')
グラフで使用するフォントを日本語表示に指定する	sns.set(font='IPAexGothic')
グラフのフォントを日本語表示に変更する	sns.set(font='IPAexGothic')
グラフのフォントを日本語に設定する	sns.set(font='IPAexGothic')
プロットのフォントを日本語に変更する	sns.set(font='IPAexGothic')
グラフの文字化けを防ぐ	sns.set(font='IPAexGothic')
文字化けを防ぐ	sns.set(font='IPAexGothic')
グラフの背景色を暗くする	sns.set(style='darkgrid')
グラフのグリッドを暗くする	sns.set(style='darkgrid')
グラフの背景色を暗くする	sns.set(style='darkgrid')
グラフのグリッドを暗くする	sns.set(style='darkgrid')
グラフの背景色を白くする	sns.set(style='whitegrid')
プロットの背景色を白くする	sns.set(style='whitegrid')
プロットのグリッドを白くする	sns.set(style='whitegrid')
グラフのタイトルをuntitledに設定する	plt.title(untitled)
プロットのタイトルをuntitledに設定する	plt.title(untitled)
グラフで使う名前をuntitledに変更する	plt.title(untitled)
グラフの題名をuntitledに設定する	plt.title(untitled)
グラフのサイズを横width縦heightに設定する	plt.figure(figsize=(width, height))
プロットの大きさを横width縦heightに設定する	plt.figure(figsize=(width, height))
グラフのサイズを縦height横widthに設定する	plt.figure(figsize=(width, height))
グラフのサイズを設定する	plt.figure(figsize=(width, height))
グラフの大きさを指定する	plt.figure(figsize=(width, height))
プロットの大きさを指定する	plt.figure(figsize=(width, height))
プロットの大きさを設定する	plt.figure(figsize=(width, height))
プロットのサイズを指定する	plt.figure(figsize=(width, height))
グラフの横軸のラベルをuntitledに設定する	plt.xlabel(untitled)
グラフで使う横軸の名称をuntitledに設定する	plt.xlabel(untitled)
プロットのx軸のラベルをuntitledに設定する	plt.xlabel(untitled)
グラフのx座標の軸ラベルをuntitledに変更する	plt.xlabel(untitled)
グラフの横軸の名前をuntitledに設定する	plt.xlabel(untitled)
横軸のキャプションをuntitledに設定する	plt.xlabel(untitled)
グラフの横軸にuntitledというラベルを付ける	plt.xlabel(untitled)
グラフの横軸にuntitledという軸名を付ける	plt.xlabel(untitled)
グラフの横軸にuntitledという名前を付ける	plt.xlabel(untitled)
グラフで使う横軸にuntitledという名称を設定する	plt.xlabel(untitled)
グラフの横軸にuntitledという軸ラベルを付ける	plt.xlabel(untitled)
横軸にuntitledという軸名を付ける	plt.xlabel(untitled)
グラフの中の縦軸のラベルをuntitledに設定する	plt.ylabel(untitled)
グラフの中のy軸のラベルをuntitledに設定する	plt.ylabel(untitled)
グラフの中の縦軸のラベルをuntitledに変更する	plt.ylabel(untitled)
グラフの中の縦軸の説明をuntitledに変更する	plt.ylabel(untitled)
グラフで使う縦軸のラベルをuntitledに指定する	plt.ylabel(untitled)
グラフの中の縦軸にuntitledというラベルを付ける	plt.ylabel(untitled)
グラフの中のy軸にuntitledというキャプションを付ける	plt.ylabel(untitled)
グラフで使う縦軸にuntitledというラベルを付ける	plt.ylabel(untitled)
グラフの中の縦軸にuntitledという軸ラベルを設定する	plt.ylabel(untitled)
グラフで使う縦軸にuntitledという名前を付ける	plt.ylabel(untitled)
プロットで用いる縦軸にuntitledというラベルを設定する	plt.ylabel(untitled)
グラフにグリッド線を入れる	plt.grid(True)
グラフにグリッド線を付ける	plt.grid(True)
グラフに格子線を描画する	plt.grid(True)
メモリ線をグラフに入れる	plt.grid(True)
プロットに格子線を加える	plt.grid(True)
プロットに格子線を付ける	plt.grid(True)
グラフに凡例を入れる	plt.legend()
グラフに凡例を付ける	plt.legend()
グラフに補足を描画する	plt.legend()
プロットに凡例を描画する	plt.legend()
凡例を加える	plt.legend()
プロットに凡例を入れる	plt.legend()
グラフに凡例を文字列と文字列と入れる	plt.legend([s, s2])
凡例を文字列と文字列と付ける	plt.legend([s, s2])
プロットに文字列と文字列と凡例を表示する	plt.legend([s, s2])
グラフにデータラベルを文字列と文字列と入れる	plt.legend([s, s2])
補足を文字列と文字列と入れる	plt.legend([s, s2])
プロットに補足を文字列と文字列と入れる	plt.legend([s, s2])
グラフにデータラベルを文字列と文字列と付ける	plt.legend([s, s2])
グラフの凡例の位置を指定する	plt.legend(loc=(x, y))
グラフの凡例の場所を指定する	plt.legend(loc=(x, y))
凡例の位置を指定する	plt.legend(loc=(x, y))
グラフの凡例の位置を(x,y)に設定する	plt.legend(loc=(x, y))
プロットのデータラベルの位置を(x,y)に設定する	plt.legend(loc=(x, y))
グラフのデータラベルの位置を(x,y)に設定する	plt.legend(loc=(x, y))
グラフの補足の位置を(x,y)に設定する	plt.legend(loc=(x, y))
プロットのデータラベルの場所を(x,y)に設定する	plt.legend(loc=(x, y))
補足の位置を(x,y)に設定する	plt.legend(loc=(x, y))
グラフ中の(x,y)の位置に凡例を入れる	plt.legend(loc=(x, y))
凡例をグラフ中の(x,y)の位置に付ける	plt.legend(loc=(x, y))
グラフ中の(x,y)の位置に凡例を加える	plt.legend(loc=(x, y))
プロット中の(x,y)の場所に凡例を入れる	plt.legend(loc=(x, y))
グラフ中の(x,y)の場所にデータラベルを入れる	plt.legend(loc=(x, y))
プロット中の(x,y)の位置に補足を付ける	plt.legend(loc=(x, y))
最適な位置に凡例を入れる	plt.legend(loc='best')
ベストな場所に補足を加える	plt.legend(loc='best')
グラフに被らない位置に補足を付ける	plt.legend(loc='best')
最適な位置に凡例を描画する	plt.legend(loc='best')
データラベルを最適な位置に入れる	plt.legend(loc='best')
グラフの中に枠なしの凡例を入れる	plt.legend(frameon=False)
枠なしの凡例を描画する	plt.legend(frameon=False)
グラフの中に枠なしの凡例を付ける	plt.legend(frameon=False)
枠なしの凡例を入れる	plt.legend(frameon=False)
プロットの中に枠なしの凡例を入れる	plt.legend(frameon=False)
グラフの中に枠なしの凡例を描画する	plt.legend(frameon=False)
折れ線グラフを描画する	plt.plot(xdata, ydata)
折れ線を描画する	plt.plot(xdata, ydata)
リストとリストの折れ線グラフを描画する	plt.plot(xdata, ydata)
配列とリストの折れ線グラフをプロットする	plt.plot(xdata, ydata)
リストとリストの折れ線グラフを描く	plt.plot(xdata, ydata)
リストとイテラブルの折れ線グラフを描画する	plt.plot(xdata, ydata)
データ列と配列の折れ線グラフを描画する	plt.plot(xdata, ydata)
リストとリストを折れ線グラフで描画する	plt.plot(xdata, ydata)
リストとリストを折れ線グラフで描く	plt.plot(xdata, ydata)
リストとリストを折れ線で描画する	plt.plot(xdata, ydata)
データ列とリストを折れ線グラフで描画する	plt.plot(xdata, ydata)
配列と配列を折れ線グラフで描画する	plt.plot(xdata, ydata)
リストを縦軸、リストを横軸と指定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
イテラブルをy軸、データ列をx座標と指定して折れ線グラフを描画する	plt.plot(xdata, ydata)
数列をy軸、リストをx座標と指定して、折れ線を描画する	plt.plot(xdata, ydata)
イテラブルを縦軸、リストを横軸と指定して折れ線グラフを描画する	plt.plot(xdata, ydata)
配列をy軸、リストを横軸と指定して折れ線グラフを描画する	plt.plot(xdata, ydata)
リストを縦軸イテラブルを横軸と指定して折れ線グラフをプロットする	plt.plot(xdata, ydata)
リストをy座標配列を横軸と指定して、折れ線グラフを描画する	plt.plot(xdata, ydata)
リストの変化を折れ線グラフで描画する	plt.plot(range(len(xdata)), xdata)
リストの推移を折れ線グラフに描く	plt.plot(range(len(xdata)), xdata)
イテラブルの変化を折れ線グラフで描く	plt.plot(range(len(xdata)), xdata)
データ列の変遷を折れ線にプロットする	plt.plot(range(len(xdata)), xdata)
リストの変化を折れ線に描画する	plt.plot(range(len(xdata)), xdata)
リストを横軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
データ列をx軸と指定して折れ線を描画する	plt.plot(range(len(xdata)), xdata)
リストを横軸にして、リストの変遷を描画する	plt.plot(range(len(xdata)), xdata)
リストをx軸と指定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
リストを横軸と指定してイテラブルの変遷をプロットする	plt.plot(range(len(xdata)), xdata)
配列を横軸と設定して、折れ線グラフを描画する	plt.plot(range(len(xdata)), xdata)
データフレームのカラムとカラムを折れ線グラフで描画する	plt.plot(df[col], df[col2])
データフレームのカラムとカラムを折れ線グラフとして描画する	plt.plot(df[col], df[col2])
折れ線グラフでデータフレームのカラムとカラムを描く	plt.plot(df[col], df[col2])
透明度alphaの折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=alpha)
透明度alphaの折れ線グラフを描く	plt.plot(xdata, ydata, alpha=alpha)
アルファ値alphaの折れ線を描画する	plt.plot(xdata, ydata, alpha=alpha)
アルファalphaの折れ線グラフを描画する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフの透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフの透明度をalphaに変更する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフのアルファをalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
折れ線グラフの透明度をalphaに指定する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを透明度alphaで描画する	plt.plot(xdata, ydata, alpha=alpha)
リストとイテラブルの折れ線を透明度alphaで描画する	plt.plot(xdata, ydata, alpha=alpha)
リストと配列の折れ線グラフを透明度alphaで描く	plt.plot(xdata, ydata, alpha=alpha)
リストとデータ列の折れ線グラフをアルファalphaで描く	plt.plot(xdata, ydata, alpha=alpha)
アルファalphaでリストとリストの折れ線グラフをプロットする	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを透明度alphaで描く	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線グラフを描画して、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線を描画して、透明度をalphaにセットする	plt.plot(xdata, ydata, alpha=alpha)
配列とデータ列の折れ線グラフをプロットして、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
配列とリストの折れ線グラフをプロットして透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線を描いて透明度をalphaに変更する	plt.plot(xdata, ydata, alpha=alpha)
リストと配列の折れ線グラフを描き、、透明度をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
リストとリストの折れ線を描いて、アルファ値をalphaに設定する	plt.plot(xdata, ydata, alpha=alpha)
グラフで使える色名の一覧	matplotlib.colors.cnames
グラフで使える色名の一覧を見る	matplotlib.colors.cnames
グラフで利用可能な色名の一覧を使う	matplotlib.colors.cnames
で使える色名の一覧	matplotlib.colors.cnames
で使える色名の一覧を見る	matplotlib.colors.cnames
で使える色の一覧	matplotlib.colors.cnames
折れ線グラフの色を文字列に設定する	plt.plot(xdata, ydata, color=s)
折れ線グラフの色を文字列に指定する	plt.plot(xdata, ydata, color=s)
折れ線の色を文字列に変更する	plt.plot(xdata, ydata, color=s)
折れ線の色を文字列に指定する	plt.plot(xdata, ydata, color=s)
折れ線グラフの色を文字列に変更する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
文字列の色でリストとリストの折れ線を描画する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを文字列の色で描く	plt.plot(xdata, ydata, color=s)
文字列の色でリストとイテラブルの折れ線グラフを描く	plt.plot(xdata, ydata, color=s)
データ列とリストの折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
リストとデータ列の折れ線グラフを文字列の色で描画する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描画して、色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線をプロットして色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストと数列の折れ線を描画して、色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描画して色を文字列に設定する	plt.plot(xdata, ydata, color=s)
リストとリストの折れ線グラフを描いて色を文字列に設定する	plt.plot(xdata, ydata, color=s)
データ列とデータ列の折れ線を描画し、、色を文字列に設定する	plt.plot(xdata, ydata, color=s)
数列とリストの折れ線を描画して色を文字列に設定する	plt.plot(xdata, ydata, color=s)
折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
折れ線グラフの色をカラーコードにセットする	plt.plot(xdata, ydata, color=rgb)
折れ線グラフの色をカラーコードに変更する	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフをカラーコードで描画する	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフをカラーコードでプロットする	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線をカラーコードで描画する	plt.plot(xdata, ydata, color=rgb)
リストとデータ列の折れ線をカラーコードで描画する	plt.plot(xdata, ydata, color=rgb)
リストと配列の折れ線グラフをカラーコードで描く	plt.plot(xdata, ydata, color=rgb)
リストとリストの折れ線グラフを描画して、その色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
配列とリストの折れ線グラフを描いてその色をカラーコードに指定する	plt.plot(xdata, ydata, color=rgb)
配列とリストの折れ線を描いて、その色をカラーコードに変更する	plt.plot(xdata, ydata, color=rgb)
リストと配列についての折れ線グラフを描画して色をカラーコードに変更する	plt.plot(xdata, ydata, color=rgb)
配列とリストの折れ線をプロットし、、その色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
データ列とリストの折れ線グラフを描画し、、色をカラーコードに設定する	plt.plot(xdata, ydata, color=rgb)
破線グラフの色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
破線グラフの色を濃いに指定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
破線の色を濃いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストについて破線グラフを描画して、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストについて破線を描画して、色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
配列とリストについて破線を描画して、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストの破線グラフを描画して、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストとリストについて破線グラフを描いて、その色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
データ列とリストについて破線グラフをプロットし、、色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
リストと配列について破線グラフを描いてその色を濃いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deep')
破線グラフの色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとリストについて破線グラフを描画して、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストと配列の破線グラフを描画して色を淡いに指定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとリストについて破線を描画してその色を淡いにセットする	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストと配列について破線グラフを描画して、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとリストの破線グラフを描画し、、その色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
リストとデータ列について破線グラフを描いて、色を淡いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='muted')
イテラブルと配列の破線を描き、、色を淡いにする	plt.plot(xdata, ydata, linestyle='dash', color='muted')
破線グラフの色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
破線グラフの色をパステル調のにセットする	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとリストについて破線グラフを描画して、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
データ列とリストについて破線グラフを描画して、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとリストの破線グラフを描画し、、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとデータ列について破線を描画してその色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
リストとデータ列について破線グラフを描画してその色をパステル調のに指定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
配列とリストについて破線グラフを描画して、その色をパステル調のに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
配列とデータ列について破線グラフを描画し、その色をパステル調のに変更する	plt.plot(xdata, ydata, linestyle='dash', color='pastel')
破線グラフの色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
破線グラフの色を暗いに変更する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストについて破線グラフを描画して、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとイテラブルについて破線グラフを描き、、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストと配列について破線グラフをプロットしてその色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストについて破線グラフを描画し、、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストの破線グラフを描画し、、色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
リストとリストについて破線グラフを描いて、その色を暗いに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
数列と配列の破線を描画して、その色を暗いに指定する	plt.plot(xdata, ydata, linestyle='dash', color='dark')
破線グラフの色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
破線の色を明るいに変更する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフを描画して、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
データ列と配列について破線グラフを描き、、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとイテラブルについて破線グラフをプロットして、色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフをプロットして、その色を明るいに指定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフをプロットして、その色を明るいに設定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
配列とリストについて破線を描画してその色を明るいにセットする	plt.plot(xdata, ydata, linestyle='dash', color='bright')
リストとリストについて破線グラフを描画してその色を明るいに指定する	plt.plot(xdata, ydata, linestyle='dash', color='bright')
破線グラフの色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
破線グラフの色を色差別ないに変更する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
破線グラフの色を色差別ないに指定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストとリストについて破線グラフを描画して、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストと配列について破線グラフを描画して、色を色差別ないに指定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
配列とイテラブルについて破線をプロットして、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストとリストについて破線を描画して、その色を色差別ないに設定する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
配列とリストについて破線グラフを描き、、その色を色差別ないに変更する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
リストと数列について破線を描画して、その色を色差別ないに変更する	plt.plot(xdata, ydata, linestyle='dash', color='colorblind')
濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線グラフを描いてその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
濃い色の折れ線グラフを描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストとリストについて濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
配列とデータ列について濃い色の折れ線グラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
データ列とリストについて濃い色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストとデータ列について濃い色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deep')
数列とイテラブルについて濃い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
イテラブルと数列について濃い色の折れ線グラフを描画し、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deep')
リストとリストについて濃い色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deep')
淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフをプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
淡い色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストとリストについて淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストと数列について淡い色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストと数列について淡い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストとリストについて淡い色の折れ線を描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
リストとリストについて淡い色の折れ線グラフを描いて線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
配列とリストについて淡い色の折れ線グラフをプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='muted')
パステル調の色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
パステル調の色の折れ線を描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
パステル調の色の折れ線グラフを描き、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとリストについてパステル調の色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
配列とデータ列についてパステル調の色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
数列とリストについてパステル調の色の折れ線グラフをプロットして、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
リストとリストについてパステル調の色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
配列と配列についてパステル調の色の折れ線グラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='pastel')
データ列とリストについてパステル調の色の折れ線グラフを描画し、、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='pastel')
暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線を描き、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線を描いて線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
暗い色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとリストについて暗い色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストと配列について暗い色の折れ線をプロットして、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとリストについて暗い色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとイテラブルについて暗い色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストとリストについて暗い色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='dark')
リストと配列について暗い色の折れ線をプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
配列とリストについて暗い色の折れ線グラフを描画し、、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='dark')
明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線をプロットし、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線グラフをプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
明るい色の折れ線をプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストとリストについて明るい色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストとリストについて明るい色の折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
数列とリストについて明るい色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
配列とリストについて明るい色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
配列とリストについて明るい色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストと配列について明るい色の折れ線グラフを描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
リストとリストについて明るい色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bright')
色差別ない色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
色差別ない色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストとリストについて色差別ない色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
データ列とリストについて色差別ない色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストとリストについて色差別ない色の折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
データ列と配列について色差別ない色の折れ線グラフを描き、、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
配列とリストについて色差別ない色の折れ線グラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
データ列とリストについて色差別ない色の折れ線グラフを描き、、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
リストとデータ列について色差別ない色の折れ線グラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='colorblind')
散布図に濃い色のマーカーを使う	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='deep')
濃い色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='deep')
散布図を濃い色として描画する	plt.plot(xdata, ydata, c='deep')
散布図を濃い色のマーカーで描画する	plt.plot(xdata, ydata, c='deep')
濃い色で散布図をプロットする	plt.plot(xdata, ydata, c='deep')
リストとリストについての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
配列とデータ列についての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
リストとリストについての散布図を濃い色として描画する	plt.plot(xdata, ydata, c='deep')
リストとリストについての散布図を濃い色として描く	plt.plot(xdata, ydata, c='deep')
データ列と配列の散布図を濃い色として描画する	plt.plot(xdata, ydata, c='deep')
配列とリストについての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep')
リストとリストについて散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
リストと配列について散布図をプロットし、、マーカーの色を濃いに変更する	plt.plot(xdata, ydata, c='deep')
配列とイテラブルの散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
データ列とイテラブルについて散布図をプロットし、、マーカーの色を濃いに指定する	plt.plot(xdata, ydata, c='deep')
リストとリストについて散布図をプロットして、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
リストとリストの散布図を描画して、マーカーの色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
データ列と数列について散布図を描画して、色を濃いに設定する	plt.plot(xdata, ydata, c='deep')
散布図に淡い色のマーカーを使う	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='muted')
淡い色で散布図を描画する	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='muted')
淡い色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='muted')
リストとリストについての散布図を淡い色で描画する	plt.plot(xdata, ydata, c='muted')
配列とリストの散布図を淡い色で描画する	plt.plot(xdata, ydata, c='muted')
リストとデータ列についての散布図を淡い色として描く	plt.plot(xdata, ydata, c='muted')
リストと配列の散布図を淡い色としてプロットする	plt.plot(xdata, ydata, c='muted')
淡い色を用いてリストとデータ列についての散布図を描画する	plt.plot(xdata, ydata, c='muted')
配列とリストについての散布図を淡い色として描く	plt.plot(xdata, ydata, c='muted')
リストとリストについて散布図を描画して、マーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
イテラブルとリストについて散布図を描画して色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
イテラブルとリストについて散布図を描画して、マーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
リストとリストの散布図を描いて、マーカーの色を淡いにセットする	plt.plot(xdata, ydata, c='muted')
配列とリストの散布図をプロットし、マーカーの色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
データ列とリストについて散布図を描画して、マーカーの色を淡いに指定する	plt.plot(xdata, ydata, c='muted')
配列とリストについて散布図を描き、、色を淡いに設定する	plt.plot(xdata, ydata, c='muted')
散布図にパステル調の色のマーカーを使う	plt.plot(xdata, ydata, c='pastel')
散布図にパステル調の色のマーカーを用いる	plt.plot(xdata, ydata, c='pastel')
散布図にパステル調の色のマーカーを使用する	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='pastel')
パステル調の色で散布図を描画する	plt.plot(xdata, ydata, c='pastel')
リストとリストについての散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
配列とリストについての散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
リストとイテラブルの散布図をパステル調の色でプロットする	plt.plot(xdata, ydata, c='pastel')
パステル調の色としてリストとリストについての散布図を描く	plt.plot(xdata, ydata, c='pastel')
数列とリストについての散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
リストとリストの散布図をパステル調の色でプロットする	plt.plot(xdata, ydata, c='pastel')
配列とデータ列の散布図をパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel')
リストとリストについて散布図を描画して、マーカーの色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
リストと配列について散布図を描いて、色をパステル調のに変更する	plt.plot(xdata, ydata, c='pastel')
データ列とリストについて散布図を描画して、マーカーの色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
データ列とリストの散布図を描画してマーカーの色をパステル調のに指定する	plt.plot(xdata, ydata, c='pastel')
イテラブルとリストについて散布図をプロットし、、色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
リストと配列の散布図を描画して、マーカーの色をパステル調のに設定する	plt.plot(xdata, ydata, c='pastel')
散布図に暗い色のマーカーを使う	plt.plot(xdata, ydata, c='dark')
暗い色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='dark')
散布図に暗い色のマーカーを用いる	plt.plot(xdata, ydata, c='dark')
散布図に暗い色のマーカーを使用する	plt.plot(xdata, ydata, c='dark')
暗い色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='dark')
暗い色で散布図を描画する	plt.plot(xdata, ydata, c='dark')
散布図を暗い色のマーカーを使って描画する	plt.plot(xdata, ydata, c='dark')
暗い色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='dark')
リストとリストについての散布図を暗い色で描画する	plt.plot(xdata, ydata, c='dark')
リストと数列の散布図を暗い色で描画する	plt.plot(xdata, ydata, c='dark')
配列とイテラブルについての散布図を暗い色を用いて描画する	plt.plot(xdata, ydata, c='dark')
リストと配列についての散布図を暗い色を用いて描画する	plt.plot(xdata, ydata, c='dark')
リストとリストについての散布図を暗い色として描画する	plt.plot(xdata, ydata, c='dark')
データ列とリストについての散布図を暗い色を用いてプロットする	plt.plot(xdata, ydata, c='dark')
リストとリストについて散布図を描画して、マーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
数列とリストの散布図を描画してマーカーの色を暗いにする	plt.plot(xdata, ydata, c='dark')
リストとイテラブルについて散布図を描いてマーカーの色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
データ列と配列について散布図を描画し、、マーカーの色を暗いに変更する	plt.plot(xdata, ydata, c='dark')
配列とリストの散布図をプロットしてマーカーの色を暗いに指定する	plt.plot(xdata, ydata, c='dark')
リストとデータ列の散布図を描画して、色を暗いに設定する	plt.plot(xdata, ydata, c='dark')
リストと数列について散布図を描画し、、マーカーの色を暗いに変更する	plt.plot(xdata, ydata, c='dark')
散布図に明るい色のマーカーを使う	plt.plot(xdata, ydata, c='bright')
散布図に明るい色のマーカーを使用する	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='bright')
散布図を明るい色のマーカーを用いて描く	plt.plot(xdata, ydata, c='bright')
散布図を明るい色のマーカーとして描く	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='bright')
明るい色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='bright')
リストとリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
イテラブルとリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
データ列とリストについての散布図を明るい色として描画する	plt.plot(xdata, ydata, c='bright')
数列とリストの散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
明るい色でリストとリストについての散布図を描画する	plt.plot(xdata, ydata, c='bright')
データ列とリストについての散布図を明るい色で描画する	plt.plot(xdata, ydata, c='bright')
リストとリストについて散布図を描画して、マーカーの色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
データ列と数列について散布図を描いてマーカーの色を明るいに指定する	plt.plot(xdata, ydata, c='bright')
データ列とリストの散布図を描き、、マーカーの色を明るいに指定する	plt.plot(xdata, ydata, c='bright')
数列と配列について散布図をプロットして色を明るいに設定する	plt.plot(xdata, ydata, c='bright')
数列とリストについて散布図をプロットして、マーカーの色を明るいに変更する	plt.plot(xdata, ydata, c='bright')
配列と配列について散布図を描いて、マーカーの色を明るいに変更する	plt.plot(xdata, ydata, c='bright')
リストと配列について散布図を描画し、色を明るいに変更する	plt.plot(xdata, ydata, c='bright')
散布図に色差別ない色のマーカーを使う	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
色差別ない色で散布図を描画する	plt.plot(xdata, ydata, c='colorblind')
リストとリストについての散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
配列とリストについての散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
リストとデータ列についての散布図を色差別ない色でプロットする	plt.plot(xdata, ydata, c='colorblind')
配列とリストについての散布図を色差別ない色で描く	plt.plot(xdata, ydata, c='colorblind')
色差別ない色でデータ列とイテラブルについての散布図を描く	plt.plot(xdata, ydata, c='colorblind')
リストとリストの散布図を色差別ない色で描画する	plt.plot(xdata, ydata, c='colorblind')
リストとリストについて散布図を描画して、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
リストとリストについて散布図を描画し、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
配列と配列について散布図を描画してマーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
イテラブルとリストの散布図を描画し、、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
リストとデータ列について散布図を描画して、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
配列とリストについて散布図を描画して、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
リストと配列について散布図を描画し、、マーカーの色を色差別ないに設定する	plt.plot(xdata, ydata, c='colorblind')
濃い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
重なりを見やすく散布図を濃い色のマーカーで描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色で重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストとリストについての散布図を濃い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
リストとイテラブルについての散布図を濃い色として重なりを見やすく描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
数列と配列についての散布図を濃い色で重なりを見やすく描く	plt.plot(xdata, ydata, c='deep', alpha=0.5)
重なりを見やすく配列とリストについての散布図を濃い色で描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
濃い色を用いて配列と配列の散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deep', alpha=0.5)
淡い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
重なりを見やすく淡い色として散布図を描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
散布図を淡い色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
淡い色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='muted', alpha=0.5)
淡い色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
リストとリストについての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
重なりを見やすくリストとリストの散布図を淡い色でプロットする	plt.plot(xdata, ydata, c='muted', alpha=0.5)
重なりを見やすくリストとリストについての散布図を淡い色として描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
数列とデータ列についての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
リストと数列についての散布図を淡い色で重なりを見やすく描く	plt.plot(xdata, ydata, c='muted', alpha=0.5)
データ列と数列についての散布図を淡い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='muted', alpha=0.5)
パステル調の色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
重なりを見やすく散布図をパステル調の色のマーカーとして描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
パステル調の色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストとリストについての散布図をパステル調の色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストと配列についての散布図を重なりを見やすくパステル調の色でプロットする	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
リストとリストについての散布図をパステル調の色で重なりを見やすく描く	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
重なりを見やすくパステル調の色としてリストとリストについての散布図を描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
数列とデータ列についての散布図を重なりを見やすくパステル調の色で描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
重なりを見やすくパステル調の色でリストと配列の散布図を描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
配列とデータ列の散布図をパステル調の色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='pastel', alpha=0.5)
暗い色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色のマーカーで重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='dark', alpha=0.5)
散布図を暗い色のマーカーを用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
リストとリストについての散布図を暗い色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
数列とリストについての散布図を重なりを見やすく暗い色を用いて描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色でリストとリストの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
リストとリストの散布図を暗い色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
リストと配列についての散布図を暗い色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='dark', alpha=0.5)
暗い色を用いて配列とリストの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dark', alpha=0.5)
リストと数列についての散布図を暗い色として重なりを見やすく描く	plt.plot(xdata, ydata, c='dark', alpha=0.5)
明るい色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
散布図を明るい色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リストとリストについての散布図を明るい色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
データ列とリストについての散布図を重なりを見やすく明るい色で描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
明るい色を用いて配列と配列についての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='bright', alpha=0.5)
リストとリストについての散布図を明るい色で重なりを見やすく描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
配列とデータ列の散布図を重なりを見やすく明るい色で描く	plt.plot(xdata, ydata, c='bright', alpha=0.5)
色差別ない色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
散布図を重なりを見やすく色差別ない色のマーカーを使って描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
リストとリストについての散布図を色差別ない色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
数列とリストについての散布図を重なりを見やすく色差別ない色を用いて描く	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色で配列とリストについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
データ列とリストについての散布図を重なりを見やすく色差別ない色として描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
リストとリストの散布図を色差別ない色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
配列とリストについての散布図を色差別ない色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
色差別ない色として重なりを見やすくリストとリストについての散布図をプロットする	plt.plot(xdata, ydata, c='colorblind', alpha=0.5)
濃い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='deep')
濃いとしてヒストグラムを描く	plt.hist(xdata, color='deep')
濃い色としてヒストグラムを描画する	plt.hist(xdata, color='deep')
濃い色で配列についてのヒストグラムを描く	plt.hist(xdata, color='deep')
ヒストグラムを濃い色で描画する	plt.hist(xdata, color='deep')
濃い色としてリストについてのヒストグラムを描画する	plt.hist(xdata, color='deep')
濃いとしてヒストグラムを描画する	plt.hist(xdata, color='deep')
リストを濃い色のヒストグラムで描画する	plt.hist(xdata, color='deep')
数列を濃い色の柱状図を用いて描画する	plt.hist(xdata, color='deep')
濃い色のヒストグラムで配列を描画する	plt.hist(xdata, color='deep')
リストを濃い色のヒストグラムとして描画する	plt.hist(xdata, color='deep')
リストを濃い色の柱状図として描画する	plt.hist(xdata, color='deep')
淡い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
配列についてのヒストグラムを淡い色で描く	plt.hist(xdata, color='muted')
淡い色として配列についてのヒストグラムを描画する	plt.hist(xdata, color='muted')
淡い色でヒストグラムを描画する	plt.hist(xdata, color='muted')
淡いとしてリストについてのヒストグラムを描画する	plt.hist(xdata, color='muted')
淡い色で柱状グラフを描画する	plt.hist(xdata, color='muted')
リストを淡い色のヒストグラムで描画する	plt.hist(xdata, color='muted')
淡い色のヒストグラムを使ってリストを描画する	plt.hist(xdata, color='muted')
数列を淡い色のヒストグラムで描画する	plt.hist(xdata, color='muted')
データ列を淡い色のヒストグラムでプロットする	plt.hist(xdata, color='muted')
淡い色の柱状図としてイテラブルを描画する	plt.hist(xdata, color='muted')
数列を淡い色のヒストグラムで描く	plt.hist(xdata, color='muted')
配列を淡い色のヒストグラムを用いて描画する	plt.hist(xdata, color='muted')
パステル調の色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='pastel')
パステル調の色としてヒストグラムを描く	plt.hist(xdata, color='pastel')
パステル調の色で配列についてのヒストグラムを描画する	plt.hist(xdata, color='pastel')
データ列についてのヒストグラムをパステル調の色で描画する	plt.hist(xdata, color='pastel')
パステル調の色としてリストについてのヒストグラムを描画する	plt.hist(xdata, color='pastel')
パステル調の色でリストについてのヒストグラムを描く	plt.hist(xdata, color='pastel')
リストをパステル調の色のヒストグラムで描画する	plt.hist(xdata, color='pastel')
パステル調の色の柱状図としてイテラブルを描く	plt.hist(xdata, color='pastel')
パステル調の色のヒストグラムとしてリストを描画する	plt.hist(xdata, color='pastel')
イテラブルをパステル調の色のヒストグラムとして描画する	plt.hist(xdata, color='pastel')
データ列をパステル調の色のヒストグラムで描く	plt.hist(xdata, color='pastel')
リストをパステル調の色の柱状図で描く	plt.hist(xdata, color='pastel')
数列をパステル調の色の柱状図で描画する	plt.hist(xdata, color='pastel')
暗い色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='dark')
暗いとしてリストについてのヒストグラムを描画する	plt.hist(xdata, color='dark')
暗いとして柱状図を描画する	plt.hist(xdata, color='dark')
暗いでリストについての柱状図を描く	plt.hist(xdata, color='dark')
配列についてのヒストグラムを暗い色を用いてプロットする	plt.hist(xdata, color='dark')
リストについてのヒストグラムを暗い色で描く	plt.hist(xdata, color='dark')
リストを暗い色のヒストグラムで描画する	plt.hist(xdata, color='dark')
配列を暗い色の度数分布図として描く	plt.hist(xdata, color='dark')
暗い色の度数分布図で配列を描画する	plt.hist(xdata, color='dark')
配列を暗い色のヒストグラムで描画する	plt.hist(xdata, color='dark')
リストを暗い色のヒストグラムでプロットする	plt.hist(xdata, color='dark')
データ列を暗い色のヒストグラムとして描画する	plt.hist(xdata, color='dark')
明るい色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='bright')
明るい色でリストについてのヒストグラムを描く	plt.hist(xdata, color='bright')
リストについてのヒストグラムを明るい色で描く	plt.hist(xdata, color='bright')
ヒストグラムを明るいとして描く	plt.hist(xdata, color='bright')
リストについてのヒストグラムを明るいで描く	plt.hist(xdata, color='bright')
リストを明るい色のヒストグラムで描画する	plt.hist(xdata, color='bright')
明るい色のヒストグラムで数列を描く	plt.hist(xdata, color='bright')
明るい色の柱状グラフでリストを描画する	plt.hist(xdata, color='bright')
リストを明るい色の柱状図を用いて描く	plt.hist(xdata, color='bright')
リストを明るい色のヒストグラムとして描画する	plt.hist(xdata, color='bright')
色差別ない色でリストについてのヒストグラムを描画する	plt.hist(xdata, color='colorblind')
色差別ない色としてヒストグラムを描画する	plt.hist(xdata, color='colorblind')
色差別ない色でリストについての柱状図を描画する	plt.hist(xdata, color='colorblind')
色差別ない色で柱状図をプロットする	plt.hist(xdata, color='colorblind')
色差別ない色として柱状図を描画する	plt.hist(xdata, color='colorblind')
色差別ない色を用いてリストについてのヒストグラムを描く	plt.hist(xdata, color='colorblind')
色差別ないでリストについての柱状図を描画する	plt.hist(xdata, color='colorblind')
リストを色差別ない色のヒストグラムで描画する	plt.hist(xdata, color='colorblind')
イテラブルを色差別ない色のヒストグラムで描画する	plt.hist(xdata, color='colorblind')
イテラブルを色差別ない色のヒストグラムとして描画する	plt.hist(xdata, color='colorblind')
イテラブルを色差別ない色のヒストグラムを用いてプロットする	plt.hist(xdata, color='colorblind')
折れ線グラフにラベルを付ける	plt.plot(xdata, ydata, label=untitled)
折れ線グラフにラベルを設定する	plt.plot(xdata, ydata, label=untitled)
折れ線にラベルをつける	plt.plot(xdata, ydata, label=untitled)
折れ線にラベルを付ける	plt.plot(xdata, ydata, label=untitled)
折れ線グラフのラベルをuntitledに設定する	plt.plot(xdata, ydata, label=untitled)
折れ線のラベルをuntitledにセットする	plt.plot(xdata, ydata, label=untitled)
折れ線グラフのラベルをuntitledに指定する	plt.plot(xdata, ydata, label=untitled)
折れ線のラベルをuntitledに指定する	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
配列とデータ列の折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
データ列とリストの折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
データ列とリストの折れ線をuntitledとラベル付けしてプロットする	plt.plot(xdata, ydata, label=untitled)
リストと配列の折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
イテラブルとリストの折れ線グラフをuntitledとラベル付けして描画する	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフを描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
配列とリストの折れ線グラフを描いて、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストと配列の折れ線グラフをプロットし、、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線グラフを描画し、、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストとリストの折れ線を描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
リストとイテラブルの折れ線グラフを描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
配列とリストの折れ線グラフを描画して、untitledとラベル付けする	plt.plot(xdata, ydata, label=untitled)
＜オプション＞線幅をnに設定する	linewidth = n
＜オプション＞線幅をnに変更する	linewidth = n
折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフの線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n)
折れ線の線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線グラフを描画する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線を描画する	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線をプロットする	plt.plot(xdata, ydata, linewidth=n)
線幅nの折れ線を描く	plt.plot(xdata, ydata, linewidth=n)
リストとリストで折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
配列とリストで折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
リストとリストとして折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
数列とデータ列として折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
リストと配列で折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
配列とリストとして折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n)
折れ線グラフをリストと配列でプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)
濃いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いの折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
配列とイテラブルで濃いグラフをプロットして、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
配列とリストで濃いの折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストとイテラブルを用いて濃いの折れ線グラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
濃いの折れ線グラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
リストとイテラブルとして濃いグラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
配列と数列で濃いグラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='deep', linewidth=n)
淡いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いの線幅を指定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いの折れ線グラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いの折れ線グラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストと配列で淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
リストと配列で淡いの折れ線をプロットして、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
数列とリストとして淡いグラフを描画し、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
数列と配列で淡いグラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
淡いの折れ線グラフをリストとリストで描画して、線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', linewidth=n)
パステル調のグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの線幅を指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のの折れ線グラフを描画し、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
配列とリストでパステル調のグラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リストと配列としてパステル調のグラフをプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
リストとリストでパステル調のの折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
パステル調のグラフをプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', linewidth=n)
暗いグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの折れ線グラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いグラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
イテラブルとリストで暗いグラフをプロットし、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
リストとリストとして暗いを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
リストとリストを用いて暗いを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
データ列とリストで暗いグラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
暗いの折れ線をプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', linewidth=n)
明るいグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの折れ線グラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの線幅を指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの折れ線の線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいグラフを描画し、、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストと数列で明るいをプロットし、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
明るいの折れ線グラフをリストとリストで描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
リストとイテラブルで明るいグラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', linewidth=n)
色差別ないグラフの線幅を指定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないの線幅を指定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnにセットする	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnにする	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないグラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストと配列を用いて色差別ないをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないグラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストで色差別ないの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
リストとリストを使って色差別ないグラフを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
色差別ないの折れ線をリストと配列で描いて線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', linewidth=n)
濃いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いの折れ線の色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストのカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ列と数列のカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストのカラーコードの濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストと配列のカラーコードの濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
イテラブルとリストのカラーコードの濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
データ列とリストについてカラーコードの濃いを描画する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストとリストで濃いの折れ線グラフを描いて、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
配列とリストで濃いの折れ線を描画し、、線幅をnに変更する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
配列とリストで濃いの折れ線グラフをプロットし、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いの折れ線を数列とリストで描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
リストと配列として濃いグラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
濃いの折れ線グラフを数列とリストを用いて描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color=rgb)
淡いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いグラフの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストのカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ列と配列のカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストと配列についてカラーコードの淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
配列とリストのカラーコードの淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストと配列についてカラーコードの淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
配列と配列のカラーコードの淡いを描画する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
データ列とイテラブルで淡いの折れ線を描いて、線幅をnにする	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いの折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
リストと数列として淡いの折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いグラフを描いて線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
配列とリストで淡いグラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
淡いをリストと配列で描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color=rgb)
パステル調のグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のグラフの色をカラーコードに変更する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストのカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストと配列についてカラーコードのパステル調のを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとイテラブルについてカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストについてカラーコードのパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
リストとリストとしてパステル調のグラフをプロットして、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
配列とリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
イテラブルと配列としてパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
数列とリストでパステル調のグラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のグラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
パステル調のグラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color=rgb)
暗いグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線の色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストのカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
配列とデータ列のカラーコードの暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストと配列のカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
データ列と配列のカラーコードの暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとイテラブルについてカラーコードの暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストと数列のカラーコードの暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストと数列のカラーコードの暗いグラフをプロットする	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
データ列とリストを使って暗いグラフをプロットして、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
リストとイテラブルで暗いを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
配列とリストで暗いグラフを描いてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線グラフを配列と数列として描いて線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
暗いの折れ線を配列とリストを用いて描き、、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', color=rgb)
明るいグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線の色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線グラフの色をカラーコードに変更する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいグラフの色をカラーコードに変更する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストとリストのカラーコードの明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
配列とリストについてカラーコードの明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストと配列のカラーコードの明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
イテラブルとリストについてカラーコードの明るいを描画する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいグラフをリストと数列で描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線グラフをイテラブルと配列で描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいグラフをリストとリストとして描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいの折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
リストと数列を用いて明るいを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color=rgb)
色差別ないグラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないグラフの色をカラーコードに変更する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないの折れ線の色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないの折れ線グラフの色をカラーコードに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないグラフの色をカラーコードに指定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないグラフの色をカラーコードにする	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストのカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
配列とデータ列のカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
配列と配列のカラーコードの色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
データ列とリストのカラーコードの色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストを用いて色差別ないグラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストとリストを用いて色差別ないグラフを描いて線幅をnにセットする	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
数列とリストで色差別ないグラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないグラフをプロットして、線幅をnにセットする	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
色差別ないグラフをリストとリストとして描画し、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
リストと配列で色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color=rgb)
赤い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤色の濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い濃いの折れ線グラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い濃いの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤色の濃いの折れ線をプロットする	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの色を赤くする	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの色を赤にする	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの折れ線グラフの色を赤くする	plt.plot(xdata, ydata, linestyle='deep', color='r')
リストとリストで濃いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
数列と配列として濃いグラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
濃いグラフをプロットし、、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リストとリストで濃いの折れ線を描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
リストとイテラブルとして濃いの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
数列とリストを用いて濃いをプロットして、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='deep', color='r')
赤い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤色の淡いの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤い淡いの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤色の淡いを描く	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いグラフの色を赤くする	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとリストで淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
数列と配列で淡いグラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとリストを用いて淡いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
リストとリストで淡いを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いグラフを数列と数列で描いてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
データ列とリストとして淡いの折れ線グラフをプロットして、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='muted', color='r')
淡いの折れ線グラフを描いて、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='muted', color='r')
赤いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤いパステル調のの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤色のパステル調のを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤色のパステル調のを描く	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のの折れ線グラフの色を赤くする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のの色を赤色に設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のの色を赤にする	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストとリストでパステル調のグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストと配列でパステル調のを描いて、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフを描いて、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のの折れ線を配列と配列で描画してその線幅をnに変更する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフを描き、、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
パステル調のグラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
リストとリストでパステル調のグラフを描画し、、線幅をnに設定する	plt.plot(xdata, ydata, linestyle='pastel', color='r')
赤い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤色の暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い暗いの折れ線を描く	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い暗いを描く	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いの色を赤色に設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフの色を赤色に設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いの色を赤にする	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストとリストで暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフをリストとリストで描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストと配列で暗いグラフを描き、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストと配列として暗いグラフを描画し、線幅をnにする	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフをリストとリストで描いて、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
リストと配列として暗いグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
暗いグラフをプロットして、線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dark', color='r')
赤い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤色の明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤色の明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤色の明るいの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフの色を赤くする	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいの折れ線の色を赤にする	plt.plot(xdata, ydata, linestyle='bright', color='r')
リストとリストで明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフを描いて、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
明るいグラフを描き、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
リストとリストで明るいを描いて線幅をnに変更する	plt.plot(xdata, ydata, linestyle='bright', color='r')
リストと配列で明るいグラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
配列とリストで明るいを描画し、、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='bright', color='r')
赤い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤色の色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤い色差別ないの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤い色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤い色差別ないの折れ線グラフをプロットする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
赤色の色差別ないの折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないグラフの色を赤にする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないの色を赤くする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないの折れ線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リストとリストで色差別ないグラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
イテラブルと配列として色差別ないグラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
データ列とリストとして色差別ないグラフをプロットしてその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
色差別ないグラフを描画して線幅をnにする	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
数列と配列で色差別ないを描いて、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
リストとデータ列で色差別ないグラフを描画し、、その線幅をnに変更する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
データ列とリストで色差別ないの折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='r')
青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
青色の濃いを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
濃いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
濃いの色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
濃いグラフの色を青くする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
数列とリストの青い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='b')
配列と配列の青い濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストと配列の青い濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストについて青い濃いグラフをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='b')
配列と数列の青い濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの濃いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの濃いを描画し、、その色を青くする	plt.plot(xdata, ydata, linestyle='deep', color='b')
数列とリストの濃いグラフを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの濃いを描画して、色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストとリストの濃いグラフを描いて、色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
リストと数列について濃いをプロットして、その色を青にする	plt.plot(xdata, ydata, linestyle='deep', color='b')
青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
青色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
青色の淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
青い淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='b')
青い淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
淡いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
淡いの色を青くする	plt.plot(xdata, ydata, linestyle='muted', color='b')
淡いグラフの色を青色に設定する	plt.plot(xdata, ydata, linestyle='muted', color='b')
淡いグラフの色を青くする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストと数列の青い淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストと配列について青い淡いを描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストについて青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
数列と配列について青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
数列とデータ列の青色の淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストと配列の青い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとリストの淡いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストとデータ列の淡いグラフを描画して、色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
リストと数列の淡いグラフをプロットして、色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
イテラブルとリストの淡いグラフを描画し、その色を青色に設定する	plt.plot(xdata, ydata, linestyle='muted', color='b')
配列とリストの淡いグラフを描画して、その色を青くする	plt.plot(xdata, ydata, linestyle='muted', color='b')
配列と配列の淡いグラフを描画して、色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
配列とデータ列の淡いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='muted', color='b')
青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青色のパステル調のグラフをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青色のパステル調のを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青いパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青いパステル調のグラフをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のグラフの色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のの色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
パステル調のの色を青くする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストの青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
配列とリストについて青いパステル調のグラフをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストの青色のパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストと数列の青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
数列とイテラブルの青いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストの青色のパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストのパステル調のグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストと数列のパステル調のグラフを描き、、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストと数列のパステル調のを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
リストとリストのパステル調のグラフを描画して、その色を青色に指定する	plt.plot(xdata, ydata, linestyle='pastel', color='b')
データ列とイテラブルのパステル調のを描き、、その色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
配列とリストについてパステル調のグラフを描画してその色を青にする	plt.plot(xdata, ydata, linestyle='pastel', color='b')
青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
青い暗いグラフをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='b')
青色の暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
青い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
暗いグラフの色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
暗いグラフの色を青くする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
データ列とイテラブルの青い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
数列と配列について青い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
数列とリストの青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストと配列の青い暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストと配列の青色の暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='b')
イテラブルと配列について青い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとリストの暗いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとデータ列について暗いグラフを描画して、その色を青くする	plt.plot(xdata, ydata, linestyle='dark', color='b')
配列とイテラブルの暗いグラフを描画し、色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
配列と数列の暗いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストと数列の暗いを描いて色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
配列とリストの暗いグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dark', color='b')
リストとイテラブルについて暗いグラフを描画し、、その色を青くする	plt.plot(xdata, ydata, linestyle='dark', color='b')
青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
青色の明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
青色の明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいグラフの色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいの色を青色に設定する	plt.plot(xdata, ydata, linestyle='bright', color='b')
明るいグラフの色を青くする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
配列とリストについて青い明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストについて青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの青い明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとイテラブルの青い明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストと数列の青色の明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='b')
データ列と配列の青い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいを描画して、その色を青くする	plt.plot(xdata, ydata, linestyle='bright', color='b')
データ列とリストについて明るいグラフを描いて、色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストとリストの明るいをプロットし、、色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
データ列とリストについて明るいを描き、、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストと配列の明るいグラフを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
リストと配列の明るいを描画し、、その色を青にする	plt.plot(xdata, ydata, linestyle='bright', color='b')
青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
青色の色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
色差別ないグラフの色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
色差別ないの色を青色に設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
色差別ないの色を青くする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとデータ列の青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストについて青色の色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの青い色差別ないグラフをプロットする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストについて青い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストについて青い色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
データ列とリストの青色の色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストとリストの色差別ないグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列とイテラブルの色差別ないグラフを描いて、その色を青色に設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列とリストの色差別ないグラフを描いて、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
リストと配列の色差別ないグラフを描画し、、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列と配列について色差別ないグラフを描いてその色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
数列とリストについて色差別ないグラフを描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
配列とリストの色差別ないグラフを描画し、、色を青にする	plt.plot(xdata, ydata, linestyle='colorblind', color='b')
黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
黒い濃いをプロットする	plt.plot(xdata, ydata, linestyle='deep', color='k')
濃いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
濃いの色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
配列と配列の黒い濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストと配列の黒い濃いを描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
数列と数列の黒い濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
イテラブルとリストの黒い濃いグラフを描く	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとイテラブルの黒色の濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
配列と数列の黒色の濃いグラフを描画する	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの濃いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストの濃いグラフをプロットし、、その色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストと配列の濃いグラフを描画し、色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
配列とリストの濃いグラフを描画し、、その色を黒くする	plt.plot(xdata, ydata, linestyle='deep', color='k')
データ列と数列の濃いグラフを描画してその色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストについて濃いグラフを描画してその色を黒色に設定する	plt.plot(xdata, ydata, linestyle='deep', color='k')
リストとリストについて濃いを描画し、、色を黒にする	plt.plot(xdata, ydata, linestyle='deep', color='k')
黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒い淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒い淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒色の淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒くする	plt.plot(xdata, ydata, linestyle='muted', color='k')
淡いグラフの色を黒色に設定する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
配列とリストの黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ列とデータ列の黒い淡いグラフを描画する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの黒い淡いをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='k')
イテラブルとイテラブルの黒色の淡いグラフをプロットする	plt.plot(xdata, ydata, linestyle='muted', color='k')
イテラブルとリストの黒色の淡いグラフを描く	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの淡いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの淡いグラフを描画して、その色を黒色に設定する	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとイテラブルの淡いグラフを描き、、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの淡いグラフを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストの淡いグラフを描いて、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
リストとリストについて淡いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
データ列と配列の淡いグラフを描画し、、色を黒にする	plt.plot(xdata, ydata, linestyle='muted', color='k')
黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
黒いパステル調のを描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
パステル調のグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
パステル調のの色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストの黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストについて黒いパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとイテラブルの黒いパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストと配列の黒色のパステル調のグラフを描く	plt.plot(xdata, ydata, linestyle='pastel', color='k')
データ列とリストの黒いパステル調のグラフをプロットする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
イテラブルとリストの黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
配列とリストの黒いパステル調のグラフを描画する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストのパステル調のグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
データ列とリストのパステル調のグラフを描画し、、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストのパステル調のグラフを描画して、色を黒色に設定する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
配列とイテラブルについてパステル調のグラフをプロットし、、色を黒色に設定する	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストと配列のパステル調のグラフを描画し、、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
リストとリストについてパステル調のグラフを描いて、その色を黒にする	plt.plot(xdata, ydata, linestyle='pastel', color='k')
黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い暗いグラフをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='k')
暗いグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
暗いグラフの色を黒くする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストと配列の黒い暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストと配列の黒い暗いグラフをプロットする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストと配列について黒い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とリストの黒い暗いを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストと数列の黒い暗いグラフを描く	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とリストの黒い暗いグラフを描画する	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの暗いグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとデータ列の暗いグラフを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストと配列について暗いを描き、その色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストの暗いグラフを描画して、色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とデータ列について暗いを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='dark', color='k')
配列とデータ列について暗いグラフを描いて、その色を黒くする	plt.plot(xdata, ydata, linestyle='dark', color='k')
リストとリストについて暗いグラフを描き、、色を黒にする	plt.plot(xdata, ydata, linestyle='dark', color='k')
黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒色の明るいをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒い明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
明るいグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
明るいの色を黒色に設定する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの黒い明るいグラフを描画する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの黒い明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストと配列について黒い明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
配列とリストの黒い明るいグラフを描く	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの黒色の明るいグラフをプロットする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとデータ列の明るいを描いてその色を黒色に設定する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストと数列について明るいグラフを描いて、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいグラフを描画して、その色を黒色に設定する	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストの明るいグラフをプロットし、、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストと配列の明るいを描いて、その色を黒くする	plt.plot(xdata, ydata, linestyle='bright', color='k')
リストとリストについて明るいを描画し、、その色を黒にする	plt.plot(xdata, ydata, linestyle='bright', color='k')
黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
黒色の色差別ないを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
黒い色差別ないをプロットする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
黒色の色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
色差別ないグラフの色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
色差別ないグラフの色を黒色に変更する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
色差別ないグラフの色を黒色に指定する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
データ列とデータ列の黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの黒い色差別ないグラフを描く	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストと配列の黒色の色差別ないを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
配列とリストの黒い色差別ないグラフを描画する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストの色差別ないグラフを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストと数列の色差別ないを描画し、色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
数列とリストの色差別ないグラフを描画し、色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストと配列について色差別ないを描画して、その色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
イテラブルと配列の色差別ないを描いて、色を黒色に設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
配列とリストについて色差別ないを描いて色を黒にする	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストと数列の色差別ないを描画して、色を黒色に設定する	plt.plot(xdata, ydata, linestyle='colorblind', color='k')
リストとリストについて散布図を描画する	plt.scatter(xdata, ydata)
散布図を描画する	plt.scatter(xdata, ydata)
リストとリストの散布図を描画する	plt.scatter(xdata, ydata)
リストとデータ列の散布図をプロットする	plt.scatter(xdata, ydata)
数列とデータ列について散布図をプロットする	plt.scatter(xdata, ydata)
数列とイテラブルについて散布図を描画する	plt.scatter(xdata, ydata)
散布図を描く	plt.scatter(xdata, ydata)
リストとリストについて相関を可視化する	plt.scatter(xdata, ydata)
配列とリストの相関を可視化する	plt.scatter(xdata, ydata)
配列とリストについて相関を可視化する	plt.scatter(xdata, ydata)
散らばりを可視化する	plt.scatter(xdata, ydata)
データ列とデータ列について相関を可視化する	plt.scatter(xdata, ydata)
散布図のマーカーの大きさを指定する	plt.scatter(xdata, ydata, s=n)
散布図のマーカーの大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
散布図のマーカーの大きさをnにする	plt.scatter(xdata, ydata, s=n)
散布図のマーカーの大きさをnに変更する	plt.scatter(xdata, ydata, s=n)
リストを縦軸、リストを横軸として、大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
数列を縦軸配列をx軸として大きさnの散布図を描画する	plt.scatter(xdata, ydata, s=n)
リストをy軸、データ列をx座標として大きさnの散布図をプロットする	plt.scatter(xdata, ydata, s=n)
リストを縦軸、配列を横軸として大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)
データ列をy座標、イテラブルを横軸として大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)
イテラブルを縦軸、データ列を横軸として、大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)
リストとリストについての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
リストとリストの散布図を大きさnでプロットする	plt.scatter(xdata, ydata, s=n)
リストとイテラブルについての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
リストとリストの散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
リストとリストについての散布図を大きさnで描く	plt.scatter(xdata, ydata, s=n)
リストと配列についての散布図を大きさnで描画する	plt.scatter(xdata, ydata, s=n)
リストとリストについて散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストとデータ列の散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
配列とリストについて散布図をプロットして、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストと配列について散布図を描いて、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストとイテラブルについて散布図を描画し、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
リストとリストについて散布図を描画して、その大きさをnに指定する	plt.scatter(xdata, ydata, s=n)
リストと配列の散布図を描画し、、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)
散布図にポイントマーカーを使う	plt.plot(xdata, ydata, marker='.')
ポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.')
ポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.')
ポイントマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, marker='.')
ポイントマーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='.')
ポイントマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='.')
ポイントマーカーとして散布図を描く	plt.plot(xdata, ydata, marker='.')
散布図をポイントマーカーで描画する	plt.plot(xdata, ydata, marker='.')
リストとリストについて散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
データ列と数列について散布図を描画してマーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストと配列について散布図を描画してマーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストとリストの散布図を描いて、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストとリストの散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
数列と数列について散布図を描いてマーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
イテラブルと配列について散布図を描画し、、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')
リストとリストについての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストとデータ列についての散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストと配列についての散布図にポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.')
データ列とリストの散布図にポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.')
リストとデータ列についての散布図にポイントマーカーを描く	plt.plot(xdata, ydata, marker='.')
散布図に丸マーカーを使う	plt.plot(xdata, ydata, marker='o')
散布図に丸マーカーを使用する	plt.plot(xdata, ydata, marker='o')
丸マーカーを散布図に使う	plt.plot(xdata, ydata, marker='o')
丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o')
丸マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='o')
散布図を丸マーカーを使って描画する	plt.plot(xdata, ydata, marker='o')
散布図を丸マーカーで描画する	plt.plot(xdata, ydata, marker='o')
丸マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='o')
リストとリストについて散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストとイテラブルについて散布図をプロットして、マーカーを丸に指定する	plt.plot(xdata, ydata, marker='o')
リストと数列の散布図を描画し、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストとリストの散布図を描き、、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
配列とデータ列について散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
イテラブルとイテラブルの散布図を描画して、マーカーを丸に指定する	plt.plot(xdata, ydata, marker='o')
数列とイテラブルの散布図を描画して、マーカーを丸に設定する	plt.plot(xdata, ydata, marker='o')
リストとリストについての散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
リストとリストについての散布図に丸マーカーを描く	plt.plot(xdata, ydata, marker='o')
数列とリストの散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
リストとリストの散布図に丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')
リストと配列についての散布図に丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o')
リストとデータ列についての散布図に丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o')
散布図に三角マーカーを使う	plt.plot(xdata, ydata, marker='^')
三角マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='^')
散布図に三角マーカーを用いる	plt.plot(xdata, ydata, marker='^')
散布図に▲マーカーを用いる	plt.plot(xdata, ydata, marker='^')
三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^')
散布図を三角マーカーで描画する	plt.plot(xdata, ydata, marker='^')
散布図を三角マーカーでプロットする	plt.plot(xdata, ydata, marker='^')
上三角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='^')
△マーカーで散布図を描く	plt.plot(xdata, ydata, marker='^')
散布図を▲マーカーで描画する	plt.plot(xdata, ydata, marker='^')
リストとリストについて散布図を描画して、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
イテラブルとリストの散布図を描画し、マーカーを三角にセットする	plt.plot(xdata, ydata, marker='^')
リストとデータ列について散布図を描画して、マーカーを▲に設定する	plt.plot(xdata, ydata, marker='^')
リストとリストについて散布図を描画してマーカーを△に設定する	plt.plot(xdata, ydata, marker='^')
リストとリストの散布図を描画し、、マーカーを三角に設定する	plt.plot(xdata, ydata, marker='^')
イテラブルと配列について散布図を描画して、マーカーを上三角に設定する	plt.plot(xdata, ydata, marker='^')
配列とデータ列について散布図を描画し、マーカーを▲に設定する	plt.plot(xdata, ydata, marker='^')
リストとリストについての散布図に三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
リストとリストの散布図に▲マーカーをプロットする	plt.plot(xdata, ydata, marker='^')
リストとリストについての散布図に△マーカーを描く	plt.plot(xdata, ydata, marker='^')
イテラブルとリストについての散布図に上三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
配列と配列についての散布図に上三角マーカーを描画する	plt.plot(xdata, ydata, marker='^')
データ列とリストについての散布図に上三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^')
配列と配列についての散布図に△マーカーを描画する	plt.plot(xdata, ydata, marker='^')
散布図に下三角マーカーを使う	plt.plot(xdata, ydata, marker='v')
散布図に下三角マーカーを用いる	plt.plot(xdata, ydata, marker='v')
散布図に▼マーカーを用いる	plt.plot(xdata, ydata, marker='v')
下三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v')
▽マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='v')
下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v')
下三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='v')
散布図を▼マーカーを用いて描画する	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図を描画して、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図を描画し、、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
配列とデータ列について散布図を描画し、、マーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
イテラブルとリストについて散布図を描いてマーカーを下三角に指定する	plt.plot(xdata, ydata, marker='v')
リストとイテラブルの散布図を描いて、マーカーを▼に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについて散布図を描画してマーカーを下三角に変更する	plt.plot(xdata, ydata, marker='v')
数列とリストについて散布図を描画してマーカーを下三角に設定する	plt.plot(xdata, ydata, marker='v')
リストとリストについての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
リストと配列についての散布図に下三角マーカーを描く	plt.plot(xdata, ydata, marker='v')
配列とリストについての散布図に▽マーカーを描画する	plt.plot(xdata, ydata, marker='v')
リストとデータ列についての散布図に下三角マーカーを描く	plt.plot(xdata, ydata, marker='v')
配列と配列についての散布図に下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v')
リストとリストについての散布図に▽マーカーをプロットする	plt.plot(xdata, ydata, marker='v')
リストと配列についての散布図に▽マーカーをプロットする	plt.plot(xdata, ydata, marker='v')
散布図に左三角マーカーを使う	plt.plot(xdata, ydata, marker='<')
左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<')
散布図を左三角マーカーを使ってプロットする	plt.plot(xdata, ydata, marker='<')
左三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='<')
散布図を左三角マーカーで描く	plt.plot(xdata, ydata, marker='<')
リストとリストについて散布図を描画して、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとイテラブルについて散布図を描いてマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとリストの散布図を描画して、マーカーを左三角に指定する	plt.plot(xdata, ydata, marker='<')
リストと配列について散布図をプロットして、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
数列とリストの散布図を描いてマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとイテラブルについて散布図をプロットして、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
配列と配列について散布図を描いて、マーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')
リストとリストについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
リストと配列についての散布図に左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<')
イテラブルとリストについての散布図に左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<')
リストとリストについての散布図に左三角マーカーを描く	plt.plot(xdata, ydata, marker='<')
リストとリストの散布図に左三角マーカーを描く	plt.plot(xdata, ydata, marker='<')
データ列とリストについての散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')
リストとリストの散布図に左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<')
散布図に右三角マーカーを使う	plt.plot(xdata, ydata, marker='>')
右三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='>')
散布図に右三角マーカーを用いる	plt.plot(xdata, ydata, marker='>')
右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>')
右三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='>')
散布図を右三角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='>')
右三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='>')
散布図を右三角マーカーで描画する	plt.plot(xdata, ydata, marker='>')
右三角マーカーを使って散布図を描く	plt.plot(xdata, ydata, marker='>')
リストとリストについて散布図を描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
リストと配列の散布図を描いてマーカーを右三角にセットする	plt.plot(xdata, ydata, marker='>')
数列と数列について散布図を描画して、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
配列と数列について散布図をプロットして、マーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
配列とリストの散布図を描画してマーカーを右三角に設定する	plt.plot(xdata, ydata, marker='>')
リストとリストについて散布図を描画し、、マーカーを右三角に指定する	plt.plot(xdata, ydata, marker='>')
イテラブルと配列について散布図を描画して、マーカーを右三角にセットする	plt.plot(xdata, ydata, marker='>')
リストとリストについての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
リストと配列についての散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
リストとリストの散布図に右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>')
リストと配列についての散布図に右三角マーカーを描く	plt.plot(xdata, ydata, marker='>')
散布図にバツマーカーを使う	plt.plot(xdata, ydata, marker='x')
クロスマーカーを散布図に使用する	plt.plot(xdata, ydata, marker='x')
バツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x')
バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x')
バツマーカーで散布図を描く	plt.plot(xdata, ydata, marker='x')
クロスマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, marker='x')
散布図をバツマーカーとして描く	plt.plot(xdata, ydata, marker='x')
散布図をクロスマーカーで描画する	plt.plot(xdata, ydata, marker='x')
リストとリストについて散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
配列とデータ列について散布図をプロットして、マーカーをバツに指定する	plt.plot(xdata, ydata, marker='x')
イテラブルとリストについて散布図を描画してマーカーをバツに変更する	plt.plot(xdata, ydata, marker='x')
数列とリストの散布図を描画してマーカーをクロスに設定する	plt.plot(xdata, ydata, marker='x')
イテラブルとリストについて散布図を描いて、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストとリストの散布図を描画し、、マーカーをクロスに指定する	plt.plot(xdata, ydata, marker='x')
イテラブルとリストの散布図を描画して、マーカーをバツに設定する	plt.plot(xdata, ydata, marker='x')
リストとリストについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
リストとイテラブルの散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
配列とリストの散布図にバツマーカーを描く	plt.plot(xdata, ydata, marker='x')
数列とデータ列の散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
データ列とリストについての散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
数列とリストについての散布図にバツマーカーを描く	plt.plot(xdata, ydata, marker='x')
リストとデータ列の散布図にバツマーカーを描画する	plt.plot(xdata, ydata, marker='x')
散布図に大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')
散布図に大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X')
大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X')
大バツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='X')
リストとリストについて散布図を描画して、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
数列とリストについて散布図を描画して、マーカーを大バツに指定する	plt.plot(xdata, ydata, marker='X')
リストとリストの散布図を描画してマーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
リストとデータ列の散布図を描画して、マーカーを大バツにセットする	plt.plot(xdata, ydata, marker='X')
数列とリストについて散布図を描いて、マーカーを大バツに設定する	plt.plot(xdata, ydata, marker='X')
データ列とデータ列について散布図を描画して、マーカーを大バツにする	plt.plot(xdata, ydata, marker='X')
配列とリストについて散布図を描画して、マーカーを大バツに変更する	plt.plot(xdata, ydata, marker='X')
リストとリストについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
配列とリストについての散布図に大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X')
配列とリストの散布図に大バツマーカーを描く	plt.plot(xdata, ydata, marker='X')
散布図に四角マーカーを使う	plt.plot(xdata, ydata, marker='s')
散布図に四角マーカーを用いる	plt.plot(xdata, ydata, marker='s')
四角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='s')
四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s')
散布図を四角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='s')
四角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='s')
リストとリストについて散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
配列とイテラブルについて散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
リストとリストの散布図を描いてマーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
配列とデータ列について散布図を描画して、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
リストとリストについて散布図を描画し、、マーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
リストとリストについて散布図を描いてマーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')
配列と配列について散布図を描画して、マーカーを四角に変更する	plt.plot(xdata, ydata, marker='s')
リストとリストについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
配列とリストの散布図に四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s')
配列と数列の散布図に四角マーカーを描く	plt.plot(xdata, ydata, marker='s')
リストと数列についての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
数列とリストについての散布図に四角マーカーを描画する	plt.plot(xdata, ydata, marker='s')
データ列とリストについての散布図に四角マーカーを描く	plt.plot(xdata, ydata, marker='s')
散布図にダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D')
散布図に菱形マーカーを使う	plt.plot(xdata, ydata, marker='D')
ダイアモンドマーカーを散布図に使う	plt.plot(xdata, ydata, marker='D')
ダイアモンドマーカーを散布図に使用する	plt.plot(xdata, ydata, marker='D')
散布図にダイアモンドマーカーを使用する	plt.plot(xdata, ydata, marker='D')
ダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D')
菱形マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='D')
リストとリストについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
数列とリストについて散布図をプロットして、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
リストとイテラブルの散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
数列と数列の散布図を描画して、マーカーをダイアモンドに指定する	plt.plot(xdata, ydata, marker='D')
リストとデータ列について散布図を描画してマーカーをダイアモンドに変更する	plt.plot(xdata, ydata, marker='D')
リストとリストについて散布図をプロットし、、マーカーを菱形に設定する	plt.plot(xdata, ydata, marker='D')
リストとイテラブルについて散布図を描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')
リストとリストについての散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
配列とリストについての散布図にダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D')
データ列と配列の散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
リストと配列についての散布図に菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D')
イテラブルとリストの散布図にダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D')
リストと数列の散布図にダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D')
散布図に星マーカーを使う	plt.plot(xdata, ydata, marker='*')
散布図に星マーカーを用いる	plt.plot(xdata, ydata, marker='*')
星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*')
星マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='*')
散布図を星マーカーとして描画する	plt.plot(xdata, ydata, marker='*')
星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*')
リストとリストについて散布図を描画して、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
リストとリストの散布図を描いて、マーカーを星に変更する	plt.plot(xdata, ydata, marker='*')
データ列とリストについて散布図を描画して、マーカーを星に指定する	plt.plot(xdata, ydata, marker='*')
配列と配列について散布図を描画し、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
イテラブルとリストについて散布図を描いてマーカーを星に変更する	plt.plot(xdata, ydata, marker='*')
リストと配列の散布図を描画し、、マーカーを星に設定する	plt.plot(xdata, ydata, marker='*')
リストとリストについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
数列とリストについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
リストとイテラブルについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
リストと配列についての散布図に星マーカーを描く	plt.plot(xdata, ydata, marker='*')
データ列とリストの散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')
配列とリストについての散布図に星マーカーをプロットする	plt.plot(xdata, ydata, marker='*')
散布図にカラーコードのポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図にカラーコードのポイントマーカーを使用する	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーを散布図に使用する	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図にカラーコードのポイントマーカーを用いる	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図をカラーコードのポイントマーカーで描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
カラーコードのポイントマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについての散布図にカラーコードのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストの散布図にカラーコードのポイントマーカーを描く	plt.plot(xdata, ydata, marker='.', c=rgb)
データ列とリストについての散布図にカラーコードのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについて散布図を描画して、ポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
配列とデータ列の散布図をプロットし、、ポイントマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='.', c=rgb)
配列とデータ列について散布図を描画して、ポイントマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについて散布図を描画して、ポイントマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='.', c=rgb)
リストとリストについて散布図を描画してポイントマーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='.', c=rgb)
イテラブルとリストについて散布図を描き、、ポイントマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='.', c=rgb)
散布図にカラーコードの丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーを散布図に使う	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図をカラーコードの丸マーカーで描く	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについての散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
配列とリストについての散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーをイテラブルとイテラブルの散布図に描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーをデータ列とデータ列の散布図に描く	plt.plot(xdata, ydata, marker='o', c=rgb)
カラーコードの丸マーカーをリストとリストの散布図にプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストの散布図にカラーコードの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについての散布図にカラーコードの丸マーカーを描く	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについて散布図を描画して、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
数列とリストについて散布図を描画して、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストと配列について散布図を描画して、丸マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストと配列の散布図を描き、、丸マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='o', c=rgb)
リストとリストについて散布図を描画して、丸マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='o', c=rgb)
散布図にカラーコードの三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの三角マーカーを用いる	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの▲マーカーを使用する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの▲マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図をカラーコードの上三角マーカーで描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
カラーコードの▲マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについての散布図にカラーコードの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストと配列についての散布図にカラーコードの上三角マーカーを描く	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとイテラブルの散布図にカラーコードの△マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについての散布図にカラーコードの▲マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストと配列の散布図にカラーコードの三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストの散布図にカラーコードの△マーカーを描画する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとデータ列についての散布図にカラーコードの▲マーカーを描く	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストについて散布図を描画して、三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストと配列について散布図を描き、▲マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストとリストの散布図を描画し、、三角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='^', c=rgb)
リストと配列について散布図を描画して△マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
数列とリストについて散布図を描いて、△マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
配列とデータ列について散布図を描いて、▲マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='^', c=rgb)
配列とリストについて散布図を描いて、▲マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='^', c=rgb)
散布図にカラーコードの下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの▽マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの▼マーカーを使う	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの▽マーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの▼マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについての散布図にカラーコードの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
データ列と数列についての散布図にカラーコードの▽マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとデータ列についての散布図にカラーコードの▽マーカーをプロットする	plt.plot(xdata, ydata, marker='v', c=rgb)
カラーコードの下三角マーカーをイテラブルとリストについての散布図に描く	plt.plot(xdata, ydata, marker='v', c=rgb)
データ列とデータ列についての散布図にカラーコードの▼マーカーを描画する	plt.plot(xdata, ydata, marker='v', c=rgb)
リストとリストについて散布図を描画して、下三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
データ列とデータ列について散布図を描画し、、下三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
配列とリストの散布図を描画し、下三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
配列とリストについて散布図を描画して、下三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
配列と数列について散布図を描画して、▼マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='v', c=rgb)
イテラブルとイテラブルの散布図を描画して、▽マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='v', c=rgb)
散布図にカラーコードの左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図をカラーコードの左三角マーカーで描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='<', c=rgb)
カラーコードの左三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについての散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
配列とリストについての散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
データ列と数列についての散布図にカラーコードの左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについての散布図にカラーコードの左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)
イテラブルとデータ列の散布図にカラーコードの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストについて散布図を描画して、左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとリストの散布図を描画して、左三角マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='<', c=rgb)
データ列とリストの散布図を描画して左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
配列と数列について散布図を描いて、左三角マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='<', c=rgb)
データ列とリストについて散布図をプロットして左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
リストとデータ列について散布図を描き、、左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
数列とリストについて散布図を描画して、左三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)
散布図にカラーコードの右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)
散布図をカラーコードの右三角マーカーを用いてプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについての散布図にカラーコードの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
配列とデータ列の散布図にカラーコードの右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)
数列と配列についての散布図にカラーコードの右三角マーカーを描く	plt.plot(xdata, ydata, marker='>', c=rgb)
リストと配列についての散布図にカラーコードの右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)
カラーコードの右三角マーカーをリストと配列の散布図に描く	plt.plot(xdata, ydata, marker='>', c=rgb)
数列とリストについての散布図にカラーコードの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについての散布図にカラーコードの右三角マーカーを描く	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについて散布図を描画して、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
配列とデータ列の散布図を描画して右三角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='>', c=rgb)
データ列と配列の散布図を描画して、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
配列とリストについて散布図を描いて右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストの散布図を描画し、、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
リストとリストについて散布図を描いて右三角マーカーの色をカラーコードにセットする	plt.plot(xdata, ydata, marker='>', c=rgb)
リストと配列について散布図を描画して、右三角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='>', c=rgb)
散布図にカラーコードのバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図にカラーコードのバツマーカーを用いる	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのクロスマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図をカラーコードのバツマーカーで描く	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについての散布図にカラーコードのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストと配列の散布図にカラーコードのバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとデータ列についての散布図にカラーコードのバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストの散布図にカラーコードのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのバツマーカーをデータ列とリストの散布図に描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
データ列とデータ列についての散布図にカラーコードのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
カラーコードのクロスマーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについて散布図を描画して、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
配列とデータ列の散布図を描いて、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとイテラブルについて散布図を描いて、バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
リストとリストについて散布図を描画して、バツマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='x', c=rgb)
配列とデータ列について散布図を描画して、クロスマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
イテラブルとリストの散布図をプロットし、、バツマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='x', c=rgb)
数列とリストについて散布図を描画してクロスマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)
散布図にカラーコードの大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図にカラーコードの大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについての散布図にカラーコードの大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c=rgb)
データ列と数列についての散布図にカラーコードの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストの散布図にカラーコードの大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c=rgb)
カラーコードの大バツマーカーをイテラブルとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについて散布図を描画して、大バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
リストとリストについて散布図を描画し、大バツマーカーの色をカラーコードにセットする	plt.plot(xdata, ydata, marker='X', c=rgb)
イテラブルとリストについて散布図を描画して大バツマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='X', c=rgb)
散布図にカラーコードの四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にカラーコードの四角マーカーを使用する	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にカラーコードの四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについての散布図にカラーコードの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーをリストとリストの散布図に描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストと配列についての散布図にカラーコードの四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーをデータ列と数列についての散布図にプロットする	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとデータ列についての散布図にカラーコードの四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c=rgb)
カラーコードの四角マーカーを数列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
配列とリストについての散布図にカラーコードの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについて散布図を描画して、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
数列とリストについて散布図を描いて、四角マーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストと配列について散布図を描画して四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストと数列の散布図を描画して、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとデータ列の散布図を描いて四角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='s', c=rgb)
リストとリストについて散布図を描画し、、四角マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)
配列とリストについて散布図を描画し、、四角マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='s', c=rgb)
散布図にカラーコードのダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図にカラーコードのダイアモンドマーカーを用いる	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図にカラーコードの菱形マーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図をカラーコードの菱形マーカーでプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードの菱形マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについての散布図にカラーコードのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードの菱形マーカーをデータ列とリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとデータ列についての散布図にカラーコードのダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)
データ列とリストの散布図にカラーコードのダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードの菱形マーカーをリストと配列の散布図に描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストの散布図にカラーコードのダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)
カラーコードのダイアモンドマーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとリストについて散布図を描画して、ダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストと数列について散布図を描画して、ダイアモンドマーカーの色をカラーコードに変更する	plt.plot(xdata, ydata, marker='D', c=rgb)
配列とデータ列の散布図を描画し、、菱形マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='D', c=rgb)
配列とリストについて散布図を描いてダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストとデータ列について散布図をプロットしてダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
リストと数列について散布図を描画して、ダイアモンドマーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='D', c=rgb)
散布図にカラーコードの星マーカーを使う	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図にカラーコードの星マーカーを用いる	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーを散布図に使う	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについての散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーをデータ列と数列についての散布図に描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストの散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとイテラブルについての散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
データ列と配列についての散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
数列とリストの散布図にカラーコードの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
カラーコードの星マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについて散布図を描画して、星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
数列と配列について散布図をプロットして、星マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='*', c=rgb)
データ列とリストの散布図を描画して星マーカーの色をカラーコードにセットする	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについて散布図をプロットして、星マーカーの色をカラーコードに指定する	plt.plot(xdata, ydata, marker='*', c=rgb)
イテラブルとイテラブルについて散布図を描画して星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストとリストについて散布図をプロットして星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
リストと数列の散布図を描いて星マーカーの色をカラーコードに設定する	plt.plot(xdata, ydata, marker='*', c=rgb)
散布図に赤いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤色のポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤いポイントマーカーを用いる	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')
散布図を赤いポイントマーカーとして描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='.', c='r')
散布図を赤いポイントマーカーで描画する	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーとして散布図を描く	plt.plot(xdata, ydata, marker='.', c='r')
リストとリストについての散布図に赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
配列とデータ列についての散布図に赤いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
リストとリストについての散布図に赤色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='r')
リストとデータ列についての散布図に赤いポイントマーカーを描く	plt.plot(xdata, ydata, marker='.', c='r')
赤いポイントマーカーを数列とデータ列についての散布図に描く	plt.plot(xdata, ydata, marker='.', c='r')
イテラブルとリストの散布図に赤いポイントマーカーを描く	plt.plot(xdata, ydata, marker='.', c='r')
散布図に赤い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='r')
散布図に赤色の丸マーカーを使用する	plt.plot(xdata, ydata, marker='o', c='r')
散布図に赤色の丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤い丸マーカーで描画する	plt.plot(xdata, ydata, marker='o', c='r')
赤色の丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤い丸マーカーとして描画する	plt.plot(xdata, ydata, marker='o', c='r')
散布図を赤い丸マーカーを使って描く	plt.plot(xdata, ydata, marker='o', c='r')
リストとリストについての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
赤い丸マーカーを数列とイテラブルについての散布図にプロットする	plt.plot(xdata, ydata, marker='o', c='r')
イテラブルと配列についての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
配列とリストの散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
データ列とデータ列についての散布図に赤い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='r')
データ列と数列についての散布図に赤い丸マーカーを描く	plt.plot(xdata, ydata, marker='o', c='r')
散布図に赤い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い▲マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い▲マーカーを使用する	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤色の三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い上三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='r')
赤い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
赤色の三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')
散布図を赤い▲マーカーで描画する	plt.plot(xdata, ydata, marker='^', c='r')
散布図を赤色の▲マーカーで描画する	plt.plot(xdata, ydata, marker='^', c='r')
散布図を赤い△マーカーとして描く	plt.plot(xdata, ydata, marker='^', c='r')
リストとリストについての散布図に赤い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
赤い△マーカーをリストとリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='^', c='r')
リストとデータ列の散布図に赤い△マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='r')
赤い三角マーカーをリストと数列についての散布図に描画する	plt.plot(xdata, ydata, marker='^', c='r')
赤い三角マーカーをデータ列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='^', c='r')
リストとリストについての散布図に赤い三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^', c='r')
リストとイテラブルの散布図に赤い三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^', c='r')
散布図に赤い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='r')
散布図に赤い▼マーカーを使う	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤色の▽マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーを使って散布図を描く	plt.plot(xdata, ydata, marker='v', c='r')
散布図を赤い下三角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='v', c='r')
散布図を赤い▽マーカーで描画する	plt.plot(xdata, ydata, marker='v', c='r')
散布図を赤い下三角マーカーとして描く	plt.plot(xdata, ydata, marker='v', c='r')
リストとリストについての散布図に赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤い▽マーカーを配列とイテラブルについての散布図に描く	plt.plot(xdata, ydata, marker='v', c='r')
リストとリストについての散布図に赤色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
赤い下三角マーカーをデータ列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='v', c='r')
リストとイテラブルについての散布図に赤い▽マーカーを描く	plt.plot(xdata, ydata, marker='v', c='r')
リストと配列についての散布図に赤い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')
イテラブルとリストについての散布図に赤い下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', c='r')
散布図に赤い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤い左三角マーカーを用いる	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤色の左三角マーカーを用いる	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='<', c='r')
赤色の左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='r')
散布図を赤い左三角マーカーで描画する	plt.plot(xdata, ydata, marker='<', c='r')
リストとリストについての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
リストと配列の散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーをリストとデータ列の散布図に描く	plt.plot(xdata, ydata, marker='<', c='r')
リストとリストの散布図に赤い左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', c='r')
赤い左三角マーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='<', c='r')
リストと配列についての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
リストと数列についての散布図に赤い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='r')
散布図に赤い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤色の右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤い右三角マーカーを使用する	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤色の右三角マーカーを用いる	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')
散布図を赤色の右三角マーカーで描く	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='>', c='r')
散布図を赤い右三角マーカーとして描画する	plt.plot(xdata, ydata, marker='>', c='r')
リストとリストについての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
赤い右三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='>', c='r')
配列とリストについての散布図に赤色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
データ列と数列についての散布図に赤色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
配列とリストについての散布図に赤い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
リストとリストの散布図に赤い右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c='r')
リストとリストについての散布図に赤色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='r')
散布図に赤いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='r')
赤色のバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤いバツマーカーを用いる	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤色のバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤いクロスマーカーを用いる	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
赤色のクロスマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
散布図を赤色のバツマーカーを使ってプロットする	plt.plot(xdata, ydata, marker='x', c='r')
赤色のバツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='x', c='r')
赤いバツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='x', c='r')
赤色のクロスマーカーで散布図を描く	plt.plot(xdata, ydata, marker='x', c='r')
リストとリストについての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストとリストについての散布図に赤いクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
配列と数列についての散布図に赤いバツマーカーを描く	plt.plot(xdata, ydata, marker='x', c='r')
赤色のクロスマーカーを配列とリストの散布図に描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストとリストについての散布図に赤色のバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストと配列についての散布図に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
リストと配列についての散布図に赤色のバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='r')
散布図に赤い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='X', c='r')
散布図に赤い大バツマーカーを用いる	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='r')
散布図を赤い大バツマーカーで描画する	plt.plot(xdata, ydata, marker='X', c='r')
赤色の大バツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='X', c='r')
赤い大バツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='X', c='r')
リストとリストについての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
イテラブルとリストについての散布図に赤色の大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c='r')
配列とリストについての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
リストと配列についての散布図に赤い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='r')
赤色の大バツマーカーをリストとリストについての散布図に描く	plt.plot(xdata, ydata, marker='X', c='r')
配列とイテラブルについての散布図に赤い大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', c='r')
散布図に赤い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='r')
散布図に赤い四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
散布図を赤い四角マーカーとしてプロットする	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤色の四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='s', c='r')
リストとリストについての散布図に赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤色の四角マーカーをリストとデータ列についての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='r')
赤い四角マーカーをリストと数列についての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='r')
データ列とデータ列についての散布図に赤色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
配列とデータ列についての散布図に赤色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
リストと数列の散布図に赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
配列とリストについての散布図に赤色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='r')
散布図に赤いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
赤色のダイアモンドマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤色のダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤色の菱形マーカーを使う	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
赤色のダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')
散布図を赤色の菱形マーカーで描画する	plt.plot(xdata, ydata, marker='D', c='r')
散布図を赤い菱形マーカーで描画する	plt.plot(xdata, ydata, marker='D', c='r')
リストとリストについての散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
配列と数列についての散布図に赤色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
イテラブルとリストの散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
配列と数列についての散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
赤いダイアモンドマーカーをデータ列と数列についての散布図に描画する	plt.plot(xdata, ydata, marker='D', c='r')
リストとリストについての散布図に赤色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
リストとリストの散布図に赤いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='r')
散布図に赤い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='r')
赤色の星マーカーを散布図に使う	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーを散布図に使う	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='r')
散布図を赤い星マーカーとしてプロットする	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*', c='r')
リストとリストについての散布図に赤い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='r')
リストとリストの散布図に赤い星マーカーを描く	plt.plot(xdata, ydata, marker='*', c='r')
リストとリストについての散布図に赤色の星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', c='r')
赤色の星マーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='*', c='r')
イテラブルとリストについての散布図に赤い星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', c='r')
赤い星マーカーをリストとリストについての散布図にプロットする	plt.plot(xdata, ydata, marker='*', c='r')
散布図に黒いポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='k')
散布図に黒色のポイントマーカーを使う	plt.plot(xdata, ydata, marker='.', c='k')
黒色のポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.', c='k')
散布図に黒いポイントマーカーを使用する	plt.plot(xdata, ydata, marker='.', c='k')
黒いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='k')
散布図を黒いポイントマーカーで描画する	plt.plot(xdata, ydata, marker='.', c='k')
散布図を黒色のポイントマーカーで描画する	plt.plot(xdata, ydata, marker='.', c='k')
黒いポイントマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='.', c='k')
リストとリストについての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
黒色のポイントマーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='.', c='k')
データ列とデータ列についての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
数列とリストについての散布図に黒いポイントマーカーを描く	plt.plot(xdata, ydata, marker='.', c='k')
数列とリストについての散布図に黒いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
配列とリストの散布図に黒色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
リストとデータ列についての散布図に黒色のポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', c='k')
散布図に黒い丸マーカーを使う	plt.plot(xdata, ydata, marker='o', c='k')
散布図に黒い丸マーカーを使用する	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
黒色の丸マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='o', c='k')
リストとリストについての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストとデータ列についての散布図に黒い丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーをリストとリストの散布図に描画する	plt.plot(xdata, ydata, marker='o', c='k')
リストとリストの散布図に黒色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーをリストと配列の散布図にプロットする	plt.plot(xdata, ydata, marker='o', c='k')
黒い丸マーカーをデータ列と配列の散布図に描画する	plt.plot(xdata, ydata, marker='o', c='k')
散布図に黒い三角マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒色の三角マーカーを用いる	plt.plot(xdata, ydata, marker='^', c='k')
黒い▲マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒色の△マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒い三角マーカーを用いる	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーを使って散布図を描く	plt.plot(xdata, ydata, marker='^', c='k')
黒い上三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='^', c='k')
黒い上三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
散布図を黒い△マーカーで描く	plt.plot(xdata, ydata, marker='^', c='k')
黒い▲マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='^', c='k')
黒い三角マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='^', c='k')
リストとリストについての散布図に黒い三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストと数列についての散布図に黒い▲マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストと数列についての散布図に黒い上三角マーカーを描く	plt.plot(xdata, ydata, marker='^', c='k')
数列とデータ列についての散布図に黒色の△マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストとリストについての散布図に黒い△マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
リストと数列についての散布図に黒い三角マーカーを描く	plt.plot(xdata, ydata, marker='^', c='k')
配列と配列についての散布図に黒い上三角マーカーを描画する	plt.plot(xdata, ydata, marker='^', c='k')
散布図に黒い下三角マーカーを使う	plt.plot(xdata, ydata, marker='v', c='k')
黒い下三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='v', c='k')
散布図に黒色の▽マーカーを用いる	plt.plot(xdata, ydata, marker='v', c='k')
黒い下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
黒色の▼マーカーで散布図を描く	plt.plot(xdata, ydata, marker='v', c='k')
黒色の下三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')
散布図を黒い下三角マーカーで描く	plt.plot(xdata, ydata, marker='v', c='k')
リストとリストについての散布図に黒い下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
配列と配列についての散布図に黒色の下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
リストとデータ列についての散布図に黒色の下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', c='k')
配列とデータ列についての散布図に黒い下三角マーカーをプロットする	plt.plot(xdata, ydata, marker='v', c='k')
黒い下三角マーカーを数列と配列についての散布図に描く	plt.plot(xdata, ydata, marker='v', c='k')
データ列と配列の散布図に黒色の▽マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='k')
散布図に黒い左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒い左三角マーカーを用いる	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒色の左三角マーカーを使う	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒色の左三角マーカーを使用する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
散布図を黒い左三角マーカーでプロットする	plt.plot(xdata, ydata, marker='<', c='k')
散布図を黒い左三角マーカーで描画する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='<', c='k')
リストとリストについての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
データ列と配列についての散布図に黒色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
イテラブルとリストの散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーを配列とリストの散布図に描画する	plt.plot(xdata, ydata, marker='<', c='k')
数列とデータ列についての散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
配列とリストの散布図に黒い左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c='k')
黒い左三角マーカーをリストとデータ列の散布図に描く	plt.plot(xdata, ydata, marker='<', c='k')
散布図に黒い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='>', c='k')
黒色の右三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='>', c='k')
散布図に黒い右三角マーカーを使用する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='>', c='k')
散布図を黒い右三角マーカーで描画する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='>', c='k')
散布図を黒い右三角マーカーを使って描く	plt.plot(xdata, ydata, marker='>', c='k')
リストとリストについての散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーを配列とイテラブルについての散布図に描く	plt.plot(xdata, ydata, marker='>', c='k')
黒い右三角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='>', c='k')
リストとデータ列の散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
リストとリストの散布図に黒色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
データ列とリストについての散布図に黒色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')
散布図に黒いバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒いバツマーカーを用いる	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒色のバツマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒いバツマーカーを使用する	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒色のバツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いクロスマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='x', c='k')
散布図を黒いバツマーカーで描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーで散布図を描く	plt.plot(xdata, ydata, marker='x', c='k')
黒色のバツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='x', c='k')
リストとリストについての散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いバツマーカーを配列とリストについての散布図に描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いクロスマーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='x', c='k')
黒いクロスマーカーをイテラブルとリストについての散布図に描く	plt.plot(xdata, ydata, marker='x', c='k')
数列と数列の散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
データ列とリストの散布図に黒いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', c='k')
散布図に黒い大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒い大バツマーカーを使用する	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒色の大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
散布図を黒い大バツマーカーで描く	plt.plot(xdata, ydata, marker='X', c='k')
黒色の大バツマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='X', c='k')
黒い大バツマーカーで散布図を描く	plt.plot(xdata, ydata, marker='X', c='k')
リストとリストについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストとイテラブルの散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
配列とデータ列についての散布図に黒い大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c='k')
リストと数列についての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
リストとリストについての散布図に黒色の大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c='k')
数列とリストについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
配列とリストについての散布図に黒い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c='k')
散布図に黒い四角マーカーを使う	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒色の四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒色の四角マーカーを用いて散布図を描画する	plt.plot(xdata, ydata, marker='s', c='k')
散布図を黒い四角マーカーとして描画する	plt.plot(xdata, ydata, marker='s', c='k')
散布図を黒い四角マーカーで描画する	plt.plot(xdata, ydata, marker='s', c='k')
散布図を黒色の四角マーカーとして描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストとリストについての散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='s', c='k')
黒い四角マーカーを数列とリストの散布図に描く	plt.plot(xdata, ydata, marker='s', c='k')
データ列とリストの散布図に黒い四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c='k')
リストと数列についての散布図に黒い四角マーカーを描く	plt.plot(xdata, ydata, marker='s', c='k')
リストと数列についての散布図に黒色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')
リストとデータ列の散布図に黒い四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s', c='k')
散布図に黒いダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
黒い菱形マーカーを散布図に使う	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒い菱形マーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒いダイアモンドマーカーを使用する	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒色のダイアモンドマーカーを使う	plt.plot(xdata, ydata, marker='D', c='k')
黒いダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
黒色の菱形マーカーで散布図を描く	plt.plot(xdata, ydata, marker='D', c='k')
黒色のダイアモンドマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')
散布図を黒いダイアモンドマーカーで描画する	plt.plot(xdata, ydata, marker='D', c='k')
黒いダイアモンドマーカーで散布図を描く	plt.plot(xdata, ydata, marker='D', c='k')
リストとリストについての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
リストと配列についての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
イテラブルとリストの散布図に黒いダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', c='k')
リストとデータ列についての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
配列と配列についての散布図に黒いダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
リストとリストについての散布図に黒い菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D', c='k')
リストとイテラブルについての散布図に黒色の菱形マーカーをプロットする	plt.plot(xdata, ydata, marker='D', c='k')
散布図に黒い星マーカーを使う	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーを散布図に使う	plt.plot(xdata, ydata, marker='*', c='k')
散布図に黒色の星マーカーを用いる	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーで散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
散布図を黒い星マーカーで描く	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーで散布図を描く	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='*', c='k')
散布図を黒い星マーカーでプロットする	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='*', c='k')
リストとリストについての散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
配列とリストの散布図に黒い星マーカーを描く	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーをリストとリストについての散布図に描く	plt.plot(xdata, ydata, marker='*', c='k')
データ列とリストについての散布図に黒い星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')
黒い星マーカーをリストとリストについての散布図に描画する	plt.plot(xdata, ydata, marker='*', c='k')
リストと配列の散布図に黒色の星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', c='k')
グラフにx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
に鉛直方向の破線を付ける	plt.axvline(x=0, linestyle='dashed')
にx=0の破線を付ける	plt.axvline(x=0, linestyle='dashed')
グラフにx=0の一点鎖線を付ける	plt.axvline(x=0, linestyle='dashbot')
にx=0の一点鎖線をつける	plt.axvline(x=0, linestyle='dashbot')
グラフに鉛直方向の一点鎖線をつける	plt.axvline(x=0, linestyle='dashbot')
に鉛直方向の一点鎖線をつける	plt.axvline(x=0, linestyle='dashbot')
にx=0の一点鎖線を設定する	plt.axvline(x=0, linestyle='dashbot')
グラフにx=0の一点鎖線をつける	plt.axvline(x=0, linestyle='dashbot')
グラフにx=0の点線を付ける	plt.axvline(x=0, linestyle='dotted')
グラフにx=0の点線をつける	plt.axvline(x=0, linestyle='dotted')
にx=0の点線をつける	plt.axvline(x=0, linestyle='dotted')
グラフにx=0の点線を設定する	plt.axvline(x=0, linestyle='dotted')
にx=0の点線を設定する	plt.axvline(x=0, linestyle='dotted')
グラフにx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
グラフにx=0の実線をつける	plt.axvline(x=0, linestyle='solid')
にx=0の実線を付ける	plt.axvline(x=0, linestyle='solid')
グラフにy=0の破線を付ける	plt.axhline(y=0, linestyle='dashed')
グラフにy=0の破線をつける	plt.axhline(y=0, linestyle='dashed')
グラフに水平方向の破線を付ける	plt.axhline(y=0, linestyle='dashed')
に水平方向の破線を付ける	plt.axhline(y=0, linestyle='dashed')
グラフにy=0の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
グラフに水平方向の一点鎖線を付ける	plt.axhline(y=0, linestyle='dashbot')
にy=0の一点鎖線をつける	plt.axhline(y=0, linestyle='dashbot')
グラフにy=0の一点鎖線をつける	plt.axhline(y=0, linestyle='dashbot')
グラフにy=0の点線を付ける	plt.axhline(y=0, linestyle='dotted')
グラフに水平方向の点線を付ける	plt.axhline(y=0, linestyle='dotted')
グラフにy=0の点線をつける	plt.axhline(y=0, linestyle='dotted')
に水平方向の点線を付ける	plt.axhline(y=0, linestyle='dotted')
グラフにy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
にy=0の実線を付ける	plt.axhline(y=0, linestyle='solid')
グラフに水平方向の実線を付ける	plt.axhline(y=0, linestyle='solid')
にy=0の実線を設定する	plt.axhline(y=0, linestyle='solid')
リストに応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストとリストについてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストとリストリストの値に応じて散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
イテラブルとリストについてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストと配列についてリストの値に応じて散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
配列とリストについてリストの値に応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
リストとリストについてリストに応じて、散布図の色を変える	plt.scatter(xdata, ydata, c=aList, cmap='Blues')
カラーバーを描画する	plt.colorbar()
カラーバーを描く	plt.colorbar()
カラーバーを付ける	plt.colorbar()
カラーバーを設定する	plt.colorbar()
カラーバーを横向きで描画する	plt.colorbar(orientation='horizontal')
カラーバーを横向きで描く	plt.colorbar(orientation='horizontal')
カラーバーを横向きに描く	plt.colorbar(orientation='horizontal')
カラーバーを横向きで付ける	plt.colorbar(orientation='horizontal')
カラーバーを水平で付ける	plt.colorbar(orientation='horizontal')
カラーバーを横向きでつける	plt.colorbar(orientation='horizontal')
リストとリストについての散布図に文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストについての散布図にデータラベル用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストとリストの散布図に文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストについての散布図に文字列という凡例用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストとリストの散布図に文字列という凡例用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストと数列の散布図に文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストの散布図をプロットして、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
データ列とリストについて散布図を描画して文字列というデータラベル用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描き、文字列という補足用のラベルをつける	plt.scatter(xdata, xdata, label=s)
リストとリストについて散布図を描いて、文字列という凡例用のラベルをつける	plt.scatter(xdata, xdata, label=s)
イテラブルとリストの散布図を描画して、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
リストとリストの散布図を描画し、、文字列という凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)
ヒストグラムを描画する	plt.hist(データ列)
度数分布図を描画する	plt.hist(データ列)
柱状グラフを描画する	plt.hist(データ列)
リストのヒストグラムを描画する	plt.hist(aList)
リストのヒストグラムを描く	plt.hist(aList)
リストのヒストグラムをプロットする	plt.hist(aList)
リストをヒストグラムで可視化する	plt.hist(aList)
リストをヒストグラムとして可視化する	plt.hist(aList)
ヒストグラムとしてリストを可視化する	plt.hist(aList)
リストを度数分布図で可視化する	plt.hist(aList)
ヒストグラムでリストを可視化する	plt.hist(aList)
リストをヒストグラムにする	plt.hist(aList)
配列のヒストグラムを描画する	plt.hist(aArray)
配列のヒストグラムをプロットする	plt.hist(aArray)
配列の柱状グラフを描く	plt.hist(aArray)
配列をヒストグラムで可視化する	plt.hist(aArray)
配列をヒストグラムとして可視化する	plt.hist(aArray)
ヒストグラムで配列を可視化する	plt.hist(aArray)
配列を度数分布図として可視化する	plt.hist(aArray)
配列をヒストグラムにする	plt.hist(aArray)
配列を柱状図にする	plt.hist(aArray)
データフレームの列のヒストグラムを描画する	plt.hist(df[column])
データフレームのカラムのヒストグラムを描く	plt.hist(df[column])
データフレームの列の度数分布図を描く	plt.hist(df[column])
データフレームの列をヒストグラムで可視化する	plt.hist(df[column])
データフレームの列をヒストグラムを用いて可視化する	plt.hist(df[column])
ヒストグラムを使ってデータフレームの列を可視化する	plt.hist(df[column])
データフレームの列を度数分布図で可視化する	plt.hist(df[column])
データフレームの列をヒストグラムにする	plt.hist(df[column])
データ列のヒストグラムを描画する	plt.hist(ds)
データ列のヒストグラムをプロットする	plt.hist(ds)
データ列の柱状図を描画する	plt.hist(ds)
データ列をヒストグラムで可視化する	plt.hist(ds)
データ列をヒストグラムとして可視化する	plt.hist(ds)
データ列を度数分布図で可視化する	plt.hist(ds)
データ列をヒストグラムにする	plt.hist(ds)
ヒストグラムを半透明にする	plt.hist(データ列, alpha=0.5)
度数分布図を半透明化する	plt.hist(データ列, alpha=0.5)
柱状図を半透明化する	plt.hist(データ列, alpha=0.5)
ヒストグラムを描画して、半透明ににする	plt.hist(データ列, alpha=0.5)
度数分布図を描画して、半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描いて、半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描画し、、半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムを描画して半透明ににする	plt.hist(データ列, alpha=0.5)
ヒストグラムの透明度をxに設定する	plt.hist(データ列, alpha=x)
xに柱状グラフの透明度を設定する	plt.hist(データ列, alpha=x)
ヒストグラムのアルファをxに指定する	plt.hist(データ列, alpha=x)
ヒストグラムの透明度をxに指定する	plt.hist(データ列, alpha=x)
ヒストグラムを描画して、透明度をxに設定する	plt.hist(データ列, alpha=x)
柱状図を描画し、、透明度をxに指定する	plt.hist(データ列, alpha=x)
柱状グラフを描画し、、透明度をxに設定する	plt.hist(データ列, alpha=x)
ヒストグラムを描画して、透明度をxに指定する	plt.hist(データ列, alpha=x)
ヒストグラムのビン数を設定する	plt.hist(データ列, bins=n)
ヒストグラムの区間数を設定する	plt.hist(データ列, bins=n)
度数分布図のビン数を設定する	plt.hist(データ列, bins=n)
ヒストグラムのビンの数を設定する	plt.hist(データ列, bins=n)
ヒストグラムのビン数を指定する	plt.hist(データ列, bins=n)
ヒストグラムのビン数を変更する	plt.hist(データ列, bins=n)
ビン数をnに設定してヒストグラムを描画する	plt.hist(データ列, bins=n)
ヒストグラムをビン数を設定して描く	plt.hist(データ列, bins=n)
区間の数をnに設定してヒストグラムを描画する	plt.hist(データ列, bins=n)
ヒストグラムをビン数をnに設定して描画する	plt.hist(データ列, bins=n)
ビン数を設定してヒストグラムを描画する	plt.hist(データ列, bins=n)
区間数を設定してヒストグラムを描画する	plt.hist(データ列, bins=n)
ビン数nのヒストグラムを描画する	plt.hist(データ列, bins=n)
ビン数nの柱状図を描画する	plt.hist(データ列, bins=n)
区間nのヒストグラムを描画する	plt.hist(データ列, bins=n)
ビン数nの柱状グラフを描画する	plt.hist(データ列, bins=n)
ビン数nのヒストグラムを描く	plt.hist(データ列, bins=n)
ヒストグラムを描画して、ビン数をnに設定する	plt.hist(データ列, bins=n)
度数分布図をプロットし、、ビン数をnに設定する	plt.hist(データ列, bins=n)
度数分布図を描画して、ビンをnに設定する	plt.hist(データ列, bins=n)
ヒストグラムをプロットしてビンをnに設定する	plt.hist(データ列, bins=n)
柱状グラフを描画して、ビン数をnに設定する	plt.hist(データ列, bins=n)
ヒストグラムを描画してビン数をnに変更する	plt.hist(データ列, bins=n)
ヒストグラムを描画して、ビンをnに設定する	plt.hist(データ列, bins=n)
ヒストグラムの範囲を設定する	plt.hist(データ列, range=(start, end))
ヒストグラムの範囲を指定する	plt.hist(データ列, range=(start, end))
度数分布図の区間をセットする	plt.hist(データ列, range=(start, end))
ヒストグラムの区間を変更する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendまでの範囲で描画する	plt.hist(データ列, range=(start, end))
柱状図をstartからendまでの範囲でプロットする	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendの範囲で描画する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendまでの範囲でプロットする	plt.hist(データ列, range=(start, end))
startからendまでの範囲でヒストグラムを描画する	plt.hist(データ列, range=(start, end))
ヒストグラムをstartからendの区間で描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてリストを描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いて配列を描画する	plt.hist(データ列, range=(start, end))
startからendの区間のヒストグラムを用いて数列をプロットする	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてリストを描く	plt.hist(データ列, range=(start, end))
startからendの区間のヒストグラムを用いてリストを描画する	plt.hist(データ列, range=(start, end))
リストをstartからendの区間のヒストグラムを用いて描画する	plt.hist(データ列, range=(start, end))
startからendの範囲のヒストグラムを用いてデータ列を描く	plt.hist(データ列, range=(start, end))
startからendまでヒストグラムにする	plt.hist(データ列, range=(start, end))
startからendの間でヒストグラムにする	plt.hist(データ列, range=(start, end))
ヒストグラムの描画して、正規化する	plt.hist(データ列, density=True)
ヒストグラムの描画し、、正規化する	plt.hist(データ列, density=True)
柱状グラフの描画し、、正規化する	plt.hist(データ列, density=True)
正規化されたヒストグラムを描画する	plt.hist(データ列, density=True)
正規化したヒストグラムを描画する	plt.hist(データ列, density=True)
正規化された柱状図を描画する	plt.hist(データ列, density=True)
正規化されたヒストグラムをプロットする	plt.hist(データ列, density=True)
ヒストグラムを描画し、合計を1にする	plt.hist(データ列, density=True)
ヒストグラムを描画し合計を1にする	plt.hist(データ列, density=True)
柱状図を描画し合計を1にする	plt.hist(データ列, density=True)
二つのデータ列を並べてヒストグラムにする	plt.hist([データ列, データ列2], color=['b', 'r'])
二つのデータ列を並べて柱状図にする	plt.hist([データ列, データ列2], color=['b', 'r'])
2つのデータ列を並べてヒストグラムにする	plt.hist([データ列, データ列2], color=['b', 'r'])
２つのデータ列を並べてヒストグラムにする	plt.hist([データ列, データ列2], color=['b', 'r'])
ヒストグラムを二つ並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
度数分布図を2つ並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
度数分布図を２つ並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
ヒストグラムを２つ並べて描画する	plt.hist([データ列, データ列2], color=['b', 'r'])
二つ並べてヒストグラムをプロットする	plt.hist([データ列, データ列2], color=['b', 'r'])
データ列を箱ひげ図で描画する	plt.boxplot(データ列)
データ列をボックスチャートで描画する	plt.boxplot(データ列)
データ列を箱ひげ図で描く	plt.boxplot(データ列)
データ列を箱髭図で描画する	plt.boxplot(データ列)
データ列を箱ひげ図にする	plt.boxplot(データ列)
箱ひげ図でデータ列を可視化する	plt.boxplot(データ列)
ボックスチャートとしてデータ列を可視化する	plt.boxplot(データ列)
箱ひげ図としてデータ列を可視化する	plt.boxplot(データ列)
箱ひげ図を使ってデータ列を可視化する	plt.boxplot(データ列)
二つのデータ列を並べて箱ひげ図にする	plt.boxplot([データ列, データ列2])
２つのデータ列を並べて箱ひげ図にする	plt.boxplot([データ列, データ列2])
二つのデータ列を並べて箱ヒゲ図にする	plt.boxplot([データ列, データ列2])
2つのデータ列を並べて箱ひげ図にする	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べて描画する	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べてプロットする	plt.boxplot([データ列, データ列2])
箱ひげ図を２つ並べて描画する	plt.boxplot([データ列, データ列2])
箱ひげ図を横に並べてプロットする	plt.boxplot([データ列, データ列2])
箱ひげ図を横に並べて描画する	plt.boxplot([データ列, データ列2])
ボックスチャートを二つ並べて描く	plt.boxplot([データ列, データ列2])
２つ並べて箱ひげ図を描画する	plt.boxplot([データ列, データ列2])
箱ひげ図を二つ並べる	plt.boxplot([データ列, データ列2])
箱ひげ図を２つ並べる	plt.boxplot([データ列, データ列2])
箱ひげ図を2つ並べる	plt.boxplot([データ列, データ列2])
二つのカラムを並べて箱ひげ図にする	plt.boxplot([df[column], df[column2]])
２つの列を並べてボックスチャートにする	plt.boxplot([df[column], df[column2]])
二つのカラムを並べて箱髭図にする	plt.boxplot([df[column], df[column2]])
２つのカラムを並べて箱髭図にする	plt.boxplot([df[column], df[column2]])
二つのカラムを並べてボックスチャートにする	plt.boxplot([df[column], df[column2]])
棒グラフを描画する	plt.bar(ラベル列, データ列)
棒をプロットする	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、棒グラフを描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、棒グラフを描く	plt.bar(ラベル列, データ列)
データ列とラベルを指定して棒グラフを描画する	plt.bar(ラベル列, データ列)
縦棒グラフを描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、縦棒グラフを描画する	plt.bar(ラベル列, データ列)
データ列とラベルを指定して、縦棒グラフをプロットする	plt.bar(ラベル列, データ列)
横棒グラフを描画する	plt.barh(ラベル列, データ列)
横棒グラフを描く	plt.barh(ラベル列, データ列)
横棒を描く	plt.barh(ラベル列, データ列)
横棒グラフをプロットする	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して、横棒グラフを描画する	plt.barh(ラベル列, データ列)
データ列とラベル列を指定して横棒グラフを描画する	plt.barh(ラベル列, データ列)
棒グラフの色をカラーコードに設定する	plt.bar(ラベル列, データ列, color=rgb)
カラーコードに棒グラフの色を設定する	plt.bar(ラベル列, データ列, color=rgb)
棒の色をカラーコードに設定する	plt.bar(ラベル列, データ列, color=rgb)
棒グラフの色をカラーコードに指定する	plt.bar(ラベル列, データ列, color=rgb)
横棒グラフの色をカラーコードに設定する	plt.barh(ラベル列, データ列, color=rgb)
カラーコードに横棒グラフの色を設定する	plt.barh(ラベル列, データ列, color=rgb)
カラーコードに横棒グラフの色を指定する	plt.barh(ラベル列, データ列, color=rgb)
カラーコードに横棒の色を設定する	plt.barh(ラベル列, データ列, color=rgb)
横棒グラフの色をセットする	plt.barh(ラベル列, データ列, color=rgb)
棒グラフを積み上げにする	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
棒を積み上げにする	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
縦棒グラフを積み上げにする	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ棒グラフを描画する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ棒を描画する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ棒を描く	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ棒グラフを描画する	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ棒グラフを描く	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して積み上げ棒グラフを描く	"plt.bar(ラベル列, データ列, bottom=データ列2, color=""red"")"
横棒グラフを積み上げにする	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ横棒グラフを描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して積み上げ横棒グラフを描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
積み上げ横棒グラフを描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ横棒グラフを描く	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
データ列とラベル列を指定して、積み上げ横棒を描画する	"plt.barh(ラベル列, データ列, bottom=データ列2, color=""red"")"
棒グラフを描画して、グラフ幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフを描画して、棒の幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフをプロットし、xに棒の幅を変更する	plt.bar(ラベル列, データ列, width=x)
棒グラフを描いて幅をxに変更する	plt.bar(ラベル列, データ列, width=x)
棒グラフを描画して幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフを描画して、棒の幅をxに指定する	plt.bar(ラベル列, データ列, width=x)
棒グラフの幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒の幅をxに設定する	plt.bar(ラベル列, データ列, width=x)
棒グラフの幅をxに指定する	plt.bar(ラベル列, データ列, width=x)
横棒グラフを描画して、グラフ幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフを描画して、グラフ幅をxに指定する	plt.barh(ラベル列, データ列, width=x)
横棒をプロットして、グラフ幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒を描画して、グラフ幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフをプロットしてxに棒の幅を設定する	plt.barh(ラベル列, データ列, width=x)
横棒を描画してグラフ幅をxに変更する	plt.barh(ラベル列, データ列, width=x)
横棒グラフを描いて、棒の幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフの幅をxに設定する	plt.barh(ラベル列, データ列, width=x)
xに横棒グラフの幅を変更する	plt.barh(ラベル列, データ列, width=x)
xに横棒グラフの幅を設定する	plt.barh(ラベル列, データ列, width=x)
横棒グラフの幅をxにする	plt.barh(ラベル列, データ列, width=x)
横棒グラフの幅をxに指定する	plt.barh(ラベル列, データ列, width=x)
棒グラフを描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
棒グラフを描いて、中央寄せする	plt.bar(ラベル列, データ列, align='center')
棒を描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
棒グラフをプロットして、中央寄せする	plt.bar(ラベル列, データ列, align='center')
縦棒グラフを描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
縦棒グラフを描画し、、中央寄せする	plt.bar(ラベル列, データ列, align='center')
縦棒を描画して、中央寄せする	plt.bar(ラベル列, データ列, align='center')
横棒グラフを描画して、中央寄せする	plt.barh(ラベル列, データ列, align='center')
横棒グラフを描画し、中央寄せする	plt.barh(ラベル列, データ列, align='center')
横棒グラフを描画し、、中央寄せする	plt.barh(ラベル列, データ列, align='center')
横棒を描いて、中央寄せする	plt.barh(ラベル列, データ列, align='center')
横棒をプロットして中央寄せする	plt.barh(ラベル列, データ列, align='center')
複数カラムの散布図を一度に描画する	sns.pairplot(df[[column, column2, column3]])
複数カラムの散布図を描画する	sns.pairplot(df[[column, column2, column3]])
複数カラムの散布図を一度に描く	sns.pairplot(df[[column, column2, column3]])
複数カラムのヒストグラムを一度に描画する	sns.pairplot(df[[column, column2, column3]])
複数列の散布図を一度に描画する	sns.pairplot(df[[column, column2, column3]])
複数列の度数分布図を一度に描く	sns.pairplot(df[[column, column2, column3]])
複数カラムの関係性を一度に描く	sns.pairplot(df[[column, column2, column3]])
＜オプション＞アリスブルー色を使う	color = 'aliceblue'
＜オプション＞アリスブルー色を使用する	color = 'aliceblue'
＜オプション＞グラフの色をアリスブルーに設定する	color = 'aliceblue'
＜オプション＞色をアリスブルーに設定する	color = 'aliceblue'
＜オプション＞グラフの色をアリスブルーに指定する	color = 'aliceblue'
＜オプション＞アンティークホワイト色を使う	color = 'antiquewhite'
＜オプション＞アンティークホワイト色を用いる	color = 'antiquewhite'
＜オプション＞グラフの色をアンティークホワイトに設定する	color = 'antiquewhite'
＜オプション＞アンティークホワイトに色を設定する	color = 'antiquewhite'
＜オプション＞アンティークホワイトにグラフの色を設定する	color = 'antiquewhite'
＜オプション＞アクア色を使う	color = 'aqua'
＜オプション＞アクア色を用いる	color = 'aqua'
＜オプション＞グラフの色をアクアに設定する	color = 'aqua'
＜オプション＞グラフの色をアクアに変更する	color = 'aqua'
＜オプション＞アクアに色をセットする	color = 'aqua'
＜オプション＞色をアクアに変更する	color = 'aqua'
＜オプション＞色をアクアに設定する	color = 'aqua'
＜オプション＞アクアマリン色を使う	color = 'aquamarine'
＜オプション＞アクアマリン色を使用する	color = 'aquamarine'
＜オプション＞アクアマリン色を用いる	color = 'aquamarine'
＜オプション＞グラフの色をアクアマリンに設定する	color = 'aquamarine'
＜オプション＞アクアマリンにグラフの色を設定する	color = 'aquamarine'
＜オプション＞色をアクアマリンに設定する	color = 'aquamarine'
＜オプション＞紺碧色を使う	color = 'azure'
＜オプション＞紺碧色を用いる	color = 'azure'
＜オプション＞紺碧を用いる	color = 'azure'
＜オプション＞紺碧を使用する	color = 'azure'
＜オプション＞グラフの色を紺碧に設定する	color = 'azure'
＜オプション＞色を紺碧に設定する	color = 'azure'
＜オプション＞グラフの色を紺碧に指定する	color = 'azure'
＜オプション＞色を紺碧にする	color = 'azure'
＜オプション＞ベージュ色を使う	color = 'beige'
＜オプション＞ベージュを使う	color = 'beige'
＜オプション＞ベージュ色を用いる	color = 'beige'
＜オプション＞グラフの色をベージュに設定する	color = 'beige'
＜オプション＞色をベージュに指定する	color = 'beige'
＜オプション＞ビスク色を使う	color = 'bisque'
＜オプション＞ビスク色を用いる	color = 'bisque'
＜オプション＞グラフの色をビスクに設定する	color = 'bisque'
＜オプション＞色をビスクに指定する	color = 'bisque'
＜オプション＞ビスクにグラフの色を設定する	color = 'bisque'
＜オプション＞ブラック色を使う	color = 'black'
＜オプション＞ブラックを用いる	color = 'black'
＜オプション＞ブラック色を用いる	color = 'black'
＜オプション＞グラフの色をブラックに設定する	color = 'black'
＜オプション＞色をブラックに設定する	color = 'black'
＜オプション＞ブランチドアーモンド色を使う	color = 'blanchedalmond'
＜オプション＞ブランチドアーモンドを使う	color = 'blanchedalmond'
＜オプション＞グラフの色をブランチドアーモンドに設定する	color = 'blanchedalmond'
＜オプション＞色をブランチドアーモンドに設定する	color = 'blanchedalmond'
＜オプション＞色をブランチドアーモンドに指定する	color = 'blanchedalmond'
＜オプション＞グラフの色をブランチドアーモンドに指定する	color = 'blanchedalmond'
＜オプション＞青色を使う	color = 'blue'
＜オプション＞青色を用いる	color = 'blue'
＜オプション＞青を使う	color = 'blue'
＜オプション＞グラフの色を青に設定する	color = 'blue'
＜オプション＞色を青に設定する	color = 'blue'
＜オプション＞グラフの色を青にセットする	color = 'blue'
＜オプション＞青にグラフの色を設定する	color = 'blue'
＜オプション＞グラフの色を青に指定する	color = 'blue'
＜オプション＞ブルーバイオレット色を使う	color = 'blueviolet'
＜オプション＞ブルーバイオレット色を用いる	color = 'blueviolet'
＜オプション＞ブルーバイオレットを使う	color = 'blueviolet'
＜オプション＞グラフの色をブルーバイオレットに設定する	color = 'blueviolet'
＜オプション＞色をブルーバイオレットに設定する	color = 'blueviolet'
＜オプション＞色をブルーバイオレットに指定する	color = 'blueviolet'
＜オプション＞茶色色を使う	color = 'brown'
＜オプション＞茶色を用いる	color = 'brown'
＜オプション＞茶色を使う	color = 'brown'
＜オプション＞グラフの色を茶色に設定する	color = 'brown'
＜オプション＞グラフの色をブラウンに設定する	color = 'brown'
＜オプション＞色を茶色に設定する	color = 'brown'
＜オプション＞バリーウッド色を使う	color = 'burlywood'
＜オプション＞バリーウッド色を使用する	color = 'burlywood'
＜オプション＞グラフの色をバリーウッドに設定する	color = 'burlywood'
＜オプション＞グラフの色をバリーウッドに変更する	color = 'burlywood'
＜オプション＞バリーウッドにグラフの色を変更する	color = 'burlywood'
＜オプション＞カデットブルー色を使う	color = 'cadetblue'
＜オプション＞カデットブルーを使う	color = 'cadetblue'
＜オプション＞カデットブルー色を用いる	color = 'cadetblue'
＜オプション＞グラフの色をカデットブルーに設定する	color = 'cadetblue'
＜オプション＞カデットブルーにグラフの色を指定する	color = 'cadetblue'
＜オプション＞色をカデットブルーにセットする	color = 'cadetblue'
＜オプション＞グラフの色をカデットブルーにセットする	color = 'cadetblue'
＜オプション＞グラフの色をカデットブルーに変更する	color = 'cadetblue'
＜オプション＞シャルトリューズ色を使う	color = 'chartreuse'
＜オプション＞黄緑を使用する	color = 'chartreuse'
＜オプション＞シャルトリューズ色を用いる	color = 'chartreuse'
＜オプション＞黄緑色を用いる	color = 'chartreuse'
＜オプション＞シャルトリューズ色を使用する	color = 'chartreuse'
＜オプション＞グラフの色をシャルトリューズに設定する	color = 'chartreuse'
＜オプション＞シャルトリューズに色をする	color = 'chartreuse'
＜オプション＞シャルトリューズにグラフの色をする	color = 'chartreuse'
＜オプション＞色をシャルトリューズに設定する	color = 'chartreuse'
＜オプション＞シャルトリューズにグラフの色を設定する	color = 'chartreuse'
＜オプション＞チョコレート色を使う	color = 'chocolate'
＜オプション＞チョコレート色を使用する	color = 'chocolate'
＜オプション＞チョコレートを使う	color = 'chocolate'
＜オプション＞グラフの色をチョコレートに設定する	color = 'chocolate'
＜オプション＞チョコレートにグラフの色を設定する	color = 'chocolate'
＜オプション＞色をチョコレートに変更する	color = 'chocolate'
＜オプション＞コーラル色を使う	color = 'coral'
＜オプション＞コーラルを使う	color = 'coral'
＜オプション＞グラフの色をコーラルに設定する	color = 'coral'
＜オプション＞グラフの色をコーラルに指定する	color = 'coral'
＜オプション＞コーンフラワーブルー色を使う	color = 'cornflowerblue'
＜オプション＞やわらかい青を用いる	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルーを使う	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルーを使用する	color = 'cornflowerblue'
＜オプション＞やわらかい青色を使う	color = 'cornflowerblue'
＜オプション＞グラフの色をコーンフラワーブルーに設定する	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルーにグラフの色を設定する	color = 'cornflowerblue'
＜オプション＞コーンフラワーブルーにグラフの色を指定する	color = 'cornflowerblue'
＜オプション＞グラフの色をコーンフラワーブルーに変更する	color = 'cornflowerblue'
＜オプション＞やわらかい青にグラフの色を設定する	color = 'cornflowerblue'
＜オプション＞コーンズシルク色を使う	color = 'cornsilk'
＜オプション＞コーンズシルクを用いる	color = 'cornsilk'
＜オプション＞コーンズシルクを使う	color = 'cornsilk'
＜オプション＞コーンズシルク色を使用する	color = 'cornsilk'
＜オプション＞コーンズシルク色を用いる	color = 'cornsilk'
＜オプション＞グラフの色をコーンズシルクに設定する	color = 'cornsilk'
＜オプション＞コーンズシルクに色を設定する	color = 'cornsilk'
＜オプション＞コーンズシルクにグラフの色を設定する	color = 'cornsilk'
＜オプション＞コーンズシルクに色を指定する	color = 'cornsilk'
＜オプション＞クリムゾン色を使う	color = 'crimson'
＜オプション＞深紅を使う	color = 'crimson'
＜オプション＞クリムゾンを用いる	color = 'crimson'
＜オプション＞クリムゾン色を用いる	color = 'crimson'
＜オプション＞グラフの色をクリムゾンに設定する	color = 'crimson'
＜オプション＞グラフの色を真紅に設定する	color = 'crimson'
＜オプション＞色を真紅に設定する	color = 'crimson'
＜オプション＞グラフの色を深紅に設定する	color = 'crimson'
＜オプション＞グラフの色を深紅にする	color = 'crimson'
＜オプション＞シアン色を使う	color = 'cyan'
＜オプション＞シアン色を使用する	color = 'cyan'
＜オプション＞シアン色を用いる	color = 'cyan'
＜オプション＞グラフの色をシアンに設定する	color = 'cyan'
＜オプション＞グラフの色をシアンに変更する	color = 'cyan'
＜オプション＞シアンに色を設定する	color = 'cyan'
＜オプション＞シアンにグラフの色をする	color = 'cyan'
＜オプション＞紺色を使う	color = 'darkblue'
＜オプション＞ダークブルーを使う	color = 'darkblue'
＜オプション＞ダークブルー色を使う	color = 'darkblue'
＜オプション＞紺を使う	color = 'darkblue'
＜オプション＞グラフの色を紺に設定する	color = 'darkblue'
＜オプション＞グラフの色を紺に変更する	color = 'darkblue'
＜オプション＞ダークブルーにグラフの色を設定する	color = 'darkblue'
＜オプション＞紺にグラフの色を指定する	color = 'darkblue'
＜オプション＞グラフの色をダークブルーに設定する	color = 'darkblue'
＜オプション＞ダークシアン色を使う	color = 'darkcyan'
＜オプション＞濃いシアン色を使う	color = 'darkcyan'
＜オプション＞ダークシアンを使う	color = 'darkcyan'
＜オプション＞ダークシアン色を用いる	color = 'darkcyan'
＜オプション＞グラフの色をダークシアンに設定する	color = 'darkcyan'
＜オプション＞ダークシアンに色を設定する	color = 'darkcyan'
＜オプション＞ダークゴールデンロッド色を使う	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッド色を用いる	color = 'darkgoldenrod'
＜オプション＞グラフの色をダークゴールデンロッドに設定する	color = 'darkgoldenrod'
＜オプション＞ダークゴールデンロッドにグラフの色を設定する	color = 'darkgoldenrod'
＜オプション＞色をダークゴールデンロッドにする	color = 'darkgoldenrod'
＜オプション＞ダークグレー色を使う	color = 'darkgray'
＜オプション＞ダークグレー色を用いる	color = 'darkgray'
＜オプション＞グラフの色をダークグレーに設定する	color = 'darkgray'
＜オプション＞色をダークグレーに設定する	color = 'darkgray'
＜オプション＞ダークグレーにグラフの色を設定する	color = 'darkgray'
＜オプション＞ダークグリーン色を使う	color = 'darkgreen'
＜オプション＞ダークグリーンを使用する	color = 'darkgreen'
＜オプション＞ダークグリーン色を用いる	color = 'darkgreen'
＜オプション＞グラフの色をダークグリーンに設定する	color = 'darkgreen'
＜オプション＞ダークグリーンに色を設定する	color = 'darkgreen'
＜オプション＞色をダークグリーンに指定する	color = 'darkgreen'
＜オプション＞ダークグリーンにグラフの色を設定する	color = 'darkgreen'
＜オプション＞ダークグリーンにグラフの色を指定する	color = 'darkgreen'
＜オプション＞ダークグレー色を使う	color = 'darkgrey'
＜オプション＞ダークグレー色を使用する	color = 'darkgrey'
＜オプション＞グラフの色をダークグレーに設定する	color = 'darkgrey'
＜オプション＞色をダークグレーに設定する	color = 'darkgrey'
＜オプション＞色をダークグレーに指定する	color = 'darkgrey'
＜オプション＞ダークカーキ色を使う	color = 'darkkhaki'
＜オプション＞ダークカーキを用いる	color = 'darkkhaki'
＜オプション＞グラフの色をダークカーキに設定する	color = 'darkkhaki'
＜オプション＞色をダークカーキに設定する	color = 'darkkhaki'
＜オプション＞ダークマゼンタ色を使う	color = 'darkmagenta'
＜オプション＞ダークマゼンタ色を用いる	color = 'darkmagenta'
＜オプション＞グラフの色をダークマゼンタに設定する	color = 'darkmagenta'
＜オプション＞グラフの色をダークマゼンタに変更する	color = 'darkmagenta'
＜オプション＞ダークマゼンタにグラフの色をする	color = 'darkmagenta'
＜オプション＞グラフの色をダークマゼンタに指定する	color = 'darkmagenta'
＜オプション＞ダークマゼンタにグラフの色を設定する	color = 'darkmagenta'
＜オプション＞ダークオリーブグリーン色を使う	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーンを使う	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーン色を用いる	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーンを用いる	color = 'darkolivegreen'
＜オプション＞グラフの色をダークオリーブグリーンに設定する	color = 'darkolivegreen'
＜オプション＞グラフの色をダークオリーブグリーンに変更する	color = 'darkolivegreen'
＜オプション＞ダークオリーブグリーンにグラフの色を設定する	color = 'darkolivegreen'
＜オプション＞色をダークオリーブグリーンにセットする	color = 'darkolivegreen'
＜オプション＞色をダークオリーブグリーンに設定する	color = 'darkolivegreen'
＜オプション＞ダークオレンジ色を使う	color = 'darkorange'
＜オプション＞ダークオレンジを使う	color = 'darkorange'
＜オプション＞ダークオレンジを使用する	color = 'darkorange'
＜オプション＞グラフの色をダークオレンジに設定する	color = 'darkorange'
＜オプション＞ダークオレンジにグラフの色を設定する	color = 'darkorange'
＜オプション＞ダークオレンジにグラフの色を指定する	color = 'darkorange'
＜オプション＞色をダークオレンジに設定する	color = 'darkorange'
＜オプション＞ダークオレンジに色を指定する	color = 'darkorange'
＜オプション＞ダークオーキッド色を使う	color = 'darkorchid'
＜オプション＞ダークオーキッドを使う	color = 'darkorchid'
＜オプション＞グラフの色をダークオーキッドに設定する	color = 'darkorchid'
＜オプション＞グラフの色をダークオーキッドに変更する	color = 'darkorchid'
＜オプション＞ダークオーキッドに色を設定する	color = 'darkorchid'
＜オプション＞色をダークオーキッドに指定する	color = 'darkorchid'
＜オプション＞ダークオーキッドにグラフの色を変更する	color = 'darkorchid'
＜オプション＞暗い赤色を使う	color = 'darkred'
＜オプション＞暗い赤色を使用する	color = 'darkred'
＜オプション＞ダークレッドを使う	color = 'darkred'
＜オプション＞暗い赤を使う	color = 'darkred'
＜オプション＞グラフの色を暗い赤に設定する	color = 'darkred'
＜オプション＞色をダークレッドに設定する	color = 'darkred'
＜オプション＞グラフの色を暗い赤にセットする	color = 'darkred'
＜オプション＞暗い赤にグラフの色を変更する	color = 'darkred'
＜オプション＞色を暗い赤に設定する	color = 'darkred'
＜オプション＞ダークサーモン色を使う	color = 'darksalmon'
＜オプション＞ダークサーモン色を用いる	color = 'darksalmon'
＜オプション＞ダークサーモンを使う	color = 'darksalmon'
＜オプション＞グラフの色をダークサーモンに設定する	color = 'darksalmon'
＜オプション＞ダークサーモンに色を設定する	color = 'darksalmon'
＜オプション＞色をダークサーモンに設定する	color = 'darksalmon'
＜オプション＞色をダークサーモンに変更する	color = 'darksalmon'
＜オプション＞ダークシアグリーン色を使う	color = 'darkseagreen'
＜オプション＞ダークシアグリーンを使う	color = 'darkseagreen'
＜オプション＞ダークシアグリーン色を使用する	color = 'darkseagreen'
＜オプション＞グラフの色をダークシアグリーンに設定する	color = 'darkseagreen'
＜オプション＞色をダークシアグリーンにセットする	color = 'darkseagreen'
＜オプション＞ダークスレートブルー色を使う	color = 'darkslateblue'
＜オプション＞ダークスレートブルー色を用いる	color = 'darkslateblue'
＜オプション＞ダークスレートブルーを使う	color = 'darkslateblue'
＜オプション＞グラフの色をダークスレートブルーに設定する	color = 'darkslateblue'
＜オプション＞グラフの色をダークスレートブルーにセットする	color = 'darkslateblue'
＜オプション＞グラフの色をダークスレートブルーに変更する	color = 'darkslateblue'
＜オプション＞ダークスレートブルーにグラフの色を設定する	color = 'darkslateblue'
＜オプション＞ダークスラテグレー色を使う	color = 'darkslategray'
＜オプション＞ダークスラテグレー色を用いる	color = 'darkslategray'
＜オプション＞ダークスラテグレー色を使用する	color = 'darkslategray'
＜オプション＞ダークスラテグレーを用いる	color = 'darkslategray'
＜オプション＞グラフの色をダークスラテグレーに設定する	color = 'darkslategray'
＜オプション＞ダークスラテグレーにグラフの色を設定する	color = 'darkslategray'
＜オプション＞グラフの色をダークスラテグレーにセットする	color = 'darkslategray'
＜オプション＞色をダークスラテグレーに設定する	color = 'darkslategray'
＜オプション＞ダーク・スラテグレー色を使う	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーを使う	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーを用いる	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーを使用する	color = 'darkslategrey'
＜オプション＞グラフの色をダーク・スラテグレーに設定する	color = 'darkslategrey'
＜オプション＞グラフの色をダーク・スラテグレーにセットする	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーに色を設定する	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーにグラフの色を設定する	color = 'darkslategrey'
＜オプション＞ダーク・スラテグレーに色を指定する	color = 'darkslategrey'
＜オプション＞ダークターコイズ色を使う	color = 'darkturquoise'
＜オプション＞ダークターコイズ色を用いる	color = 'darkturquoise'
＜オプション＞ダークターコイズを用いる	color = 'darkturquoise'
＜オプション＞グラフの色をダークターコイズに設定する	color = 'darkturquoise'
＜オプション＞色をダークターコイズにセットする	color = 'darkturquoise'
＜オプション＞色をダークターコイズに変更する	color = 'darkturquoise'
＜オプション＞色をダークターコイズに指定する	color = 'darkturquoise'
＜オプション＞ダークターコイズにグラフの色をセットする	color = 'darkturquoise'
＜オプション＞グラフの色をダークターコイズに変更する	color = 'darkturquoise'
＜オプション＞ダークバイオレット色を使う	color = 'darkviolet'
＜オプション＞ダークバイオレットを使う	color = 'darkviolet'
＜オプション＞グラフの色をダークバイオレットに設定する	color = 'darkviolet'
＜オプション＞色をダークバイオレットにする	color = 'darkviolet'
＜オプション＞色をダークバイオレットに設定する	color = 'darkviolet'
＜オプション＞デピンク色を使う	color = 'deeppink'
＜オプション＞デピンク色を使用する	color = 'deeppink'
＜オプション＞デピンク色を用いる	color = 'deeppink'
＜オプション＞グラフの色をデピンクに設定する	color = 'deeppink'
＜オプション＞グラフの色をデピンクに指定する	color = 'deeppink'
＜オプション＞色をデピンクに変更する	color = 'deeppink'
＜オプション＞デピンクにグラフの色を設定する	color = 'deeppink'
＜オプション＞ディープスカイブルー色を使う	color = 'deepskyblue'
＜オプション＞ディープスカイブルー色を用いる	color = 'deepskyblue'
＜オプション＞ディープスカイブルーを用いる	color = 'deepskyblue'
＜オプション＞グラフの色をディープスカイブルーに設定する	color = 'deepskyblue'
＜オプション＞ディープスカイブルーにグラフの色を設定する	color = 'deepskyblue'
＜オプション＞グラフの色をディープスカイブルーに指定する	color = 'deepskyblue'
＜オプション＞グラフの色をディープスカイブルーに変更する	color = 'deepskyblue'
＜オプション＞ディムグレー色を使う	color = 'dimgray'
＜オプション＞ディムグレー色を使用する	color = 'dimgray'
＜オプション＞ディムグレーを使う	color = 'dimgray'
＜オプション＞グラフの色をディムグレーに設定する	color = 'dimgray'
＜オプション＞色をディムグレーに指定する	color = 'dimgray'
＜オプション＞ディムグレー色を使う	color = 'dimgrey'
＜オプション＞ディムグレーを用いる	color = 'dimgrey'
＜オプション＞ディムグレーを使用する	color = 'dimgrey'
＜オプション＞グラフの色をディムグレーに設定する	color = 'dimgrey'
＜オプション＞ディムグレーにグラフの色を設定する	color = 'dimgrey'
＜オプション＞色をディムグレーに設定する	color = 'dimgrey'
＜オプション＞グラフの色をディムグレーに指定する	color = 'dimgrey'
＜オプション＞ドジャーブルー色を使う	color = 'dodgerblue'
＜オプション＞ドジャーブルーを使う	color = 'dodgerblue'
＜オプション＞グラフの色をドジャーブルーに設定する	color = 'dodgerblue'
＜オプション＞グラフの色をドジャーブルーに変更する	color = 'dodgerblue'
＜オプション＞ドジャーブルーにグラフの色を設定する	color = 'dodgerblue'
＜オプション＞ドジャーブルーにグラフの色を指定する	color = 'dodgerblue'
＜オプション＞耐火レンガ色を使う	color = 'firebrick'
＜オプション＞グラフの色を耐火レンガに設定する	color = 'firebrick'
＜オプション＞耐火レンガにグラフの色を変更する	color = 'firebrick'
＜オプション＞耐火レンガにグラフの色を設定する	color = 'firebrick'
＜オプション＞グラフの色を耐火レンガに指定する	color = 'firebrick'
＜オプション＞色を耐火レンガに指定する	color = 'firebrick'
＜オプション＞グラフの色を耐火レンガにする	color = 'firebrick'
＜オプション＞フローラルホワイト色を使う	color = 'floralwhite'
＜オプション＞フローラルホワイトを使う	color = 'floralwhite'
＜オプション＞グラフの色をフローラルホワイトに設定する	color = 'floralwhite'
＜オプション＞グラフの色をフローラルホワイトに変更する	color = 'floralwhite'
＜オプション＞フローラルホワイトにグラフの色をセットする	color = 'floralwhite'
＜オプション＞グラフの色をフローラルホワイトにセットする	color = 'floralwhite'
＜オプション＞色をフローラルホワイトに設定する	color = 'floralwhite'
＜オプション＞フォレストグリーン色を使う	color = 'forestgreen'
＜オプション＞グラフの色をフォレストグリーンに設定する	color = 'forestgreen'
＜オプション＞グラフの色をフォレストグリーンにセットする	color = 'forestgreen'
＜オプション＞フォレストグリーンにグラフの色を変更する	color = 'forestgreen'
＜オプション＞フクシア色を使う	color = 'fuchsia'
＜オプション＞フクシア色を用いる	color = 'fuchsia'
＜オプション＞フクシアを使う	color = 'fuchsia'
＜オプション＞グラフの色をフクシアに設定する	color = 'fuchsia'
＜オプション＞グラフの色をフクシアに指定する	color = 'fuchsia'
＜オプション＞ゲインズボロ色を使う	color = 'gainsboro'
＜オプション＞ゲインズボロを使う	color = 'gainsboro'
＜オプション＞グラフの色をゲインズボロに設定する	color = 'gainsboro'
＜オプション＞色をゲインズボロに設定する	color = 'gainsboro'
＜オプション＞ゲインズボロにグラフの色を設定する	color = 'gainsboro'
＜オプション＞ゴーストホワイト色を使う	color = 'ghostwhite'
＜オプション＞ゴーストホワイトを用いる	color = 'ghostwhite'
＜オプション＞ゴーストホワイト色を使用する	color = 'ghostwhite'
＜オプション＞グラフの色をゴーストホワイトに設定する	color = 'ghostwhite'
＜オプション＞ゴーストホワイトに色を指定する	color = 'ghostwhite'
＜オプション＞色をゴーストホワイトに変更する	color = 'ghostwhite'
＜オプション＞ゴールド色を使う	color = 'gold'
＜オプション＞ゴールドを用いる	color = 'gold'
＜オプション＞ゴールド色を使用する	color = 'gold'
＜オプション＞グラフの色をゴールドに設定する	color = 'gold'
＜オプション＞ゴールドにグラフの色を変更する	color = 'gold'
＜オプション＞グラフの色をゴールドにセットする	color = 'gold'
＜オプション＞ゴールデンロッド色を使う	color = 'goldenrod'
＜オプション＞ゴールデンロッドを使う	color = 'goldenrod'
＜オプション＞グラフの色をゴールデンロッドに設定する	color = 'goldenrod'
＜オプション＞色をゴールデンロッドに設定する	color = 'goldenrod'
＜オプション＞グラフの色をゴールデンロッドに指定する	color = 'goldenrod'
＜オプション＞グレー色を使う	color = 'gray'
＜オプション＞グレー色を用いる	color = 'gray'
＜オプション＞グレー色を使用する	color = 'gray'
＜オプション＞グラフの色をグレーに設定する	color = 'gray'
＜オプション＞グラフの色をグレーにする	color = 'gray'
＜オプション＞グラフの色をグレーに指定する	color = 'gray'
＜オプション＞グリーン色を使う	color = 'green'
＜オプション＞グリーン色を使用する	color = 'green'
＜オプション＞グラフの色をグリーンに設定する	color = 'green'
＜オプション＞グリーンにグラフの色を設定する	color = 'green'
＜オプション＞グリーンイエロー色を使う	color = 'greenyellow'
＜オプション＞グリーンイエローを使う	color = 'greenyellow'
＜オプション＞グラフの色をグリーンイエローに設定する	color = 'greenyellow'
＜オプション＞グリーンイエローに色を設定する	color = 'greenyellow'
＜オプション＞グリーンイエローにグラフの色を設定する	color = 'greenyellow'
＜オプション＞色をグリーンイエローに設定する	color = 'greenyellow'
＜オプション＞グラフの色をグリーンイエローに変更する	color = 'greenyellow'
＜オプション＞グレー色を使う	color = 'grey'
＜オプション＞グレー色を用いる	color = 'grey'
＜オプション＞グレーを使う	color = 'grey'
＜オプション＞グラフの色をグレーに設定する	color = 'grey'
＜オプション＞色をグレーに設定する	color = 'grey'
＜オプション＞グレーにグラフの色を指定する	color = 'grey'
＜オプション＞グラフの色をグレーに指定する	color = 'grey'
＜オプション＞ハニーデュー色を使う	color = 'honeydew'
＜オプション＞ハニーデュー色を用いる	color = 'honeydew'
＜オプション＞グラフの色をハニーデューに設定する	color = 'honeydew'
＜オプション＞色をハニーデューにセットする	color = 'honeydew'
＜オプション＞ハニーデューにグラフの色を指定する	color = 'honeydew'
＜オプション＞ホットピンク色を使う	color = 'hotpink'
＜オプション＞ホットピンク色を用いる	color = 'hotpink'
＜オプション＞グラフの色をホットピンクに設定する	color = 'hotpink'
＜オプション＞色をホットピンクに指定する	color = 'hotpink'
＜オプション＞グラフの色をホットピンクに指定する	color = 'hotpink'
＜オプション＞インディアンレッド色を使う	color = 'indianred'
＜オプション＞インディアンレッド色を使用する	color = 'indianred'
＜オプション＞インディアンレッドを使用する	color = 'indianred'
＜オプション＞インディアンレッド色を用いる	color = 'indianred'
＜オプション＞グラフの色をインディアンレッドに設定する	color = 'indianred'
＜オプション＞グラフの色をインディアンレッドに指定する	color = 'indianred'
＜オプション＞色をインディアンレッドに設定する	color = 'indianred'
＜オプション＞インディゴ色を使う	color = 'indigo'
＜オプション＞インディゴを用いる	color = 'indigo'
＜オプション＞インディゴ色を用いる	color = 'indigo'
＜オプション＞グラフの色をインディゴに設定する	color = 'indigo'
＜オプション＞グラフの色をインディゴにする	color = 'indigo'
＜オプション＞アイボリー色を使う	color = 'ivory'
＜オプション＞アイボリーを使う	color = 'ivory'
＜オプション＞アイボリー色を用いる	color = 'ivory'
＜オプション＞アイボリーを用いる	color = 'ivory'
＜オプション＞グラフの色をアイボリーに設定する	color = 'ivory'
＜オプション＞アイボリーに色を設定する	color = 'ivory'
＜オプション＞色をアイボリーに指定する	color = 'ivory'
＜オプション＞アイボリーにグラフの色を設定する	color = 'ivory'
＜オプション＞カーキ色を使う	color = 'khaki'
＜オプション＞カーキ色を使用する	color = 'khaki'
＜オプション＞カーキを用いる	color = 'khaki'
＜オプション＞グラフの色をカーキに設定する	color = 'khaki'
＜オプション＞グラフの色をカーキに指定する	color = 'khaki'
＜オプション＞カーキにグラフの色を設定する	color = 'khaki'
＜オプション＞カーキに色を設定する	color = 'khaki'
＜オプション＞ラベンダー色を使う	color = 'lavender'
＜オプション＞ラベンダーを使う	color = 'lavender'
＜オプション＞グラフの色をラベンダーに設定する	color = 'lavender'
＜オプション＞グラフの色をラベンダーに指定する	color = 'lavender'
＜オプション＞グラフの色をラベンダーに変更する	color = 'lavender'
＜オプション＞ラベンダーブラッシュ色を使う	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュ色を使用する	color = 'lavenderblush'
＜オプション＞ラベンダーブラッシュ色を用いる	color = 'lavenderblush'
＜オプション＞グラフの色をラベンダーブラッシュに設定する	color = 'lavenderblush'
＜オプション＞グラフの色をラベンダーブラッシュに指定する	color = 'lavenderblush'
＜オプション＞ローングリーン色を使う	color = 'lawngreen'
＜オプション＞ローングリーンを使う	color = 'lawngreen'
＜オプション＞グラフの色をローングリーンに設定する	color = 'lawngreen'
＜オプション＞グラフの色をローングリーンに指定する	color = 'lawngreen'
＜オプション＞色をローングリーンに設定する	color = 'lawngreen'
＜オプション＞レモンシフォン色を使う	color = 'lemonchiffon'
＜オプション＞レモンシフォンを用いる	color = 'lemonchiffon'
＜オプション＞レモンシフォン色を用いる	color = 'lemonchiffon'
＜オプション＞レモンシフォンを使用する	color = 'lemonchiffon'
＜オプション＞グラフの色をレモンシフォンに設定する	color = 'lemonchiffon'
＜オプション＞レモンシフォンにグラフの色を設定する	color = 'lemonchiffon'
＜オプション＞色をレモンシフォンに設定する	color = 'lemonchiffon'
＜オプション＞ライトブルー色を使う	color = 'lightblue'
＜オプション＞ライトブルー色を用いる	color = 'lightblue'
＜オプション＞グラフの色をライトブルーに設定する	color = 'lightblue'
＜オプション＞色をライトブルーに設定する	color = 'lightblue'
＜オプション＞グラフの色をライトブルーに指定する	color = 'lightblue'
＜オプション＞ライトブルーにグラフの色を変更する	color = 'lightblue'
＜オプション＞ライトコーラル色を使う	color = 'lightcoral'
＜オプション＞ライトコーラル色を用いる	color = 'lightcoral'
＜オプション＞ライトコーラルを用いる	color = 'lightcoral'
＜オプション＞グラフの色をライトコーラルに設定する	color = 'lightcoral'
＜オプション＞ライトコーラルにグラフの色を設定する	color = 'lightcoral'
＜オプション＞色をライトコーラルに変更する	color = 'lightcoral'
＜オプション＞ライトコーラルに色を設定する	color = 'lightcoral'
＜オプション＞ライトシアン色を使う	color = 'lightcyan'
＜オプション＞ライトシアンを使用する	color = 'lightcyan'
＜オプション＞ライトシアン色を使用する	color = 'lightcyan'
＜オプション＞グラフの色をライトシアンに設定する	color = 'lightcyan'
＜オプション＞ライトシアンにグラフの色を設定する	color = 'lightcyan'
＜オプション＞色をライトシアンにする	color = 'lightcyan'
＜オプション＞色をライトシアンに指定する	color = 'lightcyan'
＜オプション＞グラフの色をライトシアンにする	color = 'lightcyan'
＜オプション＞ライトゴールドロディイエロー色を使う	color = 'lightgoldenrodyellow'
＜オプション＞ライトゴールドロディイエロー色を用いる	color = 'lightgoldenrodyellow'
＜オプション＞グラフの色をライトゴールドロディイエローに設定する	color = 'lightgoldenrodyellow'
＜オプション＞グラフの色をライトゴールドロディイエローに変更する	color = 'lightgoldenrodyellow'
＜オプション＞色をライトゴールドロディイエローに指定する	color = 'lightgoldenrodyellow'
＜オプション＞ライトゴールドロディイエローにグラフの色を設定する	color = 'lightgoldenrodyellow'
＜オプション＞ライトグレー色を使う	color = 'lightgray'
＜オプション＞ライトグレー色を用いる	color = 'lightgray'
＜オプション＞ライトグレーを使う	color = 'lightgray'
＜オプション＞ライトグレーを用いる	color = 'lightgray'
＜オプション＞グラフの色をライトグレーに設定する	color = 'lightgray'
＜オプション＞ライトグレーにグラフの色を設定する	color = 'lightgray'
＜オプション＞グラフの色をライトグレーに指定する	color = 'lightgray'
＜オプション＞ライトグリーン色を使う	color = 'lightgreen'
＜オプション＞ライトグリーン色を使用する	color = 'lightgreen'
＜オプション＞ライトグリーン色を用いる	color = 'lightgreen'
＜オプション＞グラフの色をライトグリーンに設定する	color = 'lightgreen'
＜オプション＞グラフの色をライトグリーンに変更する	color = 'lightgreen'
＜オプション＞色をライトグリーンに変更する	color = 'lightgreen'
＜オプション＞色をライトグリーンに設定する	color = 'lightgreen'
＜オプション＞ライトグレー色を使う	color = 'lightgrey'
＜オプション＞ライトグレーを使う	color = 'lightgrey'
＜オプション＞グラフの色をライトグレーに設定する	color = 'lightgrey'
＜オプション＞ライトグレーに色を設定する	color = 'lightgrey'
＜オプション＞グラフの色をライトグレーに指定する	color = 'lightgrey'
＜オプション＞ライトグレーにグラフの色を設定する	color = 'lightgrey'
＜オプション＞色をライトグレーに設定する	color = 'lightgrey'
＜オプション＞淡いピンク色色を使う	color = 'lightpink'
＜オプション＞淡いピンク色色を用いる	color = 'lightpink'
＜オプション＞淡いピンク色を使用する	color = 'lightpink'
＜オプション＞淡いピンク色を使う	color = 'lightpink'
＜オプション＞グラフの色を淡いピンク色に設定する	color = 'lightpink'
＜オプション＞グラフの色を淡いピンク色に変更する	color = 'lightpink'
＜オプション＞色を淡いピンク色に指定する	color = 'lightpink'
＜オプション＞色を淡いピンク色にセットする	color = 'lightpink'
＜オプション＞ライトサーモン色を使う	color = 'lightsalmon'
＜オプション＞ライトサーモン色を使用する	color = 'lightsalmon'
＜オプション＞ライトサーモン色を用いる	color = 'lightsalmon'
＜オプション＞グラフの色をライトサーモンに設定する	color = 'lightsalmon'
＜オプション＞グラフの色をライトサーモンに指定する	color = 'lightsalmon'
＜オプション＞ライトサーモンに色を設定する	color = 'lightsalmon'
＜オプション＞ライトサーモンにグラフの色を指定する	color = 'lightsalmon'
＜オプション＞ライトグリーン色を使う	color = 'lightseagreen'
＜オプション＞ライトグリーンを用いる	color = 'lightseagreen'
＜オプション＞グラフの色をライトグリーンに設定する	color = 'lightseagreen'
＜オプション＞ライトグリーンにグラフの色を設定する	color = 'lightseagreen'
＜オプション＞色をライトグリーンに変更する	color = 'lightseagreen'
＜オプション＞色をライトグリーンに指定する	color = 'lightseagreen'
＜オプション＞色をライトグリーンに設定する	color = 'lightseagreen'
＜オプション＞ライトスカイブルー色を使う	color = 'lightskyblue'
＜オプション＞ライトスカイブルー色を使用する	color = 'lightskyblue'
＜オプション＞ライトスカイブルーを用いる	color = 'lightskyblue'
＜オプション＞グラフの色をライトスカイブルーに設定する	color = 'lightskyblue'
＜オプション＞色をライトスカイブルーに設定する	color = 'lightskyblue'
＜オプション＞ライトスカイブルーにグラフの色を設定する	color = 'lightskyblue'
＜オプション＞グラフの色をライトスカイブルーに変更する	color = 'lightskyblue'
＜オプション＞ライトスレイグレー色を使う	color = 'lightslategray'
＜オプション＞ライトスレイグレー色を用いる	color = 'lightslategray'
＜オプション＞ライトスレイグレー色を使用する	color = 'lightslategray'
＜オプション＞グラフの色をライトスレイグレーに設定する	color = 'lightslategray'
＜オプション＞グラフの色をライトスレイグレーに変更する	color = 'lightslategray'
＜オプション＞ライトスレイグレーに色を設定する	color = 'lightslategray'
＜オプション＞ライトスレイグレーにグラフの色をする	color = 'lightslategray'
＜オプション＞色をライトスレイグレーに設定する	color = 'lightslategray'
＜オプション＞ライトスレイグレー色を使う	color = 'lightslategrey'
＜オプション＞ライトスレイグレー色を用いる	color = 'lightslategrey'
＜オプション＞グラフの色をライトスレイグレーに設定する	color = 'lightslategrey'
＜オプション＞ライトスレイグレーにグラフの色を変更する	color = 'lightslategrey'
＜オプション＞色をライトスレイグレーに変更する	color = 'lightslategrey'
＜オプション＞色をライトスレイグレーに設定する	color = 'lightslategrey'
＜オプション＞ライトスレイグレーにグラフの色を設定する	color = 'lightslategrey'
＜オプション＞ライトスチールブルー色を使う	color = 'lightsteelblue'
＜オプション＞ライトスチールブルー色を使用する	color = 'lightsteelblue'
＜オプション＞ライトスチールブルーを使用する	color = 'lightsteelblue'
＜オプション＞グラフの色をライトスチールブルーに設定する	color = 'lightsteelblue'
＜オプション＞ライトスチールブルーにグラフの色をする	color = 'lightsteelblue'
＜オプション＞グラフの色をライトスチールブルーに指定する	color = 'lightsteelblue'
＜オプション＞ライトスチールブルーにグラフの色を設定する	color = 'lightsteelblue'
＜オプション＞ライトイエロー色を使う	color = 'lightyellow'
＜オプション＞ライトイエロー色を用いる	color = 'lightyellow'
＜オプション＞グラフの色をライトイエローに設定する	color = 'lightyellow'
＜オプション＞色をライトイエローに設定する	color = 'lightyellow'
＜オプション＞ライトイエローにグラフの色を設定する	color = 'lightyellow'
＜オプション＞グラフの色をライトイエローにセットする	color = 'lightyellow'
＜オプション＞ライム色を使う	color = 'lime'
＜オプション＞ライムを用いる	color = 'lime'
＜オプション＞ライム色を用いる	color = 'lime'
＜オプション＞ライム色を使用する	color = 'lime'
＜オプション＞グラフの色をライムに設定する	color = 'lime'
＜オプション＞色をライムに設定する	color = 'lime'
＜オプション＞色をライムに指定する	color = 'lime'
＜オプション＞ライムに色を指定する	color = 'lime'
＜オプション＞ライムグリーン色を使う	color = 'limegreen'
＜オプション＞ライムグリーン色を用いる	color = 'limegreen'
＜オプション＞グラフの色をライムグリーンに設定する	color = 'limegreen'
＜オプション＞ライムグリーンにグラフの色を設定する	color = 'limegreen'
＜オプション＞ライムグリーンに色を指定する	color = 'limegreen'
＜オプション＞色をライムグリーンに設定する	color = 'limegreen'
＜オプション＞リネン色を使う	color = 'linen'
＜オプション＞リネンを用いる	color = 'linen'
＜オプション＞リネンを使う	color = 'linen'
＜オプション＞グラフの色をリネンに設定する	color = 'linen'
＜オプション＞グラフの色をリネンに変更する	color = 'linen'
＜オプション＞グラフの色をリネンに指定する	color = 'linen'
＜オプション＞リネンにグラフの色を設定する	color = 'linen'
＜オプション＞マゼンタ色を使う	color = 'magenta'
＜オプション＞グラフの色をマゼンタに設定する	color = 'magenta'
＜オプション＞色をマゼンタに設定する	color = 'magenta'
＜オプション＞マゼンタに色を変更する	color = 'magenta'
＜オプション＞グラフの色をマゼンタに指定する	color = 'magenta'
＜オプション＞マルーン色を使う	color = 'maroon'
＜オプション＞マルーンを使用する	color = 'maroon'
＜オプション＞グラフの色をマルーンに設定する	color = 'maroon'
＜オプション＞マルーンに色を設定する	color = 'maroon'
＜オプション＞色をマルーンに変更する	color = 'maroon'
＜オプション＞マルーンにグラフの色を指定する	color = 'maroon'
＜オプション＞ミディアムアクアマリン色を使う	color = 'mediumaquamarine'
＜オプション＞ミディアムアクアマリンを使う	color = 'mediumaquamarine'
＜オプション＞グラフの色をミディアムアクアマリンに設定する	color = 'mediumaquamarine'
＜オプション＞ミディアムアクアマリンにグラフの色を指定する	color = 'mediumaquamarine'
＜オプション＞グラフの色をミディアムアクアマリンに指定する	color = 'mediumaquamarine'
＜オプション＞ミディアムアクアマリンに色を変更する	color = 'mediumaquamarine'
＜オプション＞ミディアムアクアマリンにグラフの色を設定する	color = 'mediumaquamarine'
＜オプション＞ミディアムブルー色を使う	color = 'mediumblue'
＜オプション＞ミディアムブルー色を用いる	color = 'mediumblue'
＜オプション＞ミディアムブルーを使う	color = 'mediumblue'
＜オプション＞グラフの色をミディアムブルーに設定する	color = 'mediumblue'
＜オプション＞グラフの色をミディアムブルーに変更する	color = 'mediumblue'
＜オプション＞色をミディアムブルーに指定する	color = 'mediumblue'
＜オプション＞グラフの色をミディアムブルーに指定する	color = 'mediumblue'
＜オプション＞ミディアムブルーにグラフの色を変更する	color = 'mediumblue'
＜オプション＞ミディアムブルーにグラフの色を設定する	color = 'mediumblue'
＜オプション＞グラフの色をミディアムブルーにセットする	color = 'mediumblue'
＜オプション＞ミディアムオーキッド色を使う	color = 'mediumorchid'
＜オプション＞ミディアムオーキッドを使用する	color = 'mediumorchid'
＜オプション＞ミディアムオーキッド色を用いる	color = 'mediumorchid'
＜オプション＞ミディアムオーキッドを用いる	color = 'mediumorchid'
＜オプション＞グラフの色をミディアムオーキッドに設定する	color = 'mediumorchid'
＜オプション＞ミディアムオーキッドにグラフの色をする	color = 'mediumorchid'
＜オプション＞ミディアムオーキッドに色を設定する	color = 'mediumorchid'
＜オプション＞色をミディアムオーキッドに指定する	color = 'mediumorchid'
＜オプション＞ミディアムパープル色を使う	color = 'mediumpurple'
＜オプション＞ミディアムパープルを使う	color = 'mediumpurple'
＜オプション＞グラフの色をミディアムパープルに設定する	color = 'mediumpurple'
＜オプション＞グラフの色をミディアムパープルにセットする	color = 'mediumpurple'
＜オプション＞ミディアムパープルにグラフの色をする	color = 'mediumpurple'
＜オプション＞グラフの色をミディアムパープルに指定する	color = 'mediumpurple'
＜オプション＞ミディアムシアグリーン色を使う	color = 'mediumseagreen'
＜オプション＞ミディアムシアグリーンを使用する	color = 'mediumseagreen'
＜オプション＞ミディアムシアグリーン色を用いる	color = 'mediumseagreen'
＜オプション＞グラフの色をミディアムシアグリーンに設定する	color = 'mediumseagreen'
＜オプション＞グラフの色をミディアムシアグリーンに変更する	color = 'mediumseagreen'
＜オプション＞ミディアムシアグリーンにグラフの色を設定する	color = 'mediumseagreen'
＜オプション＞ミディアムスレートブルー色を使う	color = 'mediumslateblue'
＜オプション＞ミディアムスレートブルーを使う	color = 'mediumslateblue'
＜オプション＞ミディアムスレートブルー色を用いる	color = 'mediumslateblue'
＜オプション＞グラフの色をミディアムスレートブルーに設定する	color = 'mediumslateblue'
＜オプション＞色をミディアムスレートブルーに設定する	color = 'mediumslateblue'
＜オプション＞ミディアムスプリンググリーン色を使う	color = 'mediumspringgreen'
＜オプション＞ミディアムスプリンググリーン色を使用する	color = 'mediumspringgreen'
＜オプション＞グラフの色をミディアムスプリンググリーンに設定する	color = 'mediumspringgreen'
＜オプション＞色をミディアムスプリンググリーンに変更する	color = 'mediumspringgreen'
＜オプション＞グラフの色をミディアムスプリンググリーンに指定する	color = 'mediumspringgreen'
＜オプション＞ミディアムスプリンググリーンにグラフの色を変更する	color = 'mediumspringgreen'
＜オプション＞色をミディアムスプリンググリーンに設定する	color = 'mediumspringgreen'
＜オプション＞ミディアムターコイズ色を使う	color = 'mediumturquoise'
＜オプション＞ミディアムターコイズ色を用いる	color = 'mediumturquoise'
＜オプション＞グラフの色をミディアムターコイズに設定する	color = 'mediumturquoise'
＜オプション＞グラフの色をミディアムターコイズにセットする	color = 'mediumturquoise'
＜オプション＞ミディアムターコイズに色を設定する	color = 'mediumturquoise'
＜オプション＞ミディアムバイオレットレッド色を使う	color = 'mediumvioletred'
＜オプション＞グラフの色をミディアムバイオレットレッドに設定する	color = 'mediumvioletred'
＜オプション＞色をミディアムバイオレットレッドに変更する	color = 'mediumvioletred'
＜オプション＞ミディアムバイオレットレッドにグラフの色を設定する	color = 'mediumvioletred'
＜オプション＞ミッドナイトブルー色を使う	color = 'midnightblue'
＜オプション＞ミッドナイトブルーを使う	color = 'midnightblue'
＜オプション＞ミッドナイトブルー色を用いる	color = 'midnightblue'
＜オプション＞グラフの色をミッドナイトブルーに設定する	color = 'midnightblue'
＜オプション＞色をミッドナイトブルーに設定する	color = 'midnightblue'
＜オプション＞グラフの色をミッドナイトブルーに変更する	color = 'midnightblue'
＜オプション＞ミッドナイトブルーにグラフの色を設定する	color = 'midnightblue'
＜オプション＞ミントクリーム色を使う	color = 'mintcream'
＜オプション＞ミントクリーム色を使用する	color = 'mintcream'
＜オプション＞ミントクリーム色を用いる	color = 'mintcream'
＜オプション＞グラフの色をミントクリームに設定する	color = 'mintcream'
＜オプション＞グラフの色をミントクリームに変更する	color = 'mintcream'
＜オプション＞グラフの色をミントクリームに指定する	color = 'mintcream'
＜オプション＞ミスティローズ色を使う	color = 'mistyrose'
＜オプション＞ミスティローズを用いる	color = 'mistyrose'
＜オプション＞ミスティローズ色を用いる	color = 'mistyrose'
＜オプション＞グラフの色をミスティローズに設定する	color = 'mistyrose'
＜オプション＞ミスティローズに色を設定する	color = 'mistyrose'
＜オプション＞モカシン色を使う	color = 'moccasin'
＜オプション＞モカシン色を使用する	color = 'moccasin'
＜オプション＞モカシン色を用いる	color = 'moccasin'
＜オプション＞グラフの色をモカシンに設定する	color = 'moccasin'
＜オプション＞色をモカシンにセットする	color = 'moccasin'
＜オプション＞ナバホホワイト色を使う	color = 'navajowhite'
＜オプション＞ナバホホワイト色を使用する	color = 'navajowhite'
＜オプション＞ナバホホワイトを使う	color = 'navajowhite'
＜オプション＞グラフの色をナバホホワイトに設定する	color = 'navajowhite'
＜オプション＞グラフの色をナバホホワイトにする	color = 'navajowhite'
＜オプション＞色をナバホホワイトに指定する	color = 'navajowhite'
＜オプション＞ナバホホワイトにグラフの色を設定する	color = 'navajowhite'
＜オプション＞ネイビー色を使う	color = 'navy'
＜オプション＞ネイビー色を使用する	color = 'navy'
＜オプション＞グラフの色をネイビーに設定する	color = 'navy'
＜オプション＞グラフの色をネイビーに変更する	color = 'navy'
＜オプション＞色をネイビーに設定する	color = 'navy'
＜オプション＞オールドレース色を使う	color = 'oldlace'
＜オプション＞オールドレース色を用いる	color = 'oldlace'
＜オプション＞オールドレースを使う	color = 'oldlace'
＜オプション＞グラフの色をオールドレースに設定する	color = 'oldlace'
＜オプション＞オールドレースに色を設定する	color = 'oldlace'
＜オプション＞グラフの色をオールドレースに指定する	color = 'oldlace'
＜オプション＞グラフの色をオールドレースに変更する	color = 'oldlace'
＜オプション＞色をオールドレースに設定する	color = 'oldlace'
＜オプション＞オリーブ色を使う	color = 'olive'
＜オプション＞オリーブを使う	color = 'olive'
＜オプション＞オリーブを用いる	color = 'olive'
＜オプション＞グラフの色をオリーブに設定する	color = 'olive'
＜オプション＞グラフの色をオリーブに指定する	color = 'olive'
＜オプション＞グラフの色をオリーブに変更する	color = 'olive'
＜オプション＞グラフの色をオリーブにセットする	color = 'olive'
＜オプション＞オリーブに色を変更する	color = 'olive'
＜オプション＞オリベドラブ色を使う	color = 'olivedrab'
＜オプション＞オリベドラブを使用する	color = 'olivedrab'
＜オプション＞オリベドラブ色を用いる	color = 'olivedrab'
＜オプション＞グラフの色をオリベドラブに設定する	color = 'olivedrab'
＜オプション＞オリベドラブに色を設定する	color = 'olivedrab'
＜オプション＞オリベドラブにグラフの色を設定する	color = 'olivedrab'
＜オプション＞オレンジ色を使う	color = 'orange'
＜オプション＞オレンジ色を用いる	color = 'orange'
＜オプション＞オレンジ色を使用する	color = 'orange'
＜オプション＞オレンジを使う	color = 'orange'
＜オプション＞グラフの色をオレンジに設定する	color = 'orange'
＜オプション＞オレンジにグラフの色を設定する	color = 'orange'
＜オプション＞オレンジにグラフの色を指定する	color = 'orange'
＜オプション＞グラフの色をオレンジに指定する	color = 'orange'
＜オプション＞オレンジレッド色を使う	color = 'orangered'
＜オプション＞オレンジレッド色を用いる	color = 'orangered'
＜オプション＞グラフの色をオレンジレッドに設定する	color = 'orangered'
＜オプション＞グラフの色をオレンジレッドにする	color = 'orangered'
＜オプション＞オレンジレッドに色を設定する	color = 'orangered'
＜オプション＞色をオレンジレッドに設定する	color = 'orangered'
＜オプション＞オーキッド色を使う	color = 'orchid'
＜オプション＞オーキッドを使用する	color = 'orchid'
＜オプション＞オーキッド色を用いる	color = 'orchid'
＜オプション＞オーキッド色を使用する	color = 'orchid'
＜オプション＞グラフの色をオーキッドに設定する	color = 'orchid'
＜オプション＞オーキッドにグラフの色を設定する	color = 'orchid'
＜オプション＞パールゴールデンロッド色を使う	color = 'palegoldenrod'
＜オプション＞パールゴールデンロッド色を使用する	color = 'palegoldenrod'
＜オプション＞パールゴールデンロッド色を用いる	color = 'palegoldenrod'
＜オプション＞グラフの色をパールゴールデンロッドに設定する	color = 'palegoldenrod'
＜オプション＞グラフの色をパールゴールデンロッドにする	color = 'palegoldenrod'
＜オプション＞グラフの色をパールゴールデンロッドに変更する	color = 'palegoldenrod'
＜オプション＞ペールグリーン色を使う	color = 'palegreen'
＜オプション＞ペールグリーン色を使用する	color = 'palegreen'
＜オプション＞グラフの色をペールグリーンに設定する	color = 'palegreen'
＜オプション＞色をペールグリーンに変更する	color = 'palegreen'
＜オプション＞グラフの色をペールグリーンに指定する	color = 'palegreen'
＜オプション＞色をペールグリーンに設定する	color = 'palegreen'
＜オプション＞ペールグリーンにグラフの色をする	color = 'palegreen'
＜オプション＞パレットトルコイズ色を使う	color = 'paleturquoise'
＜オプション＞パレットトルコイズを用いる	color = 'paleturquoise'
＜オプション＞グラフの色をパレットトルコイズに設定する	color = 'paleturquoise'
＜オプション＞グラフの色をパレットトルコイズに指定する	color = 'paleturquoise'
＜オプション＞パールバイオレットレッド色を使う	color = 'palevioletred'
＜オプション＞パールバイオレットレッドを使う	color = 'palevioletred'
＜オプション＞パールバイオレットレッド色を用いる	color = 'palevioletred'
＜オプション＞パールバイオレットレッドを用いる	color = 'palevioletred'
＜オプション＞グラフの色をパールバイオレットレッドに設定する	color = 'palevioletred'
＜オプション＞色をパールバイオレットレッドに設定する	color = 'palevioletred'
＜オプション＞色をパールバイオレットレッドに指定する	color = 'palevioletred'
＜オプション＞グラフの色をパールバイオレットレッドに指定する	color = 'palevioletred'
＜オプション＞パールバイオレットレッドに色を設定する	color = 'palevioletred'
＜オプション＞パパイヤウィップ色を使う	color = 'papayawhip'
＜オプション＞パパイヤウィップ色を用いる	color = 'papayawhip'
＜オプション＞パパイヤウィップを使用する	color = 'papayawhip'
＜オプション＞グラフの色をパパイヤウィップに設定する	color = 'papayawhip'
＜オプション＞色をパパイヤウィップに設定する	color = 'papayawhip'
＜オプション＞グラフの色をパパイヤウィップに指定する	color = 'papayawhip'
＜オプション＞色をパパイヤウィップに変更する	color = 'papayawhip'
＜オプション＞パパイヤウィップにグラフの色を設定する	color = 'papayawhip'
＜オプション＞ピーチパフ色を使う	color = 'peachpuff'
＜オプション＞ピーチパフ色を使用する	color = 'peachpuff'
＜オプション＞グラフの色をピーチパフに設定する	color = 'peachpuff'
＜オプション＞グラフの色をピーチパフにする	color = 'peachpuff'
＜オプション＞グラフの色をピーチパフに変更する	color = 'peachpuff'
＜オプション＞ピーチパフにグラフの色を設定する	color = 'peachpuff'
＜オプション＞ペルー色を使う	color = 'peru'
＜オプション＞ペルーを用いる	color = 'peru'
＜オプション＞ペルー色を使用する	color = 'peru'
＜オプション＞ペルーを使う	color = 'peru'
＜オプション＞グラフの色をペルーに設定する	color = 'peru'
＜オプション＞グラフの色をペルーにセットする	color = 'peru'
＜オプション＞色をペルーに設定する	color = 'peru'
＜オプション＞色をペルーに変更する	color = 'peru'
＜オプション＞ピンク色を使う	color = 'pink'
＜オプション＞ピンクを使用する	color = 'pink'
＜オプション＞ピンクを使う	color = 'pink'
＜オプション＞グラフの色をピンクに設定する	color = 'pink'
＜オプション＞ピンクにグラフの色を変更する	color = 'pink'
＜オプション＞プラム色を使う	color = 'plum'
＜オプション＞プラムを使う	color = 'plum'
＜オプション＞グラフの色をプラムに設定する	color = 'plum'
＜オプション＞色をプラムに指定する	color = 'plum'
＜オプション＞プラムにグラフの色を設定する	color = 'plum'
＜オプション＞色をプラムに設定する	color = 'plum'
＜オプション＞パウダーブルー色を使う	color = 'powderblue'
＜オプション＞パウダーブルーを使う	color = 'powderblue'
＜オプション＞グラフの色をパウダーブルーに設定する	color = 'powderblue'
＜オプション＞色をパウダーブルーに設定する	color = 'powderblue'
＜オプション＞パウダーブルーにグラフの色をセットする	color = 'powderblue'
＜オプション＞グラフの色をパウダーブルーに変更する	color = 'powderblue'
＜オプション＞パウダーブルーにグラフの色を変更する	color = 'powderblue'
＜オプション＞パープル色を使う	color = 'purple'
＜オプション＞パープル色を使用する	color = 'purple'
＜オプション＞グラフの色をパープルに設定する	color = 'purple'
＜オプション＞グラフの色をパープルに指定する	color = 'purple'
＜オプション＞パープルにグラフの色を設定する	color = 'purple'
＜オプション＞色をパープルに設定する	color = 'purple'
＜オプション＞レベッカパープル色を使う	color = 'rebeccapurple'
＜オプション＞レベッカパープル色を用いる	color = 'rebeccapurple'
＜オプション＞レベッカパープル色を使用する	color = 'rebeccapurple'
＜オプション＞グラフの色をレベッカパープルに設定する	color = 'rebeccapurple'
＜オプション＞レベッカパープルに色を設定する	color = 'rebeccapurple'
＜オプション＞赤色を使う	color = 'red'
＜オプション＞赤色を用いる	color = 'red'
＜オプション＞グラフの色を赤に設定する	color = 'red'
＜オプション＞赤にグラフの色をセットする	color = 'red'
＜オプション＞赤にグラフの色を設定する	color = 'red'
＜オプション＞グラフの色を赤に変更する	color = 'red'
＜オプション＞ロージーブラウン色を使う	color = 'rosybrown'
＜オプション＞ロージーブラウン色を使用する	color = 'rosybrown'
＜オプション＞グラフの色をロージーブラウンに設定する	color = 'rosybrown'
＜オプション＞グラフの色をロージーブラウンに変更する	color = 'rosybrown'
＜オプション＞ロージーブラウンにグラフの色を指定する	color = 'rosybrown'
＜オプション＞色をロージーブラウンに変更する	color = 'rosybrown'
＜オプション＞ロージーブラウンにグラフの色を設定する	color = 'rosybrown'
＜オプション＞ロイヤルブルー色を使う	color = 'royalblue'
＜オプション＞ロイヤルブルーを用いる	color = 'royalblue'
＜オプション＞グラフの色をロイヤルブルーに設定する	color = 'royalblue'
＜オプション＞ロイヤルブルーに色を指定する	color = 'royalblue'
＜オプション＞グラフの色をロイヤルブルーに指定する	color = 'royalblue'
＜オプション＞ロイヤルブルーにグラフの色を設定する	color = 'royalblue'
＜オプション＞ロイヤルブルーにグラフの色を変更する	color = 'royalblue'
＜オプション＞サドルブラウン色を使う	color = 'saddlebrown'
＜オプション＞サドルブラウン色を用いる	color = 'saddlebrown'
＜オプション＞グラフの色をサドルブラウンに設定する	color = 'saddlebrown'
＜オプション＞グラフの色をサドルブラウンに指定する	color = 'saddlebrown'
＜オプション＞サドルブラウンに色を指定する	color = 'saddlebrown'
＜オプション＞サーモン色を使う	color = 'salmon'
＜オプション＞サーモンを使う	color = 'salmon'
＜オプション＞サーモン色を使用する	color = 'salmon'
＜オプション＞グラフの色をサーモンに設定する	color = 'salmon'
＜オプション＞グラフの色をサーモンにセットする	color = 'salmon'
＜オプション＞サーモンに色を設定する	color = 'salmon'
＜オプション＞色をサーモンに変更する	color = 'salmon'
＜オプション＞サンディーブラウン色を使う	color = 'sandybrown'
＜オプション＞サンディーブラウン色を使用する	color = 'sandybrown'
＜オプション＞サンディーブラウンを使用する	color = 'sandybrown'
＜オプション＞サンディーブラウン色を用いる	color = 'sandybrown'
＜オプション＞グラフの色をサンディーブラウンに設定する	color = 'sandybrown'
＜オプション＞色をサンディーブラウンに設定する	color = 'sandybrown'
＜オプション＞シーグリーン色を使う	color = 'seagreen'
＜オプション＞シーグリーンを使う	color = 'seagreen'
＜オプション＞シーグリーン色を用いる	color = 'seagreen'
＜オプション＞グラフの色をシーグリーンに設定する	color = 'seagreen'
＜オプション＞シーグリーンにグラフの色を指定する	color = 'seagreen'
＜オプション＞グラフの色をシーグリーンに指定する	color = 'seagreen'
＜オプション＞貝殻色を使う	color = 'seashell'
＜オプション＞貝殻を用いる	color = 'seashell'
＜オプション＞グラフの色を貝殻に設定する	color = 'seashell'
＜オプション＞色を貝殻に設定する	color = 'seashell'
＜オプション＞貝殻にグラフの色を設定する	color = 'seashell'
＜オプション＞シエナ色を使う	color = 'sienna'
＜オプション＞シエナ色を使用する	color = 'sienna'
＜オプション＞シエナを使う	color = 'sienna'
＜オプション＞グラフの色をシエナに設定する	color = 'sienna'
＜オプション＞グラフの色をシエナにセットする	color = 'sienna'
＜オプション＞シエナにグラフの色を設定する	color = 'sienna'
＜オプション＞グラフの色をシエナに変更する	color = 'sienna'
＜オプション＞シルバー色を使う	color = 'silver'
＜オプション＞シルバー色を使用する	color = 'silver'
＜オプション＞シルバーを使う	color = 'silver'
＜オプション＞グラフの色をシルバーに設定する	color = 'silver'
＜オプション＞グラフの色をシルバーに変更する	color = 'silver'
＜オプション＞シルバーに色を設定する	color = 'silver'
＜オプション＞色をシルバーに設定する	color = 'silver'
＜オプション＞スカイブルー色を使う	color = 'skyblue'
＜オプション＞スカイブルーを使用する	color = 'skyblue'
＜オプション＞スカイブルーを使う	color = 'skyblue'
＜オプション＞スカイブルー色を使用する	color = 'skyblue'
＜オプション＞グラフの色をスカイブルーに設定する	color = 'skyblue'
＜オプション＞グラフの色をスカイブルーにセットする	color = 'skyblue'
＜オプション＞スカイブルーにグラフの色を指定する	color = 'skyblue'
＜オプション＞スレートブルー色を使う	color = 'slateblue'
＜オプション＞スレートブルーを使う	color = 'slateblue'
＜オプション＞スレートブルーを使用する	color = 'slateblue'
＜オプション＞グラフの色をスレートブルーに設定する	color = 'slateblue'
＜オプション＞スレートブルーにグラフの色を設定する	color = 'slateblue'
＜オプション＞スレートブルーにグラフの色をする	color = 'slateblue'
＜オプション＞スラグレー色を使う	color = 'slategray'
＜オプション＞グラフの色をスラグレーに設定する	color = 'slategray'
＜オプション＞グラフの色をスラグレーに変更する	color = 'slategray'
＜オプション＞色をスラグレーに変更する	color = 'slategray'
＜オプション＞スラグレーに色を設定する	color = 'slategray'
＜オプション＞スラグレー色を使う	color = 'slategrey'
＜オプション＞スラグレー色を用いる	color = 'slategrey'
＜オプション＞スラグレーを用いる	color = 'slategrey'
＜オプション＞グラフの色をスラグレーに設定する	color = 'slategrey'
＜オプション＞グラフの色をスラグレーに指定する	color = 'slategrey'
＜オプション＞グラフの色をスラグレーにセットする	color = 'slategrey'
＜オプション＞グラフの色をスラグレーにする	color = 'slategrey'
＜オプション＞色をスラグレーに指定する	color = 'slategrey'
＜オプション＞スノー色を使う	color = 'snow'
＜オプション＞スノーを使う	color = 'snow'
＜オプション＞グラフの色をスノーに設定する	color = 'snow'
＜オプション＞スノーにグラフの色を指定する	color = 'snow'
＜オプション＞スノーにグラフの色を設定する	color = 'snow'
＜オプション＞スプリンググリーン色を使う	color = 'springgreen'
＜オプション＞スプリンググリーンを使う	color = 'springgreen'
＜オプション＞グラフの色をスプリンググリーンに設定する	color = 'springgreen'
＜オプション＞スプリンググリーンにグラフの色を設定する	color = 'springgreen'
＜オプション＞グラフの色をスプリンググリーンに指定する	color = 'springgreen'
＜オプション＞色をスプリンググリーンにセットする	color = 'springgreen'
＜オプション＞スチールブルー色を使う	color = 'steelblue'
＜オプション＞スチールブルーを使う	color = 'steelblue'
＜オプション＞グラフの色をスチールブルーに設定する	color = 'steelblue'
＜オプション＞スチールブルーに色を設定する	color = 'steelblue'
＜オプション＞グラフの色をスチールブルーに指定する	color = 'steelblue'
＜オプション＞タン色を使う	color = 'tan'
＜オプション＞タンを使う	color = 'tan'
＜オプション＞淡い茶色色を使う	color = 'tan'
＜オプション＞グラフの色をタンに設定する	color = 'tan'
＜オプション＞色をタンに設定する	color = 'tan'
＜オプション＞タンにグラフの色を指定する	color = 'tan'
＜オプション＞グラフの色をタンにする	color = 'tan'
＜オプション＞タンにグラフの色を設定する	color = 'tan'
＜オプション＞グラフの色を淡い茶色に設定する	color = 'tan'
＜オプション＞青緑色を使う	color = 'teal'
＜オプション＞ティール色を用いる	color = 'teal'
＜オプション＞ティール色を使う	color = 'teal'
＜オプション＞青緑色を使用する	color = 'teal'
＜オプション＞グラフの色を青緑に設定する	color = 'teal'
＜オプション＞グラフの色をティールに設定する	color = 'teal'
＜オプション＞色を青緑に設定する	color = 'teal'
＜オプション＞ティールにグラフの色を設定する	color = 'teal'
＜オプション＞シスル色を使う	color = 'thistle'
＜オプション＞シスル色を用いる	color = 'thistle'
＜オプション＞シスルを用いる	color = 'thistle'
＜オプション＞グラフの色をシスルに設定する	color = 'thistle'
＜オプション＞シスルにグラフの色を設定する	color = 'thistle'
＜オプション＞シスルにグラフの色を変更する	color = 'thistle'
＜オプション＞トマト色を使う	color = 'tomato'
＜オプション＞トマトを用いる	color = 'tomato'
＜オプション＞グラフの色をトマトに設定する	color = 'tomato'
＜オプション＞色をトマトに変更する	color = 'tomato'
＜オプション＞色をトマトに指定する	color = 'tomato'
＜オプション＞グラフの色をトマトにセットする	color = 'tomato'
＜オプション＞ターコイズ色を使う	color = 'turquoise'
＜オプション＞青緑を使う	color = 'turquoise'
＜オプション＞ターコイズ色を用いる	color = 'turquoise'
＜オプション＞グラフの色をターコイズに設定する	color = 'turquoise'
＜オプション＞グラフの色をターコイズに指定する	color = 'turquoise'
＜オプション＞色をターコイズに設定する	color = 'turquoise'
＜オプション＞ターコイズにグラフの色を設定する	color = 'turquoise'
＜オプション＞青紫色を使う	color = 'violet'
＜オプション＞バイオレット色を使う	color = 'violet'
＜オプション＞バイオレットを用いる	color = 'violet'
＜オプション＞バイオレット色を使用する	color = 'violet'
＜オプション＞青紫色を用いる	color = 'violet'
＜オプション＞グラフの色を青紫に設定する	color = 'violet'
＜オプション＞バイオレットにグラフの色を設定する	color = 'violet'
＜オプション＞グラフの色をバイオレットに設定する	color = 'violet'
＜オプション＞バイオレットに色を変更する	color = 'violet'
＜オプション＞小麦色色を使う	color = 'wheat'
＜オプション＞小麦色色を使用する	color = 'wheat'
＜オプション＞小麦色を使用する	color = 'wheat'
＜オプション＞グラフの色を小麦色に設定する	color = 'wheat'
＜オプション＞小麦色にグラフの色を変更する	color = 'wheat'
＜オプション＞色を小麦色に指定する	color = 'wheat'
＜オプション＞白色を使う	color = 'white'
＜オプション＞ホワイトを使う	color = 'white'
＜オプション＞白を用いる	color = 'white'
＜オプション＞白を使う	color = 'white'
＜オプション＞白色を使用する	color = 'white'
＜オプション＞グラフの色を白に設定する	color = 'white'
＜オプション＞白に色を設定する	color = 'white'
＜オプション＞色を白にする	color = 'white'
＜オプション＞色を白に設定する	color = 'white'
＜オプション＞色を白に変更する	color = 'white'
＜オプション＞ホワイトスモーク色を使う	color = 'whitesmoke'
＜オプション＞ホワイトスモークを使う	color = 'whitesmoke'
＜オプション＞ホワイトスモーク色を使用する	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークに設定する	color = 'whitesmoke'
＜オプション＞色をホワイトスモークにセットする	color = 'whitesmoke'
＜オプション＞グラフの色をホワイトスモークに指定する	color = 'whitesmoke'
＜オプション＞黄色色を使う	color = 'yellow'
＜オプション＞グラフの色を黄色に設定する	color = 'yellow'
＜オプション＞黄色に色を設定する	color = 'yellow'
＜オプション＞色を黄色に指定する	color = 'yellow'
＜オプション＞黄色にグラフの色を設定する	color = 'yellow'
＜オプション＞イエローグリーン色を使う	color = 'yellowgreen'
＜オプション＞イエローグリーン色を使用する	color = 'yellowgreen'
＜オプション＞グラフの色をイエローグリーンに設定する	color = 'yellowgreen'
＜オプション＞グラフの色をイエローグリーンにセットする	color = 'yellowgreen'
＜オプション＞グラフの色をイエローグリーンに指定する	color = 'yellowgreen'
＜オプション＞色をイエローグリーンに設定する	color = 'yellowgreen'
折れ線グラフの色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフの色をアリスブルーに変更する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフの色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
アリスブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフを描画して、その色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフを描画して、色をアリスブルーに設定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフを描画して、その色をアリスブルーに指定する	plt.plot(データ列, データ列2, color='aliceblue')
線グラフを描画してその色をアリスブルーにセットする	plt.plot(データ列, データ列2, color='aliceblue')
折れ線グラフの色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
アンティークホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフを描画して、その色をアンティークホワイトに設定する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフを描画して、その色をアンティークホワイトに変更する	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフを描画して、その色をアンティークホワイトにセットする	plt.plot(データ列, データ列2, color='antiquewhite')
折れ線グラフの色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフの色をアクアに指定する	plt.plot(データ列, データ列2, color='aqua')
線グラフの色をアクアにする	plt.plot(データ列, データ列2, color='aqua')
アクア色の線グラフを描画する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画して、その色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
線グラフを描画して、その色をアクアにセットする	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画してその色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフを描画して、色をアクアに設定する	plt.plot(データ列, データ列2, color='aqua')
折れ線グラフの色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフの色をアクアマリンにセットする	plt.plot(データ列, データ列2, color='aquamarine')
アクアマリン色の線グラフを描画する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画してその色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに指定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して、その色をアクアマリンに変更する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画して色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
線グラフを描画して、その色をアクアマリンに設定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフを描画してその色をアクアマリンに指定する	plt.plot(データ列, データ列2, color='aquamarine')
折れ線グラフの色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフの色を紺碧に指定する	plt.plot(データ列, データ列2, color='azure')
紺碧色の線グラフを描画する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフを描画して、その色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
線グラフを描画して、色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフを描画してその色を紺碧にセットする	plt.plot(データ列, データ列2, color='azure')
線グラフを描画して色を紺碧に設定する	plt.plot(データ列, データ列2, color='azure')
折れ線グラフの色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフの色をベージュに指定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフの色をベージュに変更する	plt.plot(データ列, データ列2, color='beige')
線グラフの色をベージュに変更する	plt.plot(データ列, データ列2, color='beige')
ベージュ色の線グラフを描画する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフを描画して、その色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
線グラフを描画してその色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフを描画して、その色をベージュに変更する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフを描画して、色をベージュに設定する	plt.plot(データ列, データ列2, color='beige')
折れ線グラフの色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
線グラフの色をビスクにする	plt.plot(データ列, データ列2, color='bisque')
線グラフの色をビスクに変更する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフの色をビスクに変更する	plt.plot(データ列, データ列2, color='bisque')
ビスク色の線グラフを描画する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフを描画して、その色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフを描画してその色をビスクに指定する	plt.plot(データ列, データ列2, color='bisque')
線グラフを描画して、色をビスクに設定する	plt.plot(データ列, データ列2, color='bisque')
折れ線グラフの色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフの色をブラックに変更する	plt.plot(データ列, データ列2, color='black')
線グラフの色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
ブラック色の線グラフを描画する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して、その色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
線グラフを描画して色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して、その色をブラックに変更する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画してその色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して、色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフを描画して色をブラックに設定する	plt.plot(データ列, データ列2, color='black')
折れ線グラフの色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフの色をブランチドアーモンドに指定する	plt.plot(データ列, データ列2, color='blanchedalmond')
線グラフの色をブランチドアーモンドに変更する	plt.plot(データ列, データ列2, color='blanchedalmond')
ブランチドアーモンド色の線グラフを描画する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
線グラフを描画してその色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフを描画して、その色をブランチドアーモンドに指定する	plt.plot(データ列, データ列2, color='blanchedalmond')
線グラフを描画して、その色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
線グラフを描画して、色をブランチドアーモンドに設定する	plt.plot(データ列, データ列2, color='blanchedalmond')
折れ線グラフの色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色を青に変更する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色を青に指定する	plt.plot(データ列, データ列2, color='blue')
青色の線グラフを描画する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して、その色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して色を青に設定する	plt.plot(データ列, データ列2, color='blue')
線グラフを描画して、その色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフを描画して、色を青に設定する	plt.plot(データ列, データ列2, color='blue')
折れ線グラフの色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
線グラフの色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
ブルーバイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフを描画して、色をブルーバイオレットに指定する	plt.plot(データ列, データ列2, color='blueviolet')
線グラフを描画して、色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(データ列, データ列2, color='blueviolet')
折れ線グラフの色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフの色を茶色に指定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフの色を茶色に変更する	plt.plot(データ列, データ列2, color='brown')
茶色色の線グラフを描画する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、その色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、その色をブラウンに設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフを描画して、色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
線グラフを描画して、色を茶色に設定する	plt.plot(データ列, データ列2, color='brown')
折れ線グラフの色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
線グラフの色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
バリーウッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、その色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、色をバリーウッドに設定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画してその色をバリーウッドに変更する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、その色をバリーウッドに変更する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフを描画して、色をバリーウッドに指定する	plt.plot(データ列, データ列2, color='burlywood')
折れ線グラフの色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフの色をカデットブルーにする	plt.plot(データ列, データ列2, color='cadetblue')
線グラフの色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
カデットブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、その色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
線グラフを描画して、その色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画して、色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフを描画してその色をカデットブルーに設定する	plt.plot(データ列, データ列2, color='cadetblue')
折れ線グラフの色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
線グラフの色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフの色をシャルトリューズに変更する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフの色をシャルトリューズに指定する	plt.plot(データ列, データ列2, color='chartreuse')
シャルトリューズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して、その色をシャルトリューズに設定する	plt.plot(データ列, データ列2, color='chartreuse')
線グラフを描画して、色を黄緑に設定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフを描画して、色をシャルトリューズに指定する	plt.plot(データ列, データ列2, color='chartreuse')
折れ線グラフの色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
線グラフの色をチョコレートにセットする	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフの色をチョコレートにする	plt.plot(データ列, データ列2, color='chocolate')
線グラフの色をチョコレートに変更する	plt.plot(データ列, データ列2, color='chocolate')
チョコレート色の線グラフを描画する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、その色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、色をチョコレートに変更する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、色をチョコレートに設定する	plt.plot(データ列, データ列2, color='chocolate')
線グラフを描画して、その色をチョコレートに変更する	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフを描画して、その色をチョコレートにする	plt.plot(データ列, データ列2, color='chocolate')
折れ線グラフの色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色をコーラルにする	plt.plot(データ列, データ列2, color='coral')
線グラフの色をコーラルに指定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色を珊瑚に指定する	plt.plot(データ列, データ列2, color='coral')
コーラル色の線グラフを描画する	plt.plot(データ列, データ列2, color='coral')
コーラル色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、その色をコーラルに設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画してその色をコーラルにセットする	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、その色をコーラルに変更する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフを描画して、その色を珊瑚に設定する	plt.plot(データ列, データ列2, color='coral')
折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をやわらかい青に設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をコーンフラワーブルーにする	plt.plot(データ列, データ列2, color='cornflowerblue')
線グラフの色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
線グラフの色をコーンフラワーブルーに変更する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をコーンフラワーブルーに指定する	plt.plot(データ列, データ列2, color='cornflowerblue')
コーンフラワーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='cornflowerblue')
コーンフラワーブルー色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、その色をやわらかい青に設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、色をコーンフラワーブルーにする	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフを描画して、その色をコーンフラワーブルーに指定する	plt.plot(データ列, データ列2, color='cornflowerblue')
線グラフを描画して、その色をコーンフラワーブルーに設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
線グラフを描画して、その色をやわらかい青に設定する	plt.plot(データ列, データ列2, color='cornflowerblue')
折れ線グラフの色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
線グラフの色をコーンズシルクに指定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフの色をコーンズシルクに変更する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフの色をコーンズシルクに指定する	plt.plot(データ列, データ列2, color='cornsilk')
コーンズシルク色の線グラフを描画する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画してその色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフを描画して、色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
線グラフを描画して、その色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
線グラフを描画して、色をコーンズシルクに設定する	plt.plot(データ列, データ列2, color='cornsilk')
折れ線グラフの色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフの色をクリムゾンに指定する	plt.plot(データ列, データ列2, color='crimson')
線グラフの色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフの色を真紅に設定する	plt.plot(データ列, データ列2, color='crimson')
クリムゾン色の線グラフを描画する	plt.plot(データ列, データ列2, color='crimson')
クリムゾン色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
線グラフを描画して、その色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
線グラフを描画して、色をクリムゾンに設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、色を真紅に変更する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画して、その色を真紅に設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフを描画してその色を真紅に設定する	plt.plot(データ列, データ列2, color='crimson')
折れ線グラフの色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
線グラフの色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
シアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画して、その色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画して、色をシアンに設定する	plt.plot(データ列, データ列2, color='cyan')
線グラフを描画して、その色をシアンにセットする	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画してその色をシアンにセットする	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフを描画して、その色をシアンに変更する	plt.plot(データ列, データ列2, color='cyan')
折れ線グラフの色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色を紺に指定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色を濃い青にする	plt.plot(データ列, データ列2, color='darkblue')
線グラフの色を濃い青に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色を濃い青に指定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色を紺に変更する	plt.plot(データ列, データ列2, color='darkblue')
紺色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
ダークブルー色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
濃い青色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
ダークブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画して、その色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画して、色をダークブルーに設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画してその色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフを描画して、色を紺に設定する	plt.plot(データ列, データ列2, color='darkblue')
折れ線グラフの色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色を濃いシアンに変更する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色をダークシアンにする	plt.plot(データ列, データ列2, color='darkcyan')
線グラフの色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
ダークシアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkcyan')
濃いシアン色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフを描画して、その色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
線グラフを描画して、その色をダークシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
線グラフを描画してその色を濃いシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
線グラフを描画して、その色をダークシアンに指定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフを描画して、その色を濃いシアンに設定する	plt.plot(データ列, データ列2, color='darkcyan')
折れ線グラフの色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
線グラフの色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
線グラフの色をダークゴールデンロッドに指定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
ダークゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画して、その色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画して色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画して色をダークゴールデンロッドに指定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフを描画してその色をダークゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='darkgoldenrod')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフの色をダークグレーに指定する	plt.plot(データ列, データ列2, color='darkgray')
ダークグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、その色をダークグレーに変更する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画して、その色をダークグレーに指定する	plt.plot(データ列, データ列2, color='darkgray')
線グラフを描画してその色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフを描画してその色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgray')
折れ線グラフの色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフの色をダークグリーンに指定する	plt.plot(データ列, データ列2, color='darkgreen')
線グラフの色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
ダークグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、その色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、その色をダークグリーンに指定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、その色をダークグリーンにする	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して色をダークグリーンに設定する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフを描画して、その色をダークグリーンに変更する	plt.plot(データ列, データ列2, color='darkgreen')
折れ線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
線グラフの色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフの色をダークグレーに変更する	plt.plot(データ列, データ列2, color='darkgrey')
ダークグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
線グラフを描画して、その色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画して色をダークグレーに設定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフを描画して、色をダークグレーに指定する	plt.plot(データ列, データ列2, color='darkgrey')
折れ線グラフの色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフの色をダークカーキに変更する	plt.plot(データ列, データ列2, color='darkkhaki')
ダークカーキ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して、その色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して色をダークカーキにセットする	plt.plot(データ列, データ列2, color='darkkhaki')
線グラフを描画して、その色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフを描画して、色をダークカーキに設定する	plt.plot(データ列, データ列2, color='darkkhaki')
線グラフを描画してその色をダークカーキにする	plt.plot(データ列, データ列2, color='darkkhaki')
折れ線グラフの色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフの色をダークマゼンタに指定する	plt.plot(データ列, データ列2, color='darkmagenta')
ダークマゼンタ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
線グラフを描画してその色をダークマゼンタに指定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフを描画してその色をダークマゼンタに指定する	plt.plot(データ列, データ列2, color='darkmagenta')
線グラフを描画して、その色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフを描画してその色をダークマゼンタに設定する	plt.plot(データ列, データ列2, color='darkmagenta')
折れ線グラフの色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフの色をダークオリーブグリーンに変更する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフの色をダークオリーブグリーンに指定する	plt.plot(データ列, データ列2, color='darkolivegreen')
ダークオリーブグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画して、その色をダークオリーブグリーンに設定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画して、色をダークオリーブグリーンに変更する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフを描画して、色をダークオリーブグリーンに指定する	plt.plot(データ列, データ列2, color='darkolivegreen')
折れ線グラフの色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフの色をダークオレンジに指定する	plt.plot(データ列, データ列2, color='darkorange')
ダークオレンジ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、その色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフを描画して、その色をダークオレンジにセットする	plt.plot(データ列, データ列2, color='darkorange')
線グラフを描画して、色をダークオレンジに設定する	plt.plot(データ列, データ列2, color='darkorange')
折れ線グラフの色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
線グラフの色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
線グラフの色をダークオーキッドにする	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色をダークオーキッドに変更する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色をダークオーキッドに指定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色をダークオーキッドにセットする	plt.plot(データ列, データ列2, color='darkorchid')
ダークオーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフを描画して、その色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
線グラフを描画して、色をダークオーキッドに変更する	plt.plot(データ列, データ列2, color='darkorchid')
線グラフを描画して色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフを描画して、色をダークオーキッドに設定する	plt.plot(データ列, データ列2, color='darkorchid')
折れ線グラフの色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色を暗い赤に変更する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色を暗い赤にセットする	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色をダークレッドに指定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色を暗い赤にする	plt.plot(データ列, データ列2, color='darkred')
暗い赤色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkred')
暗い赤色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='darkred')
ダークレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、その色を暗い赤に設定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して色を暗い赤にセットする	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、その色をダークレッドにする	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフを描画して、その色をダークレッドに設定する	plt.plot(データ列, データ列2, color='darkred')
線グラフを描画して、その色を暗い赤に指定する	plt.plot(データ列, データ列2, color='darkred')
折れ線グラフの色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
線グラフの色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフの色をダークサーモンに指定する	plt.plot(データ列, データ列2, color='darksalmon')
ダークサーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画して、その色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画して、その色をダークサーモンに変更する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画してその色をダークサーモンに変更する	plt.plot(データ列, データ列2, color='darksalmon')
線グラフを描画して、その色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフを描画して、色をダークサーモンに設定する	plt.plot(データ列, データ列2, color='darksalmon')
折れ線グラフの色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフの色をダークシアグリーンに変更する	plt.plot(データ列, データ列2, color='darkseagreen')
ダークシアグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画してその色をダークシアグリーンに変更する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画してその色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフを描画して、色をダークシアグリーンに指定する	plt.plot(データ列, データ列2, color='darkseagreen')
線グラフを描画して、その色をダークシアグリーンに設定する	plt.plot(データ列, データ列2, color='darkseagreen')
折れ線グラフの色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフの色をダークスレートブルーに変更する	plt.plot(データ列, データ列2, color='darkslateblue')
線グラフの色をダークスレートブルーにする	plt.plot(データ列, データ列2, color='darkslateblue')
ダークスレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
線グラフを描画して、色をダークスレートブルーに変更する	plt.plot(データ列, データ列2, color='darkslateblue')
線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画してその色をダークスレートブルーに設定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフを描画して、その色をダークスレートブルーに指定する	plt.plot(データ列, データ列2, color='darkslateblue')
折れ線グラフの色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフの色をダークスラテグレーにセットする	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフの色をダークスラテグレーに指定する	plt.plot(データ列, データ列2, color='darkslategray')
ダークスラテグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して、その色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して色をダークスラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategray')
線グラフを描画して色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフを描画して色をダークスラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategray')
折れ線グラフの色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフの色をダーク・スラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフの色をダーク・スラテグレーに指定する	plt.plot(データ列, データ列2, color='darkslategrey')
線グラフの色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
ダーク・スラテグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画してその色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画してその色をダーク・スラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画して、その色をダーク・スラテグレーに変更する	plt.plot(データ列, データ列2, color='darkslategrey')
線グラフを描画して、その色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフを描画して、その色をダーク・スラテグレーにセットする	plt.plot(データ列, データ列2, color='darkslategrey')
線グラフを描画して、色をダーク・スラテグレーに設定する	plt.plot(データ列, データ列2, color='darkslategrey')
折れ線グラフの色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
線グラフの色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
ダークターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画して、その色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフを描画して、色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
線グラフを描画して、その色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
線グラフを描画してその色をダークターコイズに設定する	plt.plot(データ列, データ列2, color='darkturquoise')
折れ線グラフの色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
線グラフの色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフの色をダークバイオレットにする	plt.plot(データ列, データ列2, color='darkviolet')
ダークバイオレット色の線グラフを描画する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画して、その色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画して色をダークバイオレットに指定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画してその色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフを描画して色をダークバイオレットに設定する	plt.plot(データ列, データ列2, color='darkviolet')
線グラフを描画して色をダークバイオレットに変更する	plt.plot(データ列, データ列2, color='darkviolet')
折れ線グラフの色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
線グラフの色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
デピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、その色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
線グラフを描画して色をデピンクに設定する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、色をデピンクに変更する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフを描画して、その色をデピンクに変更する	plt.plot(データ列, データ列2, color='deeppink')
折れ線グラフの色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフの色をディープスカイブルーに変更する	plt.plot(データ列, データ列2, color='deepskyblue')
ディープスカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフを描画して、その色をディープスカイブルーに設定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフを描画して、その色をディープスカイブルーに指定する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフを描画して色をディープスカイブルーに変更する	plt.plot(データ列, データ列2, color='deepskyblue')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
線グラフの色をディムグレーに変更する	plt.plot(データ列, データ列2, color='dimgray')
線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
ディムグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフを描画して、その色をディムグレーに指定する	plt.plot(データ列, データ列2, color='dimgray')
線グラフを描画して、その色をディムグレーに変更する	plt.plot(データ列, データ列2, color='dimgray')
折れ線グラフの色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフの色をディムグレーに指定する	plt.plot(データ列, データ列2, color='dimgrey')
ディムグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画して、その色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフを描画して、その色をディムグレーに指定する	plt.plot(データ列, データ列2, color='dimgrey')
線グラフを描画してその色をディムグレーに設定する	plt.plot(データ列, データ列2, color='dimgrey')
折れ線グラフの色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフの色をドジャーブルーに指定する	plt.plot(データ列, データ列2, color='dodgerblue')
線グラフの色をドジャーブルーに変更する	plt.plot(データ列, データ列2, color='dodgerblue')
ドジャーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
線グラフを描画して、その色をドジャーブルーにセットする	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフを描画して、その色をドジャーブルーに変更する	plt.plot(データ列, データ列2, color='dodgerblue')
線グラフを描画して、その色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフを描画してその色をドジャーブルーに設定する	plt.plot(データ列, データ列2, color='dodgerblue')
折れ線グラフの色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
線グラフの色を耐火レンガに変更する	plt.plot(データ列, データ列2, color='firebrick')
耐火レンガ色の線グラフを描画する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフを描画して、その色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
線グラフを描画してその色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフを描画してその色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフを描画して、色を耐火レンガに設定する	plt.plot(データ列, データ列2, color='firebrick')
折れ線グラフの色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
線グラフの色をフローラルホワイトに変更する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフの色をフローラルホワイトにセットする	plt.plot(データ列, データ列2, color='floralwhite')
フローラルホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画して、その色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画してその色をフローラルホワイトに設定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画して、その色をフローラルホワイトに指定する	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフを描画してその色をフローラルホワイトにする	plt.plot(データ列, データ列2, color='floralwhite')
折れ線グラフの色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
線グラフの色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
フォレストグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、その色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、その色をフォレストグリーンに指定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、色をフォレストグリーンに指定する	plt.plot(データ列, データ列2, color='forestgreen')
線グラフを描画してその色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフを描画して、その色をフォレストグリーンにする	plt.plot(データ列, データ列2, color='forestgreen')
線グラフを描画して、色をフォレストグリーンに設定する	plt.plot(データ列, データ列2, color='forestgreen')
折れ線グラフの色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
フクシア色の線グラフを描画する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画して、その色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画してその色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画して、その色をフクシアにセットする	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画して、その色をフクシアに変更する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフを描画して色をフクシアに設定する	plt.plot(データ列, データ列2, color='fuchsia')
折れ線グラフの色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフの色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフの色をゲインズボロに変更する	plt.plot(データ列, データ列2, color='gainsboro')
ゲインズボロ色の線グラフを描画する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフを描画して、その色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフを描画して、その色をゲインズボロに指定する	plt.plot(データ列, データ列2, color='gainsboro')
線グラフを描画して、その色をゲインズボロに設定する	plt.plot(データ列, データ列2, color='gainsboro')
折れ線グラフの色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフの色をゴーストホワイトに変更する	plt.plot(データ列, データ列2, color='ghostwhite')
線グラフの色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
ゴーストホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフを描画して、色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフを描画して、その色をゴーストホワイトにセットする	plt.plot(データ列, データ列2, color='ghostwhite')
線グラフを描画して、その色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフを描画してその色をゴーストホワイトに設定する	plt.plot(データ列, データ列2, color='ghostwhite')
折れ線グラフの色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールドにセットする	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールドに変更する	plt.plot(データ列, データ列2, color='gold')
線グラフの色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
ゴールド色の線グラフを描画する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して、その色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画してその色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して、その色をゴールドに変更する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して、色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフを描画して色をゴールドに設定する	plt.plot(データ列, データ列2, color='gold')
折れ線グラフの色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフの色をゴールデンロッドにセットする	plt.plot(データ列, データ列2, color='goldenrod')
ゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフを描画して、その色をゴールデンロッドに指定する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフを描画して、色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
線グラフを描画して、その色をゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフを描画して、その色をゴールデンロッドにセットする	plt.plot(データ列, データ列2, color='goldenrod')
折れ線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフの色をグレーに指定する	plt.plot(データ列, データ列2, color='gray')
グレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、その色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、色をグレーに設定する	plt.plot(データ列, データ列2, color='gray')
線グラフを描画して、色をグレーに変更する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフを描画して、その色をグレーに指定する	plt.plot(データ列, データ列2, color='gray')
折れ線グラフの色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
線グラフの色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフの色をグリーンにする	plt.plot(データ列, データ列2, color='green')
線グラフの色をグリーンにする	plt.plot(データ列, データ列2, color='green')
グリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='green')
折れ線グラフを描画して、その色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフを描画してその色をグリーンに設定する	plt.plot(データ列, データ列2, color='green')
折れ線グラフの色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフの色をグリーンイエローに指定する	plt.plot(データ列, データ列2, color='greenyellow')
グリーンイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
線グラフを描画してその色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
線グラフを描画して、色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフを描画して、色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(データ列, データ列2, color='greenyellow')
折れ線グラフの色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフの色をグレーにセットする	plt.plot(データ列, データ列2, color='grey')
グレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して、その色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画して色をグレーに変更する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフを描画してその色をグレーに設定する	plt.plot(データ列, データ列2, color='grey')
折れ線グラフの色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
線グラフの色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
ハニーデュー色の線グラフを描画する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフを描画して、その色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
線グラフを描画して、その色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
線グラフを描画してその色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフを描画して、色をハニーデューに設定する	plt.plot(データ列, データ列2, color='honeydew')
線グラフを描画してその色をハニーデューに変更する	plt.plot(データ列, データ列2, color='honeydew')
折れ線グラフの色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフの色をホットピンクに変更する	plt.plot(データ列, データ列2, color='hotpink')
ホットピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフを描画して、その色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフを描画してその色をホットピンクに設定する	plt.plot(データ列, データ列2, color='hotpink')
線グラフを描画してその色をホットピンクにする	plt.plot(データ列, データ列2, color='hotpink')
折れ線グラフの色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフの色をインディアンレッドに変更する	plt.plot(データ列, データ列2, color='indianred')
線グラフの色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
インディアンレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、その色をインディアンレッドにする	plt.plot(データ列, データ列2, color='indianred')
線グラフを描画して、その色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、色をインディアンレッドに設定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフを描画して、その色をインディアンレッドに指定する	plt.plot(データ列, データ列2, color='indianred')
折れ線グラフの色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
インディゴ色の線グラフを描画する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画して、その色をインディゴに設定する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画して、色をインディゴに指定する	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフを描画して、その色をインディゴにする	plt.plot(データ列, データ列2, color='indigo')
折れ線グラフの色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフの色をアイボリーに指定する	plt.plot(データ列, データ列2, color='ivory')
線グラフの色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
アイボリー色の線グラフを描画する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画して、その色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画して、その色をアイボリーにセットする	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画して、色をアイボリーに変更する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画してその色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画して、その色をアイボリーに設定する	plt.plot(データ列, データ列2, color='ivory')
線グラフを描画してその色をアイボリーにする	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフを描画して、その色をアイボリーに指定する	plt.plot(データ列, データ列2, color='ivory')
折れ線グラフの色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
線グラフの色をカーキに指定する	plt.plot(データ列, データ列2, color='khaki')
カーキ色の線グラフを描画する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、その色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、その色をカーキに変更する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画して、その色をカーキに指定する	plt.plot(データ列, データ列2, color='khaki')
線グラフを描画して、その色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
線グラフを描画してその色をカーキに設定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフを描画してその色をカーキに指定する	plt.plot(データ列, データ列2, color='khaki')
折れ線グラフの色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
線グラフの色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフの色をラベンダーにセットする	plt.plot(データ列, データ列2, color='lavender')
ラベンダー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画して、その色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画してその色をラベンダーに設定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画してその色をラベンダーに指定する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフを描画して、色をラベンダーに変更する	plt.plot(データ列, データ列2, color='lavender')
線グラフを描画して、その色をラベンダーに変更する	plt.plot(データ列, データ列2, color='lavender')
折れ線グラフの色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
線グラフの色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
ラベンダーブラッシュ色の線グラフを描画する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、その色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、色をラベンダーブラッシュに変更する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して色をラベンダーブラッシュに設定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、色をラベンダーブラッシュに指定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、その色をラベンダーブラッシュにセットする	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフを描画して、その色をラベンダーブラッシュに指定する	plt.plot(データ列, データ列2, color='lavenderblush')
折れ線グラフの色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
線グラフの色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
線グラフの色をローングリーンにセットする	plt.plot(データ列, データ列2, color='lawngreen')
ローングリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画して、その色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
線グラフを描画して、その色をローングリーンに指定する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画してその色をローングリーンに設定する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフを描画してその色をローングリーンに変更する	plt.plot(データ列, データ列2, color='lawngreen')
折れ線グラフの色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
線グラフの色をレモンシフォンに変更する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフの色をレモンシフォンに指定する	plt.plot(データ列, データ列2, color='lemonchiffon')
線グラフの色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
レモンシフォン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
線グラフを描画して、その色をレモンシフォンに設定する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画してその色をレモンシフォンにする	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフを描画して、色をレモンシフォンに変更する	plt.plot(データ列, データ列2, color='lemonchiffon')
折れ線グラフの色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
線グラフの色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
線グラフの色をライトブルーに指定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフの色をライトブルーに変更する	plt.plot(データ列, データ列2, color='lightblue')
ライトブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して、その色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して色をライトブルーに変更する	plt.plot(データ列, データ列2, color='lightblue')
線グラフを描画してその色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフを描画して色をライトブルーに設定する	plt.plot(データ列, データ列2, color='lightblue')
折れ線グラフの色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフの色をライトコーラルに変更する	plt.plot(データ列, データ列2, color='lightcoral')
ライトコーラル色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフを描画して、その色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
線グラフを描画してその色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフを描画して、色をライトコーラルに変更する	plt.plot(データ列, データ列2, color='lightcoral')
線グラフを描画して、その色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
線グラフを描画して、色をライトコーラルに設定する	plt.plot(データ列, データ列2, color='lightcoral')
折れ線グラフの色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
線グラフの色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
ライトシアン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画してその色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
線グラフを描画して、その色をライトシアンに設定する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画してその色をライトシアンに変更する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画して、その色をライトシアンに変更する	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフを描画して、その色をライトシアンにセットする	plt.plot(データ列, データ列2, color='lightcyan')
折れ線グラフの色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
線グラフの色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
線グラフの色をライトゴールドロディイエローに指定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
ライトゴールドロディイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフを描画して、その色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフを描画して、色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
線グラフを描画してその色をライトゴールドロディイエローに指定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフを描画して色をライトゴールドロディイエローに設定する	plt.plot(データ列, データ列2, color='lightgoldenrodyellow')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフの色をライトグレーに変更する	plt.plot(データ列, データ列2, color='lightgray')
ライトグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画してその色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、その色をライトグレーに変更する	plt.plot(データ列, データ列2, color='lightgray')
線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフを描画して、色をライトグレーに変更する	plt.plot(データ列, データ列2, color='lightgray')
線グラフを描画してその色をライトグレーに変更する	plt.plot(データ列, データ列2, color='lightgray')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフの色をライトグリーンに指定する	plt.plot(データ列, データ列2, color='lightgreen')
ライトグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画して、色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
線グラフを描画して、色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフを描画してその色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightgreen')
折れ線グラフの色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフの色をライトグレーに変更する	plt.plot(データ列, データ列2, color='lightgrey')
ライトグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画して、その色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画してその色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画して、色をライトグレーに設定する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフを描画してその色をライトグレーに変更する	plt.plot(データ列, データ列2, color='lightgrey')
折れ線グラフの色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
淡いピンク色色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、その色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、その色を淡いピンク色に指定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフを描画して、その色を淡いピンク色にする	plt.plot(データ列, データ列2, color='lightpink')
線グラフを描画してその色を淡いピンク色に設定する	plt.plot(データ列, データ列2, color='lightpink')
折れ線グラフの色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフの色をライトサーモンに変更する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフの色をライトサーモンに指定する	plt.plot(データ列, データ列2, color='lightsalmon')
線グラフの色をライトサーモンに変更する	plt.plot(データ列, データ列2, color='lightsalmon')
ライトサーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画して、その色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画して、その色をライトサーモンにする	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフを描画して、色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
線グラフを描画して、その色をライトサーモンに設定する	plt.plot(データ列, データ列2, color='lightsalmon')
折れ線グラフの色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフの色をライトグリーンにする	plt.plot(データ列, データ列2, color='lightseagreen')
ライトグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画してその色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフを描画して、その色をライトグリーンに変更する	plt.plot(データ列, データ列2, color='lightseagreen')
線グラフを描画して、その色をライトグリーンに設定する	plt.plot(データ列, データ列2, color='lightseagreen')
折れ線グラフの色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
線グラフの色をライトスカイブルーにする	plt.plot(データ列, データ列2, color='lightskyblue')
ライトスカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して、色をライトスカイブルーに変更する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画して、その色をライトスカイブルーに変更する	plt.plot(データ列, データ列2, color='lightskyblue')
線グラフを描画して、色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフを描画してその色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
線グラフを描画して、その色をライトスカイブルーに設定する	plt.plot(データ列, データ列2, color='lightskyblue')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
線グラフの色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフの色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフの色をライトスレイグレーに変更する	plt.plot(データ列, データ列2, color='lightslategray')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画してその色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
線グラフを描画して、色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフを描画して、その色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategray')
折れ線グラフの色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフの色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフの色をライトスレイグレーに変更する	plt.plot(データ列, データ列2, color='lightslategrey')
ライトスレイグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画してその色をライトスレイグレーにセットする	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画して、その色をライトスレイグレーに指定する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフを描画して、色をライトスレイグレーに変更する	plt.plot(データ列, データ列2, color='lightslategrey')
折れ線グラフの色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
線グラフの色をライトスチールブルーに変更する	plt.plot(データ列, データ列2, color='lightsteelblue')
ライトスチールブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画して、その色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画して色をライトスチールブルーに変更する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画して色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画してその色をライトスチールブルーに指定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフを描画して、色をライトスチールブルーに設定する	plt.plot(データ列, データ列2, color='lightsteelblue')
折れ線グラフの色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
ライトイエロー色の線グラフを描画する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフを描画して、その色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
線グラフを描画して、その色をライトイエローに設定する	plt.plot(データ列, データ列2, color='lightyellow')
線グラフを描画して、その色をライトイエローに指定する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフを描画して、その色をライトイエローに変更する	plt.plot(データ列, データ列2, color='lightyellow')
折れ線グラフの色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフの色をライムにセットする	plt.plot(データ列, データ列2, color='lime')
ライム色の線グラフを描画する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して、その色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
線グラフを描画して、その色をライムに指定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画してその色をライムに設定する	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して、その色をライムにセットする	plt.plot(データ列, データ列2, color='lime')
折れ線グラフを描画して色をライムにする	plt.plot(データ列, データ列2, color='lime')
折れ線グラフの色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフの色をライムグリーンにセットする	plt.plot(データ列, データ列2, color='limegreen')
線グラフの色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
ライムグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画して、その色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画して色をライムグリーンに変更する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画してその色をライムグリーンに変更する	plt.plot(データ列, データ列2, color='limegreen')
線グラフを描画して、その色をライムグリーンに設定する	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフを描画して、色をライムグリーンにする	plt.plot(データ列, データ列2, color='limegreen')
折れ線グラフの色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をリネンに変更する	plt.plot(データ列, データ列2, color='linen')
線グラフの色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をリネンに指定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をリネンにセットする	plt.plot(データ列, データ列2, color='linen')
リネン色の線グラフを描画する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画して、その色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画して、色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフを描画してその色をリネンに指定する	plt.plot(データ列, データ列2, color='linen')
線グラフを描画してその色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
線グラフを描画して、その色をリネンに設定する	plt.plot(データ列, データ列2, color='linen')
折れ線グラフの色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフの色をマゼンタに指定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフの色をマゼンタに変更する	plt.plot(データ列, データ列2, color='magenta')
線グラフの色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
マゼンタ色の線グラフを描画する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、その色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画して、色をマゼンタに変更する	plt.plot(データ列, データ列2, color='magenta')
線グラフを描画して、その色をマゼンタに指定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画してその色をマゼンタにする	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフを描画してその色をマゼンタに設定する	plt.plot(データ列, データ列2, color='magenta')
折れ線グラフの色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
線グラフの色をマルーンに指定する	plt.plot(データ列, データ列2, color='maroon')
線グラフの色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフの色をマルーンに指定する	plt.plot(データ列, データ列2, color='maroon')
マルーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、その色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画して、その色をマルーンに変更する	plt.plot(データ列, データ列2, color='maroon')
線グラフを描画して、その色をマルーンに変更する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフを描画してその色をマルーンに設定する	plt.plot(データ列, データ列2, color='maroon')
折れ線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフの色をミディアムアクアマリンに変更する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフの色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフの色をミディアムアクアマリンに指定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
ミディアムアクアマリン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフを描画して、その色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフを描画して色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフを描画して、色をミディアムアクアマリンに指定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフを描画して色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
線グラフを描画してその色をミディアムアクアマリンに設定する	plt.plot(データ列, データ列2, color='mediumaquamarine')
折れ線グラフの色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフの色をミディアムブルーに指定する	plt.plot(データ列, データ列2, color='mediumblue')
ミディアムブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフを描画して、その色をミディアムブルーに指定する	plt.plot(データ列, データ列2, color='mediumblue')
線グラフを描画して、その色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフを描画して、色をミディアムブルーに設定する	plt.plot(データ列, データ列2, color='mediumblue')
折れ線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
線グラフの色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフの色をミディアムオーキッドに変更する	plt.plot(データ列, データ列2, color='mediumorchid')
線グラフの色をミディアムオーキッドに変更する	plt.plot(データ列, データ列2, color='mediumorchid')
ミディアムオーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画して、その色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画して、その色をミディアムオーキッドに指定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画して、色をミディアムオーキッドに指定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフを描画して、色をミディアムオーキッドに設定する	plt.plot(データ列, データ列2, color='mediumorchid')
折れ線グラフの色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
線グラフの色をミディアムパープルにセットする	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフの色をミディアムパープルに変更する	plt.plot(データ列, データ列2, color='mediumpurple')
ミディアムパープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフを描画して、その色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
線グラフを描画して、色をミディアムパープルに設定する	plt.plot(データ列, データ列2, color='mediumpurple')
線グラフを描画して、その色をミディアムパープルに変更する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフを描画してその色をミディアムパープルに指定する	plt.plot(データ列, データ列2, color='mediumpurple')
折れ線グラフの色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフの色をミディアムシアグリーンに変更する	plt.plot(データ列, データ列2, color='mediumseagreen')
線グラフの色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
ミディアムシアグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、その色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
線グラフを描画して、その色をミディアムシアグリーンにセットする	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、色をミディアムシアグリーンに設定する	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画して、その色をミディアムシアグリーンにする	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフを描画してその色をミディアムシアグリーンにセットする	plt.plot(データ列, データ列2, color='mediumseagreen')
折れ線グラフの色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフの色をミディアムスレートブルーに変更する	plt.plot(データ列, データ列2, color='mediumslateblue')
ミディアムスレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画して、その色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画して色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画してその色をミディアムスレートブルーに設定する	plt.plot(データ列, データ列2, color='mediumslateblue')
線グラフを描画してその色をミディアムスレートブルーにセットする	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフを描画してその色をミディアムスレートブルーにセットする	plt.plot(データ列, データ列2, color='mediumslateblue')
折れ線グラフの色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
線グラフの色をミディアムスプリンググリーンに指定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフの色をミディアムスプリンググリーンに変更する	plt.plot(データ列, データ列2, color='mediumspringgreen')
ミディアムスプリンググリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画して、その色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画してその色をミディアムスプリンググリーンに変更する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画してその色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画して色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフを描画して、色をミディアムスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='mediumspringgreen')
折れ線グラフの色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
線グラフの色をミディアムターコイズに指定する	plt.plot(データ列, データ列2, color='mediumturquoise')
線グラフの色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
ミディアムターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画してその色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、その色をミディアムターコイズに指定する	plt.plot(データ列, データ列2, color='mediumturquoise')
線グラフを描画して、その色をミディアムターコイズに設定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフを描画して、色をミディアムターコイズにする	plt.plot(データ列, データ列2, color='mediumturquoise')
線グラフを描画して、その色をミディアムターコイズに指定する	plt.plot(データ列, データ列2, color='mediumturquoise')
折れ線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
線グラフの色をミディアムバイオレットレッドに指定する	plt.plot(データ列, データ列2, color='mediumvioletred')
ミディアムバイオレットレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフを描画して、色をミディアムバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='mediumvioletred')
線グラフを描画して、その色をミディアムバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='mediumvioletred')
折れ線グラフの色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフの色をミッドナイトブルーに変更する	plt.plot(データ列, データ列2, color='midnightblue')
線グラフの色をミッドナイトブルーに変更する	plt.plot(データ列, データ列2, color='midnightblue')
ミッドナイトブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフを描画して、その色をミッドナイトブルーに設定する	plt.plot(データ列, データ列2, color='midnightblue')
折れ線グラフの色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフの色をミントクリームに変更する	plt.plot(データ列, データ列2, color='mintcream')
ミントクリーム色の線グラフを描画する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画して、その色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画して、その色をミントクリームに指定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフを描画して、その色をミントクリームに変更する	plt.plot(データ列, データ列2, color='mintcream')
線グラフを描画して、その色をミントクリームに設定する	plt.plot(データ列, データ列2, color='mintcream')
折れ線グラフの色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
線グラフの色をミスティローズに変更する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフの色をミスティローズに変更する	plt.plot(データ列, データ列2, color='mistyrose')
ミスティローズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、その色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画してその色をミスティローズに設定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画してその色をミスティローズに変更する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフを描画して、その色をミスティローズに指定する	plt.plot(データ列, データ列2, color='mistyrose')
折れ線グラフの色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフの色をモカシンに変更する	plt.plot(データ列, データ列2, color='moccasin')
モカシン色の線グラフを描画する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画して、その色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画してその色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
線グラフを描画して、その色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画して、その色をモカシンに変更する	plt.plot(データ列, データ列2, color='moccasin')
線グラフを描画して、その色をモカシンに指定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフを描画して、色をモカシンに設定する	plt.plot(データ列, データ列2, color='moccasin')
折れ線グラフの色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
線グラフの色をナバホホワイトに変更する	plt.plot(データ列, データ列2, color='navajowhite')
ナバホホワイト色の線グラフを描画する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画して、その色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画してその色をナバホホワイトにする	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画して、色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
線グラフを描画して、色をナバホホワイトに設定する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフを描画して、その色をナバホホワイトに変更する	plt.plot(データ列, データ列2, color='navajowhite')
折れ線グラフの色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
線グラフの色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
ネイビー色の線グラフを描画する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、その色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
線グラフを描画してその色をネイビーに設定する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフを描画して、色をネイビーに指定する	plt.plot(データ列, データ列2, color='navy')
折れ線グラフの色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
線グラフの色をオールドレースにする	plt.plot(データ列, データ列2, color='oldlace')
線グラフの色をオールドレースに指定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフの色をオールドレースにセットする	plt.plot(データ列, データ列2, color='oldlace')
オールドレース色の線グラフを描画する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、その色をオールドレースに設定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、その色をオールドレースにセットする	plt.plot(データ列, データ列2, color='oldlace')
線グラフを描画して、その色をオールドレースに指定する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、色をオールドレースに変更する	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフを描画して、その色をオールドレースにする	plt.plot(データ列, データ列2, color='oldlace')
折れ線グラフの色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフの色をオリーブに指定する	plt.plot(データ列, データ列2, color='olive')
オリーブ色の線グラフを描画する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画して、その色をオリーブに設定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画して、色をオリーブに変更する	plt.plot(データ列, データ列2, color='olive')
線グラフを描画してその色をオリーブに指定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフを描画して、色をオリーブに指定する	plt.plot(データ列, データ列2, color='olive')
折れ線グラフの色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
線グラフの色をオリベドラブに指定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフの色をオリベドラブに指定する	plt.plot(データ列, データ列2, color='olivedrab')
オリベドラブ色の線グラフを描画する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して、その色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画してその色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して、色をオリベドラブに設定する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して色をオリベドラブに変更する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフを描画して、その色をオリベドラブに変更する	plt.plot(データ列, データ列2, color='olivedrab')
折れ線グラフの色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
線グラフの色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフの色をオレンジにセットする	plt.plot(データ列, データ列2, color='orange')
オレンジ色の線グラフを描画する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、その色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
線グラフを描画して、色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、その色をオレンジに指定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画してその色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフを描画して、色をオレンジに設定する	plt.plot(データ列, データ列2, color='orange')
折れ線グラフの色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
線グラフの色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフの色をオレンジレッドに変更する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフの色をオレンジレッドにする	plt.plot(データ列, データ列2, color='orangered')
オレンジレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、その色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
線グラフを描画してその色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、その色をオレンジレッドにする	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフを描画して、色をオレンジレッドに設定する	plt.plot(データ列, データ列2, color='orangered')
折れ線グラフの色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
オーキッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、その色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、その色をオーキッドに変更する	plt.plot(データ列, データ列2, color='orchid')
線グラフを描画してその色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフを描画して、色をオーキッドに設定する	plt.plot(データ列, データ列2, color='orchid')
折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
線グラフの色をパールゴールデンロッドに変更する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフの色をパールゴールデンロッドにする	plt.plot(データ列, データ列2, color='palegoldenrod')
パールゴールデンロッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフを描画してその色をパールゴールデンロッドに指定する	plt.plot(データ列, データ列2, color='palegoldenrod')
線グラフを描画して、その色をパールゴールデンロッドに指定する	plt.plot(データ列, データ列2, color='palegoldenrod')
折れ線グラフの色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフの色をペールグリーンにセットする	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフの色をペールグリーンに指定する	plt.plot(データ列, データ列2, color='palegreen')
ペールグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、その色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画してその色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、その色をペールグリーンに変更する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフを描画して、色をペールグリーンに設定する	plt.plot(データ列, データ列2, color='palegreen')
折れ線グラフの色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフの色をパレットトルコイズに指定する	plt.plot(データ列, データ列2, color='paleturquoise')
パレットトルコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
線グラフを描画してその色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフを描画して、色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
線グラフを描画して、その色をパレットトルコイズに設定する	plt.plot(データ列, データ列2, color='paleturquoise')
折れ線グラフの色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフの色をパールバイオレットレッドに指定する	plt.plot(データ列, データ列2, color='palevioletred')
線グラフの色をパールバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='palevioletred')
パールバイオレットレッド色の線グラフを描画する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
線グラフを描画して、その色をパールバイオレットレッドに設定する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画してその色をパールバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフを描画して、色をパールバイオレットレッドに変更する	plt.plot(データ列, データ列2, color='palevioletred')
線グラフを描画して、その色をパールバイオレットレッドに指定する	plt.plot(データ列, データ列2, color='palevioletred')
折れ線グラフの色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
線グラフの色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフの色をパパイヤウィップに指定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフの色をパパイヤウィップに変更する	plt.plot(データ列, データ列2, color='papayawhip')
パパイヤウィップ色の線グラフを描画する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフを描画して、その色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフを描画してその色をパパイヤウィップに設定する	plt.plot(データ列, データ列2, color='papayawhip')
線グラフを描画してその色をパパイヤウィップに指定する	plt.plot(データ列, データ列2, color='papayawhip')
折れ線グラフの色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
線グラフの色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
線グラフの色をピーチパフに指定する	plt.plot(データ列, データ列2, color='peachpuff')
ピーチパフ色の線グラフを描画する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、その色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、その色をピーチパフに変更する	plt.plot(データ列, データ列2, color='peachpuff')
線グラフを描画してその色をピーチパフに指定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフを描画して、色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
線グラフを描画して、その色をピーチパフに設定する	plt.plot(データ列, データ列2, color='peachpuff')
折れ線グラフの色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフの色をペルーに変更する	plt.plot(データ列, データ列2, color='peru')
線グラフの色をペルーに指定する	plt.plot(データ列, データ列2, color='peru')
線グラフの色をペルーにセットする	plt.plot(データ列, データ列2, color='peru')
ペルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、その色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、その色をペルーに変更する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して、色をペルーにセットする	plt.plot(データ列, データ列2, color='peru')
線グラフを描画して、その色をペルーにする	plt.plot(データ列, データ列2, color='peru')
折れ線グラフを描画して色をペルーに設定する	plt.plot(データ列, データ列2, color='peru')
折れ線グラフの色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
線グラフの色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフの色をピンクに指定する	plt.plot(データ列, データ列2, color='pink')
線グラフの色をピンクに変更する	plt.plot(データ列, データ列2, color='pink')
ピンク色の線グラフを描画する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して、その色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
線グラフを描画して、その色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して色をピンクに変更する	plt.plot(データ列, データ列2, color='pink')
線グラフを描画して色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフを描画して、色をピンクに設定する	plt.plot(データ列, データ列2, color='pink')
折れ線グラフの色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
プラム色の線グラフを描画する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画して、その色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
線グラフを描画してその色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画して、色をプラムに設定する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフを描画して、その色をプラムに変更する	plt.plot(データ列, データ列2, color='plum')
折れ線グラフの色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフの色をパウダーブルーに指定する	plt.plot(データ列, データ列2, color='powderblue')
パウダーブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフを描画して、その色をパウダーブルーに変更する	plt.plot(データ列, データ列2, color='powderblue')
線グラフを描画して、その色をパウダーブルーに変更する	plt.plot(データ列, データ列2, color='powderblue')
線グラフを描画して、色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
線グラフを描画して、その色をパウダーブルーに設定する	plt.plot(データ列, データ列2, color='powderblue')
折れ線グラフの色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
線グラフの色をパープルに指定する	plt.plot(データ列, データ列2, color='purple')
線グラフの色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
パープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフを描画して、その色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
線グラフを描画して、その色をパープルに設定する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフを描画して、その色をパープルに指定する	plt.plot(データ列, データ列2, color='purple')
折れ線グラフを描画してその色をパープルにセットする	plt.plot(データ列, データ列2, color='purple')
折れ線グラフの色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
線グラフの色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフの色をレベッカパープルに指定する	plt.plot(データ列, データ列2, color='rebeccapurple')
レベッカパープル色の線グラフを描画する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフを描画して、色をレベッカパープルに指定する	plt.plot(データ列, データ列2, color='rebeccapurple')
線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフを描画して、その色をレベッカパープルにセットする	plt.plot(データ列, データ列2, color='rebeccapurple')
折れ線グラフの色を赤に設定する	plt.plot(データ列, データ列2, color='red')
線グラフの色を赤に変更する	plt.plot(データ列, データ列2, color='red')
折れ線グラフの色を赤に変更する	plt.plot(データ列, データ列2, color='red')
赤色の線グラフを描画する	plt.plot(データ列, データ列2, color='red')
折れ線グラフを描画して、その色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフを描画して、その色を赤に変更する	plt.plot(データ列, データ列2, color='red')
折れ線グラフを描画して、色を赤に変更する	plt.plot(データ列, データ列2, color='red')
線グラフを描画して、その色を赤に設定する	plt.plot(データ列, データ列2, color='red')
折れ線グラフの色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフの色をロージーブラウンに変更する	plt.plot(データ列, データ列2, color='rosybrown')
線グラフの色をロージーブラウンに変更する	plt.plot(データ列, データ列2, color='rosybrown')
線グラフの色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
ロージーブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
線グラフを描画してその色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフを描画して、その色をロージーブラウンに変更する	plt.plot(データ列, データ列2, color='rosybrown')
線グラフを描画して、その色をロージーブラウンに設定する	plt.plot(データ列, データ列2, color='rosybrown')
折れ線グラフの色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフの色をロイヤルブルーに変更する	plt.plot(データ列, データ列2, color='royalblue')
線グラフの色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
ロイヤルブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
線グラフを描画して、その色をロイヤルブルーに変更する	plt.plot(データ列, データ列2, color='royalblue')
線グラフを描画して、色をロイヤルブルーにする	plt.plot(データ列, データ列2, color='royalblue')
線グラフを描画して、その色をロイヤルブルーに設定する	plt.plot(データ列, データ列2, color='royalblue')
線グラフを描画して、その色をロイヤルブルーに指定する	plt.plot(データ列, データ列2, color='royalblue')
折れ線グラフの色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
サドルブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、その色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、色をサドルブラウンに設定する	plt.plot(データ列, データ列2, color='saddlebrown')
線グラフを描画して、その色をサドルブラウンに変更する	plt.plot(データ列, データ列2, color='saddlebrown')
線グラフを描画して色をサドルブラウンにセットする	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフを描画して、その色をサドルブラウンに変更する	plt.plot(データ列, データ列2, color='saddlebrown')
線グラフを描画してその色をサドルブラウンに指定する	plt.plot(データ列, データ列2, color='saddlebrown')
折れ線グラフの色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフの色をサーモンに指定する	plt.plot(データ列, データ列2, color='salmon')
サーモン色の線グラフを描画する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフを描画して、その色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
線グラフを描画して、その色をサーモンに設定する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフを描画して、その色をサーモンに指定する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフを描画して、色をサーモンに変更する	plt.plot(データ列, データ列2, color='salmon')
折れ線グラフの色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
線グラフの色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
サンディーブラウン色の線グラフを描画する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
線グラフを描画して色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して、色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して色をサンディーブラウンに設定する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフを描画して、その色をサンディーブラウンに指定する	plt.plot(データ列, データ列2, color='sandybrown')
折れ線グラフの色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフの色をシーグリーンに変更する	plt.plot(データ列, データ列2, color='seagreen')
線グラフの色をシーグリーンに変更する	plt.plot(データ列, データ列2, color='seagreen')
シーグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して、その色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
線グラフを描画して、その色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して、色をシーグリーンに設定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して色をシーグリーンに指定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフを描画して、その色をシーグリーンに指定する	plt.plot(データ列, データ列2, color='seagreen')
折れ線グラフの色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
線グラフの色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフの色を貝殻に指定する	plt.plot(データ列, データ列2, color='seashell')
線グラフの色を貝殻に指定する	plt.plot(データ列, データ列2, color='seashell')
貝殻色の線グラフを描画する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画して、その色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
線グラフを描画してその色を貝殻に変更する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画して、色を貝殻に設定する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフを描画して、その色を貝殻に指定する	plt.plot(データ列, データ列2, color='seashell')
折れ線グラフの色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
線グラフの色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフの色をシエナに変更する	plt.plot(データ列, データ列2, color='sienna')
シエナ色の線グラフを描画する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、その色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、その色をシエナに変更する	plt.plot(データ列, データ列2, color='sienna')
線グラフを描画して色をシエナにする	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフを描画して、色をシエナに設定する	plt.plot(データ列, データ列2, color='sienna')
折れ線グラフの色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
線グラフの色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフの色をシルバーにする	plt.plot(データ列, データ列2, color='silver')
折れ線グラフの色をシルバーに指定する	plt.plot(データ列, データ列2, color='silver')
シルバー色の線グラフを描画する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して、その色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して色をシルバーに変更する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画してその色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画して、色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフを描画してその色をシルバーに指定する	plt.plot(データ列, データ列2, color='silver')
線グラフを描画してその色をシルバーに設定する	plt.plot(データ列, データ列2, color='silver')
折れ線グラフの色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
線グラフの色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
スカイブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフを描画して、その色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
線グラフを描画して、その色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
線グラフを描画して、色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
線グラフを描画してその色をスカイブルーに設定する	plt.plot(データ列, データ列2, color='skyblue')
折れ線グラフの色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフの色をスレートブルーに指定する	plt.plot(データ列, データ列2, color='slateblue')
線グラフの色をスレートブルーにセットする	plt.plot(データ列, データ列2, color='slateblue')
スレートブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、その色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画してその色をスレートブルーに設定する	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフを描画して、その色をスレートブルーに指定する	plt.plot(データ列, データ列2, color='slateblue')
線グラフを描画して、その色をスレートブルーにセットする	plt.plot(データ列, データ列2, color='slateblue')
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフの色をスラグレーに変更する	plt.plot(データ列, データ列2, color='slategray')
線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
スラグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
線グラフを描画してその色をスラグレーに指定する	plt.plot(データ列, データ列2, color='slategray')
線グラフを描画して、その色をスラグレーにする	plt.plot(データ列, データ列2, color='slategray')
線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategray')
折れ線グラフの色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
線グラフの色をスラグレーに指定する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフの色をスラグレーに指定する	plt.plot(データ列, データ列2, color='slategrey')
スラグレー色の線グラフを描画する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
線グラフを描画してその色をスラグレーに指定する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフを描画して色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
線グラフを描画して、その色をスラグレーに設定する	plt.plot(データ列, データ列2, color='slategrey')
線グラフを描画して、その色をスラグレーに変更する	plt.plot(データ列, データ列2, color='slategrey')
折れ線グラフの色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
線グラフの色をスノーに変更する	plt.plot(データ列, データ列2, color='snow')
スノー色の線グラフを描画する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画して、その色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画してその色をスノーに変更する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画して、色をスノーに指定する	plt.plot(データ列, データ列2, color='snow')
線グラフを描画して、色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
折れ線グラフを描画して、色をスノーに変更する	plt.plot(データ列, データ列2, color='snow')
線グラフを描画して、その色をスノーに設定する	plt.plot(データ列, データ列2, color='snow')
線グラフを描画して、色をスノーにセットする	plt.plot(データ列, データ列2, color='snow')
折れ線グラフの色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフの色をスプリンググリーンに変更する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフの色をスプリンググリーンにする	plt.plot(データ列, データ列2, color='springgreen')
線グラフの色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
線グラフの色をスプリンググリーンに指定する	plt.plot(データ列, データ列2, color='springgreen')
スプリンググリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画して、その色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画して色をスプリンググリーンに設定する	plt.plot(データ列, データ列2, color='springgreen')
線グラフを描画して、その色をスプリンググリーンに指定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフを描画してその色をスプリンググリーンに指定する	plt.plot(データ列, データ列2, color='springgreen')
折れ線グラフの色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフの色をスチールブルーにする	plt.plot(データ列, データ列2, color='steelblue')
スチールブルー色の線グラフを描画する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフを描画して、その色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフを描画して色をスチールブルーに変更する	plt.plot(データ列, データ列2, color='steelblue')
線グラフを描画して、その色をスチールブルーに設定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフを描画してその色をスチールブルーに指定する	plt.plot(データ列, データ列2, color='steelblue')
折れ線グラフの色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフの色を淡い茶色に設定する	plt.plot(データ列, データ列2, color='tan')
タン色の線グラフを描画する	plt.plot(データ列, データ列2, color='tan')
淡い茶色色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、その色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画して、色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフを描画してその色を淡い茶色に指定する	plt.plot(データ列, データ列2, color='tan')
線グラフを描画して、その色をタンに設定する	plt.plot(データ列, データ列2, color='tan')
折れ線グラフの色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフの色を青緑にする	plt.plot(データ列, データ列2, color='teal')
線グラフの色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
青緑色の線グラフを描画する	plt.plot(データ列, データ列2, color='teal')
青緑色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画して、その色を青緑に設定する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフを描画して、その色を青緑に変更する	plt.plot(データ列, データ列2, color='teal')
線グラフを描画して、その色をティールに設定する	plt.plot(データ列, データ列2, color='teal')
折れ線グラフの色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフの色をシスルに指定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフの色をシスルに変更する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフの色をシスルにする	plt.plot(データ列, データ列2, color='thistle')
シスル色の線グラフを描画する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、その色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画してその色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
線グラフを描画してその色をシスルに指定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
線グラフを描画して、その色をシスルにする	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、色をシスルに設定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフを描画して、色をシスルに指定する	plt.plot(データ列, データ列2, color='thistle')
折れ線グラフの色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
トマト色の線グラフを描画する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画して、その色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画して、その色をトマトにする	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画して、色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフを描画してその色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
線グラフを描画して、その色をトマトに設定する	plt.plot(データ列, データ列2, color='tomato')
折れ線グラフの色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
線グラフの色をターコイズに指定する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフの色を青緑に変更する	plt.plot(データ列, データ列2, color='turquoise')
ターコイズ色の線グラフを描画する	plt.plot(データ列, データ列2, color='turquoise')
ターコイズ色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフを描画して、その色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
線グラフを描画してその色を青緑に設定する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフを描画して、その色をターコイズに変更する	plt.plot(データ列, データ列2, color='turquoise')
線グラフを描画して、その色をターコイズに設定する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフを描画してその色を青緑に設定する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフを描画して、色を青緑に設定する	plt.plot(データ列, データ列2, color='turquoise')
折れ線グラフの色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフの色をバイオレットに指定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフの色を青紫に指定する	plt.plot(データ列, データ列2, color='violet')
線グラフの色を青紫に変更する	plt.plot(データ列, データ列2, color='violet')
青紫色の線グラフを描画する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、その色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
線グラフを描画して、その色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、その色を青紫に変更する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、色をバイオレットに設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、色を青紫に設定する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフを描画して、色を青紫に変更する	plt.plot(データ列, データ列2, color='violet')
折れ線グラフの色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフの色を小麦色にセットする	plt.plot(データ列, データ列2, color='wheat')
線グラフの色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
小麦色色の線グラフを描画する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して、その色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画してその色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して、色を小麦色に指定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフを描画して色を小麦色に設定する	plt.plot(データ列, データ列2, color='wheat')
折れ線グラフの色を白に設定する	plt.plot(データ列, データ列2, color='white')
線グラフの色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフの色をホワイトに設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフの色を白に指定する	plt.plot(データ列, データ列2, color='white')
白色の線グラフを描画する	plt.plot(データ列, データ列2, color='white')
白色の折れ線グラフを描画する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画して、その色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画して、色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画して、色をホワイトに設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフを描画してその色を白に設定する	plt.plot(データ列, データ列2, color='white')
線グラフを描画してその色を白に設定する	plt.plot(データ列, データ列2, color='white')
折れ線グラフの色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフの色をホワイトスモークに指定する	plt.plot(データ列, データ列2, color='whitesmoke')
ホワイトスモーク色の線グラフを描画する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
線グラフを描画して、その色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフを描画してその色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
線グラフを描画して色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフを描画して、色をホワイトスモークに設定する	plt.plot(データ列, データ列2, color='whitesmoke')
折れ線グラフの色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
線グラフの色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフの色を黄色に指定する	plt.plot(データ列, データ列2, color='yellow')
黄色色の線グラフを描画する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフを描画して、その色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
線グラフを描画して、その色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフを描画して、色を黄色に変更する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフを描画して色を黄色に設定する	plt.plot(データ列, データ列2, color='yellow')
折れ線グラフの色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
線グラフの色をイエローグリーンに指定する	plt.plot(データ列, データ列2, color='yellowgreen')
線グラフの色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフの色をイエローグリーンにセットする	plt.plot(データ列, データ列2, color='yellowgreen')
イエローグリーン色の線グラフを描画する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
線グラフを描画して、色をイエローグリーンに指定する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画してその色をイエローグリーンに指定する	plt.plot(データ列, データ列2, color='yellowgreen')
折れ線グラフを描画して、色をイエローグリーンに設定する	plt.plot(データ列, データ列2, color='yellowgreen')
ヒストグラムの色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムの色をアリスブルーにする	plt.hist(データ列, color='aliceblue')
アリスブルー色のヒストグラムを描画する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画して、その色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画して、色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画してその色をアリスブルーに設定する	plt.hist(データ列, color='aliceblue')
ヒストグラムを描画して、その色をアリスブルーに変更する	plt.hist(データ列, color='aliceblue')
ヒストグラムの色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムの色をアンティークホワイトに変更する	plt.hist(データ列, color='antiquewhite')
ヒストグラムの色をアンティークホワイトに指定する	plt.hist(データ列, color='antiquewhite')
アンティークホワイト色のヒストグラムを描画する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、その色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、その色をアンティークホワイトに指定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して、色をアンティークホワイトに変更する	plt.hist(データ列, color='antiquewhite')
ヒストグラムを描画して色をアンティークホワイトに設定する	plt.hist(データ列, color='antiquewhite')
ヒストグラムの色をアクアに設定する	plt.hist(データ列, color='aqua')
アクアにヒストグラムの色を設定する	plt.hist(データ列, color='aqua')
アクアにヒストグラムの色を指定する	plt.hist(データ列, color='aqua')
アクア色のヒストグラムを描画する	plt.hist(データ列, color='aqua')
ヒストグラムを描画して、その色をアクアに設定する	plt.hist(データ列, color='aqua')
ヒストグラムを描画して、その色をアクアに変更する	plt.hist(データ列, color='aqua')
ヒストグラムを描画して、その色をアクアに指定する	plt.hist(データ列, color='aqua')
ヒストグラムの色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
アクアマリンにヒストグラムの色を指定する	plt.hist(データ列, color='aquamarine')
アクアマリンにヒストグラムの色を設定する	plt.hist(データ列, color='aquamarine')
アクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画して、その色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画して色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画してその色をアクアマリンに設定する	plt.hist(データ列, color='aquamarine')
ヒストグラムを描画して、その色をアクアマリンにセットする	plt.hist(データ列, color='aquamarine')
ヒストグラムの色を紺碧に設定する	plt.hist(データ列, color='azure')
紺碧にヒストグラムの色を設定する	plt.hist(データ列, color='azure')
紺碧色のヒストグラムを描画する	plt.hist(データ列, color='azure')
ヒストグラムを描画して、その色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムを描画してその色を紺碧に変更する	plt.hist(データ列, color='azure')
ヒストグラムを描画してその色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムを描画して、色を紺碧に設定する	plt.hist(データ列, color='azure')
ヒストグラムの色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムの色をベージュに指定する	plt.hist(データ列, color='beige')
ベージュ色のヒストグラムを描画する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、その色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、その色をベージュに指定する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、色をベージュにセットする	plt.hist(データ列, color='beige')
ヒストグラムを描画して、色をベージュに設定する	plt.hist(データ列, color='beige')
ヒストグラムを描画して、その色をベージュに変更する	plt.hist(データ列, color='beige')
ヒストグラムの色をビスクに設定する	plt.hist(データ列, color='bisque')
ビスク色のヒストグラムを描画する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して、その色をビスクに設定する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して色をビスクに設定する	plt.hist(データ列, color='bisque')
ヒストグラムを描画して、その色をビスクに変更する	plt.hist(データ列, color='bisque')
ヒストグラムの色をブラックに設定する	plt.hist(データ列, color='black')
ブラックにヒストグラムの色を指定する	plt.hist(データ列, color='black')
ブラックにヒストグラムの色を設定する	plt.hist(データ列, color='black')
ブラック色のヒストグラムを描画する	plt.hist(データ列, color='black')
ヒストグラムを描画して、その色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムを描画して色をブラックに設定する	plt.hist(データ列, color='black')
ヒストグラムを描画して、色をブラックに変更する	plt.hist(データ列, color='black')
ヒストグラムの色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ブランチドアーモンドにヒストグラムの色を変更する	plt.hist(データ列, color='blanchedalmond')
ブランチドアーモンド色のヒストグラムを描画する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画して、その色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画して、色をブランチドアーモンドに指定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画して、色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画してその色をブランチドアーモンドに指定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画してその色をブランチドアーモンドにセットする	plt.hist(データ列, color='blanchedalmond')
ヒストグラムを描画してその色をブランチドアーモンドに設定する	plt.hist(データ列, color='blanchedalmond')
ヒストグラムの色を青に設定する	plt.hist(データ列, color='blue')
青にヒストグラムの色を設定する	plt.hist(データ列, color='blue')
ヒストグラムの色を青に変更する	plt.hist(データ列, color='blue')
青色のヒストグラムを描画する	plt.hist(データ列, color='blue')
ヒストグラムを描画して、その色を青に設定する	plt.hist(データ列, color='blue')
ヒストグラムを描画してその色を青に変更する	plt.hist(データ列, color='blue')
ヒストグラムを描画してその色を青に設定する	plt.hist(データ列, color='blue')
ヒストグラムを描画して色を青に設定する	plt.hist(データ列, color='blue')
ヒストグラムの色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ブルーバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画して、その色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画して、その色をブルーバイオレットに指定する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画して色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ヒストグラムを描画してその色をブルーバイオレットに設定する	plt.hist(データ列, color='blueviolet')
ヒストグラムの色を茶色に設定する	plt.hist(データ列, color='brown')
茶色にヒストグラムの色をする	plt.hist(データ列, color='brown')
ヒストグラムの色を茶色に指定する	plt.hist(データ列, color='brown')
ヒストグラムの色を茶色にする	plt.hist(データ列, color='brown')
ヒストグラムの色をブラウンに変更する	plt.hist(データ列, color='brown')
茶色色のヒストグラムを描画する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画して色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、その色をブラウンに設定する	plt.hist(データ列, color='brown')
ヒストグラムを描画して、色を茶色に設定する	plt.hist(データ列, color='brown')
ヒストグラムの色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
バリーウッドにヒストグラムの色をセットする	plt.hist(データ列, color='burlywood')
ヒストグラムの色をバリーウッドに指定する	plt.hist(データ列, color='burlywood')
バリーウッドにヒストグラムの色を設定する	plt.hist(データ列, color='burlywood')
バリーウッド色のヒストグラムを描画する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画して、その色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画してその色をバリーウッドに設定する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画して、その色をバリーウッドに変更する	plt.hist(データ列, color='burlywood')
ヒストグラムを描画してその色をバリーウッドに変更する	plt.hist(データ列, color='burlywood')
ヒストグラムの色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムの色をカデットブルーに指定する	plt.hist(データ列, color='cadetblue')
ヒストグラムの色をカデットブルーに変更する	plt.hist(データ列, color='cadetblue')
カデットブルー色のヒストグラムを描画する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して、その色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画してその色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して色をカデットブルーに設定する	plt.hist(データ列, color='cadetblue')
ヒストグラムを描画して色をカデットブルーにセットする	plt.hist(データ列, color='cadetblue')
ヒストグラムの色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムの色を黄緑に設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムの色をシャルトリューズに指定する	plt.hist(データ列, color='chartreuse')
シャルトリューズ色のヒストグラムを描画する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して、その色をシャルトリューズに設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画してその色を黄緑に設定する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して色をシャルトリューズに変更する	plt.hist(データ列, color='chartreuse')
ヒストグラムを描画して、色をシャルトリューズにセットする	plt.hist(データ列, color='chartreuse')
ヒストグラムの色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
ヒストグラムの色をチョコレートに変更する	plt.hist(データ列, color='chocolate')
チョコレート色のヒストグラムを描画する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、その色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画してその色をチョコレートに変更する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、色をチョコレートに設定する	plt.hist(データ列, color='chocolate')
ヒストグラムを描画して、その色をチョコレートに指定する	plt.hist(データ列, color='chocolate')
ヒストグラムの色をコーラルに設定する	plt.hist(データ列, color='coral')
ヒストグラムの色をコーラルに変更する	plt.hist(データ列, color='coral')
珊瑚にヒストグラムの色を設定する	plt.hist(データ列, color='coral')
ヒストグラムの色をコーラルに指定する	plt.hist(データ列, color='coral')
コーラル色のヒストグラムを描画する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、その色をコーラルに設定する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、その色をコーラルに指定する	plt.hist(データ列, color='coral')
ヒストグラムを描画して、その色を珊瑚に設定する	plt.hist(データ列, color='coral')
ヒストグラムの色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムの色をやわらかい青に設定する	plt.hist(データ列, color='cornflowerblue')
やわらかい青にヒストグラムの色を設定する	plt.hist(データ列, color='cornflowerblue')
コーンフラワーブルー色のヒストグラムを描画する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画してその色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画してその色をコーンフラワーブルーに変更する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をコーンフラワーブルーにする	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して色をコーンフラワーブルーに設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムを描画して、その色をやわらかい青に設定する	plt.hist(データ列, color='cornflowerblue')
ヒストグラムの色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
コーンズシルクにヒストグラムの色を設定する	plt.hist(データ列, color='cornsilk')
ヒストグラムの色をコーンズシルクに指定する	plt.hist(データ列, color='cornsilk')
コーンズシルク色のヒストグラムを描画する	plt.hist(データ列, color='cornsilk')
ヒストグラムを描画して、その色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
ヒストグラムを描画してその色をコーンズシルクに指定する	plt.hist(データ列, color='cornsilk')
ヒストグラムを描画してその色をコーンズシルクに設定する	plt.hist(データ列, color='cornsilk')
ヒストグラムの色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
クリムゾンにヒストグラムの色を設定する	plt.hist(データ列, color='crimson')
真紅にヒストグラムの色を変更する	plt.hist(データ列, color='crimson')
クリムゾン色のヒストグラムを描画する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色をクリムゾンに変更する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色を真紅にセットする	plt.hist(データ列, color='crimson')
ヒストグラムを描画してその色をクリムゾンに設定する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、色を真紅に設定する	plt.hist(データ列, color='crimson')
ヒストグラムを描画して、その色を深紅に設定する	plt.hist(データ列, color='crimson')
ヒストグラムの色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムの色をシアンに変更する	plt.hist(データ列, color='cyan')
シアンにヒストグラムの色を指定する	plt.hist(データ列, color='cyan')
シアン色のヒストグラムを描画する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、その色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画してその色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、色をシアンに設定する	plt.hist(データ列, color='cyan')
ヒストグラムを描画して、色をシアンに指定する	plt.hist(データ列, color='cyan')
ヒストグラムの色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムの色を濃い青に設定する	plt.hist(データ列, color='darkblue')
紺色のヒストグラムを描画する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色をダークブルーに指定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画してその色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画してその色を紺に変更する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して、その色をダークブルーに設定する	plt.hist(データ列, color='darkblue')
ヒストグラムを描画して色を紺に設定する	plt.hist(データ列, color='darkblue')
ヒストグラムの色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムの色をダークシアンに指定する	plt.hist(データ列, color='darkcyan')
ダークシアンにヒストグラムの色を指定する	plt.hist(データ列, color='darkcyan')
濃いシアンにヒストグラムの色をセットする	plt.hist(データ列, color='darkcyan')
濃いシアンにヒストグラムの色を設定する	plt.hist(データ列, color='darkcyan')
ダークシアン色のヒストグラムを描画する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、その色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、色を濃いシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、色をダークシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムを描画して、その色を濃いシアンに設定する	plt.hist(データ列, color='darkcyan')
ヒストグラムの色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークゴールデンロッドに指定する	plt.hist(データ列, color='darkgoldenrod')
ダークゴールデンロッドにヒストグラムの色を変更する	plt.hist(データ列, color='darkgoldenrod')
ダークゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、その色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、その色をダークゴールデンロッドに変更する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、色をダークゴールデンロッドに設定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムを描画して、その色をダークゴールデンロッドに指定する	plt.hist(データ列, color='darkgoldenrod')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ヒストグラムの色をダークグレーにする	plt.hist(データ列, color='darkgray')
ヒストグラムの色をダークグレーに変更する	plt.hist(データ列, color='darkgray')
ヒストグラムの色をダークグレーにセットする	plt.hist(データ列, color='darkgray')
ダークグレーにヒストグラムの色を設定する	plt.hist(データ列, color='darkgray')
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgray')
ヒストグラムを描画して、その色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ヒストグラムを描画して、色をダークグレーに設定する	plt.hist(データ列, color='darkgray')
ヒストグラムの色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ダークグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、その色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画して、その色をダークグリーンに指定する	plt.hist(データ列, color='darkgreen')
ヒストグラムを描画してその色をダークグリーンに設定する	plt.hist(データ列, color='darkgreen')
ヒストグラムの色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムの色をダークグレーにする	plt.hist(データ列, color='darkgrey')
ヒストグラムの色をダークグレーに変更する	plt.hist(データ列, color='darkgrey')
ダークグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して、その色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して、その色をダークグレーにセットする	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画してその色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムを描画して色をダークグレーに設定する	plt.hist(データ列, color='darkgrey')
ヒストグラムの色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムの色をダークカーキに変更する	plt.hist(データ列, color='darkkhaki')
ダークカーキにヒストグラムの色を設定する	plt.hist(データ列, color='darkkhaki')
ダークカーキ色のヒストグラムを描画する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、その色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、色をダークカーキに指定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画してその色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、その色をダークカーキに指定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムを描画して、色をダークカーキに設定する	plt.hist(データ列, color='darkkhaki')
ヒストグラムの色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ダークマゼンタにヒストグラムの色を指定する	plt.hist(データ列, color='darkmagenta')
ダークマゼンタにヒストグラムの色をする	plt.hist(データ列, color='darkmagenta')
ダークマゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、その色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、色をダークマゼンタに設定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、その色をダークマゼンタにセットする	plt.hist(データ列, color='darkmagenta')
ヒストグラムを描画して、その色をダークマゼンタに指定する	plt.hist(データ列, color='darkmagenta')
ヒストグラムの色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムの色をダークオリーブグリーンにセットする	plt.hist(データ列, color='darkolivegreen')
ダークオリーブグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムの色をダークオリーブグリーンにする	plt.hist(データ列, color='darkolivegreen')
ダークオリーブグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画して、その色をダークオリーブグリーンに設定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画してその色をダークオリーブグリーンに変更する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムを描画して、色をダークオリーブグリーンに指定する	plt.hist(データ列, color='darkolivegreen')
ヒストグラムの色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ダークオレンジにヒストグラムの色を設定する	plt.hist(データ列, color='darkorange')
ダークオレンジ色のヒストグラムを描画する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、その色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、その色をダークオレンジに指定する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画してその色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ヒストグラムを描画して、色をダークオレンジに設定する	plt.hist(データ列, color='darkorange')
ヒストグラムの色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色をダークオーキッドに指定する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色をダークオーキッドに変更する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色をダークオーキッドにセットする	plt.hist(データ列, color='darkorchid')
ダークオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、その色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、その色をダークオーキッドに指定する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画してその色をダークオーキッドに変更する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、色をダークオーキッドに設定する	plt.hist(データ列, color='darkorchid')
ヒストグラムを描画して、その色をダークオーキッドに変更する	plt.hist(データ列, color='darkorchid')
ヒストグラムの色を暗い赤に設定する	plt.hist(データ列, color='darkred')
暗い赤にヒストグラムの色を設定する	plt.hist(データ列, color='darkred')
ヒストグラムの色をダークレッドに設定する	plt.hist(データ列, color='darkred')
暗い赤色のヒストグラムを描画する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、色を暗い赤に設定する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、色を暗い赤に変更する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色を暗い赤に指定する	plt.hist(データ列, color='darkred')
ヒストグラムを描画して、その色を暗い赤にする	plt.hist(データ列, color='darkred')
ヒストグラムの色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ダークサーモンにヒストグラムの色を設定する	plt.hist(データ列, color='darksalmon')
ダークサーモン色のヒストグラムを描画する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して、その色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して、色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画して色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムを描画してその色をダークサーモンに設定する	plt.hist(データ列, color='darksalmon')
ヒストグラムの色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムの色をダークシアグリーンに変更する	plt.hist(データ列, color='darkseagreen')
ダークシアグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='darkseagreen')
ダークシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画して、その色をダークシアグリーンに設定する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画して、色をダークシアグリーンに変更する	plt.hist(データ列, color='darkseagreen')
ヒストグラムを描画して、その色をダークシアグリーンに変更する	plt.hist(データ列, color='darkseagreen')
ヒストグラムの色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスレートブルーに変更する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスレートブルーにする	plt.hist(データ列, color='darkslateblue')
ダークスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、その色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して色をダークスレートブルーに指定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、その色をダークスレートブルーに変更する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して、その色をダークスレートブルーに指定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画して色をダークスレートブルーに変更する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画してその色をダークスレートブルーに変更する	plt.hist(データ列, color='darkslateblue')
ヒストグラムを描画してその色をダークスレートブルーに設定する	plt.hist(データ列, color='darkslateblue')
ヒストグラムの色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムの色をダークスラテグレーに指定する	plt.hist(データ列, color='darkslategray')
ダークスラテグレーにヒストグラムの色を変更する	plt.hist(データ列, color='darkslategray')
ダークスラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画して、その色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画してその色をダークスラテグレーに設定する	plt.hist(データ列, color='darkslategray')
ヒストグラムを描画して色をダークスラテグレーに変更する	plt.hist(データ列, color='darkslategray')
ヒストグラムの色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダーク・スラテグレーにセットする	plt.hist(データ列, color='darkslategrey')
ダーク・スラテグレーにヒストグラムの色を変更する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダーク・スラテグレーに変更する	plt.hist(データ列, color='darkslategrey')
ダーク・スラテグレー色のヒストグラムを描画する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して、その色をダーク・スラテグレーに設定する	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画してその色をダーク・スラテグレーにセットする	plt.hist(データ列, color='darkslategrey')
ヒストグラムを描画して、その色をダーク・スラテグレーに変更する	plt.hist(データ列, color='darkslategrey')
ヒストグラムの色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムの色をダークターコイズに指定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムの色をダークターコイズにセットする	plt.hist(データ列, color='darkturquoise')
ダークターコイズにヒストグラムの色を設定する	plt.hist(データ列, color='darkturquoise')
ダークターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画して、その色をダークターコイズに指定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画してその色をダークターコイズにセットする	plt.hist(データ列, color='darkturquoise')
ヒストグラムを描画してその色をダークターコイズに設定する	plt.hist(データ列, color='darkturquoise')
ヒストグラムの色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
ダークバイオレット色のヒストグラムを描画する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して、その色をダークバイオレットに設定する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して、その色をダークバイオレットに変更する	plt.hist(データ列, color='darkviolet')
ヒストグラムを描画して、その色をダークバイオレットにセットする	plt.hist(データ列, color='darkviolet')
ヒストグラムの色をデピンクに設定する	plt.hist(データ列, color='deeppink')
デピンクにヒストグラムの色を設定する	plt.hist(データ列, color='deeppink')
ヒストグラムの色をデピンクに指定する	plt.hist(データ列, color='deeppink')
デピンク色のヒストグラムを描画する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画して、その色をデピンクに設定する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画して、その色をデピンクに変更する	plt.hist(データ列, color='deeppink')
ヒストグラムを描画して色をデピンクに変更する	plt.hist(データ列, color='deeppink')
ヒストグラムの色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムの色をディープスカイブルーに指定する	plt.hist(データ列, color='deepskyblue')
ディープスカイブルーにヒストグラムの色を設定する	plt.hist(データ列, color='deepskyblue')
ディープスカイブルーにヒストグラムの色を変更する	plt.hist(データ列, color='deepskyblue')
ディープスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、その色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、色をディープスカイブルーに設定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、色をディープスカイブルーに指定する	plt.hist(データ列, color='deepskyblue')
ヒストグラムを描画して、色をディープスカイブルーにする	plt.hist(データ列, color='deepskyblue')
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーにセットする	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーに指定する	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーに変更する	plt.hist(データ列, color='dimgray')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して、その色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して、色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して、その色をディムグレーに変更する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画して色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムを描画してその色をディムグレーに設定する	plt.hist(データ列, color='dimgray')
ヒストグラムの色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムの色をディムグレーに指定する	plt.hist(データ列, color='dimgrey')
ヒストグラムの色をディムグレーにセットする	plt.hist(データ列, color='dimgrey')
ディムグレー色のヒストグラムを描画する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画して、その色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画して、色をディムグレーに設定する	plt.hist(データ列, color='dimgrey')
ヒストグラムを描画して、その色をディムグレーに変更する	plt.hist(データ列, color='dimgrey')
ヒストグラムの色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムの色をドジャーブルーに変更する	plt.hist(データ列, color='dodgerblue')
ドジャーブルーにヒストグラムの色を設定する	plt.hist(データ列, color='dodgerblue')
ドジャーブルー色のヒストグラムを描画する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、その色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、その色をドジャーブルーに変更する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、その色をドジャーブルーにセットする	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して色をドジャーブルーに設定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムを描画して、色をドジャーブルーに指定する	plt.hist(データ列, color='dodgerblue')
ヒストグラムの色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムの色を耐火レンガに指定する	plt.hist(データ列, color='firebrick')
ヒストグラムの色を耐火レンガに変更する	plt.hist(データ列, color='firebrick')
耐火レンガ色のヒストグラムを描画する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して、その色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画して、その色を耐火レンガに変更する	plt.hist(データ列, color='firebrick')
ヒストグラムを描画してその色を耐火レンガに設定する	plt.hist(データ列, color='firebrick')
ヒストグラムの色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
フローラルホワイトにヒストグラムの色を設定する	plt.hist(データ列, color='floralwhite')
フローラルホワイト色のヒストグラムを描画する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して、その色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して、色をフローラルホワイトに指定する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して、色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画してその色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムを描画して色をフローラルホワイトに設定する	plt.hist(データ列, color='floralwhite')
ヒストグラムの色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
フォレストグリーンにヒストグラムの色を指定する	plt.hist(データ列, color='forestgreen')
ヒストグラムの色をフォレストグリーンに指定する	plt.hist(データ列, color='forestgreen')
フォレストグリーン色のヒストグラムを描画する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、その色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画してその色をフォレストグリーンに変更する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、その色をフォレストグリーンに指定する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画してその色をフォレストグリーンに設定する	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画してその色をフォレストグリーンにする	plt.hist(データ列, color='forestgreen')
ヒストグラムを描画して、その色をフォレストグリーンにセットする	plt.hist(データ列, color='forestgreen')
ヒストグラムの色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
フクシアにヒストグラムの色を変更する	plt.hist(データ列, color='fuchsia')
フクシア色のヒストグラムを描画する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画して、その色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画してその色をフクシアに指定する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画して、その色をフクシアに指定する	plt.hist(データ列, color='fuchsia')
ヒストグラムを描画して、色をフクシアに設定する	plt.hist(データ列, color='fuchsia')
ヒストグラムの色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゲインズボロにする	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゲインズボロに変更する	plt.hist(データ列, color='gainsboro')
ゲインズボロ色のヒストグラムを描画する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して、その色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して、その色をゲインズボロにする	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画してその色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して、その色をゲインズボロに変更する	plt.hist(データ列, color='gainsboro')
ヒストグラムを描画して、色をゲインズボロに設定する	plt.hist(データ列, color='gainsboro')
ヒストグラムの色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムの色をゴーストホワイトに指定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムの色をゴーストホワイトに変更する	plt.hist(データ列, color='ghostwhite')
ヒストグラムの色をゴーストホワイトにセットする	plt.hist(データ列, color='ghostwhite')
ゴーストホワイト色のヒストグラムを描画する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトに変更する	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画して、その色をゴーストホワイトにする	plt.hist(データ列, color='ghostwhite')
ヒストグラムを描画してその色をゴーストホワイトに設定する	plt.hist(データ列, color='ghostwhite')
ヒストグラムの色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムの色をゴールドにする	plt.hist(データ列, color='gold')
ゴールドにヒストグラムの色を設定する	plt.hist(データ列, color='gold')
ゴールド色のヒストグラムを描画する	plt.hist(データ列, color='gold')
ヒストグラムを描画して、その色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムを描画してその色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムを描画して色をゴールドに設定する	plt.hist(データ列, color='gold')
ヒストグラムを描画して、色をゴールドに指定する	plt.hist(データ列, color='gold')
ヒストグラムの色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ゴールデンロッドにヒストグラムの色を設定する	plt.hist(データ列, color='goldenrod')
ゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画して、その色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画してその色をゴールデンロッドに設定する	plt.hist(データ列, color='goldenrod')
ヒストグラムを描画して、色をゴールデンロッドに変更する	plt.hist(データ列, color='goldenrod')
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='gray')
グレーにヒストグラムの色をする	plt.hist(データ列, color='gray')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、その色をグレーに設定する	plt.hist(データ列, color='gray')
ヒストグラムを描画して色をグレーに変更する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、色をグレーに設定する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、色をグレーに変更する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、色をグレーに指定する	plt.hist(データ列, color='gray')
ヒストグラムを描画して、色をグレーにする	plt.hist(データ列, color='gray')
ヒストグラムの色をグリーンに設定する	plt.hist(データ列, color='green')
グリーンにヒストグラムの色を設定する	plt.hist(データ列, color='green')
グリーン色のヒストグラムを描画する	plt.hist(データ列, color='green')
ヒストグラムを描画して、その色をグリーンに設定する	plt.hist(データ列, color='green')
ヒストグラムを描画して、色をグリーンに変更する	plt.hist(データ列, color='green')
ヒストグラムを描画して、その色をグリーンにセットする	plt.hist(データ列, color='green')
ヒストグラムの色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
ヒストグラムの色をグリーンイエローに変更する	plt.hist(データ列, color='greenyellow')
グリーンイエローにヒストグラムの色を設定する	plt.hist(データ列, color='greenyellow')
グリーンイエローにヒストグラムの色を指定する	plt.hist(データ列, color='greenyellow')
グリーンイエロー色のヒストグラムを描画する	plt.hist(データ列, color='greenyellow')
ヒストグラムを描画して、その色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
ヒストグラムを描画して、色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
ヒストグラムを描画してその色をグリーンイエローに設定する	plt.hist(データ列, color='greenyellow')
ヒストグラムの色をグレーに設定する	plt.hist(データ列, color='grey')
グレーにヒストグラムの色を設定する	plt.hist(データ列, color='grey')
ヒストグラムの色をグレーに指定する	plt.hist(データ列, color='grey')
グレー色のヒストグラムを描画する	plt.hist(データ列, color='grey')
ヒストグラムを描画して、その色をグレーに設定する	plt.hist(データ列, color='grey')
ヒストグラムを描画して色をグレーに指定する	plt.hist(データ列, color='grey')
ヒストグラムを描画してその色をグレーに設定する	plt.hist(データ列, color='grey')
ヒストグラムを描画してその色をグレーに指定する	plt.hist(データ列, color='grey')
ヒストグラムを描画して、その色をグレーに指定する	plt.hist(データ列, color='grey')
ヒストグラムの色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ハニーデューにヒストグラムの色を設定する	plt.hist(データ列, color='honeydew')
ヒストグラムの色をハニーデューにセットする	plt.hist(データ列, color='honeydew')
ハニーデュー色のヒストグラムを描画する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに変更する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して色をハニーデューに設定する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、その色をハニーデューに指定する	plt.hist(データ列, color='honeydew')
ヒストグラムを描画して、色をハニーデューに指定する	plt.hist(データ列, color='honeydew')
ヒストグラムの色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ホットピンクにヒストグラムの色を設定する	plt.hist(データ列, color='hotpink')
ホットピンク色のヒストグラムを描画する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画して、その色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画してその色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムを描画して、色をホットピンクに設定する	plt.hist(データ列, color='hotpink')
ヒストグラムの色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
インディアンレッドにヒストグラムの色を指定する	plt.hist(データ列, color='indianred')
インディアンレッドにヒストグラムの色を設定する	plt.hist(データ列, color='indianred')
ヒストグラムの色をインディアンレッドにセットする	plt.hist(データ列, color='indianred')
インディアンレッド色のヒストグラムを描画する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、その色をインディアンレッドに指定する	plt.hist(データ列, color='indianred')
ヒストグラムを描画して、色をインディアンレッドに設定する	plt.hist(データ列, color='indianred')
ヒストグラムの色をインディゴに設定する	plt.hist(データ列, color='indigo')
ヒストグラムの色をインディゴに指定する	plt.hist(データ列, color='indigo')
ヒストグラムの色をインディゴにする	plt.hist(データ列, color='indigo')
インディゴ色のヒストグラムを描画する	plt.hist(データ列, color='indigo')
ヒストグラムを描画して、その色をインディゴに設定する	plt.hist(データ列, color='indigo')
ヒストグラムを描画してその色をインディゴに変更する	plt.hist(データ列, color='indigo')
ヒストグラムを描画して、その色をインディゴに指定する	plt.hist(データ列, color='indigo')
ヒストグラムの色をアイボリーに設定する	plt.hist(データ列, color='ivory')
アイボリー色のヒストグラムを描画する	plt.hist(データ列, color='ivory')
ヒストグラムを描画して、その色をアイボリーに設定する	plt.hist(データ列, color='ivory')
ヒストグラムを描画して、色をアイボリーに設定する	plt.hist(データ列, color='ivory')
ヒストグラムを描画してその色をアイボリーに指定する	plt.hist(データ列, color='ivory')
ヒストグラムを描画して、その色をアイボリーにする	plt.hist(データ列, color='ivory')
ヒストグラムを描画してその色をアイボリーに設定する	plt.hist(データ列, color='ivory')
ヒストグラムの色をカーキに設定する	plt.hist(データ列, color='khaki')
カーキにヒストグラムの色をセットする	plt.hist(データ列, color='khaki')
ヒストグラムの色をカーキに変更する	plt.hist(データ列, color='khaki')
カーキ色のヒストグラムを描画する	plt.hist(データ列, color='khaki')
ヒストグラムを描画して、その色をカーキに設定する	plt.hist(データ列, color='khaki')
ヒストグラムを描画してその色をカーキにセットする	plt.hist(データ列, color='khaki')
ヒストグラムを描画してその色をカーキに設定する	plt.hist(データ列, color='khaki')
ヒストグラムの色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ラベンダー色のヒストグラムを描画する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、その色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムを描画して色をラベンダーにセットする	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、その色をラベンダーにする	plt.hist(データ列, color='lavender')
ヒストグラムを描画して、色をラベンダーに設定する	plt.hist(データ列, color='lavender')
ヒストグラムの色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムの色をラベンダーブラッシュに変更する	plt.hist(データ列, color='lavenderblush')
ヒストグラムの色をラベンダーブラッシュに指定する	plt.hist(データ列, color='lavenderblush')
ラベンダーブラッシュにヒストグラムの色を設定する	plt.hist(データ列, color='lavenderblush')
ラベンダーブラッシュ色のヒストグラムを描画する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、その色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、色をラベンダーブラッシュに指定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画して、色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムを描画してその色をラベンダーブラッシュに設定する	plt.hist(データ列, color='lavenderblush')
ヒストグラムの色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
ローングリーン色のヒストグラムを描画する	plt.hist(データ列, color='lawngreen')
ヒストグラムを描画して、その色をローングリーンに設定する	plt.hist(データ列, color='lawngreen')
ヒストグラムを描画して、その色をローングリーンに指定する	plt.hist(データ列, color='lawngreen')
ヒストグラムを描画して、色をローングリーンに指定する	plt.hist(データ列, color='lawngreen')
ヒストグラムを描画して、色をローングリーンにする	plt.hist(データ列, color='lawngreen')
ヒストグラムの色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムの色をレモンシフォンにセットする	plt.hist(データ列, color='lemonchiffon')
ヒストグラムの色をレモンシフォンに変更する	plt.hist(データ列, color='lemonchiffon')
レモンシフォンにヒストグラムの色を指定する	plt.hist(データ列, color='lemonchiffon')
レモンシフォン色のヒストグラムを描画する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、その色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、その色をレモンシフォンにする	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画してその色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して色をレモンシフォンにセットする	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して色をレモンシフォンに設定する	plt.hist(データ列, color='lemonchiffon')
ヒストグラムを描画して、色をレモンシフォンにセットする	plt.hist(データ列, color='lemonchiffon')
ヒストグラムの色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ライトブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画して、その色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画して、その色をライトブルーに変更する	plt.hist(データ列, color='lightblue')
ヒストグラムを描画してその色をライトブルーに設定する	plt.hist(データ列, color='lightblue')
ヒストグラムの色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ライトコーラルにヒストグラムの色を設定する	plt.hist(データ列, color='lightcoral')
ライトコーラルにヒストグラムの色をセットする	plt.hist(データ列, color='lightcoral')
ヒストグラムの色をライトコーラルにセットする	plt.hist(データ列, color='lightcoral')
ライトコーラル色のヒストグラムを描画する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、その色をライトコーラルに指定する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して、色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して色をライトコーラルにセットする	plt.hist(データ列, color='lightcoral')
ヒストグラムを描画して色をライトコーラルに設定する	plt.hist(データ列, color='lightcoral')
ヒストグラムの色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ライトシアン色のヒストグラムを描画する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、その色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、その色をライトシアンに変更する	plt.hist(データ列, color='lightcyan')
ヒストグラムを描画して、色をライトシアンに設定する	plt.hist(データ列, color='lightcyan')
ヒストグラムの色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ライトゴールドロディイエローにヒストグラムの色を設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ライトゴールドロディイエローにヒストグラムの色を指定する	plt.hist(データ列, color='lightgoldenrodyellow')
ライトゴールドロディイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムを描画して、その色をライトゴールドロディイエローに設定する	plt.hist(データ列, color='lightgoldenrodyellow')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ライトグレーにヒストグラムの色を設定する	plt.hist(データ列, color='lightgray')
ヒストグラムの色をライトグレーに変更する	plt.hist(データ列, color='lightgray')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して、その色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して、色をライトグレーに指定する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画してその色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して、その色をライトグレーにする	plt.hist(データ列, color='lightgray')
ヒストグラムを描画して、色をライトグレーに設定する	plt.hist(データ列, color='lightgray')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ヒストグラムの色をライトグリーンにセットする	plt.hist(データ列, color='lightgreen')
ライトグリーンにヒストグラムの色をセットする	plt.hist(データ列, color='lightgreen')
ライトグリーンにヒストグラムの色を変更する	plt.hist(データ列, color='lightgreen')
ライトグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='lightgreen')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画して、その色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画してその色をライトグリーンに設定する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画して、その色をライトグリーンに指定する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画して、その色をライトグリーンに変更する	plt.hist(データ列, color='lightgreen')
ヒストグラムを描画してその色をライトグリーンに指定する	plt.hist(データ列, color='lightgreen')
ヒストグラムの色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムの色をライトグレーに指定する	plt.hist(データ列, color='lightgrey')
ヒストグラムの色をライトグレーにする	plt.hist(データ列, color='lightgrey')
ライトグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、その色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、色をライトグレーに設定する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、その色をライトグレーに指定する	plt.hist(データ列, color='lightgrey')
ヒストグラムを描画して、その色をライトグレーに変更する	plt.hist(データ列, color='lightgrey')
ヒストグラムの色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
ヒストグラムの色を淡いピンク色に変更する	plt.hist(データ列, color='lightpink')
ヒストグラムの色を淡いピンク色に指定する	plt.hist(データ列, color='lightpink')
ヒストグラムの色を淡いピンク色にセットする	plt.hist(データ列, color='lightpink')
淡いピンク色色のヒストグラムを描画する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画して、その色を淡いピンク色に設定する	plt.hist(データ列, color='lightpink')
ヒストグラムを描画して、その色を淡いピンク色にする	plt.hist(データ列, color='lightpink')
ヒストグラムの色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をライトサーモンに指定する	plt.hist(データ列, color='lightsalmon')
ライトサーモンにヒストグラムの色を指定する	plt.hist(データ列, color='lightsalmon')
ライトサーモン色のヒストグラムを描画する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、その色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、その色をライトサーモンに変更する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、色をライトサーモンに設定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、色をライトサーモンに変更する	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、その色をライトサーモンにセットする	plt.hist(データ列, color='lightsalmon')
ヒストグラムを描画して、その色をライトサーモンに指定する	plt.hist(データ列, color='lightsalmon')
ヒストグラムの色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ライトグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムの色をライトグリーンに変更する	plt.hist(データ列, color='lightseagreen')
ライトグリーン色のヒストグラムを描画する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して、その色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して色をライトグリーンに変更する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して、その色をライトグリーンにセットする	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画してその色をライトグリーンに設定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムを描画して、その色をライトグリーンに指定する	plt.hist(データ列, color='lightseagreen')
ヒストグラムの色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
ライトスカイブルーにヒストグラムの色を指定する	plt.hist(データ列, color='lightskyblue')
ヒストグラムの色をライトスカイブルーにする	plt.hist(データ列, color='lightskyblue')
ヒストグラムの色をライトスカイブルーに指定する	plt.hist(データ列, color='lightskyblue')
ライトスカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightskyblue')
ヒストグラムを描画して、その色をライトスカイブルーに設定する	plt.hist(データ列, color='lightskyblue')
ヒストグラムを描画して、その色をライトスカイブルーに指定する	plt.hist(データ列, color='lightskyblue')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画して、その色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画して、その色をライトスレイグレーに変更する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画してその色をライトスレイグレーに指定する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画してその色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategray')
ヒストグラムを描画して、色をライトスレイグレーにセットする	plt.hist(データ列, color='lightslategray')
ヒストグラムの色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスレイグレーに指定する	plt.hist(データ列, color='lightslategrey')
ライトスレイグレー色のヒストグラムを描画する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、その色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して色をライトスレイグレーに設定する	plt.hist(データ列, color='lightslategrey')
ヒストグラムを描画して、その色をライトスレイグレーに変更する	plt.hist(データ列, color='lightslategrey')
ヒストグラムの色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ライトスチールブルーにヒストグラムの色を変更する	plt.hist(データ列, color='lightsteelblue')
ライトスチールブルーにヒストグラムの色を設定する	plt.hist(データ列, color='lightsteelblue')
ライトスチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムを描画して、その色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムを描画してその色をライトスチールブルーに設定する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムを描画してその色をライトスチールブルーに指定する	plt.hist(データ列, color='lightsteelblue')
ヒストグラムを描画して、色をライトスチールブルーにセットする	plt.hist(データ列, color='lightsteelblue')
ヒストグラムの色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムの色をライトイエローに変更する	plt.hist(データ列, color='lightyellow')
ライトイエローにヒストグラムの色を設定する	plt.hist(データ列, color='lightyellow')
ライトイエロー色のヒストグラムを描画する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して、その色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画してその色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して、その色をライトイエローに指定する	plt.hist(データ列, color='lightyellow')
ヒストグラムを描画して、色をライトイエローに設定する	plt.hist(データ列, color='lightyellow')
ヒストグラムの色をライムに設定する	plt.hist(データ列, color='lime')
ヒストグラムの色をライムに変更する	plt.hist(データ列, color='lime')
ライム色のヒストグラムを描画する	plt.hist(データ列, color='lime')
ヒストグラムを描画して、その色をライムに設定する	plt.hist(データ列, color='lime')
ヒストグラムを描画して、色をライムに設定する	plt.hist(データ列, color='lime')
ヒストグラムを描画してその色をライムに変更する	plt.hist(データ列, color='lime')
ヒストグラムの色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ヒストグラムの色をライムグリーンに変更する	plt.hist(データ列, color='limegreen')
ライムグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='limegreen')
ライムグリーンにヒストグラムの色を指定する	plt.hist(データ列, color='limegreen')
ヒストグラムの色をライムグリーンに指定する	plt.hist(データ列, color='limegreen')
ライムグリーン色のヒストグラムを描画する	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して、その色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して色をライムグリーンにする	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して、色をライムグリーンに設定する	plt.hist(データ列, color='limegreen')
ヒストグラムを描画して、色をライムグリーンに変更する	plt.hist(データ列, color='limegreen')
ヒストグラムの色をリネンに設定する	plt.hist(データ列, color='linen')
リネンにヒストグラムの色を設定する	plt.hist(データ列, color='linen')
リネン色のヒストグラムを描画する	plt.hist(データ列, color='linen')
ヒストグラムを描画して、その色をリネンに設定する	plt.hist(データ列, color='linen')
ヒストグラムを描画して、その色をリネンに指定する	plt.hist(データ列, color='linen')
ヒストグラムを描画して色をリネンに設定する	plt.hist(データ列, color='linen')
ヒストグラムを描画して、その色をリネンに変更する	plt.hist(データ列, color='linen')
ヒストグラムを描画してその色をリネンに設定する	plt.hist(データ列, color='linen')
ヒストグラムの色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムの色をマゼンタにする	plt.hist(データ列, color='magenta')
マゼンタ色のヒストグラムを描画する	plt.hist(データ列, color='magenta')
ヒストグラムを描画して、その色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムを描画して、その色をマゼンタに変更する	plt.hist(データ列, color='magenta')
ヒストグラムを描画してその色をマゼンタにする	plt.hist(データ列, color='magenta')
ヒストグラムを描画して、色をマゼンタに設定する	plt.hist(データ列, color='magenta')
ヒストグラムの色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムの色をマルーンにする	plt.hist(データ列, color='maroon')
マルーンにヒストグラムの色を変更する	plt.hist(データ列, color='maroon')
マルーンにヒストグラムの色を設定する	plt.hist(データ列, color='maroon')
マルーン色のヒストグラムを描画する	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、その色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、その色をマルーンにする	plt.hist(データ列, color='maroon')
ヒストグラムを描画してその色をマルーンにする	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムを描画してその色をマルーンに設定する	plt.hist(データ列, color='maroon')
ヒストグラムを描画して、その色をマルーンに変更する	plt.hist(データ列, color='maroon')
ヒストグラムの色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムの色をミディアムアクアマリンに変更する	plt.hist(データ列, color='mediumaquamarine')
ミディアムアクアマリン色のヒストグラムを描画する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画して、その色をミディアムアクアマリンに設定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画してその色をミディアムアクアマリンに指定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画して、その色をミディアムアクアマリンに指定する	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムを描画してその色をミディアムアクアマリンにする	plt.hist(データ列, color='mediumaquamarine')
ヒストグラムの色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムの色をミディアムブルーに変更する	plt.hist(データ列, color='mediumblue')
ヒストグラムの色をミディアムブルーにセットする	plt.hist(データ列, color='mediumblue')
ミディアムブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画して、その色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画してその色をミディアムブルーに変更する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画して、色をミディアムブルーに指定する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画して色をミディアムブルーに設定する	plt.hist(データ列, color='mediumblue')
ヒストグラムを描画して、その色をミディアムブルーに指定する	plt.hist(データ列, color='mediumblue')
ヒストグラムの色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ミディアムオーキッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumorchid')
ヒストグラムを描画して、その色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ヒストグラムを描画して、色をミディアムオーキッドに設定する	plt.hist(データ列, color='mediumorchid')
ヒストグラムの色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムパープルに指定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムパープルに変更する	plt.hist(データ列, color='mediumpurple')
ミディアムパープル色のヒストグラムを描画する	plt.hist(データ列, color='mediumpurple')
ヒストグラムを描画して、その色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムを描画して色をミディアムパープルに設定する	plt.hist(データ列, color='mediumpurple')
ヒストグラムを描画して色をミディアムパープルにする	plt.hist(データ列, color='mediumpurple')
ヒストグラムの色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムの色をミディアムシアグリーンに変更する	plt.hist(データ列, color='mediumseagreen')
ミディアムシアグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='mediumseagreen')
ミディアムシアグリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画して、その色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画して、その色をミディアムシアグリーンに指定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画して、色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムを描画してその色をミディアムシアグリーンに設定する	plt.hist(データ列, color='mediumseagreen')
ヒストグラムの色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムの色をミディアムスレートブルーに変更する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムの色をミディアムスレートブルーにする	plt.hist(データ列, color='mediumslateblue')
ミディアムスレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、その色をミディアムスレートブルーに設定する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、色をミディアムスレートブルーに変更する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムを描画して、その色をミディアムスレートブルーに変更する	plt.hist(データ列, color='mediumslateblue')
ヒストグラムの色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ミディアムスプリンググリーンにヒストグラムの色を変更する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムの色をミディアムスプリンググリーンに変更する	plt.hist(データ列, color='mediumspringgreen')
ミディアムスプリンググリーンにヒストグラムの色を設定する	plt.hist(データ列, color='mediumspringgreen')
ミディアムスプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画して、その色をミディアムスプリンググリーンに設定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画して、色をミディアムスプリンググリーンに変更する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画してその色をミディアムスプリンググリーンに指定する	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムを描画して、その色をミディアムスプリンググリーンにする	plt.hist(データ列, color='mediumspringgreen')
ヒストグラムの色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ミディアムターコイズにヒストグラムの色を変更する	plt.hist(データ列, color='mediumturquoise')
ミディアムターコイズにヒストグラムの色を設定する	plt.hist(データ列, color='mediumturquoise')
ミディアムターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムを描画して、その色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムを描画して、色をミディアムターコイズに設定する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムを描画して、その色をミディアムターコイズに変更する	plt.hist(データ列, color='mediumturquoise')
ヒストグラムの色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ミディアムバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画して、その色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画して、その色をミディアムバイオレットレッドに変更する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画してその色をミディアムバイオレットレッドに指定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムを描画してその色をミディアムバイオレットレッドに設定する	plt.hist(データ列, color='mediumvioletred')
ヒストグラムの色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をミッドナイトブルーにする	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をミッドナイトブルーに変更する	plt.hist(データ列, color='midnightblue')
ミッドナイトブルー色のヒストグラムを描画する	plt.hist(データ列, color='midnightblue')
ヒストグラムを描画して、その色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムを描画してその色をミッドナイトブルーに設定する	plt.hist(データ列, color='midnightblue')
ヒストグラムを描画して、その色をミッドナイトブルーにする	plt.hist(データ列, color='midnightblue')
ヒストグラムの色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムの色をミントクリームに変更する	plt.hist(データ列, color='mintcream')
ミントクリームにヒストグラムの色を設定する	plt.hist(データ列, color='mintcream')
ミントクリーム色のヒストグラムを描画する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画して、その色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画してその色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画して、色をミントクリームに設定する	plt.hist(データ列, color='mintcream')
ヒストグラムを描画して、その色をミントクリームにセットする	plt.hist(データ列, color='mintcream')
ヒストグラムの色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ミスティローズにヒストグラムの色をセットする	plt.hist(データ列, color='mistyrose')
ミスティローズ色のヒストグラムを描画する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画して、その色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画して、その色をミスティローズに指定する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画して、色をミスティローズに設定する	plt.hist(データ列, color='mistyrose')
ヒストグラムを描画して、その色をミスティローズに変更する	plt.hist(データ列, color='mistyrose')
ヒストグラムの色をモカシンに設定する	plt.hist(データ列, color='moccasin')
モカシンにヒストグラムの色を設定する	plt.hist(データ列, color='moccasin')
モカシンにヒストグラムの色を指定する	plt.hist(データ列, color='moccasin')
モカシン色のヒストグラムを描画する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画して、その色をモカシンに設定する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画してその色をモカシンに指定する	plt.hist(データ列, color='moccasin')
ヒストグラムを描画して、色をモカシンに設定する	plt.hist(データ列, color='moccasin')
ヒストグラムの色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ナバホホワイトにヒストグラムの色を設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムの色をナバホホワイトに指定する	plt.hist(データ列, color='navajowhite')
ナバホホワイト色のヒストグラムを描画する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画して、その色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画してその色をナバホホワイトに設定する	plt.hist(データ列, color='navajowhite')
ヒストグラムを描画してその色をナバホホワイトに指定する	plt.hist(データ列, color='navajowhite')
ヒストグラムの色をネイビーに設定する	plt.hist(データ列, color='navy')
ネイビーにヒストグラムの色を設定する	plt.hist(データ列, color='navy')
ヒストグラムの色をネイビーに変更する	plt.hist(データ列, color='navy')
ネイビー色のヒストグラムを描画する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、その色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、その色をネイビーにセットする	plt.hist(データ列, color='navy')
ヒストグラムを描画して、色をネイビーに指定する	plt.hist(データ列, color='navy')
ヒストグラムを描画してその色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムを描画して、色をネイビーに設定する	plt.hist(データ列, color='navy')
ヒストグラムの色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
オールドレースにヒストグラムの色を指定する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオールドレースに変更する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオールドレースに指定する	plt.hist(データ列, color='oldlace')
オールドレース色のヒストグラムを描画する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、その色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、その色をオールドレースに変更する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画してその色をオールドレースに設定する	plt.hist(データ列, color='oldlace')
ヒストグラムを描画して、その色をオールドレースに指定する	plt.hist(データ列, color='oldlace')
ヒストグラムの色をオリーブに設定する	plt.hist(データ列, color='olive')
オリーブにヒストグラムの色を設定する	plt.hist(データ列, color='olive')
オリーブ色のヒストグラムを描画する	plt.hist(データ列, color='olive')
ヒストグラムを描画して、その色をオリーブに設定する	plt.hist(データ列, color='olive')
ヒストグラムを描画してその色をオリーブに指定する	plt.hist(データ列, color='olive')
ヒストグラムを描画して、色をオリーブに設定する	plt.hist(データ列, color='olive')
ヒストグラムを描画して、その色をオリーブに指定する	plt.hist(データ列, color='olive')
ヒストグラムの色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
オリベドラブにヒストグラムの色を設定する	plt.hist(データ列, color='olivedrab')
ヒストグラムの色をオリベドラブに変更する	plt.hist(データ列, color='olivedrab')
オリベドラブにヒストグラムの色をする	plt.hist(データ列, color='olivedrab')
オリベドラブ色のヒストグラムを描画する	plt.hist(データ列, color='olivedrab')
ヒストグラムを描画して、その色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
ヒストグラムを描画して、色をオリベドラブに設定する	plt.hist(データ列, color='olivedrab')
ヒストグラムを描画して、色をオリベドラブに変更する	plt.hist(データ列, color='olivedrab')
ヒストグラムの色をオレンジに設定する	plt.hist(データ列, color='orange')
オレンジにヒストグラムの色を指定する	plt.hist(データ列, color='orange')
オレンジにヒストグラムの色を設定する	plt.hist(データ列, color='orange')
オレンジ色のヒストグラムを描画する	plt.hist(データ列, color='orange')
ヒストグラムを描画して、その色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムを描画して、色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムを描画して色をオレンジに変更する	plt.hist(データ列, color='orange')
ヒストグラムを描画してその色をオレンジに設定する	plt.hist(データ列, color='orange')
ヒストグラムの色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
ヒストグラムの色をオレンジレッドに変更する	plt.hist(データ列, color='orangered')
オレンジレッドにヒストグラムの色をする	plt.hist(データ列, color='orangered')
ヒストグラムの色をオレンジレッドに指定する	plt.hist(データ列, color='orangered')
オレンジレッド色のヒストグラムを描画する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して、その色をオレンジレッドに設定する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して、その色をオレンジレッドに指定する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して色をオレンジレッドに指定する	plt.hist(データ列, color='orangered')
ヒストグラムを描画して、その色をオレンジレッドに変更する	plt.hist(データ列, color='orangered')
ヒストグラムの色をオーキッドに設定する	plt.hist(データ列, color='orchid')
ヒストグラムの色をオーキッドに指定する	plt.hist(データ列, color='orchid')
オーキッド色のヒストグラムを描画する	plt.hist(データ列, color='orchid')
ヒストグラムを描画して、その色をオーキッドに設定する	plt.hist(データ列, color='orchid')
ヒストグラムを描画して色をオーキッドにする	plt.hist(データ列, color='orchid')
ヒストグラムを描画して、その色をオーキッドに指定する	plt.hist(データ列, color='orchid')
ヒストグラムを描画して、色をオーキッドに設定する	plt.hist(データ列, color='orchid')
ヒストグラムを描画して、その色をオーキッドにセットする	plt.hist(データ列, color='orchid')
ヒストグラムの色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムの色をパールゴールデンロッドに変更する	plt.hist(データ列, color='palegoldenrod')
パールゴールデンロッドにヒストグラムの色を変更する	plt.hist(データ列, color='palegoldenrod')
パールゴールデンロッド色のヒストグラムを描画する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、その色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、色をパールゴールデンロッドに設定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムを描画して、その色をパールゴールデンロッドに指定する	plt.hist(データ列, color='palegoldenrod')
ヒストグラムの色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ペールグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='palegreen')
ペールグリーン色のヒストグラムを描画する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、その色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、その色をペールグリーンに指定する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画して、色をペールグリーンに変更する	plt.hist(データ列, color='palegreen')
ヒストグラムを描画してその色をペールグリーンに設定する	plt.hist(データ列, color='palegreen')
ヒストグラムの色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムの色をパレットトルコイズに変更する	plt.hist(データ列, color='paleturquoise')
パレットトルコイズ色のヒストグラムを描画する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、その色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して、その色をパレットトルコイズに指定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画して色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムを描画してその色をパレットトルコイズに設定する	plt.hist(データ列, color='paleturquoise')
ヒストグラムの色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
パールバイオレットレッド色のヒストグラムを描画する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画して、その色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画して色をパールバイオレットレッドに指定する	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画して、その色をパールバイオレットレッドにする	plt.hist(データ列, color='palevioletred')
ヒストグラムを描画してその色をパールバイオレットレッドに設定する	plt.hist(データ列, color='palevioletred')
ヒストグラムの色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
パパイヤウィップにヒストグラムの色を設定する	plt.hist(データ列, color='papayawhip')
パパイヤウィップ色のヒストグラムを描画する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、その色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画してその色をパパイヤウィップに変更する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画して、色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
ヒストグラムを描画してその色をパパイヤウィップに設定する	plt.hist(データ列, color='papayawhip')
ヒストグラムの色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ピーチパフにヒストグラムの色を指定する	plt.hist(データ列, color='peachpuff')
ピーチパフにヒストグラムの色を設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムの色をピーチパフに指定する	plt.hist(データ列, color='peachpuff')
ピーチパフ色のヒストグラムを描画する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、その色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画してその色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、その色をピーチパフに変更する	plt.hist(データ列, color='peachpuff')
ヒストグラムを描画して、色をピーチパフに設定する	plt.hist(データ列, color='peachpuff')
ヒストグラムの色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムの色をペルーに変更する	plt.hist(データ列, color='peru')
ペルー色のヒストグラムを描画する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、その色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムを描画して色をペルーに変更する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、色をペルーに変更する	plt.hist(データ列, color='peru')
ヒストグラムを描画して、色をペルーに設定する	plt.hist(データ列, color='peru')
ヒストグラムの色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムの色をピンクにセットする	plt.hist(データ列, color='pink')
ピンクにヒストグラムの色を指定する	plt.hist(データ列, color='pink')
ピンク色のヒストグラムを描画する	plt.hist(データ列, color='pink')
ヒストグラムを描画して、その色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムを描画して、色をピンクに指定する	plt.hist(データ列, color='pink')
ヒストグラムを描画して、色をピンクに設定する	plt.hist(データ列, color='pink')
ヒストグラムを描画してその色をピンクに指定する	plt.hist(データ列, color='pink')
ヒストグラムの色をプラムに設定する	plt.hist(データ列, color='plum')
プラムにヒストグラムの色を設定する	plt.hist(データ列, color='plum')
ヒストグラムの色をプラムにセットする	plt.hist(データ列, color='plum')
プラム色のヒストグラムを描画する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、その色をプラムに設定する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、色をプラムに設定する	plt.hist(データ列, color='plum')
ヒストグラムを描画して、色をプラムに指定する	plt.hist(データ列, color='plum')
ヒストグラムの色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
パウダーブルーにヒストグラムの色を設定する	plt.hist(データ列, color='powderblue')
パウダーブルーにヒストグラムの色を指定する	plt.hist(データ列, color='powderblue')
パウダーブルー色のヒストグラムを描画する	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して、その色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して、その色をパウダーブルーにセットする	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して、色をパウダーブルーに設定する	plt.hist(データ列, color='powderblue')
ヒストグラムを描画して、その色をパウダーブルーに変更する	plt.hist(データ列, color='powderblue')
ヒストグラムの色をパープルに設定する	plt.hist(データ列, color='purple')
パープルにヒストグラムの色を設定する	plt.hist(データ列, color='purple')
パープル色のヒストグラムを描画する	plt.hist(データ列, color='purple')
ヒストグラムを描画して、その色をパープルに設定する	plt.hist(データ列, color='purple')
ヒストグラムを描画してその色をパープルに設定する	plt.hist(データ列, color='purple')
ヒストグラムを描画してその色をパープルに指定する	plt.hist(データ列, color='purple')
ヒストグラムの色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムの色をレベッカパープルにセットする	plt.hist(データ列, color='rebeccapurple')
レベッカパープル色のヒストグラムを描画する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、その色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、その色をレベッカパープルに指定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、色をレベッカパープルに設定する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムを描画して、その色をレベッカパープルに変更する	plt.hist(データ列, color='rebeccapurple')
ヒストグラムの色を赤に設定する	plt.hist(データ列, color='red')
赤にヒストグラムの色を指定する	plt.hist(データ列, color='red')
赤色のヒストグラムを描画する	plt.hist(データ列, color='red')
ヒストグラムを描画して、その色を赤に設定する	plt.hist(データ列, color='red')
ヒストグラムを描画して色を赤に設定する	plt.hist(データ列, color='red')
ヒストグラムを描画してその色を赤に設定する	plt.hist(データ列, color='red')
ヒストグラムの色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ロージーブラウンにヒストグラムの色を変更する	plt.hist(データ列, color='rosybrown')
ヒストグラムの色をロージーブラウンに変更する	plt.hist(データ列, color='rosybrown')
ヒストグラムの色をロージーブラウンにセットする	plt.hist(データ列, color='rosybrown')
ロージーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画して、その色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画してその色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ヒストグラムを描画して色をロージーブラウンに設定する	plt.hist(データ列, color='rosybrown')
ヒストグラムの色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ヒストグラムの色をロイヤルブルーに変更する	plt.hist(データ列, color='royalblue')
ロイヤルブルーにヒストグラムの色を設定する	plt.hist(データ列, color='royalblue')
ロイヤルブルー色のヒストグラムを描画する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、その色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、色をロイヤルブルーに変更する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、色をロイヤルブルーに設定する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画して、その色をロイヤルブルーに変更する	plt.hist(データ列, color='royalblue')
ヒストグラムを描画してその色をロイヤルブルーにセットする	plt.hist(データ列, color='royalblue')
ヒストグラムの色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
サドルブラウン色のヒストグラムを描画する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画して、その色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画して、色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画してその色をサドルブラウンに設定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムを描画して、色をサドルブラウンに指定する	plt.hist(データ列, color='saddlebrown')
ヒストグラムの色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムの色をサーモンに指定する	plt.hist(データ列, color='salmon')
サーモンにヒストグラムの色を設定する	plt.hist(データ列, color='salmon')
サーモンにヒストグラムの色をセットする	plt.hist(データ列, color='salmon')
サーモン色のヒストグラムを描画する	plt.hist(データ列, color='salmon')
ヒストグラムを描画して、その色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムを描画して、その色をサーモンに指定する	plt.hist(データ列, color='salmon')
ヒストグラムを描画してその色をサーモンに設定する	plt.hist(データ列, color='salmon')
ヒストグラムの色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムの色をサンディーブラウンに変更する	plt.hist(データ列, color='sandybrown')
ヒストグラムの色をサンディーブラウンに指定する	plt.hist(データ列, color='sandybrown')
サンディーブラウン色のヒストグラムを描画する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、その色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、その色をサンディーブラウンに指定する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して、色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画してその色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムを描画して色をサンディーブラウンに設定する	plt.hist(データ列, color='sandybrown')
ヒストグラムの色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
ヒストグラムの色をシーグリーンにセットする	plt.hist(データ列, color='seagreen')
シーグリーン色のヒストグラムを描画する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画して、その色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画して、その色をシーグリーンに変更する	plt.hist(データ列, color='seagreen')
ヒストグラムを描画してその色をシーグリーンに設定する	plt.hist(データ列, color='seagreen')
ヒストグラムの色を貝殻に設定する	plt.hist(データ列, color='seashell')
貝殻にヒストグラムの色を設定する	plt.hist(データ列, color='seashell')
貝殻色のヒストグラムを描画する	plt.hist(データ列, color='seashell')
ヒストグラムを描画して、その色を貝殻に設定する	plt.hist(データ列, color='seashell')
ヒストグラムを描画して、その色を貝殻にセットする	plt.hist(データ列, color='seashell')
ヒストグラムを描画して、その色を貝殻に変更する	plt.hist(データ列, color='seashell')
ヒストグラムを描画してその色を貝殻に設定する	plt.hist(データ列, color='seashell')
ヒストグラムの色をシエナに設定する	plt.hist(データ列, color='sienna')
シエナにヒストグラムの色を設定する	plt.hist(データ列, color='sienna')
シエナにヒストグラムの色を変更する	plt.hist(データ列, color='sienna')
シエナ色のヒストグラムを描画する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、その色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、その色をシエナに指定する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して色をシエナに設定する	plt.hist(データ列, color='sienna')
ヒストグラムを描画して、その色をシエナに変更する	plt.hist(データ列, color='sienna')
ヒストグラムの色をシルバーに設定する	plt.hist(データ列, color='silver')
シルバーにヒストグラムの色を変更する	plt.hist(データ列, color='silver')
シルバー色のヒストグラムを描画する	plt.hist(データ列, color='silver')
ヒストグラムを描画して、その色をシルバーに設定する	plt.hist(データ列, color='silver')
ヒストグラムを描画して、その色をシルバーに指定する	plt.hist(データ列, color='silver')
ヒストグラムを描画して、色をシルバーに設定する	plt.hist(データ列, color='silver')
ヒストグラムを描画して、その色をシルバーにセットする	plt.hist(データ列, color='silver')
ヒストグラムを描画して、その色をシルバーに変更する	plt.hist(データ列, color='silver')
ヒストグラムの色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
スカイブルーにヒストグラムの色を設定する	plt.hist(データ列, color='skyblue')
スカイブルーにヒストグラムの色を指定する	plt.hist(データ列, color='skyblue')
スカイブルー色のヒストグラムを描画する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して、その色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画してその色をスカイブルーにセットする	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して色をスカイブルーに指定する	plt.hist(データ列, color='skyblue')
ヒストグラムを描画して、色をスカイブルーに設定する	plt.hist(データ列, color='skyblue')
ヒストグラムの色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ヒストグラムの色をスレートブルーに変更する	plt.hist(データ列, color='slateblue')
スレートブルーにヒストグラムの色を設定する	plt.hist(データ列, color='slateblue')
スレートブルー色のヒストグラムを描画する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、その色をスレートブルーに設定する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、その色をスレートブルーに指定する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、色をスレートブルーに変更する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、色をスレートブルーにする	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、その色をスレートブルーに変更する	plt.hist(データ列, color='slateblue')
ヒストグラムを描画して、色をスレートブルーに指定する	plt.hist(データ列, color='slateblue')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategray')
スラグレーにヒストグラムの色を変更する	plt.hist(データ列, color='slategray')
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategray')
ヒストグラムを描画して、その色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムを描画して、色をスラグレーに設定する	plt.hist(データ列, color='slategray')
ヒストグラムの色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムの色をスラグレーに変更する	plt.hist(データ列, color='slategrey')
スラグレー色のヒストグラムを描画する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、その色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画してその色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、その色をスラグレーに変更する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、色をスラグレーに設定する	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、その色をスラグレーにセットする	plt.hist(データ列, color='slategrey')
ヒストグラムを描画して、色をスラグレーに指定する	plt.hist(データ列, color='slategrey')
ヒストグラムの色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムの色をスノーに指定する	plt.hist(データ列, color='snow')
ヒストグラムの色をスノーにする	plt.hist(データ列, color='snow')
スノー色のヒストグラムを描画する	plt.hist(データ列, color='snow')
ヒストグラムを描画して、その色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムを描画して色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムを描画して、色をスノーに設定する	plt.hist(データ列, color='snow')
ヒストグラムの色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
ヒストグラムの色をスプリンググリーンにセットする	plt.hist(データ列, color='springgreen')
スプリンググリーン色のヒストグラムを描画する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して、その色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画してその色をスプリンググリーンに設定する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して、その色をスプリンググリーンに指定する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画してその色をスプリンググリーンに変更する	plt.hist(データ列, color='springgreen')
ヒストグラムを描画して、色をスプリンググリーンに変更する	plt.hist(データ列, color='springgreen')
ヒストグラムの色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ヒストグラムの色をスチールブルーにセットする	plt.hist(データ列, color='steelblue')
スチールブルーにヒストグラムの色をする	plt.hist(データ列, color='steelblue')
スチールブルー色のヒストグラムを描画する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、その色をスチールブルーに設定する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、色をスチールブルーに指定する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画して、色をスチールブルーに変更する	plt.hist(データ列, color='steelblue')
ヒストグラムを描画してその色をスチールブルーに変更する	plt.hist(データ列, color='steelblue')
ヒストグラムの色をタンに設定する	plt.hist(データ列, color='tan')
タンにヒストグラムの色を設定する	plt.hist(データ列, color='tan')
ヒストグラムの色をタンにセットする	plt.hist(データ列, color='tan')
ヒストグラムの色をタンに指定する	plt.hist(データ列, color='tan')
ヒストグラムの色を淡い茶色にする	plt.hist(データ列, color='tan')
タン色のヒストグラムを描画する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、その色をタンに設定する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、色を淡い茶色に設定する	plt.hist(データ列, color='tan')
ヒストグラムを描画してその色を淡い茶色に設定する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、その色をタンに指定する	plt.hist(データ列, color='tan')
ヒストグラムを描画して、その色を淡い茶色にする	plt.hist(データ列, color='tan')
ヒストグラムの色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムの色をティールに設定する	plt.hist(データ列, color='teal')
ヒストグラムの色を青緑に変更する	plt.hist(データ列, color='teal')
青緑色のヒストグラムを描画する	plt.hist(データ列, color='teal')
ヒストグラムを描画して、その色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムを描画して、色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムを描画してその色を青緑に設定する	plt.hist(データ列, color='teal')
ヒストグラムを描画して、その色を青緑に変更する	plt.hist(データ列, color='teal')
ヒストグラムを描画してその色をティールに指定する	plt.hist(データ列, color='teal')
ヒストグラムの色をシスルに設定する	plt.hist(データ列, color='thistle')
シスルにヒストグラムの色を変更する	plt.hist(データ列, color='thistle')
ヒストグラムの色をシスルに指定する	plt.hist(データ列, color='thistle')
シスル色のヒストグラムを描画する	plt.hist(データ列, color='thistle')
ヒストグラムを描画して、その色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムを描画してその色をシスルに設定する	plt.hist(データ列, color='thistle')
ヒストグラムを描画して、その色をシスルに変更する	plt.hist(データ列, color='thistle')
ヒストグラムの色をトマトに設定する	plt.hist(データ列, color='tomato')
トマト色のヒストグラムを描画する	plt.hist(データ列, color='tomato')
ヒストグラムを描画して、その色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムを描画して、その色をトマトに指定する	plt.hist(データ列, color='tomato')
ヒストグラムを描画してその色をトマトに設定する	plt.hist(データ列, color='tomato')
ヒストグラムの色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ターコイズにヒストグラムの色を設定する	plt.hist(データ列, color='turquoise')
ヒストグラムの色を青緑に指定する	plt.hist(データ列, color='turquoise')
ターコイズ色のヒストグラムを描画する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して色を青緑に変更する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色をターコイズにセットする	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色を青緑に設定する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画してその色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、その色をターコイズに変更する	plt.hist(データ列, color='turquoise')
ヒストグラムを描画して、色をターコイズに設定する	plt.hist(データ列, color='turquoise')
ヒストグラムの色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムの色をバイオレットに設定する	plt.hist(データ列, color='violet')
ヒストグラムの色を青紫に変更する	plt.hist(データ列, color='violet')
青紫色のヒストグラムを描画する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色を青紫に指定する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色を青紫に変更する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、色をバイオレットに設定する	plt.hist(データ列, color='violet')
ヒストグラムを描画して、その色を青紫にする	plt.hist(データ列, color='violet')
ヒストグラムを描画して、色を青紫に設定する	plt.hist(データ列, color='violet')
ヒストグラムの色を小麦色に設定する	plt.hist(データ列, color='wheat')
小麦色にヒストグラムの色をセットする	plt.hist(データ列, color='wheat')
ヒストグラムの色を小麦色に指定する	plt.hist(データ列, color='wheat')
ヒストグラムの色を小麦色に変更する	plt.hist(データ列, color='wheat')
小麦色色のヒストグラムを描画する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、その色を小麦色に設定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して、色を小麦色に設定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画して色を小麦色に設定する	plt.hist(データ列, color='wheat')
ヒストグラムを描画してその色を小麦色に指定する	plt.hist(データ列, color='wheat')
ヒストグラムの色を白に設定する	plt.hist(データ列, color='white')
白にヒストグラムの色を設定する	plt.hist(データ列, color='white')
ヒストグラムの色を白に変更する	plt.hist(データ列, color='white')
白色のヒストグラムを描画する	plt.hist(データ列, color='white')
ヒストグラムを描画して、その色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムを描画して、その色を白に指定する	plt.hist(データ列, color='white')
ヒストグラムを描画してその色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムを描画して、色を白に設定する	plt.hist(データ列, color='white')
ヒストグラムを描画してその色を白にセットする	plt.hist(データ列, color='white')
ヒストグラムの色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ホワイトスモークにヒストグラムの色を設定する	plt.hist(データ列, color='whitesmoke')
ホワイトスモークにヒストグラムの色を指定する	plt.hist(データ列, color='whitesmoke')
ホワイトスモーク色のヒストグラムを描画する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、その色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画してその色をホワイトスモークに変更する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、色をホワイトスモークに設定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、色をホワイトスモークにセットする	plt.hist(データ列, color='whitesmoke')
ヒストグラムを描画して、その色をホワイトスモークに指定する	plt.hist(データ列, color='whitesmoke')
ヒストグラムの色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムの色を黄色に指定する	plt.hist(データ列, color='yellow')
黄色色のヒストグラムを描画する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して、その色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して、色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムを描画して色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムを描画してその色を黄色にする	plt.hist(データ列, color='yellow')
ヒストグラムを描画してその色を黄色に設定する	plt.hist(データ列, color='yellow')
ヒストグラムの色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
イエローグリーンにヒストグラムの色を設定する	plt.hist(データ列, color='yellowgreen')
イエローグリーン色のヒストグラムを描画する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して、その色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画してその色をイエローグリーンにセットする	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して色をイエローグリーンに設定する	plt.hist(データ列, color='yellowgreen')
ヒストグラムを描画して、その色をイエローグリーンに変更する	plt.hist(データ列, color='yellowgreen')
折れ線グラフの色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフを描画して、色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフを描画して色を赤くする	plt.plot(データ列, データ列2, color='r')
折れ線グラフの色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフを描画して、色を青くする	plt.plot(データ列, データ列2, color='b')
折れ線グラフの色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフを描画して、色を黒くする	plt.plot(データ列, データ列2, color='k')
線グラフを描画して、色を黒くする	plt.plot(データ列, データ列2, color='k')
折れ線グラフの色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフを描画して、色を白くする	plt.plot(データ列, データ列2, color='w')
線グラフを描画して色を白くする	plt.plot(データ列, データ列2, color='w')
線グラフを描画して、色を白くする	plt.plot(データ列, データ列2, color='w')
折れ線グラフの色を黄色くする	plt.plot(データ列, データ列2, color='y')
折れ線グラフを描画して、色を黄色くする	plt.plot(データ列, データ列2, color='y')
ヒストグラムの色を赤くする	plt.hist(データ列, color='r')
ヒストグラムを描画して、色を赤くする	plt.hist(データ列, color='r')
ヒストグラムの色を青くする	plt.hist(データ列, color='b')
ヒストグラムを描画して、色を青くする	plt.hist(データ列, color='b')
ヒストグラムの色を黒くする	plt.hist(データ列, color='k')
ヒストグラムを描画して、色を黒くする	plt.hist(データ列, color='k')
ヒストグラムの色を白くする	plt.hist(データ列, color='w')
ヒストグラムを描画して、色を白くする	plt.hist(データ列, color='w')
ヒストグラムの色を黄色くする	plt.hist(データ列, color='y')
ヒストグラムを描画して、色を黄色くする	plt.hist(データ列, color='y')
赤い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='r')
青い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='b')
黒い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='k')
白い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='w')
黄色い折れ線グラフを描画する	plt.plot(データ列, データ列2, color='y')
赤いヒストグラムを描画する	plt.hist(データ列, color='r')
青いヒストグラムを描画する	plt.hist(データ列, color='b')
黒いヒストグラムを描画する	plt.hist(データ列, color='k')
白いヒストグラムを描画する	plt.hist(データ列, color='w')
黄色いヒストグラムを描画する	plt.hist(データ列, color='y')
名前からカラーマップを使う	"plt.get_cmap(""カラーマップ名"")"
ヒストグラムをカラーマップで描画する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムでカラーマップを使う	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムでカラーマップを使用する	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
ヒストグラムでカラーマップを用いる	"plt.hist(データ列, color=plt.get_cmap(""Spectral""))"
＜オプション＞グラフの種類を破線に設定する	linestyle = 'dashed'
＜オプション＞グラフの種類を破線に指定する	linestyle = 'dashed'
＜オプション＞線種を破線に設定する	linestyle = 'dashed'
＜オプション＞グラフの線種を破線に指定する	linestyle = 'dashed'
＜オプション＞グラフの種類を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞グラフの種類を一点鎖線に変更する	linestyle = 'dashbot'
＜オプション＞グラフの種類を一点鎖線に指定する	linestyle = 'dashbot'
＜オプション＞線種を一点鎖線に設定する	linestyle = 'dashbot'
＜オプション＞線種を一点鎖線に変更する	linestyle = 'dashbot'
＜オプション＞グラフの種類を点線に設定する	linestyle = 'dotted'
＜オプション＞線種を点線に設定する	linestyle = 'dotted'
＜オプション＞グラフの線種を点線に設定する	linestyle = 'dotted'
＜オプション＞グラフの線種を点線にセットする	linestyle = 'dotted'
＜オプション＞グラフの線種を点線に変更する	linestyle = 'dotted'
＜オプション＞グラフの線種を点線に指定する	linestyle = 'dotted'
＜オプション＞グラフの種類を実線に設定する	linestyle = 'solid'
＜オプション＞グラフの種類を実線に指定する	linestyle = 'solid'
＜オプション＞グラフの種類を実線にセットする	linestyle = 'solid'
＜オプション＞線種を実線に設定する	linestyle = 'solid'
＜オプション＞線種を実線に変更する	linestyle = 'solid'
＜オプション＞グラフの線種を実線に設定する	linestyle = 'solid'
折れ線グラフのスタイルを破線に設定する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフのスタイルを破線にセットする	plt.plot(データ列, データ列2, linestyle='dashed')
破線に折れ線グラフのスタイルを設定する	plt.plot(データ列, データ列2, linestyle='dashed')
破線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフを破線で描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフを破線を使って描画する	plt.plot(データ列, データ列2, linestyle='dashed')
破線を使って折れ線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashed')
破線で折れ線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashed')
折れ線グラフのスタイルを一点鎖線に設定する	plt.plot(データ列, データ列2, linestyle='dashbot')
一点鎖線に折れ線グラフのスタイルを設定する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフを一点鎖線に変更する	plt.plot(データ列, データ列2, linestyle='dashbot')
一点鎖線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフを一点鎖線で描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
一点鎖線で折れ線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフを一点鎖線として描画する	plt.plot(データ列, データ列2, linestyle='dashbot')
折れ線グラフのスタイルを点線に設定する	plt.plot(データ列, データ列2, linestyle='dotted')
点線に折れ線グラフのスタイルを設定する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフを点線に設定する	plt.plot(データ列, データ列2, linestyle='dotted')
点線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフを点線で描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフを点線を用いて描画する	plt.plot(データ列, データ列2, linestyle='dotted')
点線として折れ線グラフを描画する	plt.plot(データ列, データ列2, linestyle='dotted')
折れ線グラフのスタイルを実線に設定する	plt.plot(データ列, データ列2, linestyle='solid')
折れ線グラフを実線に設定する	plt.plot(データ列, データ列2, linestyle='solid')
実線グラフを描画する	plt.plot(データ列, データ列2, linestyle='solid')
折れ線グラフを実線で描画する	plt.plot(データ列, データ列2, linestyle='solid')
実線を使って折れ線グラフを描画する	plt.plot(データ列, データ列2, linestyle='solid')
ヒストグラムの線のスタイルを破線に設定する	plt.hist(データ列, linestyle='dashed')
破線にヒストグラムの線のスタイルを設定する	plt.hist(データ列, linestyle='dashed')
ヒストグラムの線のスタイルを破線に指定する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線に設定する	plt.hist(データ列, linestyle='dashed')
ヒストグラムの線のスタイルを破線に変更する	plt.hist(データ列, linestyle='dashed')
破線ヒストグラムを描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線で描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線を用いて描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムを破線として描画する	plt.hist(データ列, linestyle='dashed')
ヒストグラムの線のスタイルを一点鎖線に設定する	plt.hist(データ列, linestyle='dashbot')
一点鎖線にヒストグラムの線のスタイルを設定する	plt.hist(データ列, linestyle='dashbot')
一点鎖線にヒストグラムを変更する	plt.hist(データ列, linestyle='dashbot')
一点鎖線ヒストグラムを描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムを一点鎖線で描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムを一点鎖線として描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムを一点鎖線を用いて描画する	plt.hist(データ列, linestyle='dashbot')
ヒストグラムの線のスタイルを点線に設定する	plt.hist(データ列, linestyle='dotted')
点線にヒストグラムの線のスタイルを設定する	plt.hist(データ列, linestyle='dotted')
点線ヒストグラムを描画する	plt.hist(データ列, linestyle='dotted')
ヒストグラムを点線で描画する	plt.hist(データ列, linestyle='dotted')
ヒストグラムの線のスタイルを実線に設定する	plt.hist(データ列, linestyle='solid')
実線にヒストグラムの線のスタイルをセットする	plt.hist(データ列, linestyle='solid')
ヒストグラムの線のスタイルを実線にする	plt.hist(データ列, linestyle='solid')
ヒストグラムの線のスタイルを実線にセットする	plt.hist(データ列, linestyle='solid')
実線ヒストグラムを描画する	plt.hist(データ列, linestyle='solid')
ヒストグラムを実線で描画する	plt.hist(データ列, linestyle='solid')
ヒストグラムを実線として描画する	plt.hist(データ列, linestyle='solid')
＜オプション＞マーカーをポイントに変更する	marker = '.'
＜オプション＞ポイントマーカーを使う	marker = '.'
＜オプション＞ポイントマーカーを用いる	marker = '.'
＜オプション＞ポイントマーカーを加える	marker = '.'
＜オプション＞ポイントマーカーを描画する	marker = '.'
＜オプション＞マーカーを丸に変更する	marker = 'o'
＜オプション＞丸マーカーを使う	marker = 'o'
＜オプション＞丸マーカーを加える	marker = 'o'
＜オプション＞丸マーカーを描画する	marker = 'o'
＜オプション＞マーカーを三角に変更する	marker = '^'
＜オプション＞印を△に変更する	marker = '^'
＜オプション＞三角マーカーを使う	marker = '^'
＜オプション＞△印を加える	marker = '^'
＜オプション＞三角マーカーを用いる	marker = '^'
＜オプション＞▲マーカーを使用する	marker = '^'
＜オプション＞△マーカーを使う	marker = '^'
＜オプション＞三角マーカーを描画する	marker = '^'
＜オプション＞▲マーカーを描画する	marker = '^'
＜オプション＞上三角マーカーを描画する	marker = '^'
＜オプション＞三角印を描画する	marker = '^'
＜オプション＞マーカーを下三角に変更する	marker = 'v'
＜オプション＞印を下三角に変更する	marker = 'v'
＜オプション＞下三角マーカーを使う	marker = 'v'
＜オプション＞下三角マーカーを用いる	marker = 'v'
＜オプション＞下三角印を使う	marker = 'v'
＜オプション＞下三角マーカーを使用する	marker = 'v'
＜オプション＞下三角マーカーを描画する	marker = 'v'
＜オプション＞▽マーカーを描画する	marker = 'v'
＜オプション＞▽印を描画する	marker = 'v'
＜オプション＞マーカーを左三角に変更する	marker = '<'
＜オプション＞左三角マーカーを使う	marker = '<'
＜オプション＞左三角マーカーを用いる	marker = '<'
＜オプション＞左三角印を使う	marker = '<'
＜オプション＞左三角マーカーを描画する	marker = '<'
＜オプション＞マーカーを右三角に変更する	marker = '>'
＜オプション＞右三角マーカーを使う	marker = '>'
＜オプション＞右三角マーカーを加える	marker = '>'
＜オプション＞右三角印を使う	marker = '>'
＜オプション＞右三角マーカーを描画する	marker = '>'
＜オプション＞マーカーをバツに変更する	marker = 'x'
＜オプション＞バツマーカーを使う	marker = 'x'
＜オプション＞クロスマーカーを使う	marker = 'x'
＜オプション＞バツ印を加える	marker = 'x'
＜オプション＞クロス印を用いる	marker = 'x'
＜オプション＞バツマーカーを描画する	marker = 'x'
＜オプション＞クロス印を描画する	marker = 'x'
＜オプション＞クロスマーカーを描画する	marker = 'x'
＜オプション＞マーカーを大バツに変更する	marker = 'X'
＜オプション＞大バツマーカーを使う	marker = 'X'
＜オプション＞大バツ印を使う	marker = 'X'
＜オプション＞大バツ印を用いる	marker = 'X'
＜オプション＞大バツマーカーを描画する	marker = 'X'
＜オプション＞マーカーを四角に変更する	marker = 's'
＜オプション＞四角マーカーを使う	marker = 's'
＜オプション＞四角マーカーを加える	marker = 's'
＜オプション＞四角印を加える	marker = 's'
＜オプション＞四角印を使う	marker = 's'
＜オプション＞四角マーカーを描画する	marker = 's'
＜オプション＞マーカーをダイアモンドに変更する	marker = 'D'
＜オプション＞印を菱形に変更する	marker = 'D'
＜オプション＞ダイアモンドマーカーを使う	marker = 'D'
＜オプション＞ダイアモンドマーカーを用いる	marker = 'D'
＜オプション＞ダイアモンド印を加える	marker = 'D'
＜オプション＞菱形マーカーを用いる	marker = 'D'
＜オプション＞ダイアモンドマーカーを描画する	marker = 'D'
＜オプション＞ダイアモンド印を描画する	marker = 'D'
＜オプション＞マーカーを星に変更する	marker = '*'
＜オプション＞星マーカーを使う	marker = '*'
＜オプション＞星マーカーを使用する	marker = '*'
＜オプション＞星印を使う	marker = '*'
＜オプション＞星マーカーを描画する	marker = '*'
折れ線グラフにポイントマーカーを使う	plt.plot(データ列, データ列2, marker='.')
折れ線グラフにポイントマーカーを加える	plt.plot(データ列, データ列2, marker='.')
折れ線グラフにポイント印を用いる	plt.plot(データ列, データ列2, marker='.')
折れ線グラフにポイント印を使う	plt.plot(データ列, データ列2, marker='.')
折れ線グラフにポイント印を加える	plt.plot(データ列, データ列2, marker='.')
折れ線グラフのマーカーをポイントにする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフの印をポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフの印をポイントにする	plt.plot(データ列, データ列2, marker='.')
データ列を折れ線グラフに描画して、マーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに描画して、マーカーをポイント印にする	plt.plot(データ列, データ列2, marker='.')
データ列を折れ線グラフに描画してマーカーをポイントにする	plt.plot(データ列, データ列2, marker='.')
データ列を折れ線グラフに描画して、印をポイント印にする	plt.plot(データ列, データ列2, marker='.')
データ列を折れ線グラフに描画して、印をポイントにする	plt.plot(データ列, データ列2, marker='.')
折れ線グラフに丸マーカーを使う	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに丸マーカーを用いる	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに丸マーカーを加える	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに丸マーカーを使用する	plt.plot(データ列, データ列2, marker='o')
折れ線グラフのマーカーを丸にする	plt.plot(データ列, データ列2, marker='o')
データ列を折れ線グラフに描画して、マーカーを丸印にする	plt.plot(データ列, データ列2, marker='o')
データ列を折れ線グラフに描画して、印を丸印にする	plt.plot(データ列, データ列2, marker='o')
データ列を折れ線グラフに描画して、印を丸にする	plt.plot(データ列, データ列2, marker='o')
折れ線グラフに三角マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに上三角マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに▲マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに△マーカーを使う	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを三角にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを上三角にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフの印を▲にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフのマーカーを上三角印にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフの印を三角にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して、マーカーを三角印にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して、マーカーを▲印にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して印を三角印にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに描画して、マーカーを三角にする	plt.plot(データ列, データ列2, marker='^')
データ列を折れ線グラフに描画して、マーカーを三角にする	plt.plot(データ列, データ列2, marker='^')
折れ線グラフに下三角マーカーを使う	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに▽マーカーを使う	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに▼マーカーを使う	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに下三角マーカーを加える	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに下三角印を使う	plt.plot(データ列, データ列2, marker='v')
折れ線グラフのマーカーを下三角にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフのマーカーを下三角印にする	plt.plot(データ列, データ列2, marker='v')
データ列を折れ線グラフに描画して、マーカーを下三角印にする	plt.plot(データ列, データ列2, marker='v')
データ列を折れ線グラフに描画して、マーカーを▼印にする	plt.plot(データ列, データ列2, marker='v')
データ列を折れ線グラフに描画してマーカーを下三角印にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに描画して、マーカーを▽印にする	plt.plot(データ列, データ列2, marker='v')
折れ線グラフに左三角マーカーを使う	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに左三角マーカーを使用する	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに左三角印を使う	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに左三角印を用いる	plt.plot(データ列, データ列2, marker='<')
折れ線グラフのマーカーを左三角にする	plt.plot(データ列, データ列2, marker='<')
データ列を折れ線グラフに描画して、マーカーを左三角印にする	plt.plot(データ列, データ列2, marker='<')
データ列を折れ線グラフに描画して、印を左三角にする	plt.plot(データ列, データ列2, marker='<')
データ列を折れ線グラフに描画して、印を左三角印にする	plt.plot(データ列, データ列2, marker='<')
折れ線グラフに右三角マーカーを使う	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに右三角印を使う	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに右三角マーカーを用いる	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに右三角マーカーを加える	plt.plot(データ列, データ列2, marker='>')
折れ線グラフのマーカーを右三角にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフのマーカーを右三角印にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフの印を右三角にする	plt.plot(データ列, データ列2, marker='>')
データ列を折れ線グラフに描画して、マーカーを右三角印にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに描画して印を右三角にする	plt.plot(データ列, データ列2, marker='>')
データ列を折れ線グラフに描画して、印を右三角印にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフに描画してマーカーを右三角印にする	plt.plot(データ列, データ列2, marker='>')
折れ線グラフにバツマーカーを使う	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにクロスマーカーを使う	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにバツマーカーを用いる	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにバツ印を加える	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにバツ印を使う	plt.plot(データ列, データ列2, marker='x')
折れ線グラフにクロス印を使用する	plt.plot(データ列, データ列2, marker='x')
折れ線グラフのマーカーをバツにする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフの印をバツにする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフのマーカーをクロス印にする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、マーカーをバツ印にする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフに描画してマーカーをバツにする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、印をバツにする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、印をクロス印にする	plt.plot(データ列, データ列2, marker='x')
データ列を折れ線グラフに描画して、マーカーをクロスにする	plt.plot(データ列, データ列2, marker='x')
折れ線グラフに大バツマーカーを使う	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに大バツマーカーを加える	plt.plot(データ列, データ列2, marker='X')
折れ線グラフのマーカーを大バツにする	plt.plot(データ列, データ列2, marker='X')
折れ線グラフの印を大バツ印にする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画して、マーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに描画してマーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに描画して、マーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画して、印を大バツ印にする	plt.plot(データ列, データ列2, marker='X')
データ列を折れ線グラフに描画してマーカーを大バツ印にする	plt.plot(データ列, データ列2, marker='X')
折れ線グラフに四角マーカーを使う	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角印を加える	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角マーカーを使用する	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角印を使用する	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに四角マーカーを加える	plt.plot(データ列, データ列2, marker='s')
折れ線グラフのマーカーを四角にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフの印を四角印にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフのマーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
データ列を折れ線グラフに描画して、マーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
データ列を折れ線グラフに描画してマーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
データ列を折れ線グラフに描画して、マーカーを四角にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフに描画してマーカーを四角印にする	plt.plot(データ列, データ列2, marker='s')
データ列を折れ線グラフに描画してマーカーを四角にする	plt.plot(データ列, データ列2, marker='s')
折れ線グラフにダイアモンドマーカーを使う	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに菱形印を用いる	plt.plot(データ列, データ列2, marker='D')
折れ線グラフにダイアモンドマーカーを使用する	plt.plot(データ列, データ列2, marker='D')
折れ線グラフにダイアモンドマーカーを加える	plt.plot(データ列, データ列2, marker='D')
折れ線グラフのマーカーをダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフのマーカーをダイアモンド印にする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画して、マーカーをダイアモンド印にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに描画して、マーカーを菱形印にする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画して印をダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画して、マーカーをダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画してマーカーをダイアモンドにする	plt.plot(データ列, データ列2, marker='D')
データ列を折れ線グラフに描画して、印を菱形印にする	plt.plot(データ列, データ列2, marker='D')
折れ線グラフに星マーカーを使う	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに星印を加える	plt.plot(データ列, データ列2, marker='*')
折れ線グラフのマーカーを星にする	plt.plot(データ列, データ列2, marker='*')
データ列を折れ線グラフに描画して、マーカーを星印にする	plt.plot(データ列, データ列2, marker='*')
データ列を折れ線グラフに描画してマーカーを星印にする	plt.plot(データ列, データ列2, marker='*')
データ列を折れ線グラフに描画して、印を星印にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに描画して、マーカーを星にする	plt.plot(データ列, データ列2, marker='*')
折れ線グラフに赤いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフに赤いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフのポイントマーカーを赤くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='r')
折れ線グラフに赤い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフに赤い丸印を描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフの丸マーカーを赤くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='r')
折れ線グラフに赤い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフに赤い▲マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフに赤い△マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの▲マーカーを赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの三角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフの上三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='r')
折れ線グラフに赤い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
赤い▽マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
赤い下三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの下三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの下三角印を赤色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの▼マーカーを赤色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの▼マーカーを赤くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの▽印を赤くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフの下三角印を赤くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='r')
折れ線グラフに赤い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
赤い左三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフの左三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフの左三角印を赤くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='r')
折れ線グラフに赤い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
赤い右三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフの右三角マーカーを赤くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフの右三角マーカーを赤色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='r')
折れ線グラフに赤いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
赤いバツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
赤いバツ印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフのバツマーカーを赤くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフのクロス印を赤くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフのバツ印を赤色にする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフのバツ印を赤くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='r')
折れ線グラフに赤い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフに赤い大バツ印を描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフの大バツマーカーを赤くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフの大バツ印を赤色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='r')
折れ線グラフに赤い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
赤い四角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフの四角マーカーを赤くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフの四角印を赤色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフの四角印を赤くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='r')
折れ線グラフに赤いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
赤いダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
赤いダイアモンド印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフのダイアモンドマーカーを赤くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフの菱形印を赤くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='r')
折れ線グラフに赤い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
赤い星マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフの星マーカーを赤くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフの星マーカーを赤色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='r')
折れ線グラフに青いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフに青いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフのポイントマーカーを青くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフのポイントマーカーを青色にする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='b')
折れ線グラフに青い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
青い丸マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
青い丸印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフの丸マーカーを青くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフの丸マーカーを青色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='b')
折れ線グラフに青い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフに青い上三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフに青い三角印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
青い三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの三角マーカーを青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの三角印を青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの▲印を青くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフの△印を青色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='b')
折れ線グラフに青い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い▽マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い▽印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの下三角マーカーを青くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの下三角マーカーを青色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの▽印を青くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフの▼マーカーを青くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='b')
折れ線グラフに青い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
青い左三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
青い左三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフの左三角マーカーを青くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフの左三角マーカーを青色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='b')
折れ線グラフに青い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
青い右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフの右三角マーカーを青くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフの右三角マーカーを青色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='b')
折れ線グラフに青いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフに青いクロスマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのバツマーカーを青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフのバツ印を青くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='b')
折れ線グラフに青い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフに青い大バツ印を描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフの大バツマーカーを青くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフの大バツマーカーを青色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='b')
折れ線グラフに青い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフに青い四角印を描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフの四角マーカーを青くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフの四角印を青色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフの四角印を青くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='b')
折れ線グラフに青いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
青いダイアモンド印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフに青い菱形マーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフのダイアモンドマーカーを青くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフのダイアモンド印を青くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフのダイアモンドマーカーを青色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='b')
折れ線グラフに青い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフの星マーカーを青くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフの星印を青くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='b')
折れ線グラフに黒いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフに黒いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフのポイントマーカーを黒くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフのポイントマーカーを黒色にする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='k')
折れ線グラフに黒い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフに黒い丸印を描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフの丸マーカーを黒くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフの丸印を黒くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='k')
折れ線グラフに黒い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフに黒い上三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
黒い三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフに黒い三角印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフの上三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='k')
折れ線グラフに黒い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い▼印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
黒い▽印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
黒い下三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い▽マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い▼マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの下三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの▽マーカーを黒くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフの下三角印を黒くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='k')
折れ線グラフに黒い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフに黒い左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
黒い左三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフの左三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='k')
折れ線グラフに黒い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
黒い右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフの右三角マーカーを黒くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフの右三角マーカーを黒色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='k')
折れ線グラフに黒いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフに黒いクロス印を描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
黒いバツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
黒いバツ印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフのバツマーカーを黒くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='k')
折れ線グラフに黒い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
黒い大バツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフの大バツマーカーを黒くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフの大バツ印を黒色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフの大バツ印を黒くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='k')
折れ線グラフに黒い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
黒い四角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
黒い四角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフの四角マーカーを黒くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフの四角印を黒くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='k')
折れ線グラフに黒いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフに黒い菱形マーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
黒いダイアモンド印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフのダイアモンドマーカーを黒くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフの菱形マーカーを黒くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフのダイアモンド印を黒くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフの菱形印を黒くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='k')
折れ線グラフに黒い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
黒い星印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフに黒い星印を描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフの星マーカーを黒くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='k')
折れ線グラフに黄色いポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフに黄色いポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフのポイントマーカーを黄色くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフのポイント印を黄色くする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='y')
折れ線グラフに黄色い丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフの丸マーカーを黄色くする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフの丸印を黄色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフの丸マーカーを黄色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='y')
折れ線グラフに黄色い三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
黄色い△印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
黄色い三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフに黄色い上三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフに黄色い▲印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの三角印を黄色くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフの△マーカーを黄色くする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='y')
折れ線グラフに黄色い下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフに黄色い下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
黄色い下三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角印を黄色くする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフの下三角マーカーを黄色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='y')
折れ線グラフに黄色い左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
黄色い左三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフに黄色い左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフの左三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='y')
折れ線グラフに黄色い右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフに黄色い右三角印を描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフの右三角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフの右三角マーカーを黄色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='y')
折れ線グラフに黄色いバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
黄色いバツ印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフのバツマーカーを黄色くする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='y')
折れ線グラフに黄色い大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツマーカーを黄色くする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツ印を黄色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフの大バツマーカーを黄色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='y')
折れ線グラフに黄色い四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
黄色い四角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフの四角マーカーを黄色くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフの四角印を黄色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフの四角印を黄色くする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='y')
折れ線グラフに黄色いダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い菱形マーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
黄色いダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い菱形印を描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフのダイアモンドマーカーを黄色くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフのダイアモンド印を黄色くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフのダイアモンドマーカーを黄色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフの菱形マーカーを黄色くする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='y')
折れ線グラフに黄色い星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
黄色い星印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフに黄色い星印を描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフの星マーカーを黄色くする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフの星印を黄色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='y')
折れ線グラフに緑色のポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフのポイントマーカーを緑色にする	plt.plot(データ列, データ列2, marker='.', markerfacecolor='g')
折れ線グラフに緑色の丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
折れ線グラフの丸マーカーを緑色にする	plt.plot(データ列, データ列2, marker='o', markerfacecolor='g')
折れ線グラフに緑色の三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の▲印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の△マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の△印を描画する	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの△マーカーを緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの▲マーカーを緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの上三角印を緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフの▲印を緑色にする	plt.plot(データ列, データ列2, marker='^', markerfacecolor='g')
折れ線グラフに緑色の下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
緑色の下三角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフの下三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフの▼マーカーを緑色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフの下三角印を緑色にする	plt.plot(データ列, データ列2, marker='v', markerfacecolor='g')
折れ線グラフに緑色の左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフに緑色の左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
緑色の左三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフの左三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='<', markerfacecolor='g')
折れ線グラフに緑色の右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフに緑色の右三角印を描画する	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフの右三角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='>', markerfacecolor='g')
折れ線グラフに緑色のバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフに緑色のバツ印を描画する	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフのバツマーカーを緑色にする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフのバツ印を緑色にする	plt.plot(データ列, データ列2, marker='x', markerfacecolor='g')
折れ線グラフに緑色の大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフに緑色の大バツ印を描画する	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフの大バツマーカーを緑色にする	plt.plot(データ列, データ列2, marker='X', markerfacecolor='g')
折れ線グラフに緑色の四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
緑色の四角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフの四角マーカーを緑色にする	plt.plot(データ列, データ列2, marker='s', markerfacecolor='g')
折れ線グラフに緑色のダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
緑色のダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフのダイアモンドマーカーを緑色にする	plt.plot(データ列, データ列2, marker='D', markerfacecolor='g')
折れ線グラフに緑色の星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
折れ線グラフの星マーカーを緑色にする	plt.plot(データ列, データ列2, marker='*', markerfacecolor='g')
折れ線グラフに大きさnのポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフにサイズnのポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフに大きさnのポイント印を描画する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイントマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイント印のサイズをnに設定する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフのポイントマーカーの大きさをnに変更する	plt.plot(データ列, データ列2, marker='.', markersize=n)
折れ線グラフに大きさnの丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフに大きさnの丸印を描画する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフの丸マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフの丸マーカーの大きさをnに変更する	plt.plot(データ列, データ列2, marker='o', markersize=n)
折れ線グラフに大きさnの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフにサイズnの上三角印を描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフに大きさnの三角印を描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフにサイズnの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの▲マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの▲マーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの三角印の大きさをnに変更する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの三角印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの▲印の大きさをnに変更する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフの上三角印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='^', markersize=n)
折れ線グラフに大きさnの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフにサイズnの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの▼マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの▽印を描画する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの▽マーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角マーカーの大きさをnに指定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフの下三角印の大きさをnに指定する	plt.plot(データ列, データ列2, marker='v', markersize=n)
折れ線グラフに大きさnの左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフに大きさnの左三角印を描画する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーのサイズをnに指定する	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフの左三角マーカーのサイズをnにセットする	plt.plot(データ列, データ列2, marker='<', markersize=n)
折れ線グラフに大きさnの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフにサイズnの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角印の大きさをnに指定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角マーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角マーカーの大きさをnにセットする	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフの右三角マーカーのサイズをnに変更する	plt.plot(データ列, データ列2, marker='>', markersize=n)
折れ線グラフに大きさnのバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフに大きさnのバツ印を描画する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツ印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのクロスマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのクロスマーカーのサイズをnに指定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのクロスマーカーの大きさをnに変更する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのクロス印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフのバツマーカーの大きさをnに指定する	plt.plot(データ列, データ列2, marker='x', markersize=n)
折れ線グラフに大きさnの大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフに大きさnの大バツ印を描画する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフの大バツマーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='X', markersize=n)
折れ線グラフに大きさnの四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフに大きさnの四角印を描画する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角マーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角マーカーの大きさをnに指定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフの四角印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='s', markersize=n)
折れ線グラフに大きさnのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフにサイズnのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフのダイアモンドマーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフのダイアモンド印のサイズをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフのダイアモンドマーカーの大きさをnにする	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフのダイアモンドマーカーのサイズをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフの菱形印の大きさをnに設定する	plt.plot(データ列, データ列2, marker='D', markersize=n)
折れ線グラフに大きさnの星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフに大きさnの星印を描画する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフの星マーカーの大きさをnに設定する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフの星印のサイズをnに設定する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフの星マーカーのサイズをnに指定する	plt.plot(データ列, データ列2, marker='*', markersize=n)
折れ線グラフに線幅nのポイントマーカーを描画する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
線幅nのポイントマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnにセットする	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイント印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフのポイントマーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='.', markeredgewidth=n)
折れ線グラフに線幅nの丸マーカーを描画する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフの丸マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフの丸印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフの丸マーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='o', markeredgewidth=n)
折れ線グラフに線幅nの三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフに線幅nの上三角マーカーを描画する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフに線幅nの三角印を描画する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの▲印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの▲マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの△印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの△マーカーの線幅をnにセットする	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフの三角印の線幅をnに指定する	plt.plot(データ列, データ列2, marker='^', markeredgewidth=n)
折れ線グラフに線幅nの下三角マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの下三角印を描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの▼マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの▽マーカーを描画する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの▼マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角印の線幅をnに指定する	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフの下三角マーカーの線幅をnにする	plt.plot(データ列, データ列2, marker='v', markeredgewidth=n)
折れ線グラフに線幅nの左三角マーカーを描画する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフの左三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフの左三角印の線幅をnに指定する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフの左三角印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='<', markeredgewidth=n)
折れ線グラフに線幅nの右三角マーカーを描画する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
線幅nの右三角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフの右三角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフの右三角マーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='>', markeredgewidth=n)
折れ線グラフに線幅nのバツマーカーを描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフに線幅nのクロス印を描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
線幅nのバツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
線幅nのクロスマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのバツマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのバツマーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのバツマーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフのバツ印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='x', markeredgewidth=n)
折れ線グラフに線幅nの大バツマーカーを描画する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
線幅nの大バツマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフの大バツマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフの大バツマーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='X', markeredgewidth=n)
折れ線グラフに線幅nの四角マーカーを描画する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
線幅nの四角印を折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
線幅nの四角マーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角印の線幅をnにする	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフの四角マーカーの線幅をnにセットする	plt.plot(データ列, データ列2, marker='s', markeredgewidth=n)
折れ線グラフに線幅nのダイアモンドマーカーを描画する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフに線幅nの菱形マーカーを描画する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
線幅nのダイアモンドマーカーを折れ線グラフに描画する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフの菱形印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnにセットする	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフのダイアモンドマーカーの線幅をnに指定する	plt.plot(データ列, データ列2, marker='D', markeredgewidth=n)
折れ線グラフに線幅nの星マーカーを描画する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星マーカーの線幅をnに設定する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星マーカーの線幅をnに変更する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
折れ線グラフの星印の線幅をnに設定する	plt.plot(データ列, データ列2, marker='*', markeredgewidth=n)
ベクトルの演算をする	import numpy as np
ベクトル演算を行う	import numpy as np
ベクトル計算をする	import numpy as np
ベクトル演算をする	import numpy as np
ベクトルの計算を行う	import numpy as np
行列の演算をする	import numpy as np
行列演算を行う	import numpy as np
numpyを使う	import numpy as np
numpyをインポートする	import numpy as np
＜オプション＞データ型を指定する	dtype = np.int
＜オプション＞整数型を使う	dtype = np.int
＜オプション＞整数型を使用する	dtype = np.int
＜オプション＞データ型を指定する	dtype = np.int8
＜オプション＞８ビット整数型を使う	dtype = np.int8
＜オプション＞データ型を指定する	dtype = np.uint8
＜オプション＞符号なし８ビット整数型を使う	dtype = np.uint8
＜オプション＞データ型を指定する	dtype = np.int16
＜オプション＞三二ビット整数型を使う	dtype = np.int16
＜オプション＞三２ビット整数型を用いる	dtype = np.int16
＜オプション＞３２ビット整数型を使う	dtype = np.int16
＜オプション＞三２ビット整数型を使う	dtype = np.int16
＜オプション＞データ型を指定する	dtype = np.int32
＜オプション＞ブール型を使う	dtype = np.int32
＜オプション＞ブール型を用いる	dtype = np.int32
＜オプション＞データ型を指定する	dtype = bool
＜オプション＞複素数型を使う	dtype = bool
＜オプション＞複素数型を使用する	dtype = bool
リストを配列に変換する	np.array(aList)
リストを配列にする	np.array(aList)
リストから配列を作る	np.array(aList)
リストから行列を作成する	np.array(aList)
リストからベクトルを作成する	np.array(aList)
イテラブルを配列に変換する	np.array(iterable)
シーケンスを配列に変換する	np.array(iterable)
イテラブルを配列にする	np.array(iterable)
列をベクトルにする	np.array(iterable)
列を配列に変換する	np.array(iterable)
イテラブルから配列を作る	np.array(iterable)
イテラブルからベクトルを作る	np.array(iterable)
ベクトルをシーケンスから作る	np.array(iterable)
タプルからベクトルを作る	np.array(iterable)
全要素を0で初期化された配列	np.zeros(要素数)
0で全要素を初期化された行列	np.zeros(要素数)
全要素を0で初期化した行列	np.zeros(要素数)
ゼロ埋めされた配列	np.zeros(要素数)
ゼロ埋めされたベクトル	np.zeros(要素数)
ゼロ埋めされた配列を作成する	np.zeros(要素数)
ゼロ埋めされた整数型の配列	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた整数型の行列	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた整数型のベクトル	np.zeros(要素数, dtype=np.int)
整数型のゼロ埋めされた行列	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた整数型の行列を作る	np.zeros(要素数, dtype=np.int)
ゼロ埋めされた８ビット整数型の配列	np.zeros(要素数, dtype=np.int8)
８ビット整数型のゼロ埋めされた配列	np.zeros(要素数, dtype=np.int8)
ゼロ埋めした８ビット整数型の配列	np.zeros(要素数, dtype=np.int8)
８ビット整数型のゼロ埋めされた行列	np.zeros(要素数, dtype=np.int8)
８ビット整数型のゼロ埋めしたベクトル	np.zeros(要素数, dtype=np.int8)
ゼロ埋めされた８ビット整数型の行列	np.zeros(要素数, dtype=np.int8)
ゼロ埋めされた符号なし８ビット整数型の配列	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めした符号なし８ビット整数型の配列	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めされた符号なし８ビット整数型の配列を作る	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めした符号なし８ビット整数型のベクトル	np.zeros(要素数, dtype=np.uint8)
ゼロ埋めされた三二ビット整数型の配列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めした三二ビット整数型の行列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされた三２ビット整数型のベクトル	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされた三２ビット整数型の配列を作る	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされた三二ビット整数型の配列を作る	np.zeros(要素数, dtype=np.int16)
三二ビット整数型のゼロ埋めされた配列	np.zeros(要素数, dtype=np.int16)
ゼロ埋めした三2ビット整数型の行列を作成する	np.zeros(要素数, dtype=np.int16)
ゼロ埋めされたブール型の配列	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされた論理値型の配列を作る	np.zeros(要素数, dtype=np.int32)
ブール型のゼロ埋めされた配列	np.zeros(要素数, dtype=np.int32)
論理値型のゼロ埋めされた配列	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされたブール型のベクトル	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされたブール型のベクトルを作る	np.zeros(要素数, dtype=np.int32)
ゼロ埋めされた複素数型の配列	np.zeros(要素数, dtype=bool)
ゼロ埋めされた複素数型の配列を作る	np.zeros(要素数, dtype=bool)
複素数型のゼロ埋めされた配列	np.zeros(要素数, dtype=bool)
ゼロ埋めされた複素数型のベクトル	np.zeros(要素数, dtype=bool)
複素数型のゼロ埋めされた配列を作る	np.zeros(要素数, dtype=bool)
全要素を０で初期化された行列	np.zeros(行数, 列数)
０で全要素を初期化された行列	np.zeros(行数, 列数)
ゼロ埋めされた行列	np.zeros(行数, 列数)
ゼロ埋めされた行列を作る	np.zeros(行数, 列数)
全要素を０で初期化された整数型の行列	np.zeros(行数, 列数, dtype=np.int)
整数型の全要素を０で初期化された行列	np.zeros(行数, 列数, dtype=np.int)
全要素を０で初期化された整数型の行列を作る	np.zeros(行数, 列数, dtype=np.int)
０で全要素を初期化された整数型の行列	np.zeros(行数, 列数, dtype=np.int)
全要素を０で初期化された８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int8)
０で全要素を初期化された８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int8)
０で全要素を初期化した８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int8)
全要素を０で初期化された８ビット整数型の行列を初期化する	np.zeros(行数, 列数, dtype=np.int8)
全要素を０で初期化した８ビット整数型の行列を作る	np.zeros(行数, 列数, dtype=np.int8)
全要素を０で初期化された符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
全要素を０で初期化した符号なし８ビット整数型の行列	np.zeros(行数, 列数, dtype=np.uint8)
全要素を０で初期化された三二ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化された三二ビット整数型の行列を作成する	np.zeros(行数, 列数, dtype=np.int16)
三二ビット整数型の全要素を０で初期化された行列	np.zeros(行数, 列数, dtype=np.int16)
０で全要素を初期化された三2ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化された三２ビット整数型の行列	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化した三２ビット整数型の行列を初期化する	np.zeros(行数, 列数, dtype=np.int16)
全要素を０で初期化されたブール型の行列	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化された論理値型の行列	np.zeros(行数, 列数, dtype=np.int32)
論理値型の全要素を０で初期化された行列を作成する	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化した論理値型の行列	np.zeros(行数, 列数, dtype=np.int32)
全要素を０で初期化された複素数型の行列	np.zeros(行数, 列数, dtype=bool)
全要素を０で初期化された複素数型の行列を作成する	np.zeros(行数, 列数, dtype=bool)
複素数型の全要素を０で初期化された行列	np.zeros(行数, 列数, dtype=bool)
全要素を1で初期化された配列	np.ones(要素数, dtype=np.int)
1で全要素を初期化された配列	np.ones(要素数, dtype=np.int)
全要素を1で初期化した配列	np.ones(要素数, dtype=np.int)
要素が全て1の配列	np.ones(要素数, dtype=np.int)
要素が全て1の配列を作る	np.ones(要素数, dtype=np.int)
要素が全て1の配列を作成する	np.ones(要素数, dtype=np.int)
全要素を1で初期化された行列	np.ones(行数, 列数, dtype=np.int)
全要素を1で初期化された行列を作る	np.ones(行数, 列数, dtype=np.int)
全要素が1の行列	np.ones(行数, 列数, dtype=np.int)
全要素を初期値で初期化された配列	np.full(要素数, 初期値, dtype=np.int)
初期値で全要素を初期化された配列を作る	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化されたベクトルを作る	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化した配列を作成する	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の配列	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の配列を作る	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の配列を作成する	np.full(要素数, 初期値, dtype=np.int)
要素が全て初期値の行列	np.full(要素数, 初期値, dtype=np.int)
全要素を初期値で初期化された行列	np.full((行数, 列数), 初期値, dtype=np.int)
初期値で全要素を初期化された行列	np.full((行数, 列数), 初期値, dtype=np.int)
全要素を初期値で初期化した行列	np.full((行数, 列数), 初期値, dtype=np.int)
全要素が初期値の行列	np.full((行数, 列数), 初期値, dtype=np.int)
単位行列	np.eye(行数, 列数)
単位正方行列	np.identity(N)
単位正方行列を作る	np.identity(N)
未初期化の配列	np.empty(要素数, dtype=np.int)
未初期化の行列	np.empty(要素数, dtype=np.int)
未初期化のベクトル	np.empty(要素数, dtype=np.int)
未初期化の行列	np.empty((行数, 列数), dtype=np.int)
未初期化の行列を作成する	np.empty((行数, 列数), dtype=np.int)
配列と同じ大きさの空配列を作る	np.empty_like(aArray)
行列と同じ大きさの空配列を作る	np.empty_like(aArray)
行列と同じ大きさの空の配列を作る	np.empty_like(aArray)
0からNまでの配列	np.arange(N)
0からNまでの配列を作る	np.arange(N)
0からNまでの行列	np.arange(N)
1からNまでの配列	np.arange(1, N+1)
1からNまでの行列	np.arange(1, N+1)
等差数列を配列に変換する	np.arange(開始値, 終端値, 等差)
等差数列を配列にする	np.arange(開始値, 終端値, 等差)
等差数列を行列に変換する	np.arange(開始値, 終端値, 等差)
配列の次元を変形する	aArray.reshape(行数, 列数)
ベクトルの次元を変形する	aArray.reshape(行数, 列数)
行列を変形する	aArray.reshape(行数, 列数)
ベクトルの形状を変形する	aArray.reshape(行数, 列数)
ベクトルを変形する	aArray.reshape(行数, 列数)
行列の次元を変形する	aArray.reshape(行数, 列数)
配列を2次元1列に変形する	aArray.reshape(-1, 1)
配列を縦ベクトルに変形する	aArray.reshape(-1, 1)
行列を2次元1列に変形する	aArray.reshape(-1, 1)
行列を縦ベクトルに変形する	aArray.reshape(-1, 1)
配列を2次元1行に変形する	aArray.reshape(1, -1)
行列を横ベクトルに変形する	aArray.reshape(1, -1)
ベクトルを2次元1行に変形する	aArray.reshape(1, -1)
ベクトルを横ベクトルに変形する	aArray.reshape(1, -1)
既存の配列を元に全要素が0の配列	np.zeros_like(aArray)
既存のベクトルを元に全要素が0のベクトル	np.zeros_like(aArray)
既存の行列を元に全要素が0の行列	np.zeros_like(aArray)
配列を元に全要素が0の行列を作る	np.zeros_like(aArray)
既存のベクトルをベースにして全要素が0の行列を作る	np.zeros_like(aArray)
既存の行列を元に全要素が0のベクトル	np.zeros_like(aArray)
既存の配列を元に全要素が1の配列	np.ones_like(aArray)
既存の配列をベースに全要素が1の配列	np.ones_like(aArray)
既存の配列を元に全要素が1のベクトルを作る	np.ones_like(aArray)
ベクトルを元に全要素が1のベクトル	np.ones_like(aArray)
行列を元にして全要素が1の配列	np.ones_like(aArray)
既存の配列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
既存の行列を元に全要素が初期値の配列	np.full_like(aArray, 初期値)
既存の行列を元に全要素が初期値のベクトル	np.full_like(aArray, 初期値)
既存の行列をベースに全要素が初期値の配列	np.full_like(aArray, 初期値)
既存のベクトルをベースに全要素が初期値の配列	np.full_like(aArray, 初期値)
既存のベクトルを元に全要素が初期値の配列を作る	np.full_like(aArray, 初期値)
配列の全要素の値を変更する	aArray[:, :] = 指定の値
行列の全要素の値を変更する	aArray[:, :] = 指定の値
配列の全要素を指定の値にする	aArray[:, :] = 指定の値
ベクトルの全要素を指定の値にする	aArray[:, :] = 指定の値
行列の値	aArray[行番号, 列番号]
配列の値	aArray[行番号, 列番号]
行列の値を変更する	aArray[行番号, 列番号] = 指定の値
行列の行	aArray[行番号]
行列の行を選択する	aArray[行番号]
行列の列	aArray[:, 列番号]
行列の列を選択する	aArray[:, 列番号]
配列の列	aArray[:, 列番号]
ユニークな値を要素とする配列	np.unique(aArray)
ユニークな値を要素とする行列を求める	np.unique(aArray)
配列のユニークな値を要素とする行列を使う	np.unique(aArray)
ユニークな値を要素とする行列を使う	np.unique(aArray)
ユニークな要素ごとの頻度	np.unique(aArray, return_counts=True)
行列のユニークな要素ごとの頻度	np.unique(aArray, return_counts=True)
ベクトルのユニークな要素ごとの頻度を見る	np.unique(aArray, return_counts=True)
ユニークな各要素の出現回数	np.unique(aArray, return_counts=True)
ベクトルのユニークな要素ごとの出現回数	np.unique(aArray, return_counts=True)
ユニークな各要素の頻度	np.unique(aArray, return_counts=True)
二次元リストを転置する	[list(x) for x in list(zip(*aList))]
二次元リストの転置行列	[list(x) for x in list(zip(*aList))]
２次元リストの転置行列	[list(x) for x in list(zip(*aList))]
２次元リストの転置行列を計算する	[list(x) for x in list(zip(*aList))]
2次元リストの転置行列を求める	[list(x) for x in list(zip(*aList))]
2次元リストの転置行列	[list(x) for x in list(zip(*aList))]
配列を転置する	aArray.T
ベクトルを転置する	aArray.T
行列の転置行列	aArray.T
配列の転置行列	aArray.T
配列の和	aArray + aArray2
配列の和を求める	aArray + aArray2
行列の和を計算する	aArray + aArray2
配列の要素ごとに加算する	aArray + aArray2
ベクトルの要素ごとに加算する	aArray + aArray2
行列の要素ごとに加算する	aArray + aArray2
配列の差	aArray - aArray2
行列の差	aArray - aArray2
配列のスカラー倍	aArray * n
行列のスカラー倍を求める	aArray * n
配列の要素ごとの積	np.multiply(aArray, aArray2)
ベクトルの各要素のアダマール積	np.multiply(aArray, aArray2)
行列の要素ごとのアダマール積	np.multiply(aArray, aArray2)
行列の要素ごとのアダマール積を求める	np.multiply(aArray, aArray2)
ベクトルの要素ごとの積	np.multiply(aArray, aArray2)
配列の内積	np.dot(aArray, aArray2)
ベクトルの内積を求める	np.dot(aArray, aArray2)
行列の内積	np.dot(aArray, aArray2)
ベクトルの内積を計算する	np.dot(aArray, aArray2)
行列の行列積	np.matmul(aArray, aArray2)
ベクトルの行列積	np.matmul(aArray, aArray2)
行列積を求める	np.matmul(aArray, aArray2)
行列の行列積を求める	np.matmul(aArray, aArray2)
行列の逆行列	np.linalg.inv(aArray)
行列の逆行列を計算する	np.linalg.inv(aArray)
配列の逆行列	np.linalg.inv(aArray)
行列のムーア・ペンローズの擬似逆行列	np.linalg.pinv(aArray)
行列のムーア・ペンローズの擬似逆行列を計算する	np.linalg.pinv(aArray)
ムーア・ペンローズの擬似逆行列	np.linalg.pinv(aArray)
ベクトルのムーア・ペンローズの擬似逆行列	np.linalg.pinv(aArray)
行列の行列式	np.linalg.det(aArray)
行列の行列式を求める	np.linalg.det(aArray)
行列の行列式を計算する	np.linalg.det(aArray)
行列式を求める	np.linalg.det(aArray)
FIXME	np.linalg.eig(aArray)
配列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
行列の要素ごとの最大公約数	np.gcd(aArray, aArray2)
配列間の各要素の最大公約数	np.gcd(aArray, aArray2)
行列の各要素の最大公約数	np.gcd(aArray, aArray2)
行列間の要素ごとの最大公約数	np.gcd(aArray, aArray2)
配列の要素ごとの最大公約数	np.gcd(aArray, aArray2)
配列間の要素ごとの最大公約数を求める	np.gcd(aArray, aArray2)
配列間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
行列の各要素の最小公倍数	np.lcm(aArray, aArray2)
行列間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
ベクトル間の要素ごとの最小公倍数	np.lcm(aArray, aArray2)
配列の要素ごとの最小公倍数を計算する	np.lcm(aArray, aArray2)
行列間の要素ごとの最小公倍数を求める	np.lcm(aArray, aArray2)
配列の形状	aArray.shape
ベクトルの形状を算出する	aArray.shape
行列の形状	aArray.shape
配列のデータ型	aArray.dtype()
行列の型	aArray.dtype()
行列のデータ型を算出する	aArray.dtype()
行列のデータ型	aArray.dtype()
配列の型を計算する	aArray.dtype()
配列が何のデータ型か	aArray.dtype()
ベクトルが何のデータ型か	aArray.dtype()
配列の次元数	aArray.ndim
行列の次元数を求める	aArray.ndim
ベクトルの次元数	aArray.ndim
行列の次元の数	aArray.ndim
行列の次元の数を求める	aArray.ndim
配列が何次元か	aArray.ndim
配列を列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
ベクトルを列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
行列を列方向に連結する	np.concatenate([aArray, aArray2], axis=0)
配列を行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
ベクトルを行方向に連結する	np.concatenate([aArray, aArray2], axis=1)
配列の合計値	np.sum(aArray)
ベクトルの合計値を算出する	np.sum(aArray)
ベクトルの合計値	np.sum(aArray)
ベクトルの合計	np.sum(aArray)
配列の合計を求める	np.sum(aArray)
配列の列ごとの合計値	np.sum(aArray, axis=0)
配列の列ごとの合計	np.sum(aArray, axis=0)
配列の列ごとの合計値を計算する	np.sum(aArray, axis=0)
ベクトルの列ごとの合計を計算する	np.sum(aArray, axis=0)
配列の行ごとの合計値	np.sum(aArray, axis=1)
行列の行ごとの合計	np.sum(aArray, axis=1)
ベクトルの行ごとの合計	np.sum(aArray, axis=1)
配列の行ごとの合計値を求める	np.sum(aArray, axis=1)
配列の平均値	np.mean(aArray)
行列の平均値	np.mean(aArray)
ベクトルの平均値	np.mean(aArray)
配列の列ごとの平均値	np.mean(aArray, axis=0)
ベクトルの列ごとの平均	np.mean(aArray, axis=0)
行列の列ごとの平均値	np.mean(aArray, axis=0)
配列の行ごとの平均値	np.mean(aArray, axis=1)
行列の行ごとの平均を求める	np.mean(aArray, axis=1)
行列の行ごとの平均値	np.mean(aArray, axis=1)
行列の行ごとの平均	np.mean(aArray, axis=1)
配列の最小値	np.min(aArray)
ベクトルの最小値	np.min(aArray)
配列の最小	np.min(aArray)
行列の列ごとの最小値	np.min(aArray, axis=0)
配列の列ごとの最小	np.min(aArray, axis=0)
行列の列ごとの最小値を求める	np.min(aArray, axis=0)
行列の行ごとの最小値	np.min(aArray, axis=1)
行列の行ごとの最小	np.min(aArray, axis=1)
配列の最大値	np.max(aArray)
配列の最大	np.max(aArray)
行列の最大	np.max(aArray)
行列の最大値を計算する	np.max(aArray)
行列の列ごとの最大値	np.max(aArray, axis=0)
行列の列ごとの最大値を求める	np.max(aArray, axis=0)
行列の行ごとの最大値	np.max(aArray, axis=1)
行列の行ごとの最大値を求める	np.max(aArray, axis=1)
行列の行ごとの最大	np.max(aArray, axis=1)
配列の行ごとの最大値	np.max(aArray, axis=1)
配列の標準偏差	np.std(aArray)
行列の標準偏差	np.std(aArray)
行列の列ごとの標準偏差	np.std(aArray, axis=0)
配列の列ごとの標準偏差を求める	np.std(aArray, axis=0)
行列の行ごとの標準偏差	np.std(aArray, axis=1)
行列の行ごとの標準偏差を算出する	np.std(aArray, axis=1)
配列の行ごとの標準偏差	np.std(aArray, axis=1)
配列の分散	np.var(aArray)
行列の分散	np.var(aArray)
行列の分散を計算する	np.var(aArray)
行列の列ごとの分散	np.var(aArray, axis=0)
ベクトルの列ごとの分散	np.var(aArray, axis=0)
行列の行ごとの分散	np.var(aArray, axis=1)
配列の累積和	np.cumsum(aArray)
配列の累積和を求める	np.cumsum(aArray)
配列の累積和を計算する	np.cumsum(aArray)
ベクトルの累積和	np.cumsum(aArray)
配列の累積積	np.cumprod(aArray)
行列の累積積	np.cumprod(aArray)
行列の累積積を求める	np.cumprod(aArray)
行列の累積積を計算する	np.cumprod(aArray)
配列から重複を除いた配列を作る	np.unique(aArray)
行列から重複を除いたベクトルを作る	np.unique(aArray)
ベクトルから重複を除いた配列を作る	np.unique(aArray)
行列から重複を除いた配列を作る	np.unique(aArray)
配列のユニークな要素	np.unique(aArray)
行列のユニークな要素	np.unique(aArray)
ベクトルのユニークな要素	np.unique(aArray)
行列のユニークな要素を計算する	np.unique(aArray)
配列のユニークな要素とその個数	u, counts = np.unique(aArray, return_counts=True)
行列のユニークな要素とその個数を計算する	u, counts = np.unique(aArray, return_counts=True)
行列のユニークな要素とその個数を求める	u, counts = np.unique(aArray, return_counts=True)
配列のユニークな要素とその個数を求める	u, counts = np.unique(aArray, return_counts=True)
配列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
行列のユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
ベクトルのユニークな要素とその位置	u, indices = np.unique(aArray, return_index=True)
配列を平坦化する	aArray.flatten()
ベクトルを平坦化する	aArray.flatten()
行列を一次元化する	aArray.flatten()
ベクトルを一次元化する	aArray.flatten()
配列を平坦にする	aArray.flatten()
ベクトルを一次元にする	aArray.flatten()
行列を平坦にする	aArray.flatten()
二つのオブジェクトが等しいか調べる	obj == obj2
二つのオブジェクトが等しいかどうか判定する	obj == obj2
２つのオブジェクトが等しいかどうか調べる	obj == obj2
二つのオブジェクトが等しいか	obj == obj2
2つのオブジェクトが等しい	obj == obj2
2つのオブジェクトが等しいか判定する	obj == obj2
二つのオブジェクトが同一参照か調べる	obj is obj2
二つのオブジェクトが同一かどうか確認する	obj is obj2
2つのオブジェクトが同じか調べる	obj is obj2
二つのオブジェクトは同一参照か	obj is obj2
2つのオブジェクトが同じ参照か調べる	obj is obj2
二つのオブジェクトは同一参照	obj is obj2
オブジェクトをデバッグ向けの文字列に変換する	repr(obj)
オブジェクトを文字列に変換する	str(obj)
オブジェクトを文字列にする	str(obj)
オブジェクトをユーザ向けの文字列に変換する	str(obj)
オブジェクトのイテレータ	iter(obj)
オブジェクトをイテラブルに変換する	iter(obj)
オブジェクトをイテレータに変換する	iter(obj)
オブジェクトをイテレータにする	iter(obj)
文字列をバイト配列に変換する	bytearray(s)
文字列をバイト列に変換する	bytes(s)
オブジェクトのメモリビュー	memoryview(obj)
オブジェクトが関数か調べる	callable(obj)
オブジェクトが関数かどうか	callable(obj)
オブジェクトが関数か	callable(obj)
オブジェクトが関数	callable(obj)
文字列を式として評価する	eval(s)
グローバル変数の一覧	globals()
グローバル変数の一覧を使う	globals()
オブジェクトのプロパティを削除する	delattr(obj, プロパティ名)
オブジェクトのフィールドを削除する	delattr(obj, プロパティ名)
オブジェクトからプロパティを消す	delattr(obj, プロパティ名)
オブジェクトのフィールドを消す	delattr(obj, プロパティ名)
オブジェクトの属性を取り除く	delattr(obj, プロパティ名)
オブジェクトのプロパティの値	getattr(obj, プロパティ名)
オブジェクトの属性の値	getattr(obj, プロパティ名)
オブジェクトにプロパティが存在するか調べる	hasattr(obj, プロパティ名)
オブジェクトにプロパティが存在する	hasattr(obj, プロパティ名)
オブジェクトにフィールドがあるかどうか調べる	hasattr(obj, プロパティ名)
オブジェクトにプロパティが存在するか	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つか調べる	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つかどうか判定する	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つか判定する	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つか	hasattr(obj, プロパティ名)
オブジェクトがプロパティを持つかどうか調べる	hasattr(obj, プロパティ名)
オブジェクトのプロパティの値を値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティの値を値に変更する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティを値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトの属性を値に設定する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティの値を設定する	setattr(obj, プロパティ名, 値)
オブジェクトのプロパティの値を変更する	setattr(obj, プロパティ名, 値)
オブジェクトの属性の値を指定する	setattr(obj, プロパティ名, 値)
オブジェクトのハッシュ値	hash(obj)
オブジェクトのハッシュ値を求める	hash(obj)
オブジェクトがあるクラスか調べる	isinstance(obj, クラス)
オブジェクトがある型	isinstance(obj, クラス)
オブジェクトがあるクラスのインスタンスか調べる	isinstance(obj, クラス)
オブジェクトはあるクラスのインスタンス	isinstance(obj, クラス)
オブジェクトがあるクラス	isinstance(obj, クラス)
オブジェクトはあるクラスか	isinstance(obj, クラス)
オブジェクトは整数クラスか調べる	isinstance(obj, int)
オブジェクトが整数かどうか調べる	isinstance(obj, int)
オブジェクトは整数型	isinstance(obj, int)
オブジェクトが整数型	isinstance(obj, int)
オブジェクトが整数クラスかどうか	isinstance(obj, int)
オブジェクトは浮動小数点数クラスか調べる	isinstance(obj, float)
オブジェクトは浮動小数点数型か調べる	isinstance(obj, float)
オブジェクトは浮動小数点数クラス	isinstance(obj, float)
オブジェクトは浮動小数点数か調べる	isinstance(obj, float)
オブジェクトが浮動小数点数	isinstance(obj, float)
オブジェクトは文字列クラスか調べる	isinstance(obj, str)
オブジェクトは文字列か調べる	isinstance(obj, str)
オブジェクトは文字列型かどうか	isinstance(obj, str)
オブジェクトが文字列型	isinstance(obj, str)
オブジェクトは文字列型か	isinstance(obj, str)
オブジェクトは文字列か	isinstance(obj, str)
オブジェクトは論理値クラスか調べる	isinstance(obj, bool)
オブジェクトは論理値か調べる	isinstance(obj, bool)
オブジェクトは論理値か	isinstance(obj, bool)
オブジェクトは論理値型か	isinstance(obj, bool)
オブジェクトは論理値	isinstance(obj, bool)
オブジェクトが論理値型かどうか調べる	isinstance(obj, bool)
オブジェクトはリストクラスか調べる	isinstance(obj, list)
オブジェクトはリストクラスのインスタンスかどうか	isinstance(obj, list)
オブジェクトはリスト型か	isinstance(obj, list)
オブジェクトはリストクラス	isinstance(obj, list)
オブジェクトはリスト型のインスタンスかどうか調べる	isinstance(obj, list)
オブジェクトがリストクラスのインスタンスか調べる	isinstance(obj, list)
オブジェクトはリストかどうか	isinstance(obj, list)
オブジェクトはタプルクラスか調べる	isinstance(obj, tuple)
オブジェクトはタプルか調べる	isinstance(obj, tuple)
オブジェクトはタプルクラスか	isinstance(obj, tuple)
オブジェクトがタプル型か調べる	isinstance(obj, tuple)
オブジェクトがタプルか	isinstance(obj, tuple)
オブジェクトはタプル型か調べる	isinstance(obj, tuple)
オブジェクトは辞書クラスか調べる	isinstance(obj, dict)
オブジェクトは辞書クラスかどうかテストする	isinstance(obj, dict)
オブジェクトは辞書型か調べる	isinstance(obj, dict)
オブジェクトは辞書クラスか判定する	isinstance(obj, dict)
オブジェクトが辞書型か調べる	isinstance(obj, dict)
オブジェクトが辞書型	isinstance(obj, dict)
オブジェクトは集合クラスか調べる	isinstance(obj, set)
オブジェクトは集合型のインスタンスかどうか調べる	isinstance(obj, set)
オブジェクトは集合型のインスタンス	isinstance(obj, set)
オブジェクトが集合型かどうか	isinstance(obj, set)
オブジェクトは集合クラスかどうか確認する	isinstance(obj, set)
オブジェクトは集合クラスかどうか	isinstance(obj, set)
オブジェクトはバイト列クラスか調べる	isinstance(obj, bytes)
オブジェクトはバイト列	isinstance(obj, bytes)
オブジェクトがバイト列	isinstance(obj, bytes)
オブジェクトはバイト列かどうか調べる	isinstance(obj, bytes)
オブジェクトはバイト列クラスのインスタンスか調べる	isinstance(obj, bytes)
オブジェクトがバイト列か調べる	isinstance(obj, bytes)
オブジェクトは数値か調べる	isinstance(obj, (int,float))
オブジェクトは数値かどうか調べる	isinstance(obj, (int,float))
オブジェクトは数値	isinstance(obj, (int,float))
オブジェクトはリストかタプルか調べる	isinstance(obj, (list)
オブジェクトがリストかタプル	isinstance(obj, (list)
オブジェクトはリストかタプルかどうか調べる	isinstance(obj, (list)
オブジェクトはリストかタプルか	isinstance(obj, (list)
オブジェクトがリストかタプルか判定する	isinstance(obj, (list)
クラスのサブクラスか調べる	issubclass(サブクラス, クラス)
型のサブクラスかどうか調べる	issubclass(サブクラス, クラス)
クラスのサブクラスか判定する	issubclass(サブクラス, クラス)
型のサブクラスか調べる	issubclass(サブクラス, クラス)
クラスのサブクラスか	issubclass(サブクラス, クラス)
オブジェクトのオブジェクト識別子	id(obj)
オブジェクトの固有のID	id(obj)
オブジェクトのポインタ	id(obj)
オブジェクトのオブジェクト識別子を見る	id(obj)
オブジェクトのクラス	type(obj)
オブジェクトの型を調べる	type(obj)
オブジェクトの型	type(obj)
データ列を使う	import pandas as pd
データ列をインポートする	import pandas as pd
データフレームの要約統計量	df.describe()
データフレームの記述統計量	df.describe()
データフレームの要約統計量を計算する	df.describe()
データフレームのリストカラムの要約統計量	df[aList].describe()
データフレームのリスト列の要約統計量	df[aList].describe()
データフレームのリスト列の記述統計量	df[aList].describe()
データフレームのリストカラムの要約統計量を算出する	df[aList].describe()
データ列の要約統計量	ds.describe()
データ列の記述統計量	ds.describe()
列の要約統計量	ds.describe()
データフレームのカラムの要約統計量	df[col].describe()
データフレームの列の要約統計量	df[col].describe()
データフレームのカラムの記述統計量	df[col].describe()
データフレームの平均値	df.mean()
データフレームの平均値を求める	df.mean()
データフレームのリストカラムの平均値	df[aList].mean()
データフレームのリストカラムの平均値を算出する	df[aList].mean()
データフレームのリスト列の平均値	df[aList].mean()
データフレームのリスト列の平均値を計算する	df[aList].mean()
データ列の平均値	ds.mean()
データ列の平均	ds.mean()
列の平均値	ds.mean()
データ列の平均値を求める	ds.mean()
カラムの平均値	ds.mean()
データフレームのカラムの平均値	df[col].mean()
データフレームのカラムの平均値を求める	df[col].mean()
データフレームの列の平均を算出する	df[col].mean()
データフレームの中央値	df.median()
データフレームのメディアンを求める	df.median()
データフレームのメディアン	df.median()
データフレームのリストカラムの中央値	df[aList].median()
データフレームのリストカラムの中央値を算出する	df[aList].median()
データ列の中央値	ds.median()
データ列の中央値を算出する	ds.median()
カラムの中央値を求める	ds.median()
データフレームのカラムの中央値	df[col].median()
データフレームのカラムの中央値を求める	df[col].median()
データフレームのカラムの第二四分位数	df[col].median()
データフレームの第一四分位数	df.quantile(0.25)
データフレームの上位25%	df.quantile(0.25)
データフレームの第一四分位数を算出する	df.quantile(0.25)
データフレームの25パーセンタイルを計算する	df.quantile(0.25)
データフレームのリストカラムの第一四分位数	df[aList].quantile(0.25)
データフレームのリストカラムの25パーセンタイルを求める	df[aList].quantile(0.25)
データフレームのリスト列の上位25%	df[aList].quantile(0.25)
データフレームのリスト列の第一四分位数	df[aList].quantile(0.25)
データ列の第一四分位数	ds.quantile(0.25)
カラムの第一四分位数	ds.quantile(0.25)
データ列の第一四分位数を算出する	ds.quantile(0.25)
データ列の25パーセンタイル	ds.quantile(0.25)
データフレームのカラムの第一四分位数	df[col].quantile(0.25)
データフレームのカラムの25パーセンタイル	df[col].quantile(0.25)
データフレームのカラムの第一四分位数を求める	df[col].quantile(0.25)
データフレームの列の第一四分位数	df[col].quantile(0.25)
データフレームの第三四分位数	df.quantile(0.75)
データフレームの75パーセンタイル	df.quantile(0.75)
データフレームのリストカラムの第三四分位数	df[aList].quantile(0.75)
データフレームのリストカラムの下位25%	df[aList].quantile(0.75)
データフレームのリスト列の75パーセンタイル	df[aList].quantile(0.75)
データ列の第三四分位数	ds.quantile(0.75)
データフレームのカラムの第三四分位数	df[col].quantile(0.75)
データフレームの列の下位25%	df[col].quantile(0.75)
データフレームのカラムの下位25%	df[col].quantile(0.75)
データフレームのpercent分位数	df.quantile(percent/100)
データフレームのpercent分位数を求める	df.quantile(percent/100)
データフレームのリストカラムのpercent分位数	df[aList].quantile(percent/100)
データフレームのリスト列のpercentパーセンタイルを求める	df[aList].quantile(percent/100)
データフレームのリスト列のpercentパーセンタイル	df[aList].quantile(percent/100)
データフレームのリスト列のpercent分位数を求める	df[aList].quantile(percent/100)
データ列のpercent分位数	ds.quantile(percent/100)
データ列のpercent分位数を求める	ds.quantile(percent/100)
データフレームのカラムのpercent分位数	df[col].quantile(percent/100)
データフレームの列のpercentパーセンタイル	df[col].quantile(percent/100)
データフレームのカラムのpercent分位数を求める	df[col].quantile(percent/100)
データフレームのカラムのpercentパーセンタイルを求める	df[col].quantile(percent/100)
データフレームの最頻値	df.mode()
データフレームのモード	df.mode()
データフレームの最頻値を算出する	df.mode()
データフレームのどの値が頻出か見る	df.mode()
データフレームのどの値が頻出か確認する	df.mode()
データフレームのリストカラムの最頻値	df[aList].mode()
データフレームのリスト列の最頻値	df[aList].mode()
データフレームのリスト列のモード	df[aList].mode()
データフレームのリストカラムの最頻値を求める	df[aList].mode()
データフレームのリストカラムのどの値が頻出か見る	df[aList].mode()
データフレームのリスト列のどの値が頻出か調べる	df[aList].mode()
データフレームのリストカラムのどの値が頻出か確認する	df[aList].mode()
データフレームのリストカラムのどの値が最も現れるか確認する	df[aList].mode()
データ列の最頻値	ds.mode()
データ列のモード	ds.mode()
カラムの最頻値	ds.mode()
データ列のモードを計算する	ds.mode()
データ列の最頻値を算出する	ds.mode()
データ列のどの値が頻出か見る	ds.mode()
カラムのどの値が頻出か見る	ds.mode()
データ列のどの値が最も現れるか見る	ds.mode()
データフレームのカラムの最頻値	df[col].mode()
データフレームのカラムのモード	df[col].mode()
データフレームの列の最頻値を求める	df[col].mode()
データフレームのカラムのどの値が頻出か見る	df[col].mode()
データフレームの列のどの値が最も現れるか見る	df[col].mode()
データフレームの列のどの値が頻出か調べる	df[col].mode()
データフレームのカラムのどの値が頻出か確認する	df[col].mode()
データフレームのカラムのどの値が最も現れるか確認する	df[col].mode()
データフレームの標本標準偏差	df.std()
データフレームの標準偏差を求める	df.std()
データフレームの標本標準偏差を求める	df.std()
データフレームのリストカラムの標本標準偏差	df[aList].std()
データフレームのリスト列の標準偏差	df[aList].std()
データフレームのリストカラムの標準偏差	df[aList].std()
データフレームのリスト列の標本標準偏差	df[aList].std()
データ列の標本標準偏差	ds.std()
データ列の標準偏差を求める	ds.std()
データ列の標準偏差	ds.std()
カラムの標本標準偏差	ds.std()
データ列の標本標準偏差を求める	ds.std()
データフレームのカラムの標本標準偏差	df[col].std()
データフレームのカラムの標本標準偏差を求める	df[col].std()
データフレームの母標準偏差	df.std(ddof=0)
データフレームのリストカラムの母標準偏差	df[aList].std(ddof=0)
データフレームのリスト列の母標準偏差を計算する	df[aList].std(ddof=0)
データフレームのリスト列の母標準偏差	df[aList].std(ddof=0)
データ列の母標準偏差	ds.std(ddof=0)
列の母標準偏差を求める	ds.std(ddof=0)
データ列の母標準偏差を計算する	ds.std(ddof=0)
データフレームのカラムの母標準偏差	df[col].std(ddof=0)
データフレームの列の母標準偏差を算出する	df[col].std(ddof=0)
データフレームの分散	df.var()
データフレームの分散を計算する	df.var()
データフレームがどの程度、分散しているか見る	df.var()
データフレームがどの程度分散しているか見る	df.var()
データフレームはどれだけ分散しているか見る	df.var()
データフレームがどれだけ、分散しているか見る	df.var()
データフレームのリストカラムの分散	df[aList].var()
データフレームのリストカラムの分散を求める	df[aList].var()
データフレームのリストカラムの分散を計算する	df[aList].var()
データフレームのリストカラムがどの程度、分散しているか見る	df[aList].var()
データフレームのリスト列がどれだけ分散しているか調べる	df[aList].var()
データフレームのリストカラムがどの程度、分散しているか確認する	df[aList].var()
データ列の分散	ds.var()
データ列の分散を求める	ds.var()
カラムの分散を求める	ds.var()
データ列がどの程度、分散しているか見る	ds.var()
データ列はどの程度分散しているか見る	ds.var()
カラムはどの程度分散しているか見る	ds.var()
データ列はどの程度、分散しているか確認する	ds.var()
カラムはどの程度、分散しているか確認する	ds.var()
データ列はどの程度、分散しているか見る	ds.var()
データフレームのカラムの分散	df[col].var()
データフレームのカラムの分散を計算する	df[col].var()
データフレームのカラムがどの程度、分散しているか見る	df[col].var()
データフレームの列がどの程度、分散しているか見る	df[col].var()
データフレームの列がどの程度、分散しているか確認する	df[col].var()
データフレームの列がどれだけ分散しているか見る	df[col].var()
データフレームのカラムはどの程度、分散しているか確認する	df[col].var()
データフレームのカラムがどの程度分散しているか見る	df[col].var()
データフレームの歪度	df.kurt()
データフレームの正規分布に対する左右対称性	df.kurt()
データフレームの歪度を求める	df.kurt()
データフレームの正規分布に対する左右対称性を求める	df.kurt()
データフレームが正規分布からどの程度、歪んでいるか見る	df.kurt()
データフレームが正規分布からどの程度歪んでいるか見る	df.kurt()
データフレームが正規分布からどれだけ、歪んでいるか見る	df.kurt()
データフレームが正規分布からどの程度、歪んでいるか調べる	df.kurt()
データフレームは正規分布からどれだけ、歪んでいるか見る	df.kurt()
データフレームのリストカラムの歪度	df[aList].kurt()
データフレームのリストカラムの正規分布に対する左右対称性を求める	df[aList].kurt()
データフレームのリスト列の歪度を求める	df[aList].kurt()
データフレームのリストカラムの正規分布に対する左右対称性	df[aList].kurt()
データフレームのリスト列の正規分布に対する左右対称性	df[aList].kurt()
データフレームのリストカラムが正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
データフレームのリストカラムが正規分布からどれだけ、歪んでいるか調べる	df[aList].kurt()
データフレームのリスト列が正規分布からどの程度、歪んでいるか見る	df[aList].kurt()
データフレームのリスト列は正規分布からどの程度、歪んでいるか調べる	df[aList].kurt()
データフレームのリストカラムが正規分布からどれだけ、歪んでいるか見る	df[aList].kurt()
データ列の歪度	ds.kurt()
データ列の正規分布に対する左右対称性	ds.kurt()
列の正規分布に対する左右対称性を求める	ds.kurt()
カラムの歪度	ds.kurt()
データ列が正規分布からどの程度、歪んでいるか見る	ds.kurt()
カラムは正規分布からどの程度歪んでいるか見る	ds.kurt()
データ列が正規分布からどの程度、歪んでいるか調べる	ds.kurt()
データ列が正規分布からどれだけ、歪んでいるか見る	ds.kurt()
データ列は正規分布からどの程度、歪んでいるか見る	ds.kurt()
カラムが正規分布からどの程度、歪んでいるか調べる	ds.kurt()
データフレームのカラムの歪度	df[col].kurt()
データフレームのカラムの正規分布に対する左右対称性を求める	df[col].kurt()
データフレームの列の歪度	df[col].kurt()
データフレームの列の正規分布に対する左右対称性を求める	df[col].kurt()
データフレームのカラムが正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの列は正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの列が正規分布からどの程度、歪んでいるか確認する	df[col].kurt()
データフレームのカラムが正規分布からどの程度、歪んでいるか確認する	df[col].kurt()
データフレームのカラムは正規分布からどの程度歪んでいるか見る	df[col].kurt()
データフレームの列が正規分布からどれだけ、歪んでいるか見る	df[col].kurt()
データフレームの列が正規分布からどの程度、歪んでいるか見る	df[col].kurt()
データフレームの尖度	df.skew()
データフレームの正規分布に対する上下広がり	df.skew()
データフレームの尖度を求める	df.skew()
データフレームの正規分布に対する上下広がりを求める	df.skew()
データフレームが正規分布からどの程度、尖っているか見る	df.skew()
データフレームは正規分布からどの程度、尖っているか見る	df.skew()
データフレームが正規分布からどの程度、尖っているか確認する	df.skew()
データフレームのリストカラムの尖度	df[aList].skew()
データフレームのリスト列の正規分布に対する上下広がり	df[aList].skew()
データフレームのリストカラムの尖度を求める	df[aList].skew()
データフレームのリストカラムの尖度を計算する	df[aList].skew()
データフレームのリストカラムが正規分布からどの程度、尖っているか見る	df[aList].skew()
データフレームのリストカラムが正規分布からどの程度、尖っているか調べる	df[aList].skew()
データフレームのリストカラムは正規分布からどれだけ、尖っているか見る	df[aList].skew()
データフレームのリスト列は正規分布からどの程度、尖っているか調べる	df[aList].skew()
データ列の尖度	ds.skew()
データ列の尖度を求める	ds.skew()
カラムの正規分布に対する上下広がり	ds.skew()
データ列が正規分布からどの程度、尖っているか見る	ds.skew()
データ列は正規分布からどの程度尖っているか見る	ds.skew()
カラムが正規分布からどの程度尖っているか調べる	ds.skew()
カラムが正規分布からどの程度、尖っているか見る	ds.skew()
データ列が正規分布からどれだけ、尖っているか調べる	ds.skew()
データフレームのカラムの尖度	df[col].skew()
データフレームのカラムの正規分布に対する上下広がりを求める	df[col].skew()
データフレームの列の尖度	df[col].skew()
データフレームのカラムの正規分布に対する上下広がり	df[col].skew()
データフレームのカラムが正規分布からどの程度、尖っているか見る	df[col].skew()
データフレームのカラムが正規分布からどの程度尖っているか見る	df[col].skew()
データフレームの列が正規分布からどれだけ、尖っているか見る	df[col].skew()
データフレームのカラムが正規分布からどの程度尖っているか確認する	df[col].skew()
データフレームの列が正規分布からどの程度尖っているか見る	df[col].skew()
データフレームのカラムが正規分布からどの程度、尖っているか調べる	df[col].skew()
データフレームを丸める	df.round()
データフレームを整数に丸める	df.round()
データフレームのリストカラムを丸める	df[aList].round()
データフレームのリスト列を丸める	df[aList].round()
データ列を丸める	ds.round()
データ列を四捨五入する	ds.round()
データ列を整数に四捨五入する	ds.round()
カラムを丸める	ds.round()
データフレームのカラムを丸める	df[col].round()
データフレームのカラムを整数に丸める	df[col].round()
データフレームのカラムを四捨五入する	df[col].round()
データフレームを小数点以下n桁で丸める	df.round(n)
データフレームのリストカラムを小数点以下n桁で丸める	df[aList].round(n)
データフレームのリスト列を小数点以下n桁で四捨五入する	df[aList].round(n)
データフレームのリストカラムを小数点以下n桁で四捨五入する	df[aList].round(n)
データ列を小数点以下n桁で丸める	ds.round(n)
カラムを小数点以下n桁で四捨五入する	ds.round(n)
カラムを小数点以下n桁で丸める	ds.round(n)
データフレームのカラムを小数点以下n桁で丸める	df[col].round(n)
データフレームを10の位で丸める	df.round(-1)
データフレームを十の位で四捨五入する	df.round(-1)
データフレームを十の位で丸める	df.round(-1)
データフレームのリストカラムを10の位で丸める	df[aList].round(-1)
データフレームのリストカラムを10の位で四捨五入する	df[aList].round(-1)
データフレームのリストカラムを十の位で四捨五入する	df[aList].round(-1)
データフレームのリストカラムを十の位で丸める	df[aList].round(-1)
データフレームのリスト列を10の位で四捨五入する	df[aList].round(-1)
データ列を10の位で丸める	ds.round(-1)
データ列を十の位で丸める	ds.round(-1)
データ列を10の位で四捨五入する	ds.round(-1)
データフレームのカラムを10の位で丸める	df[col].round(-1)
データフレームのカラムを十の位で丸める	df[col].round(-1)
データフレームを100の位で丸める	df.round(-2)
データフレームのリストカラムを100の位で丸める	df[aList].round(-2)
データフレームのリスト列を100の位で丸める	df[aList].round(-2)
データ列を100の位で丸める	ds.round(-2)
データ列を百の位で四捨五入する	ds.round(-2)
データ列を百の位で丸める	ds.round(-2)
データフレームのカラムを100の位で丸める	df[col].round(-2)
データフレームのカラムを百の位で四捨五入する	df[col].round(-2)
データフレームの列を100の位で四捨五入する	df[col].round(-2)
データフレームを1000の位で丸める	df.round(-3)
データフレームを1000の位で四捨五入する	df.round(-3)
データフレームを千の位で丸める	df.round(-3)
データフレームのリストカラムを1000の位で丸める	df[aList].round(-3)
データフレームのリストカラムを1000の位で四捨五入する	df[aList].round(-3)
データフレームのリスト列を1000の位で丸める	df[aList].round(-3)
データフレームのリストカラムを千の位で四捨五入する	df[aList].round(-3)
データ列を1000の位で丸める	ds.round(-3)
データ列を千の位で丸める	ds.round(-3)
カラムを1000の位で丸める	ds.round(-3)
データ列を1000の位で四捨五入する	ds.round(-3)
カラムを1000の位で四捨五入する	ds.round(-3)
データフレームのカラムを1000の位で丸める	df[col].round(-3)
データフレームを丸めて、整数型にする	df.round().astype(int)
データフレームを四捨五入して、整数型にする	df.round().astype(int)
データフレームを四捨五入して、整数にする	df.round().astype(int)
データフレームを丸めて、整数にする	df.round().astype(int)
データフレームのリストカラムを丸めて、整数型にする	df[aList].round().astype(int)
データフレームのリストカラムを四捨五入して、整数型にする	df[aList].round().astype(int)
データフレームのリストカラムを四捨五入して整数にする	df[aList].round().astype(int)
データフレームのリスト列を丸めて、整数にする	df[aList].round().astype(int)
データフレームのリスト列を丸めて整数型にする	df[aList].round().astype(int)
データ列を丸めて、整数型にする	ds.round().astype(int)
データ列を丸めて整数にする	ds.round().astype(int)
カラムを四捨五入して、整数型にする	ds.round().astype(int)
カラムを丸めて、整数型にする	ds.round().astype(int)
カラムを丸めて、整数にする	ds.round().astype(int)
列を四捨五入して、整数型にする	ds.round().astype(int)
データフレームのカラムを丸めて、整数型にする	df[col].round().astype(int)
データフレームのカラムを四捨五入して、整数型にする	df[col].round().astype(int)
データフレームのカラムを四捨五入して、整数にする	df[col].round().astype(int)
データフレームを10の位で丸めて、整数型にする	df.round(-1).astype(int)
データフレームを十の位で丸めて、整数型にする	df.round(-1).astype(int)
データフレームを十の位で四捨五入して、整数型にする	df.round(-1).astype(int)
データフレームのリストカラムを10の位で丸めて、整数型にする	df[aList].round(-1).astype(int)
データフレームのリスト列を10の位で丸めて整数型にする	df[aList].round(-1).astype(int)
データフレームのリスト列を10の位で四捨五入して、整数にする	df[aList].round(-1).astype(int)
データフレームのリストカラムを10の位で丸めて、整数にする	df[aList].round(-1).astype(int)
データフレームのリストカラムを10の位で丸めて整数にする	df[aList].round(-1).astype(int)
データ列を10の位で丸めて、整数型にする	ds.round(-1).astype(int)
データ列を十の位で四捨五入して、整数にする	ds.round(-1).astype(int)
データ列を十の位で丸めて整数型にする	ds.round(-1).astype(int)
データ列を10の位で丸めて整数にする	ds.round(-1).astype(int)
データフレームのカラムを10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
データフレームのカラムを10の位で四捨五入して、整数型にする	df[col].round(-1).astype(int)
データフレームのカラムを十の位で四捨五入して、整数にする	df[col].round(-1).astype(int)
データフレームのカラムを10の位で丸めて整数型にする	df[col].round(-1).astype(int)
データフレームのカラムを10の位で四捨五入して整数型にする	df[col].round(-1).astype(int)
データフレームのカラムを10の位で丸めて、整数にする	df[col].round(-1).astype(int)
データフレームの列を10の位で丸めて、整数型にする	df[col].round(-1).astype(int)
データフレームを100の位で丸めて、整数型にする	df.round(-2).astype(int)
データフレームを100の位で丸めて整数型にする	df.round(-2).astype(int)
データフレームを100の位で四捨五入して、整数型にする	df.round(-2).astype(int)
データフレームを百の位で丸めて、整数型にする	df.round(-2).astype(int)
データフレームのリストカラムを100の位で丸めて、整数型にする	df[aList].round(-2).astype(int)
データフレームのリスト列を100の位で四捨五入して、整数型にする	df[aList].round(-2).astype(int)
データフレームのリスト列を百の位で丸めて整数型にする	df[aList].round(-2).astype(int)
データフレームのリストカラムを100の位で丸めて整数型にする	df[aList].round(-2).astype(int)
データフレームのリストカラムを100の位で丸めて整数にする	df[aList].round(-2).astype(int)
データフレームのリスト列を100の位で丸めて、整数にする	df[aList].round(-2).astype(int)
データ列を100の位で丸めて、整数型にする	ds.round(-2).astype(int)
カラムを百の位で丸めて、整数型にする	ds.round(-2).astype(int)
データ列を百の位で四捨五入して、整数型にする	ds.round(-2).astype(int)
列を100の位で丸めて、整数型にする	ds.round(-2).astype(int)
データフレームのカラムを100の位で丸めて、整数型にする	df[col].round(-2).astype(int)
データフレームのカラムを100の位で丸めて、整数にする	df[col].round(-2).astype(int)
データフレームの列を100の位で四捨五入して、整数型にする	df[col].round(-2).astype(int)
データフレームのカラムを100の位で丸めて整数型にする	df[col].round(-2).astype(int)
データフレームの列を100の位で丸めて整数型にする	df[col].round(-2).astype(int)
データフレームを1000の位で丸めて、整数型にする	df.round(-3).astype(int)
データフレームを1000の位で四捨五入して整数型にする	df.round(-3).astype(int)
データフレームのリストカラムを1000の位で丸めて、整数型にする	df[aList].round(-3).astype(int)
データフレームのリストカラムを千の位で四捨五入して、整数型にする	df[aList].round(-3).astype(int)
データフレームのリスト列を千の位で四捨五入して整数型にする	df[aList].round(-3).astype(int)
データフレームのリスト列を1000の位で四捨五入して、整数型にする	df[aList].round(-3).astype(int)
データフレームのリスト列を千の位で丸めて、整数型にする	df[aList].round(-3).astype(int)
データフレームのリスト列を1000の位で丸めて整数型にする	df[aList].round(-3).astype(int)
データ列を1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
データ列を1000の位で四捨五入して、整数型にする	ds.round(-3).astype(int)
カラムを1000の位で丸めて、整数型にする	ds.round(-3).astype(int)
データ列を千の位で四捨五入して整数型にする	ds.round(-3).astype(int)
データフレームのカラムを1000の位で丸めて、整数型にする	df[col].round(-3).astype(int)
データフレームの列を千の位で丸めて整数型にする	df[col].round(-3).astype(int)
データフレームのカラムを1000の位で丸めて整数にする	df[col].round(-3).astype(int)
データフレームのカラムを千の位で丸めて、整数にする	df[col].round(-3).astype(int)
データフレームの欠損値をxで埋める	df.fillna(x)
データフレームのNaNをxで埋める	df.fillna(x)
データフレームの欠損値をxで補う	df.fillna(x)
データフレームの未入力値をxで補う	df.fillna(x)
データフレームの欠損値をxに設定する	df.fillna(x)
データフレームの未入力値をxに設定する	df.fillna(x)
データフレームのNaNをxに設定する	df.fillna(x)
データフレームの欠損値をxにする	df.fillna(x)
データフレームのリストカラムの欠損値をxで埋める	df[aList].fillna(x)
データフレームのリストカラムの未入力値をxで埋める	df[aList].fillna(x)
データフレームのリストカラムのNaNをxで補う	df[aList].fillna(x)
データフレームのリストカラムのNaNをxで埋める	df[aList].fillna(x)
データフレームのリストカラムの欠損値をxに設定する	df[aList].fillna(x)
データフレームのリスト列の未入力値をxに設定する	df[aList].fillna(x)
データフレームのリストカラムのNaNをxに設定する	df[aList].fillna(x)
データフレームのリスト列の欠損値をxに設定する	df[aList].fillna(x)
データ列の欠損値をxで埋める	ds.fillna(x)
データ列のNaNをxで置換する	ds.fillna(x)
カラムの欠損値をxで埋める	ds.fillna(x)
xでデータ列の欠損値を埋める	ds.fillna(x)
データ列の欠損値をxに設定する	ds.fillna(x)
データ列の未入力値をxに設定する	ds.fillna(x)
カラムの欠損値をxに設定する	ds.fillna(x)
データ列のNaNをxに変更する	ds.fillna(x)
データ列のNaNをxに設定する	ds.fillna(x)
データフレームのカラムの欠損値をxで埋める	df[col].fillna(x)
データフレームのカラムの欠損値をxで置換する	df[col].fillna(x)
xでデータフレームのカラムの欠損値を補う	df[col].fillna(x)
xでデータフレームのカラムの欠損値を埋める	df[col].fillna(x)
データフレームのカラムのNaNをxで埋める	df[col].fillna(x)
データフレームのカラムの欠損値をxに設定する	df[col].fillna(x)
データフレームのカラムの未入力値をxに設定する	df[col].fillna(x)
データフレームの列の欠損値をxに設定する	df[col].fillna(x)
データフレームの列のNaNをxに設定する	df[col].fillna(x)
データフレームの欠損値を平均値で埋める	df.fillna(df.mean())
データフレームのNaNを平均値で埋める	df.fillna(df.mean())
平均でデータフレームの欠損値を置換する	df.fillna(df.mean())
データフレームのNaNを平均値で補う	df.fillna(df.mean())
データフレームの欠損値を平均値で補う	df.fillna(df.mean())
データフレームの欠損値を平均値に設定する	df.fillna(df.mean())
データフレームの欠損値を平均に設定する	df.fillna(df.mean())
データフレームのNaNを平均に設定する	df.fillna(df.mean())
データフレームのリストカラムの欠損値を平均値で埋める	df[aList].fillna(df[aList].mean())
データフレームのリストカラムの欠損値を平均で置換する	df[aList].fillna(df[aList].mean())
データフレームのリストカラムのNaNを平均値で埋める	df[aList].fillna(df[aList].mean())
平均値でデータフレームのリストカラムの欠損値を埋める	df[aList].fillna(df[aList].mean())
データフレームのリスト列の欠損値を平均値で埋める	df[aList].fillna(df[aList].mean())
データフレームのリストカラムの未入力値を平均で埋める	df[aList].fillna(df[aList].mean())
データフレームのリストカラムの欠損値を平均値に設定する	df[aList].fillna(df[aList].mean())
データフレームのリストカラムのNaNを平均値に減らす	df[aList].fillna(df[aList].mean())
データフレームのリストカラムのNaNを平均値にする	df[aList].fillna(df[aList].mean())
データフレームのリスト列の欠損値を平均値に設定する	df[aList].fillna(df[aList].mean())
データ列の欠損値を平均値で埋める	ds.fillna(ds.mean())
データ列のNaNを平均値で埋める	ds.fillna(ds.mean())
データ列の欠損値を平均値で置き換える	ds.fillna(ds.mean())
平均でデータ列のNaNを埋める	ds.fillna(ds.mean())
平均値でデータ列の欠損値を埋める	ds.fillna(ds.mean())
データ列の欠損値を平均で埋める	ds.fillna(ds.mean())
データ列の欠損値を平均値に設定する	ds.fillna(ds.mean())
データ列の欠損値を平均値に増やす	ds.fillna(ds.mean())
データ列の未入力値を平均に設定する	ds.fillna(ds.mean())
データ列の欠損値を平均に設定する	ds.fillna(ds.mean())
データ列の欠損値を平均値に変更する	ds.fillna(ds.mean())
データフレームのカラムの欠損値を平均値で埋める	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均で補う	df[col].fillna(df[col].mean())
データフレームの列の欠損値を平均で埋める	df[col].fillna(df[col].mean())
データフレームのカラムの欠損値を平均値に設定する	df[col].fillna(df[col].mean())
データフレームの列の欠損値を平均に減らす	df[col].fillna(df[col].mean())
データフレームの列の欠損値を平均値に設定する	df[col].fillna(df[col].mean())
データフレームのカラムのNaNを平均値に設定する	df[col].fillna(df[col].mean())
データフレームの欠損値を最頻値で埋める	df.fillna(df.mode().iloc[0])
データフレームの未入力値を最頻値で補う	df.fillna(df.mode().iloc[0])
最頻値でデータフレームの欠損値を埋める	df.fillna(df.mode().iloc[0])
データフレームの欠損値を最頻値に設定する	df.fillna(df.mode().iloc[0])
データフレームの欠損値を最頻値に指定する	df.fillna(df.mode().iloc[0])
データフレームの未入力値を最頻値に変更する	df.fillna(df.mode().iloc[0])
データフレームの欠損値をモードに設定する	df.fillna(df.mode().iloc[0])
データフレームの未入力値をモードに設定する	df.fillna(df.mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値で埋める	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値で補う	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値を最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムのNaNを最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリスト列の欠損値をモードに指定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリスト列のNaNを最頻値に設定する	df[aList].fillna(df[aList].mode().iloc[0])
データフレームのリストカラムの欠損値をモードに設定する	df[aList].fillna(df[aList].mode().iloc[0])
データ列の欠損値を最頻値で埋める	ds.fillna(ds.mode().iloc[0])
データ列の欠損値を最頻値で補う	ds.fillna(ds.mode().iloc[0])
モードでデータ列のNaNを埋める	ds.fillna(ds.mode().iloc[0])
カラムの欠損値をモードで埋める	ds.fillna(ds.mode().iloc[0])
最頻値でデータ列のNaNを埋める	ds.fillna(ds.mode().iloc[0])
データ列の欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
カラムの欠損値を最頻値に設定する	ds.fillna(ds.mode().iloc[0])
データ列の欠損値を最頻値に増やす	ds.fillna(ds.mode().iloc[0])
データ列のNaNを最頻値に設定する	ds.fillna(ds.mode().iloc[0])
データ列の欠損値を最頻値に指定する	ds.fillna(ds.mode().iloc[0])
データ列の未入力値を最頻値に増やす	ds.fillna(ds.mode().iloc[0])
データフレームのカラムの欠損値を最頻値で埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムのNaNを最頻値で置換する	df[col].fillna(df[col].mode().iloc[0])
データフレームの列のNaNを最頻値で置換する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムのNaNを最頻値で補う	df[col].fillna(df[col].mode().iloc[0])
最頻値でデータフレームのカラムの欠損値を埋める	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値を最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムの欠損値を最頻値に変更する	df[col].fillna(df[col].mode().iloc[0])
データフレームのカラムのNaNを最頻値に設定する	df[col].fillna(df[col].mode().iloc[0])
データフレームの列の欠損値をモードに設定する	df[col].fillna(df[col].mode().iloc[0])
データフレームの欠損値を中央値で埋める	df.fillna(df.median())
データフレームの欠損値をメディアンで埋める	df.fillna(df.median())
中央値でデータフレームのNaNを置換する	df.fillna(df.median())
データフレームのNaNをメディアンで埋める	df.fillna(df.median())
データフレームの欠損値を中央値で補う	df.fillna(df.median())
データフレームの欠損値を中央値に設定する	df.fillna(df.median())
データフレームの未入力値をメディアンに設定する	df.fillna(df.median())
データフレームのNaNを中央値に設定する	df.fillna(df.median())
データフレームの未入力値を中央値に設定する	df.fillna(df.median())
データフレームの欠損値を中央値に指定する	df.fillna(df.median())
データフレームのリストカラムの欠損値を中央値で埋める	df[aList].fillna(df[aList].median())
データフレームのリストカラムの未入力値を中央値で置換する	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を50パーセンタイルで埋める	df[aList].fillna(df[aList].median())
データフレームのリストカラムのNaNを第二四分位数で置換する	df[aList].fillna(df[aList].median())
メディアンでデータフレームのリストカラムの欠損値を埋める	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を中央値で置換する	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値を中央値に設定する	df[aList].fillna(df[aList].median())
データフレームのリスト列の欠損値を中央値に設定する	df[aList].fillna(df[aList].median())
データフレームのリストカラムのNaNを中央値に指定する	df[aList].fillna(df[aList].median())
データフレームのリスト列のNaNをメディアンに指定する	df[aList].fillna(df[aList].median())
データフレームのリスト列の欠損値を第二四分位数に指定する	df[aList].fillna(df[aList].median())
データフレームのリストカラムの欠損値をメディアンに変更する	df[aList].fillna(df[aList].median())
データ列の欠損値を中央値で埋める	ds.fillna(ds.median())
データ列の欠損値をメディアンで埋める	ds.fillna(ds.median())
メディアンでカラムの未入力値を埋める	ds.fillna(ds.median())
データ列の未入力値を中央値で埋める	ds.fillna(ds.median())
列の欠損値をメディアンで埋める	ds.fillna(ds.median())
データ列のNaNを中央値で埋める	ds.fillna(ds.median())
データ列のNaNを中央値で置換する	ds.fillna(ds.median())
データ列の欠損値を中央値に設定する	ds.fillna(ds.median())
データ列の欠損値を第二四分位数に減らす	ds.fillna(ds.median())
カラムのNaNを第二四分位数に設定する	ds.fillna(ds.median())
データ列のNaNを中央値に設定する	ds.fillna(ds.median())
カラムのNaNを中央値に設定する	ds.fillna(ds.median())
データ列の欠損値をメディアンに指定する	ds.fillna(ds.median())
データフレームのカラムの欠損値を中央値で埋める	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を第二四分位数で埋める	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を50パーセンタイルで置換する	df[col].fillna(df[col].median())
中央値でデータフレームのカラムの欠損値を埋める	df[col].fillna(df[col].median())
データフレームのカラムの欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームの列の欠損値を第二四分位数に設定する	df[col].fillna(df[col].median())
データフレームのカラムの未入力値をメディアンにセットする	df[col].fillna(df[col].median())
データフレームの列の欠損値を中央値に設定する	df[col].fillna(df[col].median())
データフレームの欠損値を最大値で埋める	df.fillna(df.max())
最大値でデータフレームの欠損値を埋める	df.fillna(df.max())
最大値でデータフレームのNaNを置換する	df.fillna(df.max())
データフレームの欠損値を最大値で補う	df.fillna(df.max())
データフレームの欠損値を最大値に設定する	df.fillna(df.max())
データフレームのNaNを最大値に設定する	df.fillna(df.max())
データフレームの欠損値を最大値に指定する	df.fillna(df.max())
データフレームのリストカラムの欠損値を最大値で埋める	df[aList].fillna(df[aList].max())
データフレームのリストカラムのNaNを最大値で補う	df[aList].fillna(df[aList].max())
データフレームのリストカラムのNaNを最大値で埋める	df[aList].fillna(df[aList].max())
データフレームのリストカラムの欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
データフレームのリスト列の欠損値を最大値に設定する	df[aList].fillna(df[aList].max())
データフレームのリストカラムの欠損値を最大値にセットする	df[aList].fillna(df[aList].max())
データフレームのリスト列のNaNを最大値に設定する	df[aList].fillna(df[aList].max())
データ列の欠損値を最大値で埋める	ds.fillna(ds.max())
データ列のNaNを最大値で埋める	ds.fillna(ds.max())
最大値でデータ列のNaNを補う	ds.fillna(ds.max())
データ列の欠損値を最大値に設定する	ds.fillna(ds.max())
カラムの欠損値を最大値に指定する	ds.fillna(ds.max())
データ列のNaNを最大値に設定する	ds.fillna(ds.max())
データ列の欠損値を最大値に減らす	ds.fillna(ds.max())
データ列の欠損値を最大値に増やす	ds.fillna(ds.max())
カラムのNaNを最大値にする	ds.fillna(ds.max())
データフレームのカラムの欠損値を最大値で埋める	df[col].fillna(df[col].max())
データフレームの列の未入力値を最大値で埋める	df[col].fillna(df[col].max())
最大値でデータフレームのカラムの欠損値を埋める	df[col].fillna(df[col].max())
データフレームの列のNaNを最大値で補う	df[col].fillna(df[col].max())
最大値でデータフレームの列のNaNを埋める	df[col].fillna(df[col].max())
データフレームの列の欠損値を最大値で埋める	df[col].fillna(df[col].max())
データフレームのカラムの欠損値を最大値に設定する	df[col].fillna(df[col].max())
データフレームのカラムの欠損値を最大値にセットする	df[col].fillna(df[col].max())
データフレームの列のNaNを最大値に設定する	df[col].fillna(df[col].max())
データフレームのカラムの欠損値を最大値にする	df[col].fillna(df[col].max())
データフレームのカラムの未入力値を最大値に設定する	df[col].fillna(df[col].max())
データフレームの欠損値を最小値で埋める	df.fillna(df.min())
データフレームのNaNを最小値で補う	df.fillna(df.min())
最小値でデータフレームの未入力値を補う	df.fillna(df.min())
データフレームの欠損値を最小値に設定する	df.fillna(df.min())
データフレームの欠損値を最小値に変更する	df.fillna(df.min())
データフレームのNaNを最小値に設定する	df.fillna(df.min())
データフレームのリストカラムの欠損値を最小値で埋める	df[aList].fillna(df[aList].min())
データフレームのリスト列の欠損値を最小値で埋める	df[aList].fillna(df[aList].min())
データフレームのリストカラムのNaNを最小値で埋める	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値で置換する	df[aList].fillna(df[aList].min())
最小値でデータフレームのリスト列の欠損値を埋める	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値で補う	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
データフレームのリストカラムの欠損値を最小値に変更する	df[aList].fillna(df[aList].min())
データフレームのリスト列の欠損値を最小値に設定する	df[aList].fillna(df[aList].min())
データフレームのリストカラムのNaNを最小値に設定する	df[aList].fillna(df[aList].min())
データフレームのリストカラムのNaNを最小値に指定する	df[aList].fillna(df[aList].min())
データ列の欠損値を最小値で埋める	ds.fillna(ds.min())
カラムの未入力値を最小値で埋める	ds.fillna(ds.min())
データ列の未入力値を最小値で埋める	ds.fillna(ds.min())
カラムの欠損値を最小値で埋める	ds.fillna(ds.min())
最小値で列のNaNを置き換える	ds.fillna(ds.min())
最小値でデータ列の欠損値を埋める	ds.fillna(ds.min())
データ列のNaNを最小値で補う	ds.fillna(ds.min())
データ列の欠損値を最小値に設定する	ds.fillna(ds.min())
データ列の欠損値を最小値に変更する	ds.fillna(ds.min())
カラムの欠損値を最小値にセットする	ds.fillna(ds.min())
データ列のNaNを最小値に指定する	ds.fillna(ds.min())
データフレームのカラムの欠損値を最小値で埋める	df[col].fillna(df[col].min())
データフレームのカラムの欠損値を最小値で置換する	df[col].fillna(df[col].min())
データフレームのカラムの未入力値を最小値で埋める	df[col].fillna(df[col].min())
データフレームのカラムのNaNを最小値で埋める	df[col].fillna(df[col].min())
最小値でデータフレームのカラムの欠損値を置換する	df[col].fillna(df[col].min())
データフレームの列の欠損値を最小値で埋める	df[col].fillna(df[col].min())
データフレームのカラムの欠損値を最小値に設定する	df[col].fillna(df[col].min())
データフレームの列の欠損値を最小値に設定する	df[col].fillna(df[col].min())
データフレームの欠損値を直前の値で埋める	df.fillna(method='ffill')
データフレームのNaNを直前の値で埋める	df.fillna(method='ffill')
データフレームのNaNを直前の値で置換する	df.fillna(method='ffill')
データフレームの欠損値を直前の値で補う	df.fillna(method='ffill')
データフレームの欠損値を直前の値で置き換える	df.fillna(method='ffill')
データフレームの欠損値を直前の値に設定する	df.fillna(method='ffill')
データフレームのNaNを直前の値に変更する	df.fillna(method='ffill')
データフレームのNaNを直前の値にセットする	df.fillna(method='ffill')
データフレームのNaNを直前の値に設定する	df.fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムのNaNを直前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムのNaNを直前の値で補う	df[aList].fillna(method='ffill')
データフレームのリスト列の欠損値を直前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリスト列の未入力値を前の値で埋める	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値で置き換える	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値に設定する	df[aList].fillna(method='ffill')
データフレームのリストカラムの欠損値を直前の値に変更する	df[aList].fillna(method='ffill')
データフレームのリスト列の欠損値を直前の値に設定する	df[aList].fillna(method='ffill')
データフレームのリストカラムのNaNを直前の値に変更する	df[aList].fillna(method='ffill')
データフレームのリストカラムのNaNを前の値に設定する	df[aList].fillna(method='ffill')
データ列の欠損値を直前の値で埋める	ds.fillna(method='ffill')
データ列のNaNを直前の値で置き換える	ds.fillna(method='ffill')
直前の値でデータ列の未入力値を置き換える	ds.fillna(method='ffill')
直前の値でデータ列の欠損値を埋める	ds.fillna(method='ffill')
直前の値でデータ列のNaNを補う	ds.fillna(method='ffill')
データ列の欠損値を直前の値に設定する	ds.fillna(method='ffill')
データ列のNaNを直前の値に設定する	ds.fillna(method='ffill')
データ列のNaNを前の行の値に設定する	ds.fillna(method='ffill')
データ列の未入力値を直前の値に指定する	ds.fillna(method='ffill')
列の欠損値を前の行の値に設定する	ds.fillna(method='ffill')
データフレームのカラムの欠損値を直前の値で埋める	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値で補う	df[col].fillna(method='ffill')
データフレームのカラムの未入力値を直前の値で埋める	df[col].fillna(method='ffill')
データフレームのカラムのNaNを直前の値で埋める	df[col].fillna(method='ffill')
データフレームの列の欠損値を直前の値で埋める	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値に設定する	df[col].fillna(method='ffill')
データフレームの列の欠損値を直前の値に設定する	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を前の行の値に設定する	df[col].fillna(method='ffill')
データフレームのカラムのNaNを直前の値に設定する	df[col].fillna(method='ffill')
データフレームのカラムの欠損値を直前の値に変更する	df[col].fillna(method='ffill')
データフレームのカラムの未入力値を直前の値にセットする	df[col].fillna(method='ffill')
データフレームの欠損値を直後の値で埋める	df.fillna(method='bfill')
データフレームのNaNを直後の値で埋める	df.fillna(method='bfill')
直後の値でデータフレームの欠損値を置換する	df.fillna(method='bfill')
データフレームの未入力値を直後の値で埋める	df.fillna(method='bfill')
直後の値でデータフレームの欠損値を埋める	df.fillna(method='bfill')
データフレームの欠損値を後の行の値で埋める	df.fillna(method='bfill')
データフレームの欠損値を直後の値に設定する	df.fillna(method='bfill')
データフレームの欠損値を後の行の値に指定する	df.fillna(method='bfill')
データフレームの欠損値を後の行の値にセットする	df.fillna(method='bfill')
データフレームの未入力値を直後の値に設定する	df.fillna(method='bfill')
データフレームの欠損値を直後の値に変更する	df.fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値で埋める	df[aList].fillna(method='bfill')
データフレームのリスト列の欠損値を直後の値で補う	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を後の行の値で埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値で補う	df[aList].fillna(method='bfill')
直後の値でデータフレームのリストカラムの欠損値を埋める	df[aList].fillna(method='bfill')
直後の値でデータフレームのリスト列のNaNを埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムのNaNを直後の値で埋める	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値に設定する	df[aList].fillna(method='bfill')
データフレームのリストカラムの未入力値を直後の値に設定する	df[aList].fillna(method='bfill')
データフレームのリストカラムの欠損値を直後の値に指定する	df[aList].fillna(method='bfill')
データフレームのリストカラムの未入力値を直後の値に変更する	df[aList].fillna(method='bfill')
データフレームのリスト列の欠損値を直後の値に設定する	df[aList].fillna(method='bfill')
データ列の欠損値を直後の値で埋める	ds.fillna(method='bfill')
直後の値でデータ列の欠損値を埋める	ds.fillna(method='bfill')
データ列の未入力値を後の値で補う	ds.fillna(method='bfill')
データ列の欠損値を直後の値で置換する	ds.fillna(method='bfill')
データ列の未入力値を直後の値で埋める	ds.fillna(method='bfill')
直後の値でカラムの未入力値を埋める	ds.fillna(method='bfill')
データ列の欠損値を直後の値に設定する	ds.fillna(method='bfill')
データ列の欠損値を直後の値にセットする	ds.fillna(method='bfill')
列の欠損値を直後の値に設定する	ds.fillna(method='bfill')
データ列のNaNを直後の値に設定する	ds.fillna(method='bfill')
データ列のNaNを後の行の値に設定する	ds.fillna(method='bfill')
カラムの欠損値を直後の値に設定する	ds.fillna(method='bfill')
データフレームのカラムの欠損値を直後の値で埋める	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を後の行の値で埋める	df[col].fillna(method='bfill')
データフレームの列のNaNを直後の値で埋める	df[col].fillna(method='bfill')
後の行の値でデータフレームの列の欠損値を埋める	df[col].fillna(method='bfill')
データフレームの列のNaNを直後の値で置換する	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を直後の値に設定する	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を直後の値にセットする	df[col].fillna(method='bfill')
データフレームの列の欠損値を直後の値に設定する	df[col].fillna(method='bfill')
データフレームのカラムのNaNを後の行の値にセットする	df[col].fillna(method='bfill')
データフレームのカラムの欠損値を後の値に設定する	df[col].fillna(method='bfill')
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームの文字列を欠損値にする	df.replace(s, np.nan)
データフレームの文字列を欠損値に変換する	df.replace(s, np.nan)
データフレームの文字列を未入力値にする	df.replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリスト列の文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリスト列の文字列を未入力値に変換する	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を未入力値にする	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値にする	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を欠損値にする	df[aList].replace(s, np.nan)
データフレームのリスト列の文字列を欠損値に変換する	df[aList].replace(s, np.nan)
データフレームのリストカラムの文字列を未入力値に変換する	df[aList].replace(s, np.nan)
データフレームのリスト列の文字列を未入力値に変換する	df[aList].replace(s, np.nan)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
カラムの文字列を未入力値に変換する	ds.replace(s, np.nan)
データ列の文字列をNaNに変換する	ds.replace(s, np.nan)
カラムの文字列をNaNに変換する	ds.replace(s, np.nan)
データ列の文字列を欠損値に変換する	ds.replace(s, np.nan)
カラムの文字列を欠損値に変換する	ds.replace(s, np.nan)
データ列の文字列を欠損値にする	ds.replace(s, np.nan)
カラムの文字列を欠損値にする	ds.replace(s, np.nan)
列の文字列を欠損値にする	ds.replace(s, np.nan)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームのカラムの文字列をNaNにする	df[col].replace(s, np.nan)
データフレームのカラムの文字列をNaNに変換する	df[col].replace(s, np.nan)
データフレームの列の文字列を欠損値にする	df[col].replace(s, np.nan)
データフレームのカラムの文字列を欠損値に変換する	df[col].replace(s, np.nan)
データフレームのカラムの文字列をNaNにする	df[col].replace(s, np.nan)
データフレームのカラムの文字列を欠損値にする	df[col].replace(s, np.nan)
データフレームの空文字を欠損値に変換し、ドロップする	df.replace('', np.nan).dropna()
データフレームの空文字をNaNに変換し、ドロップする	df.replace('', np.nan).dropna()
データフレームの空文字をドロップする	df.replace('', np.nan).dropna()
データフレームのリストカラムの空文字を欠損値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリスト列の空文字を未入力値に変換しドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリスト列の空文字をNaNに変換しドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリスト列の空文字を欠損値に変換し、ドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリストカラムの空文字を欠損値に変換しドロップする	df[aList].replace('', np.nan).dropna()
データフレームのリストカラムの空文字をドロップする	df[aList].replace('', np.nan).dropna()
データ列の空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
列の空文字を未入力値に変換しドロップする	ds.replace('', np.nan).dropna()
カラムの空文字を欠損値に変換し、ドロップする	ds.replace('', np.nan).dropna()
カラムの空文字を未入力値に変換しドロップする	ds.replace('', np.nan).dropna()
データ列の空文字をドロップする	ds.replace('', np.nan).dropna()
データフレームのカラムの空文字を欠損値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字を未入力値に変換し、ドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字をNaNに変換し、ドロップする	df[col].replace('', np.nan).dropna()
データフレームのカラムの空文字をドロップする	df[col].replace('', np.nan).dropna()
データフレームの値をValueMapでまとめて置き換える	df.replace(ValueMap)
データフレームをまとめてValueMapで置き換える	df.replace(ValueMap)
データフレームの値をValueMapでまとめて置換する	df.replace(ValueMap)
ValueMapでデータフレームの値をまとめて置き換える	df.replace(ValueMap)
データフレームをValueMapでまとめて置換する	df.replace(ValueMap)
データフレームのリストカラムの値をValueMapでまとめて置き換える	df[aList].replace(ValueMap)
一度にデータフレームのリスト列をValueMapで置き換える	df[aList].replace(ValueMap)
データフレームのリストカラムをValueMapでまとめて置き換える	df[aList].replace(ValueMap)
データフレームのリストカラムの値をValueMapで一度に置き換える	df[aList].replace(ValueMap)
データフレームのリスト列をValueMapで置換する	df[aList].replace(ValueMap)
データフレームのリスト列の値をValueMapでまとめて変更する	df[aList].replace(ValueMap)
データ列の値をValueMapでまとめて置き換える	ds.replace(ValueMap)
カラムをValueMapでまとめて置き換える	ds.replace(ValueMap)
ValueMapでデータ列を一度に置き換える	ds.replace(ValueMap)
データ列の値をValueMapで一度に置換する	ds.replace(ValueMap)
ValueMapでカラムを一度に置き換える	ds.replace(ValueMap)
データ列の値をValueMapで置き換える	ds.replace(ValueMap)
データフレームのカラムの値をValueMapでまとめて置き換える	df[col].replace(ValueMap)
一度にデータフレームのカラムをValueMapで置き換える	df[col].replace(ValueMap)
データフレームの列の値をValueMapで置換する	df[col].replace(ValueMap)
まとめてデータフレームのカラムの値をValueMapで置き換える	df[col].replace(ValueMap)
データフレームのカラムをValueMapで一度に置換する	df[col].replace(ValueMap)
データフレームのカラムをValueMapでまとめて置き換える	df[col].replace(ValueMap)
データフレームの値を正規表現patternでまとめてreplに置き換える	df.replace(pattern, repl, regex=True)
まとめてreplにデータフレームの値を正規表現patternで置き換える	df.replace(pattern, repl, regex=True)
正規表現patternでデータフレームを一度に置き換える	df.replace(pattern, repl, regex=True)
正規表現patternでデータフレームの値をreplにまとめて置き換える	df.replace(pattern, repl, regex=True)
データフレームの値を正規表現でまとめてreplに置換する	df.replace(pattern, repl, regex=True)
データフレームの値を正規表現patternでまとめてreplに置換する	df.replace(pattern, repl, regex=True)
データフレームのリストカラムの値を正規表現patternでまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
データフレームのリストカラムの値を正規表現でまとめてreplに置き換える	df[aList].replace(pattern, repl, regex=True)
データフレームのリスト列の値を正規表現patternでreplにまとめて置換する	df[aList].replace(pattern, repl, regex=True)
データフレームのリストカラムを正規表現patternで置き換える	df[aList].replace(pattern, repl, regex=True)
まとめて正規表現でデータフレームのリストカラムを置き換える	df[aList].replace(pattern, repl, regex=True)
データフレームのリスト列の値を正規表現patternでまとめてreplに置換する	df[aList].replace(pattern, repl, regex=True)
データ列の値を正規表現patternでまとめてreplに置き換える	ds.replace(pattern, repl, regex=True)
列の値をreplにまとめて正規表現patternで置き換える	ds.replace(pattern, repl, regex=True)
データ列の値をまとめて正規表現patternで置き換える	ds.replace(pattern, repl, regex=True)
replにまとめてカラムの値を正規表現patternで置換する	ds.replace(pattern, repl, regex=True)
データ列の値を正規表現でまとめてreplに置換する	ds.replace(pattern, repl, regex=True)
データ列の値をreplに正規表現patternでまとめて変更する	ds.replace(pattern, repl, regex=True)
データ列の値を正規表現patternで一度にreplに置き換える	ds.replace(pattern, repl, regex=True)
データフレームのカラムの値を正規表現patternでまとめてreplに置き換える	df[col].replace(pattern, repl, regex=True)
replにデータフレームのカラムをまとめて正規表現で置き換える	df[col].replace(pattern, repl, regex=True)
データフレームのカラムの値を正規表現でまとめて置き換える	df[col].replace(pattern, repl, regex=True)
一度に正規表現patternでデータフレームのカラムの値をreplに置換する	df[col].replace(pattern, repl, regex=True)
データフレームのカラムの値を正規表現patternでまとめて置き換える	df[col].replace(pattern, repl, regex=True)
データフレームの列の値を正規表現patternでまとめてreplに置き換える	df[col].replace(pattern, repl, regex=True)
データフレームの列を正規表現patternでまとめてreplに置換する	df[col].replace(pattern, repl, regex=True)
データフレームの値が欠損値か調べる	df.isna()
データフレームの値は未入力値か調べる	df.isna()
データフレームの値がNaNか調べる	df.isna()
データフレームの値は欠損値か調べる	df.isna()
データフレームの値が欠損値かどうか調べる	df.isna()
データフレームの値はNaNか確認する	df.isna()
データフレームのリストカラムの値が欠損値か調べる	df[aList].isna()
データフレームのリストカラムの値が欠損値	df[aList].isna()
データフレームのリストカラムの値が欠損値か判定する	df[aList].isna()
データフレームのリストカラムの値がNaNか調べる	df[aList].isna()
データフレームのリストカラムの値が欠損値か	df[aList].isna()
データフレームのリストカラムの値は欠損値か	df[aList].isna()
データ列の値が欠損値か調べる	ds.isna()
データ列の値がNaNかどうか調べる	ds.isna()
カラムの値は未入力値か	ds.isna()
カラムの値が未入力値か調べる	ds.isna()
カラムの値が欠損値	ds.isna()
データ列の値がNaNか調べる	ds.isna()
データフレームのカラムの値が欠損値か調べる	df[col].isna()
データフレームのカラムの値が欠損値か	df[col].isna()
データフレームの列の値はNaN	df[col].isna()
データフレームのカラムの値が未入力値	df[col].isna()
データフレームのカラムの値は欠損値かどうか調べる	df[col].isna()
データフレームの列の値が未入力値かどうか調べる	df[col].isna()
データフレームの中の欠損値の合計を数える	df.isna().sum()
データフレームの中の未入力値の個数を数える	df.isna().sum()
データフレームの中にいくつ欠損値があるか数える	df.isna().sum()
データフレームの中にいくつ欠損値が含まれるか数える	df.isna().sum()
データフレームの中にいくつ欠損値が存在するかカウントする	df.isna().sum()
データフレームのリストカラムの中の欠損値の合計を数える	df[aList].isna().sum()
データフレームのリストカラムの中のNaNの合計を数える	df[aList].isna().sum()
データフレームのリスト列の中の欠損値の合計を数える	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ欠損値があるか数える	df[aList].isna().sum()
データフレームのリストカラムの中にいくつNaNが存在するか数える	df[aList].isna().sum()
データフレームのリスト列の中にいくつ未入力値が存在するか求める	df[aList].isna().sum()
データフレームのリスト列の中にいくつ未入力値が含まれるか求める	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ欠損値があるか求める	df[aList].isna().sum()
データフレームのリストカラムの中にいくつ欠損値が存在するか求める	df[aList].isna().sum()
データ列の中の欠損値の合計を数える	ds.isna().sum()
データ列の中のNaNの合計を数える	ds.isna().sum()
カラムの中の欠損値の数をカウントする	ds.isna().sum()
データ列の中の未入力値の合計を数える	ds.isna().sum()
データ列の中にいくつ欠損値があるか数える	ds.isna().sum()
データ列の中にいくつNaNがあるか数える	ds.isna().sum()
カラムの中にいくつ欠損値があるか数える	ds.isna().sum()
データ列の中にいくつ欠損値が存在するか数える	ds.isna().sum()
データフレームのカラムの中の欠損値の合計を数える	df[col].isna().sum()
データフレームのカラムの中の未入力値の数を数える	df[col].isna().sum()
データフレームの列の中の未入力値の合計を数える	df[col].isna().sum()
データフレームの列の中の欠損値の合計を数える	df[col].isna().sum()
データフレームのカラムの中にいくつ欠損値があるか数える	df[col].isna().sum()
データフレームのカラムの中にいくつ欠損値があるかカウントする	df[col].isna().sum()
データフレームの列の中にいくつ欠損値があるかカウントする	df[col].isna().sum()
データフレームの列の中にいくつ欠損値があるか求める	df[col].isna().sum()
データフレームの中に文字列があるか調べる	df.isin([value])
データフレームの中に日付データがある	df.isin([value])
データフレームの中に文字列が含まれるかどうか判定する	df.isin([value])
データフレームの中に日付データが含まれるか調べる	df.isin([value])
データフレームの中に日付データが存在する	df.isin([value])
データフレームのリストカラムの中に文字列があるか調べる	df[aList].isin([value])
データフレームのリスト列の中にがあるか	df[aList].isin([value])
データフレームのリストカラムの中に文字列が含まれるか調べる	df[aList].isin([value])
データフレームのリストカラムの中に日付データが存在する	df[aList].isin([value])
データフレームのリスト列の中に日付データがあるかどうかテストする	df[aList].isin([value])
データフレームのリスト列の中に文字列があるかどうか調べる	df[aList].isin([value])
データ列の中に文字列があるか調べる	ds.isin([value])
データ列の中にが含まれるかどうか調べる	ds.isin([value])
データ列の中に文字列があるかどうか調べる	ds.isin([value])
列の中に文字列が存在するか	ds.isin([value])
データ列の中に文字列が存在するかどうか確認する	ds.isin([value])
データフレームのカラムの中に文字列があるか調べる	df[col].isin([value])
データフレームの列の中に文字列があるか調べる	df[col].isin([value])
データフレームの列の中にがあるか確認する	df[col].isin([value])
データフレームのカラムの中に文字列がある	df[col].isin([value])
データフレームの列の中に日付データがあるか調べる	df[col].isin([value])
データフレームのカラムの中にがある	df[col].isin([value])
データフレームの中にある文字列の合計を数える	df.isin([value]).sum()
データフレームの中にある文字列の個数を求める	df.isin([value]).sum()
データフレームの中にある文字列の数をカウントする	df.isin([value]).sum()
データフレームの中に存在する文字列の合計をカウントする	df.isin([value]).sum()
データフレームの中にあるの合計を数える	df.isin([value]).sum()
データフレームの中にいくつ文字列があるか数える	df.isin([value]).sum()
データフレームの中にいくつ文字列があるか求める	df.isin([value]).sum()
データフレームの中にいくつがあるか数える	df.isin([value]).sum()
データフレームの中にいくつ文字列が含まれるかカウントする	df.isin([value]).sum()
データフレームのリストカラムの中にある文字列の合計を数える	df[aList].isin([value]).sum()
データフレームのリスト列の中にある文字列の合計をカウントする	df[aList].isin([value]).sum()
データフレームのリストカラムの中にある日付データの合計を求める	df[aList].isin([value]).sum()
データフレームのリストカラムの中にある文字列の合計を求める	df[aList].isin([value]).sum()
データフレームのリスト列の中にある文字列の合計を数える	df[aList].isin([value]).sum()
データフレームのリストカラムの中に存在する文字列の個数を求める	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつ文字列があるか数える	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつがあるかカウントする	df[aList].isin([value]).sum()
データフレームのリストカラムの中にいくつ日付データが存在するか数える	df[aList].isin([value]).sum()
データフレームのリスト列の中にいくつ日付データがあるか求める	df[aList].isin([value]).sum()
データフレームのリスト列の中にいくつ文字列があるか数える	df[aList].isin([value]).sum()
データ列の中にある文字列の合計を数える	ds.isin([value]).sum()
データ列の中にある日付データの合計を求める	ds.isin([value]).sum()
データ列の中にある日付データの数を数える	ds.isin([value]).sum()
カラムの中にあるの合計を求める	ds.isin([value]).sum()
データ列の中に含まれる文字列の合計を求める	ds.isin([value]).sum()
カラムの中にあるの合計をカウントする	ds.isin([value]).sum()
カラムの中に存在する文字列の合計を数える	ds.isin([value]).sum()
データ列の中にいくつ文字列があるか数える	ds.isin([value]).sum()
列の中にいくつ文字列が存在するかカウントする	ds.isin([value]).sum()
データ列の中にいくつが存在するか求める	ds.isin([value]).sum()
データ列の中にいくつ文字列が存在するか数える	ds.isin([value]).sum()
データ列の中にいくつが含まれるかカウントする	ds.isin([value]).sum()
データ列の中にいくつ日付データがあるか数える	ds.isin([value]).sum()
データフレームのカラムの中にある文字列の合計を数える	df[col].isin([value]).sum()
データフレームのカラムの中にある文字列の数を数える	df[col].isin([value]).sum()
データフレームのカラムの中にあるの合計を数える	df[col].isin([value]).sum()
データフレームの列の中にある文字列の合計を数える	df[col].isin([value]).sum()
データフレームのカラムの中にある文字列の個数を求める	df[col].isin([value]).sum()
データフレームの列の中に含まれる文字列の合計を数える	df[col].isin([value]).sum()
データフレームの列の中にある文字列の合計をカウントする	df[col].isin([value]).sum()
データフレームのカラムの中にいくつ文字列があるか数える	df[col].isin([value]).sum()
データフレームの列の中にいくつがあるか数える	df[col].isin([value]).sum()
データフレームの列の中にいくつ文字列があるか数える	df[col].isin([value]).sum()
データフレームのカラムの中にいくつが存在するか数える	df[col].isin([value]).sum()
データフレームの中に文字列と文字列があるか調べる	df.isin([value, value2])
データフレームの中に文字列と文字列が存在するか調べる	df.isin([value, value2])
データフレームの中に文字列と日付データがある	df.isin([value, value2])
データフレームの中に日付データと文字列があるかどうか確認する	df.isin([value, value2])
データフレームの中に文字列とが存在するか調べる	df.isin([value, value2])
データフレームの中に文字列と日付データがあるか調べる	df.isin([value, value2])
データフレームの中に文字列と文字列があるかどうか調べる	df.isin([value, value2])
データフレームのリストカラムの中に文字列と文字列があるか調べる	df[aList].isin([value, value2])
データフレームのリストカラムの中に文字列と文字列が存在する	df[aList].isin([value, value2])
データフレームのリストカラムの中に文字列とが含まれるか確認する	df[aList].isin([value, value2])
データフレームのリストカラムの中に文字列と文字列があるかどうか調べる	df[aList].isin([value, value2])
データフレームのリスト列の中に文字列と文字列があるか	df[aList].isin([value, value2])
データフレームのリスト列の中にと文字列があるか判定する	df[aList].isin([value, value2])
データ列の中に文字列と文字列があるか調べる	ds.isin([value, value2])
データ列の中に日付データと日付データが存在するか調べる	ds.isin([value, value2])
データ列の中に文字列と文字列が存在するか調べる	ds.isin([value, value2])
データ列の中に文字列とがある	ds.isin([value, value2])
カラムの中に文字列と文字列があるか調べる	ds.isin([value, value2])
データ列の中に文字列と日付データが含まれるか調べる	ds.isin([value, value2])
データフレームのカラムの中に文字列と文字列があるか調べる	df[col].isin([value, value2])
データフレームのカラムの中に文字列と文字列があるか	df[col].isin([value, value2])
データフレームのカラムの中に文字列と日付データがある	df[col].isin([value, value2])
データフレームのカラムの中に文字列とがあるか	df[col].isin([value, value2])
データフレームの列の中に文字列と文字列があるか	df[col].isin([value, value2])
データフレームのカラムの中に文字列と文字列があるか判定する	df[col].isin([value, value2])
データフレームの中にある文字列と文字列の合計を数える	df.isin([value, value2]).sum()
データフレームの中に存在する文字列と日付データの合計を数える	df.isin([value, value2]).sum()
データフレームの中に含まれる文字列と日付データの合計を数える	df.isin([value, value2]).sum()
データフレームの中にある文字列と日付データの合計を数える	df.isin([value, value2]).sum()
データフレームの中に存在すると文字列の数を数える	df.isin([value, value2]).sum()
データフレームの中にある文字列と文字列の数を数える	df.isin([value, value2]).sum()
データフレームの中に存在する文字列と文字列の数を数える	df.isin([value, value2]).sum()
データフレームの中に文字列と文字列がいくつあるか数える	df.isin([value, value2]).sum()
データフレームの中に文字列と文字列がいくつ含まれるか求める	df.isin([value, value2]).sum()
データフレームの中に文字列と日付データがいくつ存在するか数える	df.isin([value, value2]).sum()
データフレームの中に文字列と文字列がいくつ存在するか数える	df.isin([value, value2]).sum()
データフレームの中にとがいくつあるか数える	df.isin([value, value2]).sum()
データフレームのリストカラムの中にある文字列と文字列の合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に存在する文字列との合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中にある文字列と文字列の合計をカウントする	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中にある文字列と文字列の個数を数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中にあるとの合計を数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に存在する文字列と文字列の合計をカウントする	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に文字列と文字列がいくつあるか数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に日付データと文字列がいくつあるか数える	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に文字列と文字列がいくつ存在するかカウントする	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に日付データとがいくつあるか数える	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に文字列と文字列がいくつあるかカウントする	df[aList].isin([value, value2]).sum()
データフレームのリスト列の中に文字列と日付データがいくつあるかカウントする	df[aList].isin([value, value2]).sum()
データフレームのリストカラムの中に文字列と文字列がいくつ含まれるか数える	df[aList].isin([value, value2]).sum()
データ列の中にある文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
データ列の中にある文字列と日付データの合計を求める	ds.isin([value, value2]).sum()
データ列の中に含まれる文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
データ列の中に存在すると日付データの数をカウントする	ds.isin([value, value2]).sum()
データ列の中に存在する文字列と日付データの合計を数える	ds.isin([value, value2]).sum()
データ列の中に存在する文字列と文字列の合計を数える	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつあるか数える	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつ存在するか数える	ds.isin([value, value2]).sum()
データ列の中に文字列と文字列がいくつあるかカウントする	ds.isin([value, value2]).sum()
データ列の中に日付データと日付データがいくつ含まれるか求める	ds.isin([value, value2]).sum()
データフレームのカラムの中にある文字列と文字列の合計を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中にある文字列との数を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に含まれる文字列との合計を数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中にあると文字列の合計をカウントする	df[col].isin([value, value2]).sum()
データフレームのカラムの中にある文字列と日付データの個数をカウントする	df[col].isin([value, value2]).sum()
データフレームのカラムの中に文字列と文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
データフレームのカラムの中に日付データと文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
データフレームの列の中に日付データとがいくつあるかカウントする	df[col].isin([value, value2]).sum()
データフレームのカラムの中に文字列と日付データがいくつ含まれるか求める	df[col].isin([value, value2]).sum()
データフレームのカラムの中にと日付データがいくつ存在するかカウントする	df[col].isin([value, value2]).sum()
データフレームの列の中に文字列と文字列がいくつあるかカウントする	df[col].isin([value, value2]).sum()
データフレームの列の中に文字列と文字列がいくつあるか数える	df[col].isin([value, value2]).sum()
二つのデータフレームを縦方向に連結する	pd.concat([df, df2])
2つのデータフレームを縦方向に連結する	pd.concat([df, df2])
２つのデータフレームを縦方向に連結する	pd.concat([df, df2])
二つのデータフレームを縦方向に合体させる	pd.concat([df, df2])
二つのデータフレームを縦方向に連結する	pd.concat([df, df2], axis=0)
二つのデータフレームを縦に連結する	pd.concat([df, df2], axis=0)
二つの表を縦向きに連結する	pd.concat([df, df2], axis=0)
二つのデータフレームを縦方向につなぐ	pd.concat([df, df2], axis=0)
縦方向に二つのデータフレームをくっつける	pd.concat([df, df2], axis=0)
二つのデータフレームを横方向に連結する	pd.concat([df, df2], axis=1)
2つのデータフレームを横方向に合体させる	pd.concat([df, df2], axis=1)
2つのデータフレームを横向きに連結する	pd.concat([df, df2], axis=1)
二つのデータフレームを横向きにつなぐ	pd.concat([df, df2], axis=1)
三つのデータフレームを縦方向に連結する	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを縦に連結する	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを縦に合体させる	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを縦方向にくっつける	pd.concat([df, df2, df3], axis=0)
複数のデータフレームを縦方向にくっつける	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを縦方向に合体させる	pd.concat([df, df2, df3], axis=0)
三つのデータフレームを横方向に連結する	pd.concat([df, df2, df3], axis=1)
複数のデータフレームを横向きに連結する	pd.concat([df, df2, df3], axis=1)
三つのデータフレームを横向きに連結する	pd.concat([df, df2, df3], axis=1)
複数のデータフレームを横方向に合体させる	pd.concat([df, df2, df3], axis=1)
横方向に複数のデータフレームを連結する	pd.concat([df, df2, df3], axis=1)
横方向に3つのデータフレームを連結する	pd.concat([df, df2, df3], axis=1)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を横方向に一つにまとめる	pd.concat([df, ds], axis=1)
データフレームとデータ列を横向きにくっつける	pd.concat([df, ds], axis=1)
データフレームとデータ列を連結する	pd.concat([df, ds], axis=1)
データフレームとデータ列を横向きに連結する	pd.concat([df, ds], axis=1)
データフレームとデータ列を横方向に連結する	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を連結する	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を横方向に連結する	pd.concat([df, ds], axis=1)
表データとデータフレームの列を横方向にくっつける	pd.concat([df, ds], axis=1)
データフレームとデータフレームの列を横方向に一つにする	pd.concat([df, ds], axis=1)
データフレームとデータ列を横方向に一つにする	pd.concat([df, ds], axis=1)
データフレームから最初の列を除く	df[df.columns[1:]]
データフレームから一番左側の列を除く	df[df.columns[1:]]
データフレームから先頭の列を除く	df[df.columns[1:]]
最初の列をデータフレームから除く	df[df.columns[1:]]
先頭の列をデータフレームから消す	df[df.columns[1:]]
データフレームから最後の列を除く	df[df.columns[:-1]]
末尾の列をデータフレームから除く	df[df.columns[:-1]]
データフレームから末尾の列を除く	df[df.columns[:-1]]
データフレームから最後の列を消す	df[df.columns[:-1]]
データフレームから末尾の列を消す	df[df.columns[:-1]]
データフレームからn番目の列を除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
表からn番目の列を除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
n番目の列を表から除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
n番目のカラムをデータフレームから除く	pd.concat([df[df.columns[:n]], df[df.columns[n+1:]]], axis=1)
二つのデータフレームを横方向にマージする	pd.merge(df, df2)
横方向に２つのデータフレームを合体させる	pd.merge(df, df2)
２つのデータフレームを横向きにマージする	pd.merge(df, df2)
２つのデータフレームを横方向に合体させる	pd.merge(df, df2)
二つのデータフレームを横方向に一つにする	pd.merge(df, df2)
二つのデータフレームを結合する	pd.merge(df, df2)
２つのデータフレームをジョインする	pd.merge(df, df2)
列をキーにして二つのデータフレームを結合する	pd.merge(df, df2, on=column)
列をキーにして2つのデータフレームをジョインする	pd.merge(df, df2, on=column)
二つのデータフレームを列をキーにして結合する	pd.merge(df, df2, on=column)
列をキーにして二つのデータフレームをジョインする	pd.merge(df, df2, on=column)
列をキーとして二つのデータフレームを結合する	pd.merge(df, df2, on=column)
列'A'と列'B'をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
列'A'と列'B'をキーにして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
列'A'と列'B'をキーにして二つのデータフレームをジョインする	pd.merge(df, df2, left_on='A', right_on='B')
列'A'と列'B'をキーとして2つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
異なる列をキーとして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
異なる列をキーにして２つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
異なる列をキーにして二つのデータフレームを結合する	pd.merge(df, df2, left_on='A', right_on='B')
２つのデータフレームを異なる列をキーにして結合する	pd.merge(df, df2, left_on='A', right_on='B')
異なる列をキーとして二つの表データを結合する	pd.merge(df, df2, left_on='A', right_on='B')
二つのデータフレームを異なる列をキーとしてジョインする	pd.merge(df, df2, left_on='A', right_on='B')
列をキーにして二つのデータフレームを外部結合する	pd.merge(df, df2, on=column, how='outer')
列をキーとして二つのデータフレームを全ジョインする	pd.merge(df, df2, on=column, how='outer')
2つのデータフレームを列をキーにして外部結合する	pd.merge(df, df2, on=column, how='outer')
列をキーにして二つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
二つのデータフレームを列をキーにして左結合する	pd.merge(df, df2, on=column, how='left')
列をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
列をキーにして２つのデータフレームを左結合する	pd.merge(df, df2, on=column, how='left')
列をキーにして二つのデータフレームを左ジョインする	pd.merge(df, df2, on=column, how='left')
列をキーにして二つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
二つのデータフレームを列をキーにして右ジョインする	pd.merge(df, df2, on=column, how='right')
列をキーにして二つのデータフレームを右ジョインする	pd.merge(df, df2, on=column, how='right')
２つのデータフレームを列をキーにして右結合する	pd.merge(df, df2, on=column, how='right')
カラムをキーにして二つのデータフレームを右結合する	pd.merge(df, df2, on=column, how='right')
列をキーにして二つのデータフレームを内部結合する	pd.merge(df, df2, on=column, how='inner')
列をキーにして２つのデータフレームを内部結合する	pd.merge(df, df2, on=column, how='inner')
列をキーにして２つのデータフレームを内部ジョインする	pd.merge(df, df2, on=column, how='inner')
列をキーにして2つのデータフレームを内部ジョインする	pd.merge(df, df2, on=column, how='inner')
列'A'と列'B'をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
２つのデータフレームを列'A'と列'B'をキーとして全ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
２つのデータフレームを列'A'と列'B'をキーとして外部ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
列'A'と列'B'をキーにして二つのデータフレームを全結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
異なる列をキーとして二つのデータフレームを外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
二つのデータフレームを異なる列をキーにして外部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
異なる列をキーとして二つのデータフレームを全結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
二つの表データを異なるカラムをキーにして全結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='outer')
列'A'と列'B'をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
二つのデータフレームを列'A'と列'B'をキーにして左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
列'A'と列'B'をキーとして二つのデータフレームを左ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーとして二つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーとして２つのデータフレームを左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
２つのデータフレームを異なる列をキーとして左結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
異なる列をキーとして二つのデータフレームを左ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='left')
列'A'と列'B'をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
列'A'と列'B'をキーとして二つのデータフレームを右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
列'A'と列'B'をキーとして2つのデータフレームを右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
2つのデータフレームを列'A'と列'B'をキーとして右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なるカラムをキーとして２つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なる列をキーとして２つのデータフレームを右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
異なるカラムをキーとして二つのデータフレームを右結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
二つのデータフレームを異なる列をキーとして右ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='right')
列'A'と列'B'をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
列'A'と列'B'をキーとして2つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
列'A'と列'B'をキーとして2つのデータフレームを内部ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
列'A'と列'B'をキーにして２つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーとして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
二つのデータフレームを異なる列をキーとして内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーにして二つのデータフレームを内部ジョインする	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なるカラムをキーとして２つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
異なる列をキーにして二つのデータフレームを内部結合する	pd.merge(df, df2, left_on=column, right_on=column2, how='inner')
データフレームのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)
データフレームのカテゴリデータをワンホット・ベクトルに変換する	pd.get_dummies(df)
データフレームの列をダミー変数に変換する	pd.get_dummies(df[column])
データフレームの列をワンホット・ベクトルに変換する	pd.get_dummies(df[column])
データフレームの列をワンホット・ベクトルにする	pd.get_dummies(df[column])
イテラブルをダミー変数に変換する	pd.get_dummies(iterable)
列をワンホット・ベクトルに変換する	pd.get_dummies(iterable)
シーケンスをダミー変数に変換する	pd.get_dummies(iterable)
イテラブルをワンホット・ベクトルに変換する	pd.get_dummies(iterable)
イテラブルをダミー変数にする	pd.get_dummies(iterable)
最初のカテゴリーを除外してデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
データフレームの列を最初のカテゴリーを除外してダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを除外してデータフレームの列をダミー変数にする	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを無視してデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], drop_first=True)
最初のカテゴリーを除いてデータフレームの列をワンホット・ベクトルに変換する	pd.get_dummies(df[column], drop_first=True)
NaNも加えてデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
NaNも加えてデータフレームの列をダミー変数にする	pd.get_dummies(df[column], dummy_na=True)
欠損値も加えてデータフレームの列をワンホット・ベクトルにする	pd.get_dummies(df[column], dummy_na=True)
欠損値も加えてデータフレームの列をダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
データフレームの列をNaNも加えてワンホット・ベクトルに変換する	pd.get_dummies(df[column], dummy_na=True)
データフレームの列をNaNも加えてダミー変数に変換する	pd.get_dummies(df[column], dummy_na=True)
データフレームを使う	import pandas as pd
データフレームを用いる	import pandas as pd
データフレームをインポートする	import pandas as pd
データフレームを見る	df.head()
データフレームの先頭	df.head()
表の最初を見る	df.head()
データフレームの先頭n行	df.head(n)
データフレームの最初n行	df.head(n)
データフレームの上n行を抽出する	df.head(n)
データフレームの先頭n行	df.head(n)
表の最初n行	df.head(n)
データフレームの先頭n行を見る	df.head(n)
データフレームの先頭n行を確認する	df.head(n)
データフレームの末尾	df.tail()
データフレームの最後	df.tail()
データフレームの最後を見る	df.tail()
データフレームの末尾n行を抽出する	df.tail(n)
データフレームの下n行を取り出す	df.tail(n)
データフレームの最後n行を選択する	df.tail(n)
データフレームの下n行を抽出する	df.tail(n)
データフレームの最後n行を抽出する	df.tail(n)
データフレームの末尾n行を取り出す	df.tail(n)
データフレームからランダムに抽出する	df.sample()
データフレームからランダムに選択する	df.sample()
データフレームからランダムに一行を抽出する	df.sample()
データフレームをサンプリングする	df.sample()
データフレームからランダムにn行を抽出する	df.sample(n)
n行をランダムにデータフレームから取り出す	df.sample(n)
データフレームからランダムにn行を取り出す	df.sample(n)
データフレームからn行をランダムに取り出す	df.sample(n)
データフレームからn行、サンプリングする	df.sample(n)
データフレームからn行、ランダムサンプリングする	df.sample(n)
データフレームから重複ありでランダムにn行をサンプリングする	df.sample(n, replace=True)
n行を重複ありでデータフレームからランダムにサンプリングする	df.sample(n, replace=True)
重複ありでn行をデータフレームからランダムにサンプリングする	df.sample(n, replace=True)
ランダムにデータフレームからn行を重複ありでサンプリングする	df.sample(n, replace=True)
データフレームの行を範囲指定して抽出する	df[start:end]
データフレームの行を選択する	df[start:end]
データフレームの行を範囲指定して選ぶ	df[start:end]
データフレームの行を範囲指定して取り出す	df[start:end]
データフレームの行を抽出する	df[start:end]
データフレームのstart行目からend行目まで抽出する	df[start:end]
データフレームのstart行目からend行目までを抽出する	df[start:end]
データフレームのstart行目からend行目まで選択する	df[start:end]
データフレームのn行以降抽出する	df[n:]
データフレームのn行目より後ろを抽出する	df[n:]
データフレームのn行以降選ぶ	df[n:]
データフレームのn行より後ろ抽出する	df[n:]
データフレームのn行目以降を取り出す	df[n:]
データフレームのn行目以降抽出する	df[n:]
データフレームのn行まで抽出する	df[:n]
データフレームのn行まで取り出す	df[:n]
データフレームのn行目より前抽出する	df[:n]
データフレームのn行までを抽出する	df[:n]
表データのn行までを抽出する	df[:n]
データフレームの指定された列を抽出する	df[column]
データフレームの指定した列	df[column]
データフレームの指定した列を選択する	df[column]
データフレームの指定された列を配列に変換する	df[column].values
データフレームの指定された列を配列にする	df[column].values
列を配列に変換する	df[column].values
データフレームの指定された列を配列として抽出する	df[column].values
データフレームの指定された列を配列として取り出す	df[column].values
配列として列を抽出する	df[column].values
データフレームの指定された列を配列として選ぶ	df[column].values
データフレームの指定された列をリストに変換する	df[column].values.tolist()
データフレームの指定された列をリストにする	df[column].values.tolist()
データフレームの指定した列をリストに変換する	df[column].values.tolist()
データフレームの指定された列をリストとして抽出する	df[column].values.tolist()
リストとして表データの指定された列を抽出する	df[column].values.tolist()
リストとしてデータフレームの指定された列を抽出する	df[column].values.tolist()
リストとしてデータフレームの指定された列を選択する	df[column].values.tolist()
列をリストとして抽出する	df[column].values.tolist()
データフレームから列を一つ選択する	df[[column]]
データフレームから列を1つ選択する	df[[column]]
データフレームから列を１つのみ選択する	df[[column]]
表から列を一つ選択する	df[[column]]
データフレームから指定された列を抽出する	df[[column]]
データフレームから指定された列だけ抽出する	df[[column]]
データフレームから列を二つ選択する	df[[column, column2]]
データフレームから列を二つだけ選択する	df[[column, column2]]
データフレームから列を2つ選択する	df[[column, column2]]
データフレームから列を２つ選択する	df[[column, column2]]
データフレームから指定された二つの列を抽出する	df[[column, column2]]
データフレームから指定された二列を取り出す	df[[column, column2]]
データフレームから指定された２つの列を抽出する	df[[column, column2]]
データフレームから指定された二つの列を取り出す	df[[column, column2]]
データフレームから指定された二つの列のみ抽出する	df[[column, column2]]
データフレームから指定された２列を抽出する	df[[column, column2]]
データフレームの指定された２つの列を抽出する	df[[column, column2]]
データフレームから列を三つ選択する	df[[column, column2, column3]]
データフレームから列を三つだけ選択する	df[[column, column2, column3]]
表データからカラムを三つのみ選択する	df[[column, column2, column3]]
データフレームから列を３つ選択する	df[[column, column2, column3]]
データフレームから列を3つ選択する	df[[column, column2, column3]]
データフレームから指定された三つの列を抽出する	df[[column, column2, column3]]
データフレームから指定した三つの列を抽出する	df[[column, column2, column3]]
データフレームの指定された三つの列のみ選択する	df[[column, column2, column3]]
データフレームから指定された三つの列だけ取り出す	df[[column, column2, column3]]
表から指定された三つの列を取り出す	df[[column, column2, column3]]
データフレームから指定された三つの列を取り出す	df[[column, column2, column3]]
データフレームから列を４つ選択する	df[[column, column2, column3, column4]]
データフレームからカラムを４つ選択する	df[[column, column2, column3, column4]]
データフレームから列を４つだけ選択する	df[[column, column2, column3, column4]]
データフレームから指定された４つの列を抽出する	df[[column, column2, column3, column4]]
データフレームから指定された４列だけ選択する	df[[column, column2, column3, column4]]
データフレームの指定された４つの列だけ抽出する	df[[column, column2, column3, column4]]
データフレームから指定された４つの列を取り出す	df[[column, column2, column3, column4]]
データフレームから指定された４つの列を選ぶ	df[[column, column2, column3, column4]]
データフレームから列名を複数指定して選択する	df[columns]
データフレームの指定された列の名前一覧の列を抽出する	df[columns]
データフレームの指定された列名一覧の列のみ選択する	df[columns]
データフレームの指定された列名一覧の列だけ抽出する	df[columns]
データフレームの指定された名前リストの列だけ選択する	df[columns]
データフレームから指定された名前リストの列を取り出す	df[columns]
データフレームの指定された列名リストの列を抽出する	df[columns]
データフレームのn行目を抽出する	df.loc[n]
データフレームのインデックスがnの行を抽出する	df.loc[n]
データフレームのインデックスがnの行を取り出す	df.loc[n]
データフレームの行がnの行を取り出す	df.loc[n]
データフレームのインデックスがnの行を選択する	df.loc[n]
データフレームの列の一覧	df.info()
データフレームの列一覧	df.info()
データフレームの列の種類	df.info()
データフレームのカラムの種類	df.info()
データフレームの列の名前の一覧を使う	df.columns
データフレームのカラムの名前の一覧を使う	df.columns
列名の一覧を使う	df.columns
データフレームの列名の一覧を求める	df.columns
カラムの名前の一覧を見る	df.columns
列の名前の一覧を見る	df.columns
データフレームの列の名前を列挙する	df.columns
表の列の名前を列挙する	df.columns
データフレームの列名を指定された列の名前一覧に置き換える	df.columns = columns
列名を指定された列の名前一覧に置き換える	df.columns = columns
データフレームのカラム名を指定されたカラムの名前一覧に置き換える	df.columns = columns
データフレームの列名を指定した列の名前一覧に置き換える	df.columns = columns
列名を指定された名前リストに置き換える	df.columns = columns
データフレームからカテゴリデータの列名の一覧を使う	df.select_dtypes('object').columns
表からカテゴリデータの列名一覧	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名の一覧	df.select_dtypes('object').columns
表データからカテゴリデータの列名一覧を使う	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名の一覧を見る	df.select_dtypes('object').columns
データフレームからカテゴリデータの列名を列挙する	df.select_dtypes('object').columns
データフレームから指定されたデータ型の列名の一覧	df.select_dtypes(型).columns
データフレームから指定されたデータ型の列名のリストを見る	df.select_dtypes(型).columns
データフレームから指定されたデータ型のカラム名の一覧	df.select_dtypes(型).columns
データフレームから指定されたデータ型のカラム名一覧	df.select_dtypes(型).columns
データフレームの指定されたデータ型の列名を列挙する	df.select_dtypes(型).columns
列名の一覧をデータ型でフィルタする	df.select_dtypes(型).columns
カラム名の一覧をデータ型でフィルタする	df.select_dtypes(型).columns
データフレームのインデックスの一覧	df.index
データフレームのインデックスの名前の一覧	df.index
データフレームのインデックスの一覧を使う	df.index
データフレームのインデックスの一覧を求める	df.index
表データのインデックスの一覧	df.index
データフレームを配列に変換する	df.values
表を配列に変換する	df.values
データフレームのデータ型の一覧	df.dtypes
表のデータ型の一覧	df.dtypes
データフレームのデータ型リスト	df.dtypes
データフレームのデータ型リストを使う	df.dtypes
データフレームから型リストで指定されたデータ型の列を抽出する	df.select_dtypes(include=typeList)
データフレームから型リストデータ型の列のみ抽出する	df.select_dtypes(include=typeList)
データフレームから型リストデータ型の列を抽出する	df.select_dtypes(include=typeList)
表データから型リストで指定されたデータ型のカラムを抽出する	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型のカラムを抽出する	df.select_dtypes(include=typeList)
データフレームから型リストで指定したデータ型のカラムだけ選択する	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型の列だけ選択する	df.select_dtypes(include=typeList)
データフレームから型リストで指定されたデータ型の列を除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストのデータ型の列のみ除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストで指定したデータ型の列のみ除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストのデータ型のカラムのみ除外する	df.select_dtypes(exclude=typeList)
データフレームから型リストで指定したデータ型の列を除外する	df.select_dtypes(exclude=typeList)
データフレームからカテゴリデータの列を抽出する	df.select_dtypes('object')
データフレームからカテゴリデータの列だけ取り出す	df.select_dtypes('object')
データフレームからカテゴリデータの列を取り出す	df.select_dtypes('object')
データフレームからカテゴリデータを抽出する	df.select_dtypes('object')
データフレームから数値データの列を抽出する	df.select_dtypes('number')
データフレームから数値データを抽出する	df.select_dtypes('number')
データフレームから数値データのカラムを抽出する	df.select_dtypes('number')
データフレームから数値データのカラムのみ抽出する	df.select_dtypes('number')
データフレームから数値データのカラムを取り出す	df.select_dtypes('number')
データフレームから数値データを選ぶ	df.select_dtypes('number')
データフレームから型の列を抽出する	df.select_dtypes(ty)
データフレームから型型だけ抽出する	df.select_dtypes(ty)
データフレームから型を抽出する	df.select_dtypes(ty)
データフレームから型の列を取り出す	df.select_dtypes(ty)
データフレームから型のカラムだけ抽出する	df.select_dtypes(ty)
データフレームの各次元の大きさを見る	df.shape
データフレームの各次元の大きさ	df.shape
データフレームのシェイプを確認する	df.shape
データフレームを転置する	df.T
データフレームの行と列を入れ替える	df.T
データフレームの行と列をひっくり返す	df.T
データフレームの相関行列	df.corr()
データフレームの相関行列を求める	df.corr()
データフレームの列と列の相関行列	df[[column, column2]].corr()
データフレームの列と列の各列間の相関係数	df[[column, column2]].corr()
データフレームのカラムと列の各列間の相関係数	df[[column, column2]].corr()
データフレームの列と列の相関行列を算出する	df[[column, column2]].corr()
データフレームの列と列の相関行列を計算する	df[[column, column2]].corr()
データフレームの列とカラムの相関行列を求める	df[[column, column2]].corr()
データフレームのリスト列の相関行列	df[aList].corr()
データフレームのリスト列の相関行列を計算する	df[aList].corr()
データフレームのリストで指定された列の各列間の相関係数	df[aList].corr()
データフレームのリストで指定された列の相関行列	df[aList].corr()
データフレームのリストで指定された列の相関行列を求める	df[aList].corr()
ピアソン相関係数でデータフレームの相関行列	df.corr(method='pearson')
ピアソン相関係数を用いてデータフレームの相関行列	df.corr(method='pearson')
ピアソン相関係数でデータフレームの相関行列を求める	df.corr(method='pearson')
データフレームの相関行列ピアソンとして	df.corr(method='pearson')
データフレームの相関行列ピアソン積率相関係数で	df.corr(method='pearson')
ピアソン相関係数としてデータフレームの相関行列	df.corr(method='pearson')
ピアソン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
ピアソン積率相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
データフレームの列と列の相関行列ピアソン相関係数を使ってを求める	df[[column, column2]].corr(method='pearson')
ピアソン相関係数でデータフレームの列とカラムの相関行列を計算する	df[[column, column2]].corr(method='pearson')
ピアソンでデータフレームの列と列の相関行列	df[[column, column2]].corr(method='pearson')
ピアソン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
ピアソン積率相関係数でデータフレームのリスト列の相関行列を求める	df[aList].corr(method='pearson')
ピアソン相関係数でデータフレームのリストで指定した列の相関行列を計算する	df[aList].corr(method='pearson')
ピアソンでデータフレームのリスト列の相関行列を計算する	df[aList].corr(method='pearson')
ピアソン相関係数としてデータフレームのリスト列の相関行列	df[aList].corr(method='pearson')
データフレームのリストで指定した列の相関行列ピアソン相関係数で	df[aList].corr(method='pearson')
ケンドール相関係数でデータフレームの相関行列	df.corr(method='kendall')
データフレームの相関行列ケンドール相関係数で	df.corr(method='kendall')
ケンドール相関係数としてデータフレームの相関行列	df.corr(method='kendall')
データフレームの相関行列ケンドールとして	df.corr(method='kendall')
ケンドール相関係数としてデータフレームの相関行列を計算する	df.corr(method='kendall')
ケンドール相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
ケンドール順位相関係数を使ってデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
データフレームのカラムと列の相関行列ケンドール相関係数として	df[[column, column2]].corr(method='kendall')
ケンドールを用いてデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
ケンドールでデータフレームの列と列の相関行列を算出する	df[[column, column2]].corr(method='kendall')
ケンドール順位相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='kendall')
ケンドール相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
ケンドール順位相関係数でデータフレームのリスト列の相関行列を求める	df[aList].corr(method='kendall')
ケンドール相関係数としてデータフレームのリスト列の相関行列	df[aList].corr(method='kendall')
ケンドール順位相関係数を用いてデータフレームのリストカラムの相関行列	df[aList].corr(method='kendall')
ケンドールでデータフレームのリストで指定された列の相関行列	df[aList].corr(method='kendall')
スピアマン相関係数でデータフレームの相関行列	df.corr(method='spearman')
データフレームの相関行列スピアマン順位相関係数として	df.corr(method='spearman')
スピアマン順位相関係数としてデータフレームの相関行列	df.corr(method='spearman')
データフレームの相関行列スピアマン相関係数で	df.corr(method='spearman')
スピアマンでデータフレームの相関行列	df.corr(method='spearman')
スピアマン相関係数でデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
データフレームの列と列の相関行列スピアマンでを求める	df[[column, column2]].corr(method='spearman')
スピアマン相関係数でデータフレームの列とカラムの相関行列を計算する	df[[column, column2]].corr(method='spearman')
スピアマンでデータフレームの列と列の相関行列	df[[column, column2]].corr(method='spearman')
スピアマン相関係数でデータフレームのリスト列の相関行列	df[aList].corr(method='spearman')
スピアマン相関係数でデータフレームのリストで指定された列の相関行列を求める	df[aList].corr(method='spearman')
スピアマンでデータフレームのリストで指定された列の相関行列	df[aList].corr(method='spearman')
スピアマンでデータフレームのリスト列の相関行列を求める	df[aList].corr(method='spearman')
データフレームのリストで指定された列の相関行列スピアマン相関係数を用いて	df[aList].corr(method='spearman')
データフレームのリスト列の相関行列スピアマン相関係数で	df[aList].corr(method='spearman')
スピアマン相関係数でデータフレームのリストカラムの相関行列	df[aList].corr(method='spearman')
データフレームの相関行列をヒートマップで描画する	sns.heatmap(df.corr())
ヒートマップでデータフレームの相関行列をグラフ化する	sns.heatmap(df.corr())
ヒートマップを用いてデータフレームの相関行列を描画する	sns.heatmap(df.corr())
データフレームのヒートマップを描画する	sns.heatmap(df.corr())
データフレームの列と列の相関行列をヒートマップで描画する	sns.heatmap(df[[column, column2]].corr())
データフレームのカラムと列の相関行列をヒートマップで描画する	sns.heatmap(df[[column, column2]].corr())
ヒートマップとしてデータフレームの列と列の相関行列を描画する	sns.heatmap(df[[column, column2]].corr())
ヒートマップでデータフレームの列と列の相関行列を描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列と列のヒートマップを描画する	sns.heatmap(df[[column, column2]].corr())
データフレームの列とカラムのヒートマップを描画する	sns.heatmap(df[[column, column2]].corr())
データフレームのリスト列の相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
データフレームのリストで指定された列の相関行列をヒートマップを用いて描画する	sns.heatmap(df[aList].corr())
ヒートマップでデータフレームのリスト列の相関行列を描画する	sns.heatmap(df[aList].corr())
表データのリストカラムの相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
データフレームのリストで指定された列の相関行列をヒートマップを使って描画する	sns.heatmap(df[aList].corr())
データフレームのリスト列の相関行列をヒートマップでグラフ化する	sns.heatmap(df[aList].corr())
データフレームのリストで指定された列の相関行列をヒートマップで描画する	sns.heatmap(df[aList].corr())
データフレームのリスト列のヒートマップを描画する	sns.heatmap(df[aList].corr())
データフレームのリストで指定された列のヒートマップを描画する	sns.heatmap(df[aList].corr())
表のリスト列のヒートマップを描画する	sns.heatmap(df[aList].corr())
データフレームのリストカラムのヒートマップを描画する	sns.heatmap(df[aList].corr())
データフレームのリスト列のヒートマップをグラフ化する	sns.heatmap(df[aList].corr())
データフレームの数値をまとめて丸める	df.round()
データフレームをまとめて丸める	df.round()
データフレームの数値をまとめて四捨五入する	df.round()
データフレームの数値をまとめて小数点以下n桁で丸める	df.round(n)
データフレームの数値を一度に小数点以下n桁で丸める	df.round(n)
データフレームの列の名前を付け直す	df.rename(columns={column: name})
データフレームの列の名前を変更する	df.rename(columns={column: name})
データフレームの列名を付け直す	df.rename(columns={column: name})
データフレームのカラムの名前を付け直す	df.rename(columns={column: name})
データフレームの列の名前を列から文字列に付け直す	df.rename(columns={column: name})
データフレームのカラムの名前を列から文字列に付け直す	df.rename(columns={column: name})
データフレームの列名を列から文字列に付け直す	df.rename(columns={column: name})
データフレームの列を文字列にリネームする	df.rename(columns={column: name})
データフレームの列を文字列に名前を変更する	df.rename(columns={column: name})
データフレームの列の名前をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームの列名をまとめて文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
まとめてデータフレームの列の名前を文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームの列の名前を一度に文字列を文字列に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]
データフレームのインデックスの名前をまとめて、nameからname2に付け直す	df.rename(index={name: name2})
データフレームの行名をまとめて、nameからname2に付け直す	df.rename(index={name: name2})
データフレームのインデックス名をnameからname2に付け直す	df.rename(index={name: name2})
データフレームのインデックスの名前をnameからname2に付け直す	df.rename(index={name: name2})
データフレームの列をインデックスに設定する	df.set_index(column)
データフレームの列を行に設定する	df.set_index(column)
データフレームの列をインデックスに指定する	df.set_index(column)
表データの列をインデックスに設定する	df.set_index(column)
データフレームのインデックスをリセットする	df.reset_index()
データフレームのインデックスを振り直す	df.reset_index()
データフレームの列がxの行を抽出する	df[df[column] == x]
データフレームの列がxである行を抽出する	df[df[column] == x]
データフレームの列の値がxの行を抽出する	df[df[column] == x]
データフレームの列の値がxであるデータを取り出す	df[df[column] == x]
データフレームの列がxでない行をフィルタする	df[df[column] == x]
データフレームの列の値がxでないデータをフィルタする	df[df[column] == x]
データフレームの行を条件でフィルタするには	df[(df[column] == x) & (df[column2] == x2)]
データフレームのデータを条件でフィルタするには	df[(df[column] == x) & (df[column2] == x2)]
データフレームの行を条件で消すには	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列の値がx、かつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がxかつ列がx2である行を抽出する	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がx、かつ列がx2である行を取り出す	df[(df[column] == x) & (df[column2] == x2)]
データフレームの列がxより小さい行を抽出する	df[df[column] < x]
データフレームの列の値がx未満の行を取り出す	df[df[column] < x]
データフレームの列がx未満の行を抽出する	df[df[column] < x]
表データの列がxより小さい行を抽出する	df[df[column] < x]
データフレームの列がxより少ないデータを取り出す	df[df[column] < x]
データフレームの列の値がxより少ない行を抽出する	df[df[column] < x]
データフレームの列の値がxより小さいデータを取り出す	df[df[column] < x]
データフレームの列がx以下の行を抽出する	df[df[column] <= x]
データフレームの列がx以下の行を取り出す	df[df[column] <= x]
データフレームの列の値がx以下の行を抽出する	df[df[column] <= x]
データフレームの列がxより大きい行を抽出する	df[df[column] > x]
データフレームのカラムがxより大きい行を抽出する	df[df[column] > x]
表の列がxより大きいデータを選択する	df[df[column] > x]
データフレームのカラムがxより大きい行を取り出す	df[df[column] > x]
データフレームの列がxより大きいデータを抽出する	df[df[column] > x]
データフレームの列がxより大きい行を取り出す	df[df[column] > x]
データフレームの列がx以上の行を抽出する	df[df[column] >= x]
データフレームの列の値がx以上のデータを取り出す	df[df[column] >= x]
データフレームの列がx以上の行を取り出す	df[df[column] >= x]
データフレームの列の値がx以上の行を選ぶ	df[df[column] >= x]
データフレームの列がx以上の行を選択する	df[df[column] >= x]
データフレームの列がxより大きくx2より小さい行を抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームのカラムの値がxより大きくx2より小さい行を抽出する	df[(x < df[column]) & (df[column] < x2)]
表データの列の値がxより大きくx2より小さい行を取り出す	df[(x < df[column]) & (df[column] < x2)]
データフレームのカラムがxより大きくx2より小さいデータを抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がxより多くx2より小さいデータを選択する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がxより多くx2より小さい行を抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームのカラムがxより大きくx2より少ない行を抽出する	df[(x < df[column]) & (df[column] < x2)]
データフレームの列がx以上かつx2未満の行を抽出する	df[(x <= df[column]) & (df[column] < x2)]
データフレームの列がx以上かつx2未満の行を選択する	df[(x <= df[column]) & (df[column] < x2)]
表の列がx以上かつx2未満のデータを抽出する	df[(x <= df[column]) & (df[column] < x2)]
データフレームの列がリストに含まれる行を抽出する	df[df[column].isin(aList)]
データフレームの列がリストに含まれる行を選択する	df[df[column].isin(aList)]
データフレームの列の値がリストに含まれる行を抽出する	df[df[column].isin(aList)]
データフレームの列が文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
データフレームの列の文字列で文字列が含まれる行を抽出する	df[df[column].str.contains(s)]
表データの列の文字列で文字列が含まれるデータを抽出する	df[df[column].str.contains(s)]
データフレームの列が文字列が含まれるデータを取り出す	df[df[column].str.contains(s)]
データフレームの列が文字列が含まれない行を抽出する	df[not df[column].str.contains(s)]
データフレームの列が文字列が含まれない行を選ぶ	df[not df[column].str.contains(s)]
データフレームの列で文字列が含まれない行を取り出す	df[not df[column].str.contains(s)]
データフレームの列が文字列が含まれないデータを抽出する	df[not df[column].str.contains(s)]
データフレームの列の文字列が文字列が含まれない行を選択する	df[not df[column].str.contains(s)]
データフレームの列が正規表現文字列にマッチする行を抽出する	df[df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチするデータを抽出する	df[df[column].str.match(s)]
データフレームの列の文字列が正規表現文字列にマッチするデータを抽出する	df[df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチしない行を抽出する	df[not df[column].str.match(s)]
データフレームの列が正規表現文字列にマッチしないデータを抽出する	df[not df[column].str.match(s)]
データフレームの列の文字列が正規表現文字列にマッチしない行を取り出す	df[not df[column].str.match(s)]
データフレームの列が文字列で始まる行を抽出する	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まるデータを選ぶ	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まる行を取り出す	df[df[column].str.startswith(s)]
データフレームの列が文字列で始まらない行を抽出する	df[not df[column].str.startswith(s)]
データフレームの列の文字列が文字列で始まらない行を取り出す	df[not df[column].str.startswith(s)]
データフレームの列が文字列で始まらないデータを抽出する	df[not df[column].str.startswith(s)]
データフレームの列の文字列が文字列で始まらないデータを抽出する	df[not df[column].str.startswith(s)]
データフレームの列が文字列で終わる行を抽出する	df[df[column].str.endswith(s)]
データフレームの列の文字列が文字列で終わる行を取り出す	df[df[column].str.endswith(s)]
データフレームの列が文字列で終わるデータを抽出する	df[df[column].str.endswith(s)]
データフレームの列が文字列で終わらない行を抽出する	df[not df[column].str.endswith(s)]
データフレームの列の文字列が文字列で終わらない行を抽出する	df[not df[column].str.endswith(s)]
表データの列が文字列で終わらない行を抽出する	df[not df[column].str.endswith(s)]
データフレームの欠損値が含まれる箇所に色を付ける	df.style.highlight_null()
データフレームの未入力値が含まれる箇所に色を付ける	df.style.highlight_null()
データフレームの欠損値が含まれる箇所に	df.style.highlight_null()
データフレームの欠損値が含まれる部分に色を付ける	df.style.highlight_null()
データフレームの未入力値が含まれる箇所に	df.style.highlight_null()
データフレームのn行目を削除する	df.drop(n, axis=0)
データフレームのn行目を消す	df.drop(n, axis=0)
データフレームのn行目を破壊的に削除する	df.drop(n, axis=0, inplace=True)
破壊的にデータフレームのn行目を削除する	df.drop(n, axis=0, inplace=True)
データフレームのn行目を破壊的に落とす	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして、更新する	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして入れ替える	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして、インプレイスする	df.drop(n, axis=0, inplace=True)
データフレームのn行目をドロップして更新する	df.drop(n, axis=0, inplace=True)
データフレームの列を削除する	df.drop(column, axis=1)
表データの列をドロップする	df.drop(column, axis=1)
データフレームの列を破壊的に削除する	df.drop(column, axis=1, inplace=True)
データフレームの列をインプレイスで消す	df.drop(column, axis=1, inplace=True)
破壊的にデータフレームの列を消す	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップして、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップしてインプレイスする	df.drop(column, axis=1, inplace=True)
データフレームの列をドロップして入れ替える	df.drop(column, axis=1, inplace=True)
表の列をドロップして、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列を削除し、、入れ替える	df.drop(column, axis=1, inplace=True)
データフレームの列を削除し、更新する	df.drop(column, axis=1, inplace=True)
データフレームの列を削除して、入れ替える	df.drop(column, axis=1, inplace=True)
データフレームの列と列を削除する	df.drop([column, column2], axis=1)
データフレームのカラムと列を消す	df.drop([column, column2], axis=1)
データフレームの列と列を落とす	df.drop([column, column2], axis=1)
データフレームのカラムと列を削除する	df.drop([column, column2], axis=1)
データフレームの列と列を消す	df.drop([column, column2], axis=1)
データフレームの列とカラムを削除する	df.drop([column, column2], axis=1)
データフレームの列の名前一覧で指定された列を削除する	df.drop(columns, axis=1)
データフレームの列の名前一覧で指定された列をドロップする	df.drop(columns, axis=1)
データフレームのカラム名一覧で指定された列を削除する	df.drop(columns, axis=1)
データフレームの列名一覧で指定した列を削除する	df.drop(columns, axis=1)
データフレームの列の名前一覧で指定された列を消す	df.drop(columns, axis=1)
データフレームの列の名前一覧で指定された列を取り除く	df.drop(columns, axis=1)
データフレームの中の欠損値を削除する	df.dropna()
データフレームの欠損値を削除する	df.dropna()
データフレームの中の欠損値をドロップする	df.dropna()
データフレームの中のNaNを削除する	df.dropna()
データフレームの中の欠損値がある行を削除する	df.dropna()
データフレームの中のNaNがある行を削除する	df.dropna()
データフレームの中の欠損値がある行を消す	df.dropna()
データフレームの中の未入力値が存在する行を削除する	df.dropna()
データフレームの内の欠損値がある行を削除する	df.dropna()
データフレームの重複を見る	df.duplicated()
データフレームに重複があるか見る	df.duplicated()
データフレームが重複しているか調べる	df.duplicated()
データフレームが重複しているかどうか	df.duplicated()
データフレームが重複しているか判定する	df.duplicated()
データフレームが重複している	df.duplicated()
データフレームの重複した行をマスクする	df.duplicated()
データフレームの重複した行数のマスク	df.duplicated()
データフレームの重複する行数のマスク	df.duplicated()
データフレームの重複した行を数える	df.duplicated().sum()
表データの重複した行数を数える	df.duplicated().sum()
データフレームの重複する行を数える	df.duplicated().sum()
データフレームの中で何行、重複するか見る	df.duplicated().sum()
データフレームで何行、重複するか見る	df.duplicated().sum()
データフレームの中で何行重複するか確認する	df.duplicated().sum()
データフレームの重複した行のみを抽出する	df[df.duplicated(keep=False)]
表データの重複した行のみを抽出する	df[df.duplicated(keep=False)]
データフレームの重複した行のみを取り出す	df[df.duplicated(keep=False)]
重複する行のみ	df[df.duplicated(keep=False)]
データフレームの重複する行のみを抽出する	df[df.duplicated(keep=False)]
データフレームの重複していない行のみを抽出する	df[not df.duplicated(keep=False)]
データフレームの重複していない行を取り出す	df[not df.duplicated(keep=False)]
データフレームの重複していない行のみを選択する	df[not df.duplicated(keep=False)]
データフレームの重複していない行だけを抽出する	df[not df.duplicated(keep=False)]
表データの重複していない行のみ	df[not df.duplicated(keep=False)]
データフレームの中で、列の重複を見る	df.duplicated(subset=column)
データフレームで列の重複を見る	df.duplicated(subset=column)
データフレームの中で、列の重複を調べる	df.duplicated(subset=column)
データフレームの中で列の重複を見る	df.duplicated(subset=column)
データフレームの中で、列に重複があるか見る	df.duplicated(subset=column)
データフレームで、列に重複があるか確認する	df.duplicated(subset=column)
データフレームの中で列に重複があるか見る	df.duplicated(subset=column)
データフレームの列に重複があれば、マスクする	df.duplicated(subset=column)
データフレームのカラムに重複があれば、マスクする	df.duplicated(subset=column)
データフレームの列に重複があればマスクする	df.duplicated(subset=column)
データフレームの中で、列と列の重複を見る	df.duplicated(subset=[column, column2])
データフレームの中で、列と列の重複を確認する	df.duplicated(subset=[column, column2])
データフレームの中で列と列の重複を調べる	df.duplicated(subset=[column, column2])
データフレームで、列と列の重複を見る	df.duplicated(subset=[column, column2])
データフレームの内で、列と列の重複を見る	df.duplicated(subset=[column, column2])
データフレームの中で、列と列に重複があるか見る	df.duplicated(subset=[column, column2])
データフレームで、列と列に重複があるか調べる	df.duplicated(subset=[column, column2])
データフレームで列と列に重複があるか確認する	df.duplicated(subset=[column, column2])
データフレームの中で、列と列に重複があるか確認する	df.duplicated(subset=[column, column2])
データフレームの中の列と列に重複があれば、マスクする	df.duplicated(subset=[column, column2])
データフレームの列と列に重複があればマスクする	df.duplicated(subset=[column, column2])
データフレームの内の列と列に重複があればマスクする	df.duplicated(subset=[column, column2])
データフレームの内の列と列に重複があれば、マスクする	df.duplicated(subset=[column, column2])
データフレームから重複を削除する	df.drop_duplicates()
データフレームから重複した行を削除する	df.drop_duplicates()
データフレームから重複した行をドロップする	df.drop_duplicates()
データフレームから重複するデータを削除する	df.drop_duplicates()
データフレームから重複したデータを削除する	df.drop_duplicates()
データフレームから破壊的に重複を削除する	df.drop_duplicates(inplace=True)
破壊的に重複をデータフレームから削除する	df.drop_duplicates(inplace=True)
表データからインプレイスで重複を削除する	df.drop_duplicates(inplace=True)
破壊的にデータフレームから重複を削除する	df.drop_duplicates(inplace=True)
データフレームから重複した行をドロップして、更新する	df.drop_duplicates(inplace=True)
データフレームから重複した行を消して、更新する	df.drop_duplicates(inplace=True)
データフレームから重複したデータをドロップして、入れ替える	df.drop_duplicates(inplace=True)
データフレームから重複した行をドロップして、インプレイスする	df.drop_duplicates(inplace=True)
データフレームから重複した行をドロップして、入れ替える	df.drop_duplicates(inplace=True)
データフレームから破壊的に重複した行を削除する	df.drop_duplicates(inplace=True)
データフレームから破壊的に重複した行を落とす	df.drop_duplicates(inplace=True)
重複するデータをデータフレームから破壊的に落とす	df.drop_duplicates(inplace=True)
表データからインプレイスで重複した行を落とす	df.drop_duplicates(inplace=True)
表データから破壊的に重複する行を削除する	df.drop_duplicates(inplace=True)
表データから破壊的に重複するデータを削除する	df.drop_duplicates(inplace=True)
データフレームから重複を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複を残さず削除する	df.drop_duplicates(keep=False)
データフレームから重複を残さず消す	df.drop_duplicates(keep=False)
データフレームから重複した行を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複した行を残さず、落とす	df.drop_duplicates(keep=False)
データフレームから重複したデータを残さず、ドロップする	df.drop_duplicates(keep=False)
データフレームから重複するデータを残さず、ドロップする	df.drop_duplicates(keep=False)
データフレームから重複する行を残さず、削除する	df.drop_duplicates(keep=False)
データフレームから重複する行を残さず、落とす	df.drop_duplicates(keep=False)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=column)
データフレームで列と列の重複を消す	df.drop_duplicates(subset=column)
データフレームの中で、列と列の重複を消す	df.drop_duplicates(subset=column)
データフレームの中で列と列の重複を削除する	df.drop_duplicates(subset=column)
データフレームの中で列と列の重複を消す	df.drop_duplicates(subset=column)
データフレームの内で、列と列の重複を削除する	df.drop_duplicates(subset=column)
データフレームでカラムとカラムの重複を削除する	df.drop_duplicates(subset=column)
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=column)
データフレームの列と列に重複があれば、削除する	df.drop_duplicates(subset=column)
データフレームの内の列と列に重複があれば削除する	df.drop_duplicates(subset=column)
表の列と列に重複があれば消す	df.drop_duplicates(subset=column)
データフレームの中で、列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
データフレームの中で、列と列の重複をドロップする	df.drop_duplicates(subset=[column, column2])
データフレームで、列と列の重複を削除する	df.drop_duplicates(subset=[column, column2])
列と列の重複を消す	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば、削除する	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば落とす	df.drop_duplicates(subset=[column, column2])
データフレームの中のカラムと列に重複があれば、ドロップする	df.drop_duplicates(subset=[column, column2])
データフレームの中の列と列に重複があれば、落とす	df.drop_duplicates(subset=[column, column2])
アヤメのデータセットをロードする	sns.load_dataset('iris')
アイリスのデータセットをロードする	sns.load_dataset('iris')
データ列を使う	import pandas as pd
データ列を使用する	import pandas as pd
データ列をインポートする	import pandas as pd
Pandasで、dateStringを日付データに変換する	pd.to_datetime(dateString)
PandasでdateStringを日付データに変換する	pd.to_datetime(dateString)
Pandasで、dateStringをタイムスタンプ型に変換する	pd.to_datetime(dateString)
Pandasで、データフレームのcollを日付データに変換する	pd.to_datetime(df[col])
データフレームのcollを日付データに変換する	pd.to_datetime(df[col])
Pandasでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col])
Pandasで、データフレームのcollをPandasの日付型に変換する	pd.to_datetime(df[col])
Pandasで、データ列を日付データに変換する	pd.to_datetime(ds)
データ列を日付データに変換する	pd.to_datetime(ds)
データ列を日付データにする	pd.to_datetime(ds)
Pandasで、データ列をdatetime64型に変換する	pd.to_datetime(ds)
Pandasで、データ列をタイムスタンプ型に変換する	pd.to_datetime(ds)
Pandasで、文字列を日付データに変換する	pd.to_datetime(s)
Pandasで文字列をPandasの日付型にする	pd.to_datetime(s)
Pandasで、文字列をdatetime64型にする	pd.to_datetime(s)
文字列をタイムスタンプ型に変換する	pd.to_datetime(s)
Pandasで、文字列をPandasの日付型にする	pd.to_datetime(s)
Pandasで、文字列をタイムスタンプ型に変換する	pd.to_datetime(s)
Pandasで、フォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasでフォーマットを用いてデータフレームのcollをタイムスタンプに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
フォーマットでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
フォーマットでデータフレームのcollをタイムスタンプに変換する	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、フォーマットでデータフレームのcollを日付データにする	pd.to_datetime(df[col], format='%Y-%m-%d')
Pandasで、フォーマットでデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、フォーマットでデータ列をdatetime64型に変換する	pd.to_datetime(ds, format='%Y-%m-%d')
フォーマットでデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
フォーマットでデータ列をタイムスタンプ型に変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、書式を使ってデータ列を日付データにする	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで書式でデータ列を日付データに変換する	pd.to_datetime(ds, format='%Y-%m-%d')
Pandasで、フォーマットで文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、文字列をフォーマットでPandasの日付型に変換する	pd.to_datetime(s, format='%Y-%m-%d')
文字列を書式でdatetime64型にする	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットで文字列をdatetime64型に変換する	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットで文字列を日付データにする	pd.to_datetime(s, format='%Y-%m-%d')
フォーマットで文字列をPandasの日付型にする	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットを用いて文字列を日付データに変換する	pd.to_datetime(s, format='%Y-%m-%d')
Pandasで、フォーマットfmtでデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
Pandasで、フォーマットfmtを用いてデータフレームのcollを日付データに変換する	pd.to_datetime(df[col], format=fmt)
PandasでフォーマットfmtとしてデータフレームのcollをPandasの日付型に変換する	pd.to_datetime(df[col], format=fmt)
フォーマットfmtでデータフレームのcollを日付データにする	pd.to_datetime(df[col], format=fmt)
Pandasで、フォーマットfmtでデータフレームのcollをdatetime64型に変換する	pd.to_datetime(df[col], format=fmt)
Pandasで、フォーマットfmtでデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
Pandasで、フォーマットfmtとしてデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
フォーマットfmtでデータ列を日付データに変換する	pd.to_datetime(ds, format=fmt)
データ列を書式fmtでdatetime64型に変換する	pd.to_datetime(ds, format=fmt)
フォーマットfmtとしてデータ列を日付データにする	pd.to_datetime(ds, format=fmt)
フォーマットfmtでデータ列をdatetime64型に変換する	pd.to_datetime(ds, format=fmt)
Pandasで、フォーマットfmtで文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasでフォーマットfmtで文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで文字列を書式fmtとして日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで、フォーマットfmtとして文字列を日付データに変換する	pd.to_datetime(s, format=fmt)
Pandasで、書式fmtとして文字列をタイムスタンプにする	pd.to_datetime(s, format=fmt)
Pandasで、エポック秒のデータフレームのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
UNIX時間のデータフレームのcollからPandasの日付型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、UNIX時間のデータフレームのcollからdatetime64型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータフレームのcollからPandasの日付型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
エポック秒のデータフレームのcollから日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
PandasでUNIX秒のデータフレームのcollからPandasの日付型にする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、データフレームのcollのエポック秒から日付データに変換する	pd.to_datetime(df[col], unit='s', utc=True)
Pandasでデータフレームのcollのエポック秒から日付データにする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、データフレームのcollのUNIX秒からタイムスタンプに変換する	pd.to_datetime(df[col], unit='s', utc=True)
PandasでデータフレームのcollのUNIX時間からタイムスタンプ型に変換する	pd.to_datetime(df[col], unit='s', utc=True)
データフレームのcollのエポック秒からdatetime64型にする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、データフレームのcollのエポック秒から日付データにする	pd.to_datetime(df[col], unit='s', utc=True)
Pandasで、エポック秒のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasでエポック秒のデータ列から日付データにする	pd.to_datetime(ds, unit='s', utc=True)
エポック秒のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
UNIX時間のデータ列から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、エポック秒のデータ列からタイムスタンプに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、データ列のエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasでデータ列の数値時刻からPandasの日付型に変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasでデータ列のエポック秒からタイムスタンプ型にする	pd.to_datetime(ds, unit='s', utc=True)
データ列のエポック秒から日付データに変換する	pd.to_datetime(ds, unit='s', utc=True)
データ列のエポック秒からタイムスタンプ型に変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、データ列のUNIX秒からタイムスタンプ型に変換する	pd.to_datetime(ds, unit='s', utc=True)
Pandasで、エポック秒の文字列から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、UNIX秒の文字列からPandasの日付型に変換する	pd.to_datetime(s, unit='s', utc=True)
エポック秒の文字列からPandasの日付型にする	pd.to_datetime(s, unit='s', utc=True)
エポック秒の文字列から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
PandasでUNIX秒の文字列から日付データにする	pd.to_datetime(s, unit='s', utc=True)
Pandasで、UNIX時間の文字列からタイムスタンプにする	pd.to_datetime(s, unit='s', utc=True)
Pandasで、文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
文字列のエポック秒からタイムスタンプ型に変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで、文字列のエポック秒から日付データにする	pd.to_datetime(s, unit='s', utc=True)
文字列のエポック秒から日付データに変換する	pd.to_datetime(s, unit='s', utc=True)
Pandasで文字列のエポック秒から日付データにする	pd.to_datetime(s, unit='s', utc=True)
データフレームのカラムのタイムゾーンを日本に設定する	df[col].tz_convert('Asia/Tokyo')
データフレームのカラムのタイムゾーンを東京に設定する	df[col].tz_convert('Asia/Tokyo')
データフレームのカラムのタイムゾーンを日本に指定する	df[col].tz_convert('Asia/Tokyo')
データ列のタイムゾーンを日本に設定する	ds.tz_convert('Asia/Tokyo')
データ列のタイムゾーンを東京に設定する	ds.tz_convert('Asia/Tokyo')
データ列のタイムゾーンを日本に指定する	ds.tz_convert('Asia/Tokyo')
データフレームのカラムのタイムゾーンを文字列に設定する	df[col].tz_convert(s)
データフレームのカラムのタイムゾーンを文字列に指定する	df[col].tz_convert(s)
データフレームのカラムのタイムゾーンを文字列にセットする	df[col].tz_convert(s)
データ列のタイムゾーンを文字列に設定する	ds.tz_convert(s)
Pandasで、データフレームのカラムをインデックスにする	df.set_index(col, inplace=True)
データフレームのカラムをインデックスにする	df.set_index(col, inplace=True)
Pandasで、日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
タイムスタンプのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
Pandasの日付型のデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
日付データのデータフレームのカラムをデータフレームのインデックスにする	df.index = pd.DatetimeIndex(df[col])
Pandasで、日付データのデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasでdatetime64型のデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、日付データのデータ列をインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、タイムスタンプ型のデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasの日付型のデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasでタイムスタンプ型のデータ列をデータフレームのインデックスにする	df.index = pd.DatetimeIndex(ds)
Pandasで、データフレームのカラムを日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データフレームのカラムを日付データに変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データフレームのカラムをタイムスタンプ型に変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データフレームのカラムをdatetime64型に変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データフレームのカラムをタイムスタンプ型に変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasでデータフレームのカラムを日付データに変換し、インデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
Pandasで、データ列を日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
データ列を日付データに変換し、データフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
Pandasでデータ列を日付データに変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
Pandasで、データ列を日付データに変換し、インデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
Pandasでデータ列をPandasの日付型に変換しデータフレームのインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
データフレームのカラムの年	df[col].dt.year
データフレームのカラムが何年か見る	df[col].dt.year
データフレームのカラムは何年か見る	df[col].dt.year
データ列の年	ds.dt.year
データ列が何年か見る	ds.dt.year
データ列が何年か確認する	ds.dt.year
データ列は何年か見る	ds.dt.year
データ列が何年か調べる	ds.dt.year
データフレームのカラムの月	df[col].dt.month
データフレームのカラムが何月か見る	df[col].dt.month
データフレームのカラムは何月か見る	df[col].dt.month
データフレームのカラムが何月か調べる	df[col].dt.month
データ列の月	ds.dt.month
データ列が何月か見る	ds.dt.month
データ列が何月か確認する	ds.dt.month
データ列は何月か見る	ds.dt.month
データフレームのカラムの日	df[col].dt.day
データフレームのカラムが何日か見る	df[col].dt.day
データフレームのカラムは何日か見る	df[col].dt.day
データ列の日	ds.dt.day
データ列の日を使う	ds.dt.day
データ列の日にち	ds.dt.day
データ列が何日か見る	ds.dt.day
データ列は何日か見る	ds.dt.day
データ列が何日か調べる	ds.dt.day
データフレームのカラムの時	df[col].dt.hour
データフレームのカラムの時を見る	df[col].dt.hour
データフレームのカラムの時を使う	df[col].dt.hour
データフレームのカラムの時刻	df[col].dt.hour
データフレームのカラムが何時か見る	df[col].dt.hour
データフレームのカラムが何時か確認する	df[col].dt.hour
データフレームのカラムが何時か調べる	df[col].dt.hour
データ列の時	ds.dt.hour
データ列の時を見る	ds.dt.hour
データ列の時刻を使う	ds.dt.hour
データ列が何時か見る	ds.dt.hour
データ列は何時か確認する	ds.dt.hour
データフレームのカラムの分	df[col].dt.minute
データフレームのカラムが何分か見る	df[col].dt.minute
データ列の分	ds.dt.minute
データ列の分を求める	ds.dt.minute
データ列が何分か見る	ds.dt.minute
データ列が何分か調べる	ds.dt.minute
データ列は何分か見る	ds.dt.minute
データフレームのカラムの秒	df[col].dt.second
データフレームのカラムが何秒か見る	df[col].dt.second
データフレームのカラムが何秒か確認する	df[col].dt.second
データ列の秒	ds.dt.second
データ列が何秒か見る	ds.dt.second
データ列が何秒か確認する	ds.dt.second
データフレームのカラムの曜日の名前	df[col].dt.weekday_name
データフレームのカラムの曜日の名前を見る	df[col].dt.weekday_name
データフレームのカラムの曜日を見る	df[col].dt.weekday_name
データフレームのカラムが何曜日か見る	df[col].dt.weekday_name
データ列の曜日の名前	ds.dt.weekday_name
データ列の曜日の名前を見る	ds.dt.weekday_name
データ列の曜日の名前を使う	ds.dt.weekday_name
データ列の曜日を見る	ds.dt.weekday_name
データ列の曜日名	ds.dt.weekday_name
データ列の曜日	ds.dt.weekday_name
データ列が何曜日か見る	ds.dt.weekday_name
データ列は何曜日か見る	ds.dt.weekday_name
データフレームのカラムの曜日数	df[col].dt.dayofweek
データフレームのカラムの曜日が何日目か見る	df[col].dt.dayofweek
データフレームのカラムの曜日は何日目か調べる	df[col].dt.dayofweek
データフレームのカラムの曜日は何日目か見る	df[col].dt.dayofweek
データ列の曜日数	ds.dt.dayofweek
データ列の曜日が何日目か見る	ds.dt.dayofweek
データ列の曜日が何日目か確認する	ds.dt.dayofweek
表データを使う	import pandas as pd
表データをインポートする	import pandas as pd
Pandasのバージョンを表示する	print(pd.__version__)
Pandasのバージョンを見る	print(pd.__version__)
データフレームを表示するとき、表示可能な最大列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数を変更する	pd.set_option('display.max_columns', n)
データフレームを表示するとき表示する最大列数を変更する	pd.set_option('display.max_columns', n)
表示可能な最大列数を増やす	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき表示する列数の最大値をnに指定する	pd.set_option('display.max_columns', n)
列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
表示可能な列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、列数の最大値をnに設定する	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な列数の最大値をnにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、n列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、データフレームをn列まで表示できるようにする	pd.set_option('display.max_columns', n)
データフレームを表示するときデータフレームをn列まで表示可能なようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、n列までデータフレームを表示されるようにする	pd.set_option('display.max_columns', n)
データフレームを表示するときn列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)
n列までデータフレームを表示するようにする	pd.set_option('display.max_columns', n)
データフレームを表示するとき、表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
表示可能な最大行数を増やす	pd.set_option('display.max_rows', n)
表示可能な最大行数を変更する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、最大行数を変更する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、表示可能な最大行数をnに設定する	pd.set_option('display.max_rows', n)
表示される行数をnに設定する	pd.set_option('display.max_rows', n)
最大行数をnに設定する	pd.set_option('display.max_rows', n)
データフレームを表示するとき表示可能な最大行数をnに増やす	pd.set_option('display.max_rows', n)
データフレームを表示するとき、表示可能な行数をnに設定する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、表示できる最大行数をnに設定する	pd.set_option('display.max_rows', n)
データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
データフレームを表示するときn行までデータフレームを表示できるようにする	pd.set_option('display.max_rows', n)
データフレームを表示するとき、小数点以下の表示精度を設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度をする	pd.set_option('precision', n)
データフレームを表示するとき小数点以下の表示精度を設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度を変更する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度を指定する	pd.set_option('precision', n)
データフレームを表示するとき小数点以下の表示精度をセットする	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき小数点以下をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下をn桁に増やす	pd.set_option('precision', n)
データフレームを表示するとき小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下の表示精度をn桁に指定する	pd.set_option('precision', n)
小数点以下の表示精度をn桁に設定する	pd.set_option('precision', n)
データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
データフレームを表示するとき小数点以下n桁まで表示できるようにする	pd.set_option('precision', n)
データフレームを表示するとき小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)
データフレームを表示するとき、折り返しをしない	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき折り返しをしない	pd.set_option('expand_frame_repr', False)
折り返しをしない	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、折り返しをオフに指定する	pd.set_option('expand_frame_repr', False)
折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)
データフレームを表示するとき、カラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームを表示するとき列の最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームを表示するときカラムの最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームを表示するとき、列の最大幅をnに設定する	pd.set_option('max_colwidth', n)
データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
ヘッダー行を右寄せに設定する	pd.set_option('colheader_justify', 'right')
データフレームを表示するとき、ヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
データフレームを表示するときヘッダー行を左寄せに設定する	pd.set_option('colheader_justify', 'left')
ヘッダー行を左寄せに指定する	pd.set_option('colheader_justify', 'left')
エクセルファイルからデータフレームを読み込む	pd.read_excel(filename)
からデータフレームを読む	pd.read_excel(filename)
からデータフレームを読み込む	pd.read_excel(filename)
エクセルファイルからデータフレームを読む	pd.read_excel(filename)
エクセルファイルファイルをデータフレームとして読み込む	pd.read_excel(filename)
ファイルをデータフレームとして読み込む	pd.read_excel(filename)
エクセルファイルファイルをデータフレームとして読む	pd.read_excel(filename)
ファイルをデータフレームとして読む	pd.read_excel(filename)
データフレームとしてエクセルファイルファイルを読む	pd.read_excel(filename)
ファイルを読み込む	pd.read_excel(filename)
エクセルファイルファイルからエクセルファイルを読み込む	pd.read_excel(filename)
ファイルからを読む	pd.read_excel(filename)
エクセルデータファイルからエクセルデータを読む	pd.read_excel(filename)
をエクセルデータファイルから読む	pd.read_excel(filename)
エクセルデータをファイルから読み込む	pd.read_excel(filename)
エクセルファイルファイルからエクセルデータを読み込む	pd.read_excel(filename)
ファイルからエクセルファイルを読む	pd.read_excel(filename)
エクセルファイルファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
ファイルからn番目のシートを読み込む	pd.read_excel(filename, sheet_name=n)
ファイルからn番目のシートをデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
ファイルからn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからnという名前のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
nというシートをファイルからデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
ファイルからnという名前のシートを読む	pd.read_excel(filename, sheet_name=n)
nという名前のシートをエクセルファイルファイルからデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
ファイルからnという名前のシートを読み込む	pd.read_excel(filename, sheet_name=n)
エクセルデータファイルからnという名前のシートをデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルからnという名前のシートを読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
n番目のシートをファイルの読み込む	pd.read_excel(filename, sheet_name=n)
ファイルのn番目のシートを読み込む	pd.read_excel(filename, sheet_name=n)
ファイルのn番目のシートをデータフレームとして読み込む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルのn番目のシートをデータフレームとして読む	pd.read_excel(filename, sheet_name=n)
エクセルファイルファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
ファイルから複数のシートを読む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルデータファイルから複数のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
複数のシートをエクセルファイルファイルから読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルファイルファイルからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルデータファイルからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
ファイルからnとn2のシートを読み込む	pd.read_excel(filename, sheet_name=[n, n2])
nとn2のシートをエクセルデータファイルから読み込む	pd.read_excel(filename, sheet_name=[n, n2])
エクセルファイルファイルから全てのシートを読み込む	pd.read_excel(filename, sheet_name=None)
エクセルファイルファイルから全シートを読み込む	pd.read_excel(filename, sheet_name=None)
ファイルからすべてのシートを読み込む	pd.read_excel(filename, sheet_name=None)
エクセルデータファイルから全てのシートを読む	pd.read_excel(filename, sheet_name=None)
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
データフレームをCSVから読む	pd.read_csv(filename, sep=',')
カンマ区切りのファイルからデータフレームを読む	pd.read_csv(filename, sep=',')
CSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep=',')
データフレームをCSVファイルから読み込む	pd.read_csv(filename, sep=',')
CSVファイルからデータフレームを読む	pd.read_csv(filename, sep=',')
CSVからデータフレームを読み込む	pd.read_csv(filename, sep=',')
CSVファイルを読み込む	pd.read_csv(filename, sep=',')
CSVファイルをデータフレームとして読み込む	pd.read_csv(filename, sep=',')
CSVをデータフレームとして読む	pd.read_csv(filename, sep=',')
CSVを読み込む	pd.read_csv(filename, sep=',')
CSVを読む	pd.read_csv(filename, sep=',')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
TSVファイルからデータフレームを読む	pd.read_csv(filename, sep='\t')
データフレームをタブ区切りのファイルから読み込む	pd.read_csv(filename, sep='\t')
データフレームをTSVから読み込む	pd.read_csv(filename, sep='\t')
TSVからデータフレームを読む	pd.read_csv(filename, sep='\t')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
TSVからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
TSVからデータフレームを読む	pd.read_csv(filename, sep='\t')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t')
タブ区切りのファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t')
TSVを読み込む	pd.read_csv(filename, sep='\t')
TSVを読む	pd.read_csv(filename, sep='\t')
＜オプション＞読み込むシートの名前をnamesに設定する	sheet_name = names
＜オプション＞先頭のカラムをインデックスに設定する	index_col = 0
＜オプション＞最初のカラムをインデックスに設定する	index_col = 0
＜オプション＞先頭列を行に指定する	index_col = 0
＜オプション＞先頭の列をインデックスに変更する	index_col = 0
＜オプション＞先頭のカラムをインデックスに変更する	index_col = 0
＜オプション＞最初のカラムを行に設定する	index_col = 0
＜オプション＞n番目のカラムをインデックスに設定する	index_col = n
＜オプション＞n番目のカラムを行に設定する	index_col = n
＜オプション＞n番目のカラムをインデックスに変更する	index_col = n
＜オプション＞インデックスを自動的な連番に設定する	index_col = None
＜オプション＞行を自動的な連番に設定する	index_col = None
＜オプション＞どのカラムもインデックスに設定しない	index_col = None
＜オプション＞どのカラムも行に設定しない	index_col = None
＜オプション＞どの列もインデックスにしない	index_col = None
＜オプション＞先頭の行をヘッダに設定する	header = 0
＜オプション＞最初の行をヘッダに変更する	header = 0
＜オプション＞先頭の行をヘッダにセットする	header = 0
＜オプション＞先頭の行をカラムの名前に設定する	header = 0
＜オプション＞ヘッダを自動的な連番に設定する	header = None
＜オプション＞カラムの名前を自動的な連番に設定する	header = None
＜オプション＞どの行もヘッダにしない	header = None
＜オプション＞どの行もヘッダに設定しない	header = None
＜オプション＞ヘッダをnamesに設定する	header = names
＜オプション＞ヘッダをnamesに増やす	header = names
＜オプション＞ヘッダをnamesに指定する	header = names
＜オプション＞ヘッダをnamesに減らす	header = names
＜オプション＞namesをカラムの名前に設定する	names = names
＜オプション＞namesを列名に設定する	names = names
＜オプション＞namesをカラム名に設定する	names = names
＜オプション＞namesを列の名前に変更する	names = names
＜オプション＞namesをカラム名に変更する	names = names
＜オプション＞namesをカラムの名前にセットする	names = names
＜オプション＞読み込む行番号をnamesで指定する	usecols = names
＜オプション＞読み込まない列番号をnamesで指定する	skiprows = names
＜オプション＞スキップする列番号をnamesで指定する	skiprows = names
＜オプション＞読み込まないフッタをnに設定する	skipfooter = n
＜オプション＞スキップするフッタをnにセットする	skipfooter = n
＜オプション＞スキップするフッタをnに設定する	skipfooter = n
＜オプション＞読み込まないフッタをnにセットする	skipfooter = n
TSVファイルをヘッダを指定せず読み込む	pd.read_csv(filename, header=None)
TSVファイルをヘッダなしで読む	pd.read_csv(filename, header=None)
ヘッダを指定せずTSVを読み込む	pd.read_csv(filename, header=None)
TSVファイルをヘッダを指定せず読む	pd.read_csv(filename, header=None)
CSVファイルTSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
CSVTSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
CSVTSVファイルをn番目のカラムをインデックスとして読む	pd.read_csv(filename, index_col=n)
CSVファイルTSVファイルをn番目のカラムを行として読み込む	pd.read_csv(filename, index_col=n)
カンマ区切りのファイルTSVをn番目のカラムを行として読み込む	pd.read_csv(filename, index_col=n)
n番目の列をインデックスにしてCSVファイルTSVファイルを読む	pd.read_csv(filename, index_col=n)
CSVファイルTSVをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列タブ区切りのファイルからCSVファイルをn番目のカラムをインデックスとして読み込む	pd.read_csv(filename, index_col=n)
文字列タブ区切りのファイルからCSVをn番目のカラムをインデックスとして読む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからn番目のカラムを行にしてCSVファイルを読み込む	pd.read_csv(filename, index_col=n)
文字列TSVファイルからCSVファイルをn番目のカラムをインデックスにして読む	pd.read_csv(filename, index_col=n)
TSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
SJISでTSVファイルを読み込む	pd.read_csv(filename, encoding='shift_jis')
SJISでTSVファイルを読む	pd.read_csv(filename, encoding='shift_jis')
SJISでTSVを読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからCSVファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからカンマ区切りのファイルをSJISで読み込む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからSJISでCSVを読む	pd.read_csv(filename, encoding='shift_jis')
TSVファイルからCSVファイルをSJISで読む	pd.read_csv(filename, encoding='shift_jis')
TSVからCSVをSJISで読む	pd.read_csv(filename, encoding='shift_jis')
TSVからSJISでCSVファイルを読み込む	pd.read_csv(filename, encoding='shift_jis')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データフレームをTSV形式のファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSV形式のファイルからデータフレームを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
データフレームをTSVファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
タブ区切りのファイルからデータフレームを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルからデータフレームを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
タブ区切りのファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVを読む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSVを読み込む	pd.read_csv(filename, sep='\t', encoding='utf-8')
TSV形式のファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
データフレームをTSV形式のファイルから読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVからデータフレームを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルからデータフレームを読む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルをデータフレームとして読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
データフレームとしてTSVを読み込む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVファイルを読む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
TSVを読む	pd.read_csv(filename, sep='\t', encoding='shift_jis')
JSONL形式のファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
JSONL形式のファイルからデータフレームを読む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONL形式のファイルから読む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONL形式のファイルから読み込む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルからデータフレームを読み込む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONLファイルから読み込む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONLファイルから読む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルを読み込む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルをデータフレームとして読み込む	pd.read_json(filename, orient='records', lines=True)
JSONLファイルをデータフレームとして読む	pd.read_json(filename, orient='records', lines=True)
データフレームをJSONLファイルに保存する	df.to_excel(filename)
JSONLファイルにデータフレームを保存する	df.to_excel(filename)
データフレームをエクセルファイルファイルでJSONLファイルに保存する	df.to_excel(filename)
JSONLファイルにエクセルファイルファイルとしてデータフレームを保存する	df.to_excel(filename)
JSONLファイルにエクセルファイルファイルを用いてデータフレームを保存する	df.to_excel(filename)
データフレームをエクセルデータファイルとしてJSONLファイルに書き込む	df.to_excel(filename)
データフレームをエクセルファイルを用いてJSONLファイルに保存する	df.to_excel(filename)
データフレームをエクセルファイルファイルでJSONLファイルに書き込む	df.to_excel(filename)
データフレームをエクセルファイル形式でJSONLファイルに書き込む	df.to_excel(filename)
データフレームをJSONLファイルに保存する	df.to_csv(filename)
JSONLファイルにデータフレームを保存する	df.to_csv(filename)
データフレームをCSVファイルでJSONLファイルに保存する	df.to_csv(filename)
データフレームをCSVファイルを使ってJSONLファイルに保存する	df.to_csv(filename)
データフレームをCSV形式としてJSONLファイルに書き込む	df.to_csv(filename)
データフレームをCSV形式でJSONLファイルに書き込む	df.to_csv(filename)
データフレームをCSV形式でJSONLファイルに保存する	df.to_csv(filename)
データフレームをCSVファイルでJSONLファイルに書き込む	df.to_csv(filename)
データフレームをJSONLファイルに保存する	df.to_csv(filename, sep='\t')
JSONLファイルにデータフレームを保存する	df.to_csv(filename, sep='\t')
データフレームをタブ区切りでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをJSONLファイルにタブ区切りで保存する	df.to_csv(filename, sep='\t')
タブ区切りでJSONLファイルにデータフレームを保存する	df.to_csv(filename, sep='\t')
JSONLファイルにデータフレームをタブ区切りで保存する	df.to_csv(filename, sep='\t')
データフレームをTSVファイルでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
TSVファイルとしてJSONLファイルにデータフレームを保存する	df.to_csv(filename, sep='\t')
データフレームをTSVファイルとしてJSONLファイルに保存する	df.to_csv(filename, sep='\t')
TSVを用いてデータフレームをJSONLファイルに保存する	df.to_csv(filename, sep='\t')
データフレームをTSVでJSONLファイルに保存する	df.to_csv(filename, sep='\t')
JSONLファイルにデータフレームをTSVとして保存する	df.to_csv(filename, sep='\t')
データフレームをJSONLファイルにヘッダを付けずに保存する	df.to_csv(filename, header=None)
ヘッダを付けずにデータフレームをJSONLファイルに保存する	df.to_csv(filename, header=None)
データフレームをJSONLファイルにカラムの名前を付けずに保存する	df.to_csv(filename, header=None)
データフレームをJSONLファイルにヘッダを付けずに書き込む	df.to_csv(filename, header=None)
JSONLファイルにヘッダを付けずにデータフレームを保存する	df.to_csv(filename, header=None)
データフレームをJSONLファイルにインデックスを付けずに保存する	df.to_csv(filename, index=None)
データフレームをJSONLファイルに行を付けずに書き込む	df.to_csv(filename, index=None)
行を付けずにデータフレームをJSONLファイルに保存する	df.to_csv(filename, index=None)
データフレームをインデックスを付けずにJSONLファイルに保存する	df.to_csv(filename, index=None)
インデックスを付けずにデータフレームをJSONLファイルに保存する	df.to_csv(filename, index=None)
データフレームをJSONLファイルにBOM付きで保存する	df.to_csv(filename, encoding='utf_8_sig')
BOM付きでデータフレームをJSONLファイルに保存する	df.to_csv(filename, encoding='utf_8_sig')
データフレームをJSONLファイルに文字化けしないように保存する	df.to_csv(filename, encoding='utf_8_sig')
データフレームをBOM付きでJSONLファイルに保存する	df.to_csv(filename, encoding='utf_8_sig')
データフレームをJSONLファイルにBOMを付けて保存する	df.to_csv(filename, encoding='utf_8_sig')
データフレームをJSONLファイルにSJISで保存する	df.to_csv(filename, encoding='shift_jis')
SJISでJSONLファイルにデータフレームを保存する	df.to_csv(filename, encoding='shift_jis')
SJISでデータフレームをJSONLファイルに保存する	df.to_csv(filename, encoding='shift_jis')
JSONLファイルにSJISでデータフレームを保存する	df.to_csv(filename, encoding='shift_jis')
データフレームをJSONLファイルにSJISで書き込む	df.to_csv(filename, encoding='shift_jis')
保存するCSVファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
書き込むCSVの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
保存するCSVの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
保存するCSVファイルの小数点以下の桁数を指定する	df.to_csv(filename, float_format='%.3f')
保存するカンマ区切りのファイルの小数点以下の桁数をする	df.to_csv(filename, float_format='%.3f')
保存するカンマ区切りのファイルの小数点以下の桁数を設定する	df.to_csv(filename, float_format='%.3f')
データフレームをJSONLファイルに小数点以下3桁まで保存する	df.to_csv(filename, float_format='%.3f')
データフレームをJSONLファイルに小数点以下3桁まで書き込む	df.to_csv(filename, float_format='%.3f')
JSONLファイルにデータフレームを小数点以下3桁まで書き込む	df.to_csv(filename, float_format='%.3f')
データフレームを列の値によってグループ化する	df.groupby(column)
データフレームを列の値でグループ化する	df.groupby(column)
列によってデータフレームをグループ化する	df.groupby(column)
データフレームを列によってグループ分けする	df.groupby(column)
列の値によってデータフレームをグループ化する	df.groupby(column)
データフレームを列によってまとめたグループ	df.groupby(column)
列でデータフレームをまとめたグループ	df.groupby(column)
列の値によってデータフレームをまとめたグループ	df.groupby(column)
データフレームを列でまとめたグループ	df.groupby(column)
データフレームを列によってまとめたグループを使う	df.groupby(column)
データフレームを列でまとめたグループを使う	df.groupby(column)
データフレームを'A'列の値によってグループ化する	df.groupby('A')
データフレームを'A'列の値で分類する	df.groupby('A')
データフレームを'A'列の値でグループ分けする	df.groupby('A')
データフレームを'A'列によってまとめたグループ	df.groupby('A')
データフレームを'A'列によってまとめた表	df.groupby('A')
データフレームを'A'列によってまとめた表を見る	df.groupby('A')
データフレームを'A'列でまとめた表	df.groupby('A')
'A'列によってデータフレームをまとめたグループ	df.groupby('A')
データフレームを'A'列でまとめたグループを使う	df.groupby('A')
データフレームを'A'列の値によってまとめたグループ	df.groupby('A')
データフレームを二つの列の値によってグループ化する	df.groupby(['A', 'B'])
データフレームを二つの列の値でグループ化する	df.groupby(['A', 'B'])
データフレームを2つの列によってグループ化する	df.groupby(['A', 'B'])
データフレームを二つの列の値によって集約する	df.groupby(['A', 'B'])
データフレームを'A'列と'B'列の値でグループ化する	df.groupby(['A', 'B'])
データフレームを二つの列によってまとめたグループ	df.groupby(['A', 'B'])
二つの列によってデータフレームをまとめたグループを使う	df.groupby(['A', 'B'])
データフレームを二つの列の値でまとめたグループ	df.groupby(['A', 'B'])
二つの列の値でデータフレームをまとめた表を使う	df.groupby(['A', 'B'])
二つの列によってデータフレームをまとめたグループ	df.groupby(['A', 'B'])
データフレームを'A'列と'B'列によってまとめたグループ	df.groupby(['A', 'B'])
二つの列でデータフレームをまとめた表	df.groupby(['A', 'B'])
データフレームを複数の列の値によってグループ化する	df.groupby(columns)
複数の列の値によってデータフレームをグループ化する	df.groupby(columns)
列名リストの値によってデータフレームをグループ化する	df.groupby(columns)
データフレームを複数の列によって集約する	df.groupby(columns)
複数の列の値によってデータフレームを集約する	df.groupby(columns)
データフレームを複数の列によってまとめたグループ	df.groupby(columns)
データフレームを複数の列でまとめた表	df.groupby(columns)
列名リストでデータフレームをまとめたグループ	df.groupby(columns)
データフレームを列名リストによってまとめたグループ	df.groupby(columns)
データフレームを列名リストによってまとめた表	df.groupby(columns)
データフレームを関数の値によってグループ化する	df.groupby(関数)
関数の値でデータフレームをグループ化する	df.groupby(関数)
関数の値でデータフレームを集約する	df.groupby(関数)
データフレームを関数の値でグループ化する	df.groupby(関数)
データフレームを関数によってまとめたグループ	df.groupby(関数)
データフレームを関数によってまとめた表	df.groupby(関数)
関数でデータフレームをまとめたグループ	df.groupby(関数)
データフレームを関数の値によってまとめたグループ	df.groupby(関数)
表データを関数によってまとめたグループ	df.groupby(関数)
関数の値によってデータフレームをまとめたグループ	df.groupby(関数)
データフレームを列の値によってグループ化し、要約統計量を求める	df.groupby(column).describe()
データフレームを列の値によってグループ化し、基本統計量を求める	df.groupby(column).describe()
列の値によってデータフレームをグループ化し、基本統計量を計算する	df.groupby(column).describe()
列の値によってデータフレームをグループ化し、要約統計量を求める	df.groupby(column).describe()
列の値によってデータフレームをグループ化し、記述統計量を計算する	df.groupby(column).describe()
列の値でデータフレームをグループ化し、要約統計量を求める	df.groupby(column).describe()
データフレームを'A'列の値によってグループ化し、要約統計量を求める	df.groupby('A').describe()
データフレームを'A'列の値によってグループ化し、要約統計量を算出する	df.groupby('A').describe()
データフレームを'A'列の値によってグループ化し要約統計量を求める	df.groupby('A').describe()
'A'列の値によってデータフレームをグループ化し、要約統計量を計算する	df.groupby('A').describe()
データフレームを'A'列の値によってグループ化し、要約統計量を計算する	df.groupby('A').describe()
'A'列によってデータフレームをグループ化し要約統計量を求める	df.groupby('A').describe()
データフレームを'A'列でグループ化し基本統計量を求める	df.groupby('A').describe()
データフレームを二つの列の値によってグループ化し、要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを'A'列と'B'列の値によってグループ化し要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを2つの列の値によってグループ化し要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを二つの列の値でグループ化し、要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを２つの列の値によってグループ化し要約統計量を求める	df.groupby(['A', 'B']).describe()
データフレームを二つの列の値でグループ化し、要約統計量を算出する	df.groupby(['A', 'B']).describe()
データフレームを複数の列の値によってグループ化し、要約統計量を求める	df.groupby(columns).describe()
列名リストの値でデータフレームをグループ化し要約統計量を求める	df.groupby(columns).describe()
データフレームを複数の列の値でグループ化し、要約統計量を求める	df.groupby(columns).describe()
データフレームを複数の列の値によってグループ化し要約統計量を求める	df.groupby(columns).describe()
データフレームを複数の列によってグループ化し要約統計量を求める	df.groupby(columns).describe()
データフレームを複数の列の値によってグループ化し、要約統計量を算出する	df.groupby(columns).describe()
データフレームを複数の列でグループ化し、要約統計量を算出する	df.groupby(columns).describe()
データフレームを関数の値によってグループ化し、要約統計量を求める	df.groupby(関数).describe()
関数の値でデータフレームをグループ化し要約統計量を計算する	df.groupby(関数).describe()
データフレームを関数によってグループ化し、要約統計量を計算する	df.groupby(関数).describe()
データフレームを関数でグループ化し、要約統計量を求める	df.groupby(関数).describe()
データフレームを関数によってグループ化し、要約統計量を求める	df.groupby(関数).describe()
データフレームを関数の値でグループ化し、要約統計量を求める	df.groupby(関数).describe()
データフレームを関数の値によってグループ化し、要約統計量を計算する	df.groupby(関数).describe()
データフレームを欠損値を含めて列の値でグループ化する	df.groupby(column, dropna=False)
データフレームをNaNを含めて列の値でグループ化する	df.groupby(column, dropna=False)
データフレームを欠損値を含めて列で分類する	df.groupby(column, dropna=False)
データフレームを欠損値を含めて列の値で集約する	df.groupby(column, dropna=False)
欠損値を含めてデータフレームを列でグループ化する	df.groupby(column, dropna=False)
列の値で未入力値を含めてデータフレームを集計する	df.groupby(column, dropna=False)
＜オプション＞欠損値は無視する	dropna = True
＜オプション＞未入力値は無視する	dropna = True
＜オプション＞欠損値も無視しない	dropna = True
＜オプション＞NaNも無視しない	dropna = True
データフレームを列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを列の値によって分類して列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを列にグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを列によって集約して列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを列の値でグループ化して、列挙する	[(name, group) for name, group in df.groupby(column)]
データフレームを'A'列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
'A'列の値によってデータフレームをグループ分けして、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列によってグループ化し、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列の値によってグループ分けして、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列ごとにグループ化し、、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列の値でグループ化して、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを'A'列の値にグループ化し、、列挙する	[(name, group) for name, group in df.groupby('A')]
データフレームを二つの列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを二つの列の値によって集約して列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを'A'列と'B'列の値によってグループ分けして列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
二つの列の値ごとにデータフレームをグループ化して、列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
二つの列によってデータフレームを集計して列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
二つの列の値によってデータフレームを集約して列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
２つの列の値によってデータフレームをグループ化して列挙する	[(name, group) for name, group in df.groupby(['A', 'B'])]
データフレームを複数の列の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを複数の列によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
複数の列ごとにデータフレームをグループ化して、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを複数の列ごとにグループ化して列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを複数の列の値によってグループ化し、、列挙する	[(name, group) for name, group in df.groupby(columns)]
データフレームを関数の値によってグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを関数の値毎にグループ化し、、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを関数の値ごとに集計して、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを関数の値によって集約し、、列挙する	[(name, group) for name, group in df.groupby(関数)]
関数の値によってデータフレームをグループ化し、、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを関数の値ごとにグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
関数の値ごとにデータフレームをグループ化して、列挙する	[(name, group) for name, group in df.groupby(関数)]
データフレームを各列毎にグループ化して、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎にグループ化して、文字列というグループを求める	df.groupby(column).get_group(s)
データフレームを各列毎にグループ化し、、文字列というグループを使う	df.groupby(column).get_group(s)
データフレームを各列毎に集約して文字列という名前のグループを使う	df.groupby(column).get_group(s)
データフレームを列でグループ化して、それぞれのグループごとの件数を知る	df.groupby(column).size()
列でデータフレームをグループ化して、各グループ毎の件数を知る	df.groupby(column).size()
データフレームを列としてグループ化して、それぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを列で集約して、それぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを列を使ってグループ分けして、それぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを列でグループ化し、、それぞれのグループごとの件数を知る	df.groupby(column).size()
データフレームを各列毎にグループ化して、文字列というグループの個数を求める	df.groupby(column).size()[s]
データフレームを各列毎にグループ化して、文字列というグループの大きさを計算する	df.groupby(column).size()[s]
表データを各列毎に分類して、文字列というグループの大きさを求める	df.groupby(column).size()[s]
データフレームを各列毎に集約して、文字列というグループの個数を求める	df.groupby(column).size()[s]
データフレームを各列毎に分類し、、文字列というグループの大きさを求める	df.groupby(column).size()[s]
データフレームのそれぞれのグループごとの合計	df.groupby(column).sum()
データフレームのグループごとの合計	df.groupby(column).sum()
データフレームのそれぞれのグループの合計	df.groupby(column).sum()
データフレームのそれぞれのグループごとの合計を求める	df.groupby(column).sum()
データフレームを列によってグループ化して、それぞれのグループごとの合計を求める	df.groupby(column).sum()
データフレームを列ごとにグループ分けし、、合計を求める	df.groupby(column).sum()
列によってデータフレームをグループ化して、それぞれのグループごとの合計を求める	df.groupby(column).sum()
データフレームを列によってグループ化し、、グループごとの合計を計算する	df.groupby(column).sum()
データフレームを列の値によってグループ化し、、それぞれのグループの合計を求める	df.groupby(column).sum()
データフレームを列によって集計してそれぞれのグループごとの合計を計算する	df.groupby(column).sum()
データフレームを列の値でグループ化して、各グループ毎の合計を求める	df.groupby(column).sum()
データフレームのそれぞれのグループごとの平均値	df.groupby(column).mean()
データフレームのそれぞれのグループ毎の平均値	df.groupby(column).mean()
データフレームの各グループごとの平均値を求める	df.groupby(column).mean()
データフレームを列によってグループ化して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
列ごとにデータフレームをグループ分けして平均値を求める	df.groupby(column).mean()
列によってデータフレームをグループ化して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
データフレームを列の値によって集約して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
データフレームを列の値によってグループ化して、グループごとの平均値を求める	df.groupby(column).mean()
データフレームを列によって分類して、それぞれのグループごとの平均値を求める	df.groupby(column).mean()
列によってデータフレームをグループ化し、平均値を求める	df.groupby(column).mean()
データフレームのそれぞれのグループごとの個数	df.groupby(column).count()
データフレームのグループごとの個数	df.groupby(column).count()
データフレームのグループ毎の個数	df.groupby(column).count()
データフレームのそれぞれのグループごとの個数を算出する	df.groupby(column).count()
表のそれぞれのグループごとの個数	df.groupby(column).count()
データフレームを列によってグループ化して、それぞれのグループごとの個数を求める	df.groupby(column).count()
列によって表をグループ化して、グループの個数を計算する	df.groupby(column).count()
データフレームを列の値でグループ化して、個数を求める	df.groupby(column).count()
データフレームを列によってグループ化し、各グループごとの個数を算出する	df.groupby(column).count()
データフレームを列でグループ化し、それぞれのグループ毎の個数を求める	df.groupby(column).count()
列によってデータフレームを集計して個数を求める	df.groupby(column).count()
データフレームのそれぞれのグループごとの最大値	df.groupby(column).max()
データフレームのそれぞれのグループ毎の最大値を求める	df.groupby(column).max()
表のそれぞれのグループごとの最大値	df.groupby(column).max()
データフレームのグループごとの最大値	df.groupby(column).max()
データフレームを列によってグループ化して、それぞれのグループごとの最大値を求める	df.groupby(column).max()
データフレームを列の値によって集計して最大値を求める	df.groupby(column).max()
データフレームを列によって集約してそれぞれのグループごとの最大値を求める	df.groupby(column).max()
データフレームを列の値毎に分類し、それぞれのグループごとの最大値を求める	df.groupby(column).max()
データフレームを列でグループ化し、、グループ毎の最大値を算出する	df.groupby(column).max()
データフレームを列毎にグループ分けしてそれぞれのグループごとの最大値を計算する	df.groupby(column).max()
データフレームを列に集約して、それぞれのグループ毎の最大値を求める	df.groupby(column).max()
データフレームのそれぞれのグループごとの最小値	df.groupby(column).min()
データフレームのそれぞれのグループの最小値	df.groupby(column).min()
データフレームの各グループごとの最小値を求める	df.groupby(column).min()
データフレームのグループごとの最小値を求める	df.groupby(column).min()
データフレームのそれぞれのグループごとの最小値を計算する	df.groupby(column).min()
データフレームを列によってグループ化して、それぞれのグループごとの最小値を求める	df.groupby(column).min()
データフレームを列ごとにグループ化し、、グループ毎の最小値を求める	df.groupby(column).min()
列によってデータフレームをグループ化し、、グループごとの最小値を求める	df.groupby(column).min()
列ごとにデータフレームを集約して、最小値を求める	df.groupby(column).min()
列毎にデータフレームをグループ化し、、最小値を求める	df.groupby(column).min()
データフレームを列の値によってグループ化し、最小値を算出する	df.groupby(column).min()
データフレームを列によって集約して、それぞれのグループ毎の最小値を求める	df.groupby(column).min()
データフレームのそれぞれのグループごとの分散	df.groupby(column).var()
データフレームのそれぞれのグループの分散	df.groupby(column).var()
データフレームのグループの分散	df.groupby(column).var()
データフレームの各グループごとの分散	df.groupby(column).var()
データフレームのそれぞれのグループ毎の分散	df.groupby(column).var()
データフレームを列によってグループ化して、それぞれのグループごとの分散を求める	df.groupby(column).var()
列の値ごとにデータフレームをグループ化し、、分散を求める	df.groupby(column).var()
データフレームを列の値ごとにグループ化してそれぞれのグループの分散を算出する	df.groupby(column).var()
データフレームを列によってグループ化して、分散を計算する	df.groupby(column).var()
データフレームを列によってグループ化して、それぞれのグループの分散を求める	df.groupby(column).var()
データフレームを列によってグループ化し、、それぞれのグループ毎の分散を算出する	df.groupby(column).var()
列にデータフレームをグループ化して、それぞれのグループの分散を求める	df.groupby(column).var()
データフレームのそれぞれのグループごとの標準偏差	df.groupby(column).std()
データフレームのそれぞれのグループ毎の標準偏差を求める	df.groupby(column).std()
データフレームのそれぞれのグループの標準偏差を計算する	df.groupby(column).std()
データフレームのそれぞれのグループごとの標準偏差を計算する	df.groupby(column).std()
データフレームを列によってグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
列ごとにデータフレームをグループ化し、、それぞれのグループごとの標準偏差を算出する	df.groupby(column).std()
表データを列ごとにグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
列の値でデータフレームをグループ化して、それぞれのグループごとの標準偏差を求める	df.groupby(column).std()
データフレームを列の値によってグループ化して、標準偏差を求める	df.groupby(column).std()
データフレームを列毎にグループ化し、、各グループごとの標準偏差を計算する	df.groupby(column).std()
列によってデータフレームをグループ化して、それぞれのグループごとの標準偏差を算出する	df.groupby(column).std()
データフレームを各列と列の組み合わせ毎にグループ化して、合計を求める	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎に集計して合計を求める	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎にグループ化して、合計を計算する	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎に集約して合計を求める	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎にグループ化し、、合計を計算する	df.groupby([column, column2], as_index=False).sum()
データフレームを各列と列の組み合わせ毎にグループ化して、平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎にグループ化して平均値を算出する	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎に分類して、平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎にグループ分けして、平均値を求める	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎にグループ化して、平均値を計算する	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎に分類して、平均値を算出する	df.groupby([column, column2], as_index=False).mean()
データフレームを各列と列の組み合わせ毎にグループ化して、個数を求める	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎にグループ化して個数を求める	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎にグループ化し、、個数を計算する	df.groupby([column, column2], as_index=False).count()
データフレームを各カラムと列の組み合わせ毎にグループ化し、、個数を求める	df.groupby([column, column2], as_index=False).count()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎に集約して、最大値を計算する	df.groupby([column, column2], as_index=False).max()
データフレームを各列とカラムの組み合わせ毎にグループ化して、最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して、最大値を計算する	df.groupby([column, column2], as_index=False).max()
表を各列と列の組み合わせ毎にグループ化して、最大値を算出する	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎に集約して、最大値を求める	df.groupby([column, column2], as_index=False).max()
データフレームを各列と列の組み合わせ毎にグループ化して、最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ分けして、最小値を計算する	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎に集計し、最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ化し、、最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ化して最小値を求める	df.groupby([column, column2], as_index=False).min()
データフレームを各列と列の組み合わせ毎にグループ化して、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎に集約し、、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎に集計し、分散を計算する	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化し、分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化して分散を求める	df.groupby([column, column2], as_index=False).var()
データフレームを各カラムと列の組み合わせ毎にグループ分けして、分散を計算する	df.groupby([column, column2], as_index=False).var()
データフレームを各列と列の組み合わせ毎にグループ化して、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ化して標準偏差を算出する	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎にグループ化し、標準偏差を求める	df.groupby([column, column2], as_index=False).std()
データフレームを各列と列の組み合わせ毎に分類して、標準偏差を算出する	df.groupby([column, column2], as_index=False).std()
データフレームをグループ化し、それぞれの列に対し合計を求める	df.groupby(column)[column2].sum()
データフレームをグループ化し各列に対し合計を計算する	df.groupby(column)[column2].sum()
データフレームをグループ化し、各列に対し合計を計算する	df.groupby(column)[column2].sum()
データフレームを各列毎にグループ化して、列の合計を求める	df.groupby(column)[column2].sum()
表を各列毎にグループ化して、列の合計を計算する	df.groupby(column)[column2].sum()
各列毎にデータフレームをグループ化し、、列の合計を求める	df.groupby(column)[column2].sum()
表データを各列毎に集約して、列の合計を求める	df.groupby(column)[column2].sum()
データフレームを各列毎にグループ化して列の合計を求める	df.groupby(column)[column2].sum()
データフレームを各列毎にグループ化し、、列の合計を求める	df.groupby(column)[column2].sum()
データフレームをグループ化し、それぞれの列に対し平均値を求める	df.groupby(column)[column2].mean()
データフレームをグループ化しそれぞれの列に対し平均値を求める	df.groupby(column)[column2].mean()
データフレームをグループ化し各列に対し平均値を求める	df.groupby(column)[column2].mean()
データフレームをグループ化し、各列に対し平均値を求める	df.groupby(column)[column2].mean()
データフレームを各列毎にグループ化して、列の平均値を求める	df.groupby(column)[column2].mean()
データフレームを各列毎にグループ化して列の平均値を求める	df.groupby(column)[column2].mean()
データフレームを各列毎にグループ分けして、列の平均値を計算する	df.groupby(column)[column2].mean()
データフレームを各列毎に集約し、、列の平均値を算出する	df.groupby(column)[column2].mean()
データフレームを各列毎にグループ化して、列の平均値を算出する	df.groupby(column)[column2].mean()
データフレームをグループ化し、それぞれの列に対し個数を求める	df.groupby(column)[column2].count()
データフレームをグループ化しそれぞれの列に対し個数を求める	df.groupby(column)[column2].count()
データフレームをグループ化しそれぞれの列に対し個数を算出する	df.groupby(column)[column2].count()
データフレームをグループ化し、各列に対し個数を計算する	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化して、列の個数を求める	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化して、列の個数を計算する	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化して、列の個数を算出する	df.groupby(column)[column2].count()
各列毎にデータフレームをグループ化し、、列の個数を算出する	df.groupby(column)[column2].count()
データフレームを各列毎に集約して、列の個数を求める	df.groupby(column)[column2].count()
データフレームを各列毎にグループ化し、、列の個数を求める	df.groupby(column)[column2].count()
データフレームを各列毎に集計して列の個数を計算する	df.groupby(column)[column2].count()
データフレームをグループ化し、それぞれの列に対し最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、列に対し最大値を計算する	df.groupby(column)[column2].max()
データフレームをグループ化し、列に対し最大値を求める	df.groupby(column)[column2].max()
データフレームを各列毎にグループ化して、列の最大値を求める	df.groupby(column)[column2].max()
データフレームを各列毎にグループ化して、列の最大値を計算する	df.groupby(column)[column2].max()
データフレームを各列毎にグループ化し、、列の最大値を計算する	df.groupby(column)[column2].max()
表データを各列毎にグループ化して、カラムの最大値を求める	df.groupby(column)[column2].max()
各カラム毎にデータフレームをグループ化して、列の最大値を求める	df.groupby(column)[column2].max()
各列毎にデータフレームをグループ化して、列の最大値を求める	df.groupby(column)[column2].max()
各列毎にデータフレームを集約して、列の最大値を求める	df.groupby(column)[column2].max()
データフレームをグループ化し、それぞれの列に対し最小値を求める	df.groupby(column)[column2].min()
データフレームをグループ化しそれぞれの列に対し最小値を計算する	df.groupby(column)[column2].min()
データフレームをグループ化し列に対し最小値を計算する	df.groupby(column)[column2].min()
データフレームをグループ化し、それぞれの列に対し最小値を計算する	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化して、列の最小値を求める	df.groupby(column)[column2].min()
各列毎にデータフレームを集約し、、列の最小値を算出する	df.groupby(column)[column2].min()
データフレームを各列毎に集約し、列の最小値を求める	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化し、列の最小値を求める	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化して、列の最小値を計算する	df.groupby(column)[column2].min()
データフレームを各列毎にグループ化し、、列の最小値を計算する	df.groupby(column)[column2].min()
表を各列毎にグループ分けして、列の最小値を求める	df.groupby(column)[column2].min()
データフレームをグループ化し、それぞれの列に対し分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化し各列に対し分散を求める	df.groupby(column)[column2].var()
表データをグループ化し、各列に対し分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化し、それぞれの列に対し分散を算出する	df.groupby(column)[column2].var()
データフレームをグループ化し、それぞれの列に対し分散を計算する	df.groupby(column)[column2].var()
データフレームを各列毎にグループ化して、列の分散を求める	df.groupby(column)[column2].var()
データフレームを各列毎にグループ分けし、、列の分散を算出する	df.groupby(column)[column2].var()
データフレームを各列毎にグループ化して、列の分散を算出する	df.groupby(column)[column2].var()
データフレームを各列毎に集約し、、列の分散を求める	df.groupby(column)[column2].var()
データフレームをグループ化し、それぞれの列に対し標準偏差を求める	df.groupby(column)[column2].std()
データフレームをグループ化し、列に対し標準偏差を求める	df.groupby(column)[column2].std()
データフレームをグループ化しそれぞれの列に対し標準偏差を求める	df.groupby(column)[column2].std()
データフレームをグループ化し、それぞれの列に対し標準偏差を計算する	df.groupby(column)[column2].std()
データフレームをグループ化し、列に対し標準偏差を計算する	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化して、列の標準偏差を求める	df.groupby(column)[column2].std()
各列毎にデータフレームを分類し、、列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームを各列毎に集約し、列の標準偏差を求める	df.groupby(column)[column2].std()
データフレームを各列毎にグループ分けして、列の標準偏差を計算する	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化して、列の標準偏差を計算する	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化して、列の標準偏差を算出する	df.groupby(column)[column2].std()
データフレームを各列毎にグループ化してカラムの標準偏差を求める	df.groupby(column)[column2].std()
データフレームを列でグループ化して、列の要約統計量を求める	df.groupby(column).describe()[column2]
データフレームを列でグループ化して、列の要約統計量を計算する	df.groupby(column).describe()[column2]
データフレームを列でグループ化して、列の要約統計量を算出する	df.groupby(column).describe()[column2]
データフレームを列で集約して、列の要約統計量を算出する	df.groupby(column).describe()[column2]
データフレームを列でグループ分けして、列の要約統計量を求める	df.groupby(column).describe()[column2]
列で表データをグループ化して、列の要約統計量を算出する	df.groupby(column).describe()[column2]
データ列を使う	import pandas as pd
データ列を使用する	import pandas as pd
データ列をインポートする	import pandas as pd
データ列の各データ値の出現数	ds.value_counts()
データ列の各値の出現数	ds.value_counts()
データ列の各値の出現回数を求める	ds.value_counts()
データ列の各データ値の出現数を計算する	ds.value_counts()
列の各データ値の出現回数	ds.value_counts()
データ列の各データ値の出現数を求める	ds.value_counts()
データ列の各データが何回出現するか見る	ds.value_counts()
データ列の各データが何回出現するか確認する	ds.value_counts()
列の各データが何回出現するか見る	ds.value_counts()
データフレームの列の各データ値の出現数	df[col].value_counts()
データフレームの列の各値の出現数	df[col].value_counts()
データフレームのカラムの各データ値の出現数	df[col].value_counts()
データフレームの列の各データ値の出現回数を算出する	df[col].value_counts()
データフレームの列の各データが何回出現するか見る	df[col].value_counts()
列の各データが何回出現するか確認する	df[col].value_counts()
データフレームのカラムの各データが何回出現するか確認する	df[col].value_counts()
データフレームのカラムの各値が何回出現するか見る	df[col].value_counts()
データフレームの列の各データが何回出現するか調べる	df[col].value_counts()
データ列のユニークな値	ds.unique()
列のユニークな値	ds.unique()
データ列の一意な値	ds.unique()
列の一意な値	ds.unique()
データ列のユニークな要素	ds.unique()
データフレームの列のユニークな値	df[col].unique()
列のユニークな要素を調べる	df[col].unique()
列のユニークな要素	df[col].unique()
列のユニークな値	df[col].unique()
列の一意な値	df[col].unique()
データ列のユニークな値の個数	ds.nunique()
列のユニークな値の個数を見る	ds.nunique()
データ列のユニークな値の個数を調べる	ds.nunique()
列のユニークな値の個数	ds.nunique()
データフレームの列のユニークな値の個数	df[col].nunique()
データフレームの列のユニークな値の個数を見る	df[col].nunique()
データフレームの列のユニークな要素数	df[col].nunique()
カラムの一意な要素数	df[col].nunique()
データフレームの列の一意な要素数	df[col].nunique()
データフレームの列をカテゴリデータに変換する	df[col].astype(object)
データフレームの列をカテゴリデータにする	df[col].astype(object)
データ列をカテゴリデータに変換する	ds.astype(object)
列をカテゴリデータに変換する	ds.astype(object)
データフレームの列の文字列長を列として使う	df[col].str.len()
データフレームの列の文字列長を列として見る	df[col].str.len()
データフレームの列の文字列長を列として求める	df[col].str.len()
データフレームのカラムの文字列長を列として使う	df[col].str.len()
データ列の文字列長を列として使う	ds.str.len()
データ列の文字列長を列として見る	ds.str.len()
データフレームの列からユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
データフレームのカラムからユニークな値を抽出し、リスト化する	df[col].unique().tolist()
データフレームのカラムからユニークな要素を抽出し、リスト化する	df[col].unique().tolist()
データフレームの列からユニークな値を抽出しリスト化する	df[col].unique().tolist()
データフレームの列からユニークな値を抽出し、リスト化する	df[col].unique().tolist()
データ列からユニークな要素を抽出し、リスト化する	ds.unique().tolist()
データ列からユニークな値を抽出し、リスト化する	ds.unique().tolist()
列からユニークな要素を抽出し、リスト化する	ds.unique().tolist()
データ列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
列とデータ列から重複を取り除く	set(ds.unique().tolist()+ds2.unique().tolist())
データフレームの列を型に変換する	df[col] = df[col].astype(ty)
データフレームのカラムを型にする	df[col] = df[col].astype(ty)
データ列をビン数nでビン分割する	pd.cut(ds, n)
データ列をビン数nを用いてビン分割する	pd.cut(ds, n)
列をビン数nとしてビン分割する	pd.cut(ds, n)
列を分割数nとしてビンニングする	pd.cut(ds, n)
データ列をビン数nで分割する	pd.cut(ds, n)
データ列をビン数nとしてビン分割する	pd.cut(ds, n)
データ列を等間隔でn個にビン分割する	pd.cut(ds, n)
データ列をn個にビン分割する	pd.cut(ds, n)
データ列をn個に等間隔でビン分割する	pd.cut(ds, n)
データ列をn個に分割する	pd.cut(ds, n)
データフレームの中の列をビン数nでビン分割する	pd.cut(df[col], n)
データフレームの中の列を分割数nでビン分割する	pd.cut(df[col], n)
データフレームの中のカラムをビン数nとしてビン分割する	pd.cut(df[col], n)
データフレームの中の列を分割数nで分割する	pd.cut(df[col], n)
データフレームの中の列をビン数nとして分割する	pd.cut(df[col], n)
データフレームの中の列をビン数nとしてビン分割する	pd.cut(df[col], n)
データフレームの中のカラムをビン数nでビンニングする	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個にビン分割する	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個にビンニングする	pd.cut(df[col], n)
データフレームの中の列を等間隔でn個にビニングする	pd.cut(df[col], n)
リストをビン数nでビン分割する	pd.cut(aList, n)
リストを分割数nでビニングする	pd.cut(aList, n)
リストをビン数nで分割する	pd.cut(aList, n)
リストをビン数nを使ってビン分割する	pd.cut(aList, n)
リストをビン数nとして分割する	pd.cut(aList, n)
リストをビン数nでビニングする	pd.cut(aList, n)
ビン数nを使ってリストをビン分割する	pd.cut(aList, n)
リストを等間隔でn個にビン分割する	pd.cut(aList, n)
リストをn個に等間隔でビン分割する	pd.cut(aList, n)
n個にリストを等間隔でビン分割する	pd.cut(aList, n)
n個にリストをビン分割する	pd.cut(aList, n)
リストをn個にビン分割する	pd.cut(aList, n)
配列をビン数nでビン分割する	pd.cut(aArray, n)
配列をビン数nでビンニングする	pd.cut(aArray, n)
ビン数nとして配列を分割する	pd.cut(aArray, n)
配列を分割数nでビン分割する	pd.cut(aArray, n)
配列を等間隔でn個にビン分割する	pd.cut(aArray, n)
配列をn個に等間隔でビン分割する	pd.cut(aArray, n)
等間隔でn個に配列を分割する	pd.cut(aArray, n)
等間隔で配列をn個に分割する	pd.cut(aArray, n)
配列をn個にビン分割する	pd.cut(aArray, n)
データ列をビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列を分割数nとして分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
列をビン数nで分割し、、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列を分割数nで分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をビン数nでビニングして、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をビン数nとしてビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
列をn個にビン分割してnamesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をn個にビン分割してnamesのラベルをつける	pd.cut(ds, n, labels=names)
列をn個に分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)
データ列をn個に分割し、、namesのラベルをつける	pd.cut(ds, n, labels=names)
データフレームの中の列をビン数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中のカラムを分割数nでビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
ビン数nでデータフレームの中の列をビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
ビン数nでデータフレームの中のカラムを分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中のカラムをビン数nでビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をビン数nでビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列を分割数nでビンニングして、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
n個にデータフレームの中の列をビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個にビン分割し、、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中のカラムを等間隔でn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中の列をn個にビニングして、namesのラベルをつける	pd.cut(df[col], n, labels=names)
データフレームの中のカラムをn個にビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)
リストをビン数nでビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをビン数nでビン分割し、namesのラベルをつける	pd.cut(aList, n, labels=names)
ビン数nでリストを分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
ビン数nでリストをビン分割してnamesのラベルをつける	pd.cut(aList, n, labels=names)
リストをビン数nで分割してnamesのラベルをつける	pd.cut(aList, n, labels=names)
ビン数nでリストを分割し、、namesのラベルをつける	pd.cut(aList, n, labels=names)
ビン数nでリストをビニングして、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個にビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
n個にリストをビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
リストを等間隔でn個に分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
等間隔でn個にリストをビンニングしてnamesのラベルをつける	pd.cut(aList, n, labels=names)
リストをn個に等間隔でビン分割して、namesのラベルをつける	pd.cut(aList, n, labels=names)
配列をビン数nでビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
分割数nで配列をビン分割してnamesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をビン数nでビン分割し、、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をビン数nとして分割してnamesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をビン数nを用いて分割してnamesのラベルをつける	pd.cut(aArray, n, labels=names)
ビン数nを使って配列を分割し、、namesのラベルをつける	pd.cut(aArray, n, labels=names)
ビン数nを用いて配列をビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個にビン分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個に等間隔でビニングし、、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個に等間隔でビン分割し、、namesのラベルをつける	pd.cut(aArray, n, labels=names)
配列をn個に等間隔で分割して、namesのラベルをつける	pd.cut(aArray, n, labels=names)
データ列を等量でビン数nでビン分割する	pd.qcut(ds, n)
データ列を等量で分割数nを用いて分割する	pd.qcut(ds, n)
列を等量でビン数nを用いてビン分割する	pd.qcut(ds, n)
ビン数nとして等量で列を分割する	pd.qcut(ds, n)
データ列を等量でビン数nを使って分割する	pd.qcut(ds, n)
データ列を等量でn個にビン分割する	pd.qcut(ds, n)
列をn個に等量でビン分割する	pd.qcut(ds, n)
データ列を等量でn個に分割する	pd.qcut(ds, n)
データ列を等しい量になるようにn個にビン分割する	pd.qcut(ds, n)
列を等量でn個にビンニングする	pd.qcut(ds, n)
データフレームの中の列を等量でビン数nでビン分割する	pd.qcut(df[col], n)
データフレームの中の列を等量でビン数nとしてビン分割する	pd.qcut(df[col], n)
データフレームの中の列をビン数nで等量でビン分割する	pd.qcut(df[col], n)
ビン数nとして等量でデータフレームの中の列を分割する	pd.qcut(df[col], n)
ビン数nでデータフレームの中の列を等量で分割する	pd.qcut(df[col], n)
データフレームの中の列を等しい量になるようにビン数nで分割する	pd.qcut(df[col], n)
データフレームの中の列を等量でn個にビン分割する	pd.qcut(df[col], n)
データフレームの中の列をn個に等しい量になるようにビン分割する	pd.qcut(df[col], n)
n個にデータフレームの中のカラムを等しい量になるようにビン分割する	pd.qcut(df[col], n)
n個に等量でデータフレームの中のカラムをビン分割する	pd.qcut(df[col], n)
n個にデータフレームの中の列を等量でビン分割する	pd.qcut(df[col], n)
データフレームの中のカラムを等しい量になるようにn個にビン分割する	pd.qcut(df[col], n)
データフレームの中の列をn個に等量でビン分割する	pd.qcut(df[col], n)
リストを等量でビン数nでビン分割する	pd.qcut(aList, n)
等量でリストをビン数nで分割する	pd.qcut(aList, n)
等量でリストをビン数nでビン分割する	pd.qcut(aList, n)
ビン数nで等量でリストをビン分割する	pd.qcut(aList, n)
リストを分割数nとして等量でビン分割する	pd.qcut(aList, n)
リストを等しい量になるようにビン数nでビン分割する	pd.qcut(aList, n)
リストを等量でn個にビン分割する	pd.qcut(aList, n)
リストを等量でn個にビニングする	pd.qcut(aList, n)
等しい量になるようにn個にリストを分割する	pd.qcut(aList, n)
リストを等しい量になるようにn個にビニングする	pd.qcut(aList, n)
n個にリストを等量でビン分割する	pd.qcut(aList, n)
配列を等量でビン数nでビン分割する	pd.qcut(aArray, n)
配列をビン数nとして等量でビンニングする	pd.qcut(aArray, n)
配列を等量で分割数nでビン分割する	pd.qcut(aArray, n)
配列を等量で分割数nとしてビン分割する	pd.qcut(aArray, n)
配列をビン数nで等しい量になるようにビン分割する	pd.qcut(aArray, n)
配列を等量でn個にビン分割する	pd.qcut(aArray, n)
配列を等しい量になるようにn個にビン分割する	pd.qcut(aArray, n)
配列を等しい量になるようにn個にビニングする	pd.qcut(aArray, n)
n個に等量で配列を分割する	pd.qcut(aArray, n)
データ列をビン分割する	pd.cut(ds, aList)
列をビン分割する	pd.cut(ds, aList)
データ列をビンニングする	pd.cut(ds, aList)
データ列をリストを境界値としてビン分割する	pd.cut(ds, aList)
列をリストを境界値として分割する	pd.cut(ds, aList)
データフレームの中の列をビン分割する	pd.cut(df[col], aList)
データフレームの中の列を分割する	pd.cut(df[col], aList)
データフレームの中の列をリストを境界値としてビン分割する	pd.cut(df[col], aList)
リストを境界値としてデータフレームの中の列をビニングする	pd.cut(df[col], aList)
データフレームの中の列をリストを境界値として分割する	pd.cut(df[col], aList)
リストをビン分割する	pd.cut(aList, aList)
リストをリストを境界値としてビン分割する	pd.cut(aList, aList)
リストをリストを境界値としてビニングする	pd.cut(aList, aList)
リストをリストを境界値として分割する	pd.cut(aList, aList)
配列をビン分割する	pd.cut(aArray, aList)
配列をリストを境界値としてビン分割する	pd.cut(aArray, aList)
配列をリストを境界値としてビンニングする	pd.cut(aArray, aList)
リストを境界値として配列をビン分割する	pd.cut(aArray, aList)
データ列を中央値でビン分割する	pd.qcut(ds, 2)
中央値でデータ列をビン分割する	pd.qcut(ds, 2)
中央値で列をビン分割する	pd.qcut(ds, 2)
データ列を中央値で分割する	pd.qcut(ds, 2)
列を中央値でビン分割する	pd.qcut(ds, 2)
データフレームの中の列を中央値でビン分割する	pd.qcut(df[col], 2)
データフレームの中のカラムを中央値でビン分割する	pd.qcut(df[col], 2)
中央値でデータフレームの中のカラムをビンニングする	pd.qcut(df[col], 2)
リストを中央値でビン分割する	pd.qcut(aList, 2)
リストを中央値で分割する	pd.qcut(aList, 2)
中央値でリストをビン分割する	pd.qcut(aList, 2)
配列を中央値でビン分割する	pd.qcut(aArray, 2)
中央値で配列をビニングする	pd.qcut(aArray, 2)
中央値で配列を分割する	pd.qcut(aArray, 2)
配列を中央値でビニングする	pd.qcut(aArray, 2)
データ列を四分位数ごとにビン分割する	pd.qcut(ds, 4)
データ列を四分位数で分割する	pd.qcut(ds, 4)
四分位数ごとにデータ列をビン分割する	pd.qcut(ds, 4)
四分位数で列を分割する	pd.qcut(ds, 4)
データ列を四分位数でビニングする	pd.qcut(ds, 4)
データフレームの中の列を四分位数ごとにビン分割する	pd.qcut(df[col], 4)
四分位数ごとにデータフレームの中の列をビン分割する	pd.qcut(df[col], 4)
データフレームの中の列を四分位数でビン分割する	pd.qcut(df[col], 4)
四分位数でデータフレームの中の列を分割する	pd.qcut(df[col], 4)
リストを四分位数ごとにビン分割する	pd.qcut(aList, 4)
リストを四分位数ごとに分割する	pd.qcut(aList, 4)
リストを四分位数ごとにビンニングする	pd.qcut(aList, 4)
配列を四分位数ごとにビン分割する	pd.qcut(aArray, 4)
四分位数ごとに配列をビニングする	pd.qcut(aArray, 4)
四分位数で配列をビニングする	pd.qcut(aArray, 4)
四分位数ごとに配列を分割する	pd.qcut(aArray, 4)
配列を四分位数ごとにビニングする	pd.qcut(aArray, 4)
データフレームを列によってソートする	df.sort_values(by=column)
データフレームを列をキーにしてソートする	df.sort_values(by=column)
データフレームを列で整列する	df.sort_values(by=column)
データフレームを列でソートする	df.sort_values(by=column)
表データを列によってソートする	df.sort_values(by=column)
データフレームを列で並べる	df.sort_values(by=column)
データフレームを'A'列によってソートする	df.sort_values(by='A')
'A'列によってデータフレームを並べる	df.sort_values(by='A')
データフレームを'A'列によって並べる	df.sort_values(by='A')
'A'列でデータフレームをソートする	df.sort_values(by='A')
'A'列によってデータフレームをソートする	df.sort_values(by='A')
データフレームを二つの列によってソートする	df.sort_values(by=['A', 'B'])
データフレームを２つの列でソートする	df.sort_values(by=['A', 'B'])
データフレームを'A'列と'B'列で並べ直す	df.sort_values(by=['A', 'B'])
データフレームを二つの列によって並べる	df.sort_values(by=['A', 'B'])
データフレームを複数の列によってソートする	df.sort_values(by=column)
データフレームを複数の列をキーにしてソートする	df.sort_values(by=column)
データフレームを複数の列でソートする	df.sort_values(by=column)
データフレームを複数の列によって整列する	df.sort_values(by=column)
複数の列によってデータフレームをソートする	df.sort_values(by=column)
データフレームを列名リストによって整列する	df.sort_values(by=column)
データフレームを列によって昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを列で昇順に並べる	df.sort_values(by=column, ascending=True)
データフレームを列で昇順にソートする	df.sort_values(by=column, ascending=True)
列でデータフレームを小さい順にソートする	df.sort_values(by=column, ascending=True)
データフレームを列によって昇順に並べる	df.sort_values(by=column, ascending=True)
小さい順にデータフレームを列によって並べる	df.sort_values(by=column, ascending=True)
列で昇順にデータフレームをソートする	df.sort_values(by=column, ascending=True)
データフレームを'A'列によって昇順にソートする	df.sort_values(by='A', ascending=True)
昇順にデータフレームを'A'列で並べ直す	df.sort_values(by='A', ascending=True)
データフレームを'A'列によって小さい順に並べる	df.sort_values(by='A', ascending=True)
データフレームを'A'列によって昇順に整列する	df.sort_values(by='A', ascending=True)
データフレームを二つの列によって昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
昇順に'A'列と'B'列によってデータフレームを並べる	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを2つの列で小さい順に整列する	df.sort_values(by=['A', 'B'], ascending=True)
小さい順に二つの列によってデータフレームをソートする	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを二つの列で昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを昇順に'A'列と'B'列によって並べ直す	df.sort_values(by=['A', 'B'], ascending=True)
データフレームを複数の列によって昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを昇順に複数の列を用いて並べ直す	df.sort_values(by=column, ascending=True)
データフレームを列名リストによって昇順に並べ直す	df.sort_values(by=column, ascending=True)
昇順に複数の列でデータフレームをソートする	df.sort_values(by=column, ascending=True)
データフレームを昇順に複数の列によってソートする	df.sort_values(by=column, ascending=True)
複数の列でデータフレームを小さい順にソートする	df.sort_values(by=column, ascending=True)
データフレームを複数の列で昇順にソートする	df.sort_values(by=column, ascending=True)
データフレームを列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームを列を用いてで降順にソートする	df.sort_values(by=column, ascending=False)
降順に列でによってデータフレームをソートする	df.sort_values(by=column, ascending=False)
データフレームを列を用いてによって降順にソートする	df.sort_values(by=column, ascending=False)
降順にデータフレームを列によってでソートする	df.sort_values(by=column, ascending=False)
データフレームを列によってによって大きい順にソートする	df.sort_values(by=column, ascending=False)
列によってによってデータフレームを大きい順にソートする	df.sort_values(by=column, ascending=False)
データフレームを'A'列によってによって降順にソートする	df.sort_values(by='A', ascending=False)
データフレームを'A'列によってによって降順に並べる	df.sort_values(by='A', ascending=False)
降順にデータフレームを'A'列によってを用いてソートする	df.sort_values(by='A', ascending=False)
降順に'A'列でによってデータフレームをソートする	df.sort_values(by='A', ascending=False)
データフレームを'A'列によってで降順に並べる	df.sort_values(by='A', ascending=False)
データフレームを'A'列によってで降順に整列する	df.sort_values(by='A', ascending=False)
'A'列によってによって降順にデータフレームを並べる	df.sort_values(by='A', ascending=False)
データフレームを二つの列によってによって降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを二つの列によってで大きい順に並べ直す	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを'A'列と'B'列によってによって大きい順に並べ直す	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを二つの列を用いてによって降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを二つの列によってによって降順に並べ直す	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを二つの列でを用いて降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを2つの列によってによって降順にソートする	df.sort_values(by=['A', 'B'], ascending=False)
データフレームを複数の列によってによって降順にソートする	df.sort_values(by=column, ascending=False)
データフレームを降順に列名リストを用いてでソートする	df.sort_values(by=column, ascending=False)
降順に複数の列によってでデータフレームを並べ直す	df.sort_values(by=column, ascending=False)
データフレームを降順に列名リストでによって並べる	df.sort_values(by=column, ascending=False)
データフレームを複数の列によってで大きい順にソートする	df.sort_values(by=column, ascending=False)
降順に複数の列でによってデータフレームをソートする	df.sort_values(by=column, ascending=False)
データフレームを列によってソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを列によって整列して、更新する	df.sort_values(by=column, inplace=True)
列によってデータフレームをソートして、更新する	df.sort_values(by=column, inplace=True)
列によってデータフレームをソートし、、更新する	df.sort_values(by=column, inplace=True)
データフレームを列によって並べ直して、更新する	df.sort_values(by=column, inplace=True)
データフレームを列を用いてソートし、、更新する	df.sort_values(by=column, inplace=True)
データフレームを列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを列によってを用いて破壊的に並べる	df.sort_values(by=column, inplace=True)
データフレームを列を用いてによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを破壊的に列によってによって並べる	df.sort_values(by=column, inplace=True)
データフレームを列でで破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを'A'列によってソートして、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってソートして更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によって整列して、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列を用いてソートして、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によって整列し、、更新する	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってによって破壊的にソートする	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってで破壊的にソートする	df.sort_values(by='A', inplace=True)
データフレームを'A'列によってによって破壊的に並べる	df.sort_values(by='A', inplace=True)
データフレームを'A'列を用いてによって破壊的にソートする	df.sort_values(by='A', inplace=True)
'A'列によってによって破壊的にデータフレームを整列する	df.sort_values(by='A', inplace=True)
'A'列によってを用いて破壊的にデータフレームをソートする	df.sort_values(by='A', inplace=True)
データフレームを二つの列によってソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを'A'列と'B'列によってソートして、更新する	df.sort_values(by=['A', 'B'], inplace=True)
２つの列でデータフレームを並べて更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを'A'列と'B'列によって並べ直して、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列によって並べ直して更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列によって並べ直して、更新する	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを二つの列によってによって破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
破壊的に2つの列によってでデータフレームを整列する	df.sort_values(by=['A', 'B'], inplace=True)
'A'列と'B'列によってでデータフレームを破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを'A'列と'B'列を用いてで破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
二つの列によってで破壊的にデータフレームを並べ直す	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを破壊的に二つの列でで並べる	df.sort_values(by=['A', 'B'], inplace=True)
２つの列を用いてを用いてデータフレームを破壊的にソートする	df.sort_values(by=['A', 'B'], inplace=True)
データフレームを複数の列によってソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列によって並べ直して、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列で並べ直し、更新する	df.sort_values(by=column, inplace=True)
複数の列でデータフレームを並べ直して、更新する	df.sort_values(by=column, inplace=True)
複数の列でデータフレームを並べ、更新する	df.sort_values(by=column, inplace=True)
列名リストによってデータフレームをソートして、更新する	df.sort_values(by=column, inplace=True)
データフレームを列名リストによって整列し、、更新する	df.sort_values(by=column, inplace=True)
データフレームを複数の列によってによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを複数の列によってで破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを複数の列を用いてで破壊的に整列する	df.sort_values(by=column, inplace=True)
複数の列によってによって破壊的にデータフレームを整列する	df.sort_values(by=column, inplace=True)
破壊的に列名リストによってでデータフレームをソートする	df.sort_values(by=column, inplace=True)
破壊的にデータフレームを複数の列によってによってソートする	df.sort_values(by=column, inplace=True)
データフレームを列名リストでによって破壊的にソートする	df.sort_values(by=column, inplace=True)
データフレームを列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを小さい順に列を用いてソートして更新する	df.sort_values(by=column, ascending=True, inplace=True)
列によって昇順にデータフレームを並べて更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順にソートし、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって昇順に破壊的に並べる	df.sort_values(by=column, ascending=True, inplace=True)
列によってデータフレームを破壊的に昇順に並べ直す	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列を用いて昇順に破壊的に整列する	df.sort_values(by=column, ascending=True, inplace=True)
昇順に列によって破壊的にデータフレームをソートする	df.sort_values(by=column, ascending=True, inplace=True)
破壊的に列によって昇順にデータフレームを整列する	df.sort_values(by=column, ascending=True, inplace=True)
列でデータフレームを破壊的に昇順に並べる	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを'A'列によって昇順にソートして、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に並べ直し、更新する	df.sort_values(by='A', ascending=True, inplace=True)
昇順にデータフレームを'A'列によって並べて更新する	df.sort_values(by='A', ascending=True, inplace=True)
昇順に'A'列を用いてデータフレームを並べて、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に並べ直して、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に並べて、更新する	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを'A'列によって昇順に破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
'A'列によってデータフレームを破壊的に昇順に整列する	df.sort_values(by='A', ascending=True, inplace=True)
'A'列でデータフレームを昇順に破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
'A'列で昇順にデータフレームを破壊的にソートする	df.sort_values(by='A', ascending=True, inplace=True)
破壊的に昇順にデータフレームを'A'列によってソートする	df.sort_values(by='A', ascending=True, inplace=True)
小さい順に'A'列で破壊的にデータフレームを並べ直す	df.sort_values(by='A', ascending=True, inplace=True)
昇順に破壊的にデータフレームを'A'列によってソートする	df.sort_values(by='A', ascending=True, inplace=True)
データフレームを二つの列によって昇順にソートして、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
2つの列によってデータフレームを小さい順にソートし、、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
'A'列と'B'列によってデータフレームを昇順にソートし、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
昇順に'A'列と'B'列を用いてデータフレームをソートし、、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを二つの列によって昇順に並べて、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを2つの列で昇順に並べて、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを二つの列を用いて昇順に並べて、更新する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを二つの列によって昇順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
破壊的に昇順にデータフレームを二つの列によって整列する	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
二つの列によって破壊的にデータフレームを昇順にソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
昇順に破壊的にデータフレームを'A'列と'B'列でソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
破壊的に二つの列で昇順にデータフレームをソートする	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
破壊的に2つの列によって小さい順にデータフレームを並べる	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
２つの列を用いてデータフレームを破壊的に昇順に並べ直す	df.sort_values(by=['A', 'B'], ascending=True, inplace=True)
データフレームを複数の列によって昇順にソートして、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列で昇順に並べ直し、、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって昇順にソートし、、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列で小さい順に並べて、更新する	df.sort_values(by=column, ascending=True, inplace=True)
複数の列によってデータフレームを昇順に並べて、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列名リストによって昇順に整列して、更新する	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
表データを複数の列で昇順に破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
破壊的に複数の列によって昇順にデータフレームをソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって昇順に破壊的に並べる	df.sort_values(by=column, ascending=True, inplace=True)
昇順にデータフレームを破壊的に列名リストによってソートする	df.sort_values(by=column, ascending=True, inplace=True)
複数の列を用いて昇順にデータフレームを破壊的にソートする	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを複数の列によって小さい順に破壊的に並べる	df.sort_values(by=column, ascending=True, inplace=True)
データフレームを列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
破壊的に降順にデータフレームを列を用いてソートする	df.sort_values(by=column, ascending=False, inplace=True)
降順に破壊的にデータフレームを列によってソートする	df.sort_values(by=column, ascending=False, inplace=True)
表データを降順に列によって破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
破壊的に列によって降順にデータフレームをソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列によって破壊的に降順に整列する	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを'A'列によって降順に破壊的にソートする	df.sort_values(by='A', ascending=False, inplace=True)
降順に破壊的にデータフレームを'A'列によってソートする	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを'A'列で降順に破壊的にソートする	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを'A'列によって大きい順に破壊的に並べる	df.sort_values(by='A', ascending=False, inplace=True)
'A'列によって破壊的にデータフレームを降順に整列する	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを'A'列を用いて降順に破壊的に並べ直す	df.sort_values(by='A', ascending=False, inplace=True)
データフレームを二つの列によって降順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
大きい順に'A'列と'B'列を用いて破壊的に表データをソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
降順にデータフレームを破壊的に２つの列でソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
破壊的にデータフレームを降順に二つの列で整列する	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを大きい順に'A'列と'B'列によって破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを二つの列で降順に破壊的にソートする	df.sort_values(by=['A', 'B'], ascending=False, inplace=True)
データフレームを複数の列によって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列名リストによって降順に破壊的にソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを破壊的に降順に列名リストによって並べる	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを破壊的に列名リストを用いて大きい順にソートする	df.sort_values(by=column, ascending=False, inplace=True)
破壊的にデータフレームを複数の列で降順にソートする	df.sort_values(by=column, ascending=False, inplace=True)
複数の列によって破壊的にデータフレームを降順にソートする	df.sort_values(by=column, ascending=False, inplace=True)
データフレームを列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列を用いて整列して、NaNを先頭に来るようにする	df.sort_values(by=column, na_position='first')
データフレームを列でソートしてNaNを先頭にする	df.sort_values(by=column, na_position='first')
列でデータフレームをソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列によってソートしてNaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを'A'列によってソートして、NaNを先頭にする	df.sort_values(by='A', na_position='first')
データフレームを'A'列によってソートし、、NaNを先頭に来るようにする	df.sort_values(by='A', na_position='first')
データフレームを'A'列でソートして、NaNを先頭にする	df.sort_values(by='A', na_position='first')
'A'列でデータフレームを並べて、NaNを先頭にする	df.sort_values(by='A', na_position='first')
データフレームを'A'列によってソートして、NaNを先頭に来るようにする	df.sort_values(by='A', na_position='first')
データフレームを'A'列でソートしてNaNを先頭にする	df.sort_values(by='A', na_position='first')
データフレームを二つの列によってソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを二つのカラムによってソートし、、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを二つの列でソートして、NaNを先頭に来るようにする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを2つの列でソートして、NaNを先頭にする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを2つの列を用いてソートして、NaNを先頭に来るようにする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを二つの列によってソートして、NaNを先頭に来るようにする	df.sort_values(by=['A', 'B'], na_position='first')
'A'列と'B'列によってデータフレームをソートして、NaNを先頭に来るようにする	df.sort_values(by=['A', 'B'], na_position='first')
データフレームを複数の列によってソートして、NaNを先頭にする	df.sort_values(by=column, na_position='first')
列名リストによってデータフレームをソートして、NaNを先頭に来るようにする	df.sort_values(by=column, na_position='first')
データフレームを複数の列でソートし、、NaNを先頭にする	df.sort_values(by=column, na_position='first')
列名リストによってデータフレームを並べ直し、、NaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを複数の列によってソートし、、NaNを先頭に来るようにする	df.sort_values(by=column, na_position='first')
データフレームを複数の列によってソートしてNaNを先頭にする	df.sort_values(by=column, na_position='first')
データフレームを列名リストによって整列して、NaNを先頭にする	df.sort_values(by=column, na_position='first')
＜オプション＞値を置き換える	inplace = True
＜オプション＞破壊的に操作する	inplace = True
＜オプション＞欠損値を先頭にする	na_position = 'first'
＜オプション＞欠損値を先頭に来るようにする	na_position = 'first'
＜オプション＞未入力値を先頭にする	na_position = 'first'
＜オプション＞降順にする	ascending = False
＜オプション＞昇順にする	ascending = True
データフレームを列によってソートして、上位n件を取り出す	df.sort_values(columns).head(n)
データフレームを列によってソートして、上の方を取り出す	df.sort_values(columns).head(n)
列によってデータフレームを並べて上位を取り出す	df.sort_values(columns).head(n)
列でデータフレームをソートして、上位を取り出す	df.sort_values(columns).head(n)
データフレームを列で並べて、上位n件を取り出す	df.sort_values(columns).head(n)
データフレームを列によってソートし、、上の方n件を取り出す	df.sort_values(columns).head(n)
データフレームを列によってソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列を用いてソートして、下位を取り出す	df.sort_values(columns).tail(n)
列によってデータフレームをソートして、下位を取り出す	df.sort_values(columns).tail(n)
データフレームを列でソートして、下位n件を取り出す	df.sort_values(columns).tail(n)
データフレームを列によってソートして、新しいインデックスを加える	df.sort_values(columns).reset_index()
データフレームを列を用いてソートして新しいインデックスを加える	df.sort_values(columns).reset_index()
データフレームを列で並べて新しいインデックスを振り直す	df.sort_values(columns).reset_index()
データフレームを列を用いて並べて、新しいインデックスを振り直す	df.sort_values(columns).reset_index()
データフレームを列によってソートして、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームを列を用いてソートし、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームを列によってソートし、、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
列によってデータフレームを並べ直してインデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームを列でソートし、、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームを列によってソートしてインデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
列を用いてデータフレームを整列し、、インデックスを振り直す	df.sort_values(columns).reset_index(drop=True)
データフレームをインデックスによってソートする	df.sort_index()
データフレームを行で並べ直す	df.sort_index()
データフレームを行によってソートする	df.sort_index()
インデックスでデータフレームをソートする	df.sort_index()
データフレームをインデックスを用いてソートする	df.sort_index()
行によってデータフレームを並べる	df.sort_index()
データフレームをインデックスによって昇順にソートする	df.sort_index(ascending=True)
データフレームをインデックスによって小さい順にソートする	df.sort_index(ascending=True)
データフレーム全体をインデックスによって昇順にソートする	df.sort_index(ascending=True)
データフレーム全体を昇順にインデックスによってソートする	df.sort_index(ascending=True)
昇順にインデックスによってデータフレームを並べる	df.sort_index(ascending=True)
データフレームをインデックスによって降順でソートする	df.sort_index(ascending=False)
データフレームを降順で行によってソートする	df.sort_index(ascending=False)
降順でデータフレームをインデックスで並べ直す	df.sort_index(ascending=False)
降順でデータフレームを行を用いてソートする	df.sort_index(ascending=False)
FIXME:カテゴリーデータを出現頻度順にソートする	df['A'].value_counts().sort_index().index
FIXME:カテゴリーデータを出現頻度順に整列する	df['A'].value_counts().sort_index().index
乱数シードを初期化する	random.seed()
システム時刻で乱数を初期化する	random.seed()
乱数シードをnで初期化する	random.seed(n)
nで乱数生成系列を初期化する	random.seed(n)
乱数シードをnで固定する	random.seed(n)
シードをnで固定化する	random.seed(n)
nで乱数生成系列を固定する	random.seed(n)
nで乱数シードを固定する	random.seed(n)
サイコロ	random.randint(1, 6)
サイコロと同じ乱数	random.randint(1, 6)
範囲を指定して整数乱数を生成する	random.randint(最小値, 最大値)
範囲を指定して乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値で整数乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値で乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値として整数乱数を生成する	random.randint(最小値, 最大値)
最大値・最小値で整数乱数を求める	random.randint(最小値, 最大値)
最大値・最小値として乱数を得る	random.randint(最小値, 最大値)
等差数列から整数乱数を生成する	random.randrange(start, end, step)
等差数列から整数乱数を発生させる	random.randrange(start, end, step)
疑似乱数を生成する	random.random()
乱数を生成する	random.random()
疑似乱数を発生させる	random.random()
最大値・最小値の範囲で一様な疑似乱数を生成する	random.uniform(最小値, 最大値)
最大値・最小値の範囲で一様な乱数を発生させる	random.uniform(最小値, 最大値)
最大値・最小値の範囲で一様な疑似乱数を発生させる	random.uniform(最小値, 最大値)
最大値・最小値の範囲で一様な乱数を求める	random.uniform(最小値, 最大値)
正規分布で疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
正規分布として疑似乱数を求める	random.normalvariate(mu=0.5, sigma=0.2)
疑似乱数を正規分布で求める	random.normalvariate(mu=0.5, sigma=0.2)
乱数を正規分布を使って求める	random.normalvariate(mu=0.5, sigma=0.2)
正規分布で疑似乱数を得る	random.normalvariate(mu=0.5, sigma=0.2)
平均と標準偏差から疑似乱数を生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均と標準偏差から疑似乱数を得る	random.normalvariate(mu=0.5, sigma=0.2)
疑似乱数平均と標準偏差からを生成する	random.normalvariate(mu=0.5, sigma=0.2)
平均と標準偏差から疑似乱数を求める	random.normalvariate(mu=0.5, sigma=0.2)
イテラブルからひとつランダムに選ぶ	random.choice(iterable)
列から1個ランダムに選ぶ	random.choice(iterable)
シーケンスからひとつランダムに選ぶ	random.choice(iterable)
アルファベットからひとつランダムに選ぶ	random.choice(string.ascii_uppercase)
アルファベットから一文字ランダムに選ぶ	random.choice(string.ascii_uppercase)
アルファベットから一つランダムに選ぶ	random.choice(string.ascii_uppercase)
アルファベットから1文字ランダムに選ぶ	random.choice(string.ascii_uppercase)
イテラブルから複数個、ランダムに選ぶ	random.choices(iterable, k=n)
シーケンスから複数個、ランダムに選ぶ	random.choices(iterable, k=n)
配列からn個、ランダムに選ぶ	random.choices(iterable, k=n)
イテラブルからn個、ランダムに選ぶ	random.choices(iterable, k=n)
イテラブルからサンプリングする	random.sample(iterable)
列からサンプリングする	random.sample(iterable)
イテラブルからn個、サンプリングする	random.sample(iterable, k=n)
列からn個、サンプリングする	random.sample(iterable, k=n)
列からn要素、サンプリングする	random.sample(iterable, k=n)
イテラブルからn個サンプリングする	random.sample(iterable, k=n)
イテラブルからn要素、サンプリングする	random.sample(iterable, k=n)
イテラブルから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
イテラブルから重複なく、n個選ぶ	random.sample(iterable, k=n)
列から重複なく、n要素ランダムに選ぶ	random.sample(iterable, k=n)
列から重複なく、n個選ぶ	random.sample(iterable, k=n)
リストから重複なく、n個ランダムに選ぶ	random.sample(iterable, k=n)
シーケンスから重複なくn個ランダムに選ぶ	random.sample(iterable, k=n)
リストをランダムにシャッフルする	random.shuffle(aList)
正規表現モジュールをインポートする	import re
正規表現を使う	import re
正規表現を用いる	import re
事前に正規表現をコンパイルする	re.compile(pattern)
前もって正規表現をコンパイルする	re.compile(pattern)
正規表現を事前にコンパイルする	re.compile(pattern)
パターンを事前にコンパイルする	re.compile(pattern)
＜オプション＞ASCII文字に限定する	flag = re.ASCII
＜オプション＞大文字・小文字を無視する	flag = re.IGNORECASE
＜オプション＞複数行に対応する	flag = re.MULTILINE
事前にASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
正規表現をASCII限定として事前にコンパイルする	re.compile(pattern, flag=re.ASCI)
ASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
事前に正規表現をASCII限定としてコンパイルする	re.compile(pattern, flag=re.ASCI)
前もってASCII限定として正規表現をコンパイルする	re.compile(pattern, flag=re.ASCI)
正規表現をASCII限定として前もってコンパイルする	re.compile(pattern, flag=re.ASCI)
事前に大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前に正規表現をケースを無視してコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
パターンを大文字・小文字を無視して事前にコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
あらかじめ大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前にケースを無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
大文字・小文字を無視して正規表現をコンパイルする	re.compile(pattern, flag=re.IGNORECASE)
事前に複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
パターンを複数行対応としてあらかじめコンパイルする	re.compile(pattern, flag=re.MULTILINE)
複数行対応としてパターンをあらかじめコンパイルする	re.compile(pattern, flag=re.MULTILINE)
事前に複数行対応としてパターンをコンパイルする	re.compile(pattern, flag=re.MULTILINE)
あらかじめ複数行対応として正規表現をコンパイルする	re.compile(pattern, flag=re.MULTILINE)
文字列中から正規表現にマッチする文字列を探す	re.search(pattern, s)
文字列中からパターンにマッチする文字列を探す	re.search(pattern, s)
文字列中からパターンにマッチする位置を探す	re.search(pattern, s)
文字列を走査し、正規表現にマッチするか見る	re.search(pattern, s)
文字列を走査し正規表現にマッチするか調べる	re.search(pattern, s)
文字列を走査し、パターンにマッチするか見る	re.search(pattern, s)
文字列中から正規表現にASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)
文字列中からパターンにASCII限定としてマッチする位置を探す	re.search(pattern, s, flags=re.ASCI)
文字列中から正規表現にASCII限定としてマッチする位置を探す	re.search(pattern, s, flags=re.ASCI)
文字列を走査し、正規表現にASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
文字列を走査し、正規表現にASCII限定としてマッチするか確認する	re.search(pattern, s, flags=re.ASCI)
文字列を走査しパターンにASCII限定としてマッチするか見る	re.search(pattern, s, flags=re.ASCI)
文字列中から正規表現に大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列中からパターンに大文字・小文字を無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列中から正規表現にケースを無視してマッチする位置を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列中から正規表現に大文字・小文字を無視してマッチする位置を探す	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し、正規表現に大文字・小文字を無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し、正規表現にケースを無視してマッチするか見る	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し、正規表現に大文字・小文字を無視してマッチするか確認する	re.search(pattern, s, flags=re.IGNORECASE)
文字列を走査し正規表現に大文字・小文字を無視してマッチするか確認する	re.search(pattern, s, flags=re.IGNORECASE)
文字列中から正規表現に複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
文字列中からパターンに複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)
文字列中からパターンに複数行対応としてマッチする位置を探す	re.search(pattern, s, flags=re.MULTILINE)
文字列を走査し、正規表現に複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
文字列を走査し正規表現に複数行対応としてマッチするか確認する	re.search(pattern, s, flags=re.MULTILINE)
文字列を走査し正規表現に複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)
文字列が正規表現にマッチさせる	re.match(pattern, s)
文字列がパターンにマッチさせる	re.match(pattern, s)
文字列の先頭で正規表現にマッチするか見る	re.match(pattern, s)
文字列の先頭でパターンにマッチするか見る	re.match(pattern, s)
文字列の先頭で正規表現にマッチするか調べる	re.match(pattern, s)
文字列の先頭でASCII限定として正規表現にマッチさせる	re.match(pattern, s, flags=re.ASCI)
正規表現にASCII限定として文字列の先頭でマッチさせる	re.match(pattern, s, flags=re.ASCI)
ASCII限定として正規表現に文字列の先頭でマッチさせる	re.match(pattern, s, flags=re.ASCI)
パターンに文字列の先頭でASCII限定としてマッチさせる	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で正規表現にASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で正規表現にASCII限定としてマッチするか確認する	re.match(pattern, s, flags=re.ASCI)
文字列の先頭でパターンにASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)
文字列の先頭で大文字・小文字を無視して正規表現にマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で大文字・小文字を無視してパターンにマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
大文字・小文字を無視して文字列の先頭でパターンにマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭でケースを無視して正規表現にマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか調べる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭でパターンに大文字・小文字を無視してマッチするか確認する	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現にケースを無視してマッチするか調べる	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で正規表現に大文字・小文字を無視してマッチするか確認する	re.match(pattern, s, flags=re.IGNORECASE)
文字列の先頭で複数行対応として正規表現にマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
複数行対応として正規表現に文字列の先頭でマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で複数行対応としてパターンにマッチさせる	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で正規表現に複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)
文字列の先頭で正規表現に複数行対応としてマッチするか調べる	re.match(pattern, s, flags=re.MULTILINE)
文字列全体を正規表現にマッチさせる	re.fullmatch(pattern, s)
正規表現に文字列全体をマッチさせる	re.fullmatch(pattern, s)
文字列全体が正規表現にマッチするか見る	re.fullmatch(pattern, s)
文字列全体が正規表現にマッチするか確認する	re.fullmatch(pattern, s)
文字列全体がパターンにマッチするか見る	re.fullmatch(pattern, s)
文字列全体をASCII限定として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体をASCII限定としてパターンにマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体が正規表現にASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体がパターンにASCII限定としてマッチするか確認する	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体がパターンにASCII限定としてマッチするか見る	re.fullmatch(pattern, s, flags=re.ASCI)
文字列全体を大文字・小文字を無視して正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
正規表現にケースを無視して文字列全体をマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
正規表現に文字列全体をケースを無視してマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体を正規表現に大文字・小文字を無視してマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現に大文字・小文字を無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体がパターンにケースを無視してマッチするか調べる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現に大文字・小文字を無視してマッチするか調べる	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体が正規表現にケースを無視してマッチするか見る	re.fullmatch(pattern, s, flags=re.IGNORECASE)
文字列全体を複数行対応として正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
複数行対応として文字列全体を正規表現にマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
複数行対応として正規表現に文字列全体をマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
正規表現に複数行対応として文字列全体をマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列全体が正規表現に複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列全体が正規表現に複数行対応としてマッチするか確認する	re.fullmatch(pattern, s, flags=re.MULTILINE)
文字列を正規表現で分割する	re.split(pattern, s)
文字列をパターンで分割する	re.split(pattern, s)
文字列をASCII限定として正規表現で分割する	re.split(pattern, s, flags=re.ASCI)
ASCII限定として正規表現で文字列を分割する	re.split(pattern, s, flags=re.ASCI)
文字列をASCII限定としてパターンで分割する	re.split(pattern, s, flags=re.ASCI)
ASCII限定としてパターンで文字列を分ける	re.split(pattern, s, flags=re.ASCI)
文字列を大文字・小文字を無視して正規表現で分割する	re.split(pattern, s, flags=re.IGNORECASE)
大文字・小文字を無視して正規表現で文字列を分割する	re.split(pattern, s, flags=re.IGNORECASE)
ケースを無視して正規表現で文字列を分割する	re.split(pattern, s, flags=re.IGNORECASE)
文字列を大文字・小文字を無視してパターンで分割する	re.split(pattern, s, flags=re.IGNORECASE)
文字列をケースを無視して正規表現で区切る	re.split(pattern, s, flags=re.IGNORECASE)
文字列を複数行対応として正規表現で分割する	re.split(pattern, s, flags=re.MULTILINE)
複数行対応としてパターンで文字列を分割する	re.split(pattern, s, flags=re.MULTILINE)
文字列の中の正規表現による全てのマッチを使う	re.findall(pattern, s)
文字列の中のパターンによるマッチを使う	re.findall(pattern, s)
文字列の中の正規表現による全マッチを見る	re.findall(pattern, s)
文字列の中のパターンによる全マッチを使う	re.findall(pattern, s)
文字列の中の正規表現によるマッチを見る	re.findall(pattern, s)
文字列の中の正規表現によるマッチを使う	re.findall(pattern, s)
文字列の中で正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s)
文字列の中で正規表現にマッチした全ての文字列をリストにする	re.findall(pattern, s)
文字列の中のASCII限定として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによるすべてのマッチを求める	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによる全マッチを見る	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによる全てのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定としてパターンによるすべてのマッチを使う	re.findall(pattern, s, flags=re.ASCI)
文字列の中のASCII限定として正規表現によるマッチを求める	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定としてパターンにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定としてパターンにマッチした全文字列をリストにする	re.findall(pattern, s, flags=re.ASCI)
文字列の中でASCII限定として正規表現にマッチした文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)
文字列の中の大文字・小文字を無視して正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中のケースを無視してパターンによる全てのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の大文字・小文字を無視してパターンによるすべてのマッチを見る	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中のケースを無視してパターンによる全てのマッチを見る	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の大文字・小文字を無視してパターンによる全マッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の大文字・小文字を無視してパターンによるすべてのマッチを使う	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視して正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視してパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中でケースを無視して正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中で大文字・小文字を無視して正規表現にマッチした全文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)
文字列の中の複数行対応として正規表現による全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応として正規表現によるすべてのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応としてパターンによる全てのマッチを使う	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応としてパターンによるマッチを求める	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応としてパターンによる全マッチを見る	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中の複数行対応としてパターンによる全てのマッチを見る	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチした文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応としてパターンにマッチした全ての文字列をリストにする	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応としてパターンにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列の中で複数行対応として正規表現にマッチした全文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)
文字列を正規表現によって置き換える	re.sub(pattern, newsub, s)
正規表現によって文字列を置換する	re.sub(pattern, newsub, s)
文字列中の正規表現を新しい文字列で置き換える	re.sub(pattern, newsub, s)
新しい文字列を使って文字列中のパターンを置換する	re.sub(pattern, newsub, s)
文字列中の正規表現を新しい文字列として置き換える	re.sub(pattern, newsub, s)
文字列中の正規表現を新しい文字列を用いて置換する	re.sub(pattern, newsub, s)
正規表現にマッチした文字列を新しい文字列で置き換える	re.sub(pattern, newsub, s)
新しい文字列で正規表現にマッチした文字列を置き換える	re.sub(pattern, newsub, s)
新しい文字列で正規表現にマッチした文字列を置換する	re.sub(pattern, newsub, s)
パターンにマッチした文字列を新しい文字列で置き換える	re.sub(pattern, newsub, s)
空の集合	set()
空の集合を生成する	set()
空の集合を使う	set()
イテラブルの集合	set(iterable)
シーケンスのセット	set(iterable)
列から集合	set(iterable)
シーケンスから集合	set(iterable)
列の集合	set(iterable)
シーケンスの集合を見る	set(iterable)
イテラブルから重複を取り除く	set(iterable)
列から重複を取り除く	set(iterable)
イテラブルを集合に変換する	set(iterable)
列を集合に変換する	set(iterable)
配列をセットに変換する	set(iterable)
シーケンスを集合にする	set(iterable)
集合に要素を追加する	aSet.add(element)
要素をセットに追加する	aSet.add(element)
セットに要素を追加する	aSet.add(element)
集合にイテラブルの要素を全て追加する	aSet.update(iterable)
集合に配列の要素を全て追加する	aSet.update(iterable)
集合にイテラブルの要素を追加する	aSet.update(iterable)
セットにイテラブルの要素を全て追加する	aSet.update(iterable)
集合にリストの要素を追加する	aSet.update(iterable)
集合にイテラブルを追加更新する	aSet.update(iterable)
セットにタプルを追加更新する	aSet.update(iterable)
集合に配列を追加更新する	aSet.update(iterable)
イテラブルを集合に追加する	aSet.update(iterable)
セットにイテラブルを追加更新する	aSet.update(iterable)
集合から要素を取り除く	aSet.remove(element)
集合から要素を除去する	aSet.remove(element)
集合から値を除く	aSet.remove(element)
セットから要素を除去する	aSet.remove(element)
集合から値を取り除く	aSet.remove(element)
集合からエラーなく要素を取り除く	aSet.discard(element)
セットからエラーなく値を取り除く	aSet.discard(element)
エラーなく集合から要素を取り除く	aSet.discard(element)
エラーなく集合から値を取り除く	aSet.discard(element)
エラーなく集合から値を除去する	aSet.discard(element)
集合から全ての要素を取り除く	aSet.clear()
集合から全要素を除く	aSet.clear()
集合から要素を全て取り除く	aSet.clear()
集合から全ての要素を除く	aSet.clear()
集合を空にする	aSet.clear()
セットを空集合にする	aSet.clear()
ふたつの集合の共通要素だけに更新する	aSet.intersection_update(aSet2)
ふたつの集合の共通要素だけにする	aSet.intersection_update(aSet2)
二つの集合の共通要素だけにする	aSet.intersection_update(aSet2)
集合から別の集合の要素を全て取り除く	aSet.difference_update(aSet2)
集合から別のセットの要素を取り除く	aSet.difference_update(aSet2)
集合から別の集合の要素を取り除く	aSet.difference_update(aSet2)
集合から別のセットの要素を全て除く	aSet.difference_update(aSet2)
集合から別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
セットから別の集合との共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
セットから別の集合との共通要素を取り除く	aSet.symmetric_difference_update(aSet2)
セットから別のセットとの共通要素を全て取り除く	aSet.symmetric_difference_update(aSet2)
集合から別のセットとの共通要素を全て除去する	aSet.symmetric_difference_update(aSet2)
集合から別の集合との共通要素を除去する	aSet.symmetric_difference_update(aSet2)
セットから別のセットとの共通要素を全て除去する	aSet.symmetric_difference_update(aSet2)
集合から任意の要素を取り出す	aSet.pop()
集合から何でもいいからひとつ取り除く	aSet.pop()
集合から任意の要素を取り除く	aSet.pop()
集合から何でもいいからひとつ取り出す	aSet.pop()
ふたつの集合の和集合	aSet.union(aSet2)
ふたつの集合のユニオン	aSet.union(aSet2)
二つの集合の∪	aSet.union(aSet2)
ふたつの集合の積集合	aSet.intersection(aSet2)
ふたつの集合のインターセクション	aSet.intersection(aSet2)
ふたつの集合の積集合を計算する	aSet.intersection(aSet2)
ふたつの集合の積集合を求める	aSet.intersection(aSet2)
ふたつの集合の交わりを見る	aSet.intersection(aSet2)
二つの集合の積集合	aSet.intersection(aSet2)
ふたつの集合に共通する要素からなる集合	aSet.intersection(aSet2)
二つの集合に共通する要素からなる集合を使う	aSet.intersection(aSet2)
ふたつの集合に共通する要素からなる集合を計算する	aSet.intersection(aSet2)
ふたつのリストの積集合	list(set(aList) & set(aList2))
二つのリストの積集合	list(set(aList) & set(aList2))
ふたつのリストのインターセクションを求める	list(set(aList) & set(aList2))
二つのリストの共通りストを使う	list(set(aList) & set(aList2))
ふたつのリストの共通りスト	list(set(aList) & set(aList2))
ふたつのリストのインターセクション	list(set(aList) & set(aList2))
ふたつの集合の差集合	aSet.difference(aSet2)
二つの集合の差集合	aSet.difference(aSet2)
二つの集合の差を求める	aSet.difference(aSet2)
ふたつの集合の差集合を使う	aSet.difference(aSet2)
一方に含まれ、他方に含まれない集合	aSet.difference(aSet2)
集合の補集合	aSet.difference(aSet2)
集合の補集合を使う	aSet.difference(aSet2)
集合＼集合	aSet.difference(aSet2)
セット＼セット	aSet.difference(aSet2)
ふたつの集合の対称差集合	aSet.symmetric_difference(aSet2)
ふたつの集合の対称差	aSet.symmetric_difference(aSet2)
ふたつの集合の対称差を使う	aSet.symmetric_difference(aSet2)
ふたつの集合の対称差集合を見る	aSet.symmetric_difference(aSet2)
ふたつの集合の対称差を求める	aSet.symmetric_difference(aSet2)
ふたつの集合のいずれか一方だけの集合	aSet.symmetric_difference(aSet2)
ふたつの集合のいずれか一方だけの集合を使う	aSet.symmetric_difference(aSet2)
二つの集合のいずれか一方だけの集合	aSet.symmetric_difference(aSet2)
要素が集合のメンバーか調べる	element in aSet
値がセットのメンバーかどうか調べる	element in aSet
値がセットのメンバーか調べる	element in aSet
要素が集合の要素	element in aSet
要素が集合の要素か調べる	element in aSet
要素が集合のメンバー	element in aSet
要素が集合に含まれるか調べる	element in aSet
要素が集合に含まれる	element in aSet
要素が集合に含まれるか	element in aSet
要素はセットに含まれるかどうか調べる	element in aSet
要素がセットに含まれるか調べる	element in aSet
要素∈集合	element in aSet
値∈集合	element in aSet
要素が集合のメンバーでないか調べる	element not in aSet
値はセットのメンバーに含まれないか	element not in aSet
値が集合のメンバーでない	element not in aSet
値がセットのメンバーに含まれない	element not in aSet
要素が集合に含まれないか調べる	element not in aSet
要素は集合に含まれないか調べる	element not in aSet
値が集合に含まれないかどうか	element not in aSet
要素が集合に含まれないかどうか調べる	element not in aSet
要素は集合に含まれない	element not in aSet
値は集合に含まれない	element not in aSet
要素∉集合	element not in aSet
部分集合か調べる	aSet.issubset(aSet2)
下位集合か調べる	aSet.issubset(aSet2)
⊆	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれるか調べる	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれるかどうか	aSet.issubset(aSet2)
集合の要素が別のセットに含まれる	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれる	aSet.issubset(aSet2)
セットの全ての要素が別の集合に含まれるか確認する	aSet.issubset(aSet2)
セットの全要素が別の集合に含まれるか	aSet.issubset(aSet2)
集合の全ての要素が別の集合に含まれるか確認する	aSet.issubset(aSet2)
真部分集合か調べる	aSet < aSet2
ふたつの関係が真下位集合か	aSet < aSet2
真サブセットかどうか確認する	aSet < aSet2
ふたつの関係が真部分集合	aSet < aSet2
ふたつの関係が真部分集合かどうか調べる	aSet < aSet2
上位集合か調べる	aSet.issuperset(aSet2)
ふたつの関係が上位集合かどうか	aSet.issuperset(aSet2)
スーパーセットかどうか	aSet.issuperset(aSet2)
上位集合かどうか調べる	aSet.issuperset(aSet2)
ふたつの関係が上位集合	aSet.issuperset(aSet2)
スーパーセットか調べる	aSet.issuperset(aSet2)
真上位集合か調べる	aSet > aSet2
真上位集合かどうか調べる	aSet > aSet2
ふたつの関係が真上位集合かどうか調べる	aSet > aSet2
真スーパーセットか	aSet > aSet2
上位集合もしくは等しいか調べる	aSet > aSet2
スーパーセットもしくは等しい	aSet > aSet2
ふたつの関係が上位集合もしくは等しいかどうか	aSet > aSet2
二つの関係がスーパーセットもしくは等しいかどうか調べる	aSet > aSet2
ふたつの関係がスーパーセットもしくは等しいかどうか調べる	aSet > aSet2
ふたつの集合が共通の要素を持たないか調べる	aSet.isdisjoint(aSet2)
二つの集合は共通の要素を持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が共通の要素を持たないかどうか確認する	aSet.isdisjoint(aSet2)
ふたつの集合は共通の要素を持たない	aSet.isdisjoint(aSet2)
ふたつの集合が共通の要素を持たないか	aSet.isdisjoint(aSet2)
二つの集合が共通の要素を持たないかどうか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が集合と交わりを持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が集合と交わりを持たないか	aSet.isdisjoint(aSet2)
ふたつの集合がセットと交わりを持たない	aSet.isdisjoint(aSet2)
ふたつの集合はセットと交わりを持たないか調べる	aSet.isdisjoint(aSet2)
ふたつの集合が集合と交わりを持たない	aSet.isdisjoint(aSet2)
ふたつの集合が集合と互いに素か調べる	aSet.isdisjoint(aSet2)
二つの集合が集合と互いに素かどうか	aSet.isdisjoint(aSet2)
二つの集合が集合と互いに素かどうか調べる	aSet.isdisjoint(aSet2)
ふたつの集合がセットと互いに素	aSet.isdisjoint(aSet2)
ふたつの集合が集合と互いに素	aSet.isdisjoint(aSet2)
ふたつの集合が互いに素か調べる	aSet.isdisjoint(aSet2)
二つの集合が互いに素かテストする	aSet.isdisjoint(aSet2)
ふたつの集合が互いに素かどうか調べる	aSet.isdisjoint(aSet2)
ふたつの集合は互いに素かどうか	aSet.isdisjoint(aSet2)
ふたつの集合が互いに素	aSet.isdisjoint(aSet2)
二つの集合が互いに素かどうか調べる	aSet.isdisjoint(aSet2)
集合の濃度	len(aSet)
セットの要素数	len(aSet)
集合の要素数	len(aSet)
集合が空か調べる	len(aSet) == 0
集合が空か	len(aSet) == 0
セットが空	len(aSet) == 0
集合が空集合かどうか	len(aSet) == 0
セットが空か	len(aSet) == 0
集合が空集合か判定する	len(aSet) == 0
集合が空でないか調べる	len(aSet) != 0
集合が空でない	len(aSet) != 0
セットが空でないかテストする	len(aSet) != 0
集合が空でないか確認する	len(aSet) != 0
集合が空集合でないか調べる	len(aSet) != 0
集合の浅いコピー	aSet.copy()
集合の浅いコピーを用意する	aSet.copy()
イテラブルのイミュータブルな集合	frozenset(iterable)
配列のイミュータブルな集合を求める	frozenset(iterable)
イテラブルのイミュータブルな集合を見る	frozenset(iterable)
シーケンスのイミュータブルな集合	frozenset(iterable)
イテラブルをイミュータブルな集合に変換する	frozenset(iterable)
シーケンスを変更不能な集合に変換する	frozenset(iterable)
シーケンスをイミュータブルな集合に変換する	frozenset(iterable)
イテラブルをイミュータブルなセットに変換する	frozenset(iterable)
リストを変更不能な集合にする	frozenset(iterable)
集合のイミュータブル版	frozenset(aSet)
集合の変更不能版	frozenset(aSet)
セットのイミュータブル版	frozenset(aSet)
集合の更新不能版	frozenset(aSet)
集合をイミュータブルなセットに変換する	frozenset(aSet)
セットをイミュータブルなセットにする	frozenset(aSet)
集合をイミュータブルなセットにする	frozenset(aSet)
集合をイミュータブルな集合にする	frozenset(aSet)
集合を変更不能な集合に変換する	frozenset(aSet)
集合をイミュータブルに変換する	frozenset(aSet)
セットをイミュータブルにする	frozenset(aSet)
集合を更新不能に変換する	frozenset(aSet)
集合をリストに変換する	list(aSet)
集合をリストにする	list(aSet)
集合をタプルに変換する	tuple(aSet)
セットをタプルにする	tuple(aSet)
集合を組に変換する	tuple(aSet)
セットを組に変換する	tuple(aSet)
リストの重複を取り除く	sorted(set(aList), key=aList.index)
リストから重複を取り除く	sorted(set(aList), key=aList.index)
文字列モジュールをインポートする	import string
stringモジュールをインポートする	import string
空文字	''
anemptystring	''
改行	'\n'
タブ	'\t'
タブ文字を見る	'\t'
空白	' '
空白を使う	' '
space	' '
アルファベットの文字列	string.ascii_letters
アルファベットを全部使う	string.ascii_letters
アルファベットを全部見る	string.ascii_letters
アルファベットを全て使う	string.ascii_letters
アルファベットを使う	string.ascii_letters
英字を全て使う	string.ascii_letters
アルファベットの小文字列	string.ascii_lowercase
英字の小文字列	string.ascii_lowercase
アルファベットの小文字を全部使う	string.ascii_lowercase
アルファベットの小文字を全て見る	string.ascii_lowercase
小文字を使う	string.ascii_lowercase
アルファベットの小文字を全て使う	string.ascii_lowercase
アルファベットの小文字を全部求める	string.ascii_lowercase
小文字を全て求める	string.ascii_lowercase
アルファベットの大文字列	string.ascii_uppercase
大文字列	string.ascii_uppercase
アルファベットの大文字を全部使う	string.ascii_uppercase
大文字を全部求める	string.ascii_uppercase
アルファベットの大文字を使う	string.ascii_uppercase
全ての数字	string.digits
数字を全部使う	string.digits
数字を全て使う	string.digits
数字を全て求める	string.digits
全ての十六進数字	string.hexdigits
十六進数字を全部使う	string.hexdigits
十六進数字を全て使う	string.hexdigits
十六進数字を全て見る	string.hexdigits
全ての８進数字	string.octdigits
全８進数字	string.octdigits
８進数字を全部使う	string.octdigits
八進数字を全部使う	string.octdigits
８進数字を全て使う	string.octdigits
八進数字を全部見る	string.octdigits
８進数字を全部見る	string.octdigits
全ての句読点文字	string.punctuation
句読点文字を全部使う	string.punctuation
句読点文字を使う	string.punctuation
句点文字を使う	string.punctuation
句読点文字を全て使う	string.punctuation
句読点文字を全部求める	string.punctuation
全ての印字可能な文字	string.printable
全ての印字	string.printable
印字可能な文字を全部使う	string.printable
印字可能な文字を全部求める	string.printable
印字できる文字を全部求める	string.printable
印字可能な文字を全部見る	string.printable
印字を全部見る	string.printable
印字できる文字を全部使う	string.printable
印字可能な文字を全て使う	string.printable
全ての空白文字	string.whitespace
空白文字を全部使う	string.whitespace
空白文字を全部見る	string.whitespace
空白文字を使う	string.whitespace
空白文字を見る	string.whitespace
文字コードを文字に変換する	chr(unicode)
文字コードを文字にする	chr(unicode)
文字コードに対応する文字	chr(unicode)
文字を文字コードに変換する	ord(ch)
文字を文字コードにする	ord(ch)
文字をユニコードにする	ord(ch)
文字の文字コード	ord(ch)
文字のASCIIコードを使う	ord(ch)
文字列を文字コード列に変換する	[ord(ch) for ch in s]
文字列を文字コード列にする	[ord(ch) for ch in s]
文字列をASCIIコード列に変換する	[ord(ch) for ch in s]
文字列を全て大文字に変換する	s.upper()
文字列を大文字に変換する	s.upper()
文字列を全て大文字にする	s.upper()
文字列中の小文字を大文字に変換する	s.upper()
小文字を大文字にする	s.upper()
文字列を全て小文字に変換する	s.lower()
文字列を全て小文字にする	s.lower()
文字列中の大文字を小文字に変換する	s.lower()
大文字を小文字に変換する	s.lower()
文字列のケースを変換する	s.casefold()
文字列のケースを整える	s.casefold()
文字列を全て小文字に変換する	s.casefold()
文字列を全て小文字にする	s.casefold()
文字列を積極的に小文字に変換する	s.casefold()
文字列を特殊文字も含め小文字に変換する	s.casefold()
文字列を積極的に小文字にする	s.casefold()
文字列を文字リストに変換する	list(s)
文字列を文字のリストに変換する	list(s)
文字列を文字のリストにする	list(s)
文字列中の文字を列挙する	list(s)
文字列を空白で区切って、文字列リストに変換する	s.split()
空白で文字列を分割して、文字列リストに変換する	s.split()
文字列を空白で区切って、列挙する	s.split()
空白で文字列を分割して、文字列リストにする	s.split()
文字列を空白で区切る	s.split()
文字列を空白によって区切る	s.split()
文字列を空白を用いて分割する	s.split()
文字列を空白で分割する	s.split()
文字列を空白で区切って、整数リストに変換する	map(int, s.split())
文字列を空白を用いて区切って整数リストに変換する	map(int, s.split())
文字列を空白を使って区切って、整数のリストに変換する	map(int, s.split())
文字列を空白で分割して整数リストに変換する	map(int, s.split())
文字列を空白によって区切って、整数リストに変換する	map(int, s.split())
空白で文字列を区切って整数リストに変換する	map(int, s.split())
文字列を部分文字列で区切って、文字列リストに変換する	s.split(sub)
文字列を部分文字列で分割して、文字列リストにする	s.split(sub)
部分文字列で文字列を区切って、列挙する	s.split(sub)
部分文字列で文字列を分割して列挙する	s.split(sub)
部分文字列で文字列を区切り、、列挙する	s.split(sub)
文字列を部分文字列で区切って、文字列リストにする	s.split(sub)
文字列を部分文字列で分割し、、列挙する	s.split(sub)
文字列を部分文字列で区切る	s.split(sub)
文字列を部分文字列によって区切る	s.split(sub)
部分文字列を用いて文字列を区切る	s.split(sub)
文字列をセパレータで区切る	s.split(sub)
部分文字列によって文字列を区切る	s.split(sub)
文字列をカンマで分割して、文字列リストに変換する	s.split(',')
文字列をカンマで区切り、、文字列リストに変換する	s.split(',')
文字列をカンマで分割して、文字列リストにする	s.split(',')
文字列をカンマで分割して文字列リストに変換する	s.split(',')
文字列をカンマで分割して文字列リストにする	s.split(',')
文字列をカンマで区切って、列挙する	s.split(',')
文字列をカンマで分割して、列挙する	s.split(',')
カンマで文字列を区切って列挙する	s.split(',')
文字列をカンマによって区切り、列挙する	s.split(',')
カンマで文字列を区切り、、列挙する	s.split(',')
文字列をコロンで分割して、文字列リストに変換する	s.split(':')
文字列をコロンで区切って文字列リストにする	s.split(':')
文字列をコロンで分割して文字列リストに変換する	s.split(':')
コロンで文字列を分割して、文字列リストにする	s.split(':')
文字列をコロンで区切って、列挙する	s.split(':')
文字列をコロンによって区切って、列挙する	s.split(':')
コロンで文字列を区切って列挙する	s.split(':')
コロンを用いて文字列を分割して、列挙する	s.split(':')
コロンで文字列を分割して列挙する	s.split(':')
文字列をコロンで区切り、列挙する	s.split(':')
文字列をセパレータで分割して、文字列リストに変換する	s.split(sep)
文字列を区切りで区切って、文字列リストにする	s.split(sep)
文字列をセパレータで分割して文字列リストにする	s.split(sep)
文字列を区切りで分割して文字列リストに変換する	s.split(sep)
文字列をセパレータで区切って、列挙する	s.split(sep)
文字列を区切りによって区切って、列挙する	s.split(sep)
文字列を区切り記号で区切り、、列挙する	s.split(sep)
文字列をセパレータによって区切って、列挙する	s.split(sep)
文字列をセパレータを使って分割して、列挙する	s.split(sep)
文字列を改行で分割し、文字列リストに変換する	s.splitlines()
改行で文字列を区切り、文字列リストに変換する	s.splitlines()
文字列を改行で分割し文字列リストに変換する	s.splitlines()
文字列を改行で区切り、文字列リストに変換する	s.splitlines()
文字列を改行で区切る	s.splitlines()
文字列を改行を用いて区切る	s.splitlines()
文字列を改行で分割する	s.splitlines()
改行で文字列を区切る	s.splitlines()
改行で文字列を分割する	s.splitlines()
文字列を末尾から空白で区切る	s.rsplit()
空白で最後から文字列を区切る	s.rsplit()
文字列を後ろから空白で区切る	s.rsplit()
文字列を最後から空白で区切る	s.rsplit()
文字列を空白で末尾から区切る	s.rsplit()
文字列を末尾から部分文字列で区切る	s.rsplit(sub)
後ろから文字列を部分文字列で区切る	s.rsplit(sub)
末尾から文字列を部分文字列で区切る	s.rsplit(sub)
部分文字列で文字列を最後から区切る	s.rsplit(sub)
文字列を右側から部分文字列で区切る	s.rsplit(sub)
文字列を二分する	s.partition(sep)
文字列を分割する	s.partition(sep)
文字列を部分文字列で二分する	s.partition(sub)
最初の部分文字列で文字列を二分する	s.partition(sub)
部分文字列で文字列を二分する	s.partition(sub)
文字列を最初の部分文字列を用いて二分する	s.partition(sub)
文字列を最初の部分文字列で二分する	s.partition(sub)
文字列を最後の部分文字列で二分する	s.rpartition(sub)
文字列を最後の部分文字列で二分割する	s.rpartition(sub)
文字列を最後の部分文字列によって二分する	s.rpartition(sub)
最後の部分文字列で文字列を二分する	s.rpartition(sub)
文字列を最後の部分文字列によって二つに分ける	s.rpartition(sub)
文字列を部分文字列で二分し、前半の文字列を使う	s.partition(sub)[0]
文字列を部分文字列で二つに区切って前半の文字列を見る	s.partition(sub)[0]
文字列を部分文字列で二分し最初の文字列を使う	s.partition(sub)[0]
部分文字列で文字列を二分し前半の文字列を使う	s.partition(sub)[0]
文字列を部分文字列で二分し前半の文字列を使う	s.partition(sub)[0]
文字列を部分文字列で分けたときの前半の文字列	s.partition(sub)[0]
文字列を最初の部分文字列で分けたときの最初の文字列を使う	s.partition(sub)[0]
文字列を部分文字列で分割したときの最初の文字列を求める	s.partition(sub)[0]
文字列を部分文字列で分割したときの最初の文字列	s.partition(sub)[0]
部分文字列で文字列を分けたときの前半の文字列	s.partition(sub)[0]
文字列を部分文字列で二分し、後半の文字列を使う	s.partition(sub)[-1]
文字列を部分文字列で二分し後半の文字列を使う	s.partition(sub)[-1]
文字列を部分文字列で二つに区切って残りの文字列を求める	s.partition(sub)[-1]
文字列を部分文字列で二つに区切って残りの文字列を使う	s.partition(sub)[-1]
文字列を部分文字列で二つに区切って、後半の文字列を見る	s.partition(sub)[-1]
文字列を最初の部分文字列で二分し、後半の文字列を使う	s.partition(sub)[-1]
文字列を部分文字列で分けたときの後半の文字列	s.partition(sub)[-1]
文字列を部分文字列で分けた時の後半の文字列を使う	s.partition(sub)[-1]
文字列を最初の部分文字列で分けたときの残りの文字列	s.partition(sub)[-1]
文字列を部分文字列で分割した場合の後半の文字列を使う	s.partition(sub)[-1]
文字列を最初の部分文字列で分けた時の後半の文字列を取り出す	s.partition(sub)[-1]
文字列を最後の部分文字列で二分し、前半の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し、先頭の文字列を求める	s.rpartition(sub)[0]
最後の部分文字列で文字列を二分し前半の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し、前半の文字列を見る	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し、最初の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で二つに区切って前半の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けたときの前半の文字列	s.rpartition(sub)[0]
文字列を最後の部分文字列で分けたときの前半の文字列を取り出す	s.rpartition(sub)[0]
最後の部分文字列で文字列を分割したときの最初の文字列を使う	s.rpartition(sub)[0]
文字列を最後の部分文字列で分割したときの前半の文字列	s.rpartition(sub)[0]
最後の部分文字列で文字列を分割した場合の先頭の文字列	s.rpartition(sub)[0]
文字列を最後の部分文字列で二分し、後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二つに区切って、後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二分し残りの文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二分し後半の文字列を見る	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二分し後半の文字列を求める	s.rpartition(sub)[-1]
文字列を最後の部分文字列で二つに区切って、残りの文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けたときの後半の文字列	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分割した時の後半の文字列を使う	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けたときの残りの文字列を取り出す	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分割したときの後半の文字列	s.rpartition(sub)[-1]
文字列を最後の部分文字列で分けたときの後半の文字列を使う	s.rpartition(sub)[-1]
文字列を置き換える	s.replace(sub, newsub)
文字列を新しい文字列で置き換える	s.replace(sub, newsub)
文字列を新しい文字列で置換する	s.replace(sub, newsub)
文字列を新しい文字列を用いて置き換える	s.replace(sub, newsub)
新しい文字列で文字列を置き換える	s.replace(sub, newsub)
新しい文字列によって文字列を置き換える	s.replace(sub, newsub)
新しい文字列によって文字列を全て置換する	s.replace(sub, newsub)
文字列中の部分文字列を新しい文字列に置き換える	s.replace(sub, newsub)
別の文字列に文字列中の部分文字列を全部置換する	s.replace(sub, newsub)
新しい文字列に文字列中の部分文字列を全部置換する	s.replace(sub, newsub)
文字列中の部分文字列を別の文字列に置き換える	s.replace(sub, newsub)
文字列中の部分文字列を新しい文字列に全部置換する	s.replace(sub, newsub)
文字列中の部分文字列を文字列に置き換える	s.replace(sub, newsub)
文字列中の部分文字列を文字列に全部置換する	s.replace(sub, newsub)
文字列中の部分文字列を文字列に置換する	s.replace(sub, newsub)
文字列を回数を制限して置き換える	s.replace(sub, newsub, n)
文字列をn回だけ置き換える	s.replace(sub, newsub, n)
文字列をn回だけ置換する	s.replace(sub, newsub, n)
文字列中の部分文字列を新しい文字列に回数を制限して置き換える	s.replace(sub, newsub, n)
文字列中の部分文字列を別の文字列に回数を制限して置換する	s.replace(sub, newsub, n)
新しい文字列に回数を制限して文字列中の部分文字列を置き換える	s.replace(sub, newsub, n)
回数を制限して新しい文字列に文字列中の部分文字列を置き換える	s.replace(sub, newsub, n)
文字列から部分文字列を全て取り除く	s.replace(sub, '')
文字列から部分文字列を取り除く	s.replace(sub, '')
文字列から部分文字列を全て除く	s.replace(sub, '')
文字列中のタブ文字を空白に置き換える	s.expandtabs(tabsize=n)
文字列中のタブ文字を空白にする	s.expandtabs(tabsize=n)
文字列中のタブ文字をn個の空白に置き換える	s.expandtabs(tabsize=n)
文字列の両端から空白を取り除く	s.strip()
文字列の両端から空白を除く	s.strip()
文字列の両端から空白を消す	s.strip()
文字列の両端から空白を除去する	s.strip()
文字列の両端から余分な空白を取り除く	s.strip()
文字列をトリムする	s.strip()
文字列の両端から部分文字列を取り除く	s.strip(sub)
文字列の両端から部分文字列を除去する	s.strip(sub)
文字列の先頭から空白を取り除く	s.lstrip()
文字列の先頭から空白を消す	s.lstrip()
文字列の左端から余分な空白を除く	s.lstrip()
文字列の先頭の空白やタブを消す	s.lstrip()
文字列の先頭の空白を消す	s.lstrip()
文字列の先頭から不要な空白やタブを除く	s.lstrip()
文字列を左トリムする	s.lstrip()
文字列の左側から部分文字列を取り除く	s.lstrip(sub)
文字列の左端から部分文字列を除去する	s.lstrip(sub)
文字列の左側から部分文字列を除く	s.lstrip(sub)
文字列の先頭から部分文字列を除去する	s.lstrip(sub)
文字列の左側からタブを取り除く	s.lstrip('\t')
文字列の先頭からタブを除去する	s.lstrip('\t')
文字列の左側からタブを除去する	s.lstrip('\t')
文字列の左側からタブを除く	s.lstrip('\t')
文字列の左側からタブを消す	s.lstrip('\t')
文字列の左側から空白を取り除く	s.lstrip(' ')
文字列の先頭から空白を除く	s.lstrip(' ')
文字列の左端から空白を取り除く	s.lstrip(' ')
文字列の左端から空白を消す	s.lstrip(' ')
文字列の左側から空白を消す	s.lstrip(' ')
文字列の先頭から空白を取り除く	s.lstrip(' ')
文字列の右側から空白を取り除く	s.rstrip()
文字列の末尾から不要な空白を取り除く	s.rstrip()
文字列の末尾から空白を取り除く	s.rstrip()
文字列の末尾から余分な改行を除く	s.rstrip()
文字列の右側から余分な空白を除去する	s.rstrip()
文字列を右トリムする	s.rstrip()
文字列の右側から部分文字列を取り除く	s.rstrip(sub)
文字列の右端から部分文字列を除去する	s.rstrip(sub)
文字列の右側からタブを取り除く	s.rstrip('\t')
文字列の右端からタブを除く	s.rstrip('\t')
文字列の右側からタブを消す	s.rstrip('\t')
文字列の右側からタブを除く	s.rstrip('\t')
文字列の右側から改行を取り除く	s.rstrip('\n')
文字列の右側から改行を除く	s.rstrip('\n')
文字列の右端から改行を取り除く	s.rstrip('\n')
文字列の末尾から改行を消す	s.rstrip('\n')
文字列の最後から改行を取り除く	s.rstrip('\n')
文字列の右側から空白を取り除く	s.rstrip(' ')
文字列の末尾から空白を取り除く	s.rstrip(' ')
文字列の右端から空白を消す	s.rstrip(' ')
文字列の最後から空白を取り除く	s.rstrip(' ')
文字列の末尾から空白を除く	s.rstrip(' ')
文字列の右端から空白を取り除く	s.rstrip(' ')
文字列の右端から空白を除去する	s.rstrip(' ')
文字列をゼロ埋めする	s.zfill(文字列幅)
整数をゼロ埋めした文字列に変換する	str(n).zfill(文字列幅)
整数をゼロ埋めした文字列にする	str(n).zfill(文字列幅)
数値をゼロ埋めした文字列に変換する	str(n).zfill(文字列幅)
文字列をセンタリングにする	s.center(文字列幅)
文字列を中央寄せする	s.center(文字列幅)
文字列をセンタリングする	s.center(文字列幅)
文字列を左寄せにする	s.ljust(文字列幅)
文字列を右寄せにする	s.rjust(文字列幅)
文字列をキャピタライズする	s.capitalize()
文字列の先頭だけ大文字化する	s.capitalize()
文字列の左側だけ大文字化する	s.capitalize()
文字列の大文字と小文字を交換する	s.swapcase()
文字列の大文字と小文字を逆にする	s.swapcase()
大文字と小文字を交換する	s.swapcase()
文字列のケースを入れ替える	s.swapcase()
文字列の大文字小文字を交換する	s.swapcase()
文字列が文字列リストのいづれか調べる	s in aStringList
文字列が文字列リストのいづれかどうか確認する	s in aStringList
文字列が文字列リストのいづれかどうか	s in aStringList
文字列が文字列リストのいづれか	s in aStringList
文字列が文字列リストに含まれるか調べる	s in aStringList
文字列が文字列リストにあるかどうか	s in aStringList
文字列が文字列リストに存在するか	s in aStringList
文字列が文字列リストに含まれるかどうか調べる	s in aStringList
文字列が文字列リストに存在するか調べる	s in aStringList
部分文字列か調べる	sub in s
部分文字列	sub in s
文字列中に部分文字列が含まれるか調べる	sub in s
文字列中に部分文字列が存在するかどうか調べる	sub in s
部分文字列が文字列中に存在するか	sub in s
文字列中に部分文字列が含まれる	sub in s
部分文字列が文字列中にある	sub in s
文字列中に部分文字列が含まれないか調べる	sub not in s
文字列中に部分文字列が含まれない	sub not in s
部分文字列が文字列中に含まれないか調べる	sub not in s
文字列中から部分文字列を探す	s.find(sub)
部分文字列を文字列中から探す	s.find(sub)
部分文字列を文字列中から見つける	s.find(sub)
文字列の先頭から部分文字列を探す	s.find(sub)
文字列の先頭から部分文字列を見つける	s.find(sub)
文字列の最初から部分文字列を見つける	s.find(sub)
文字列の左側から部分文字列を探す	s.find(sub)
文字列の開始位置以降に部分文字列が含まれるか調べる	s.find(sub, start) != -1
文字列の開始位置より後に部分文字列が含まれる	s.find(sub, start) != -1
文字列の開始位置より後に部分文字列が存在するか調べる	s.find(sub, start) != -1
文字列の開始位置より後に部分文字列がある	s.find(sub, start) != -1
文字列の開始位置以降に部分文字列があるか調べる	s.find(sub, start) != -1
文字列の開始位置先に部分文字列があるか調べる	s.find(sub, start) != -1
文字列の開始位置以降に部分文字列が含まれないか調べる	s.find(sub, start) == -1
部分文字列が文字列の開始位置以降に存在しないか調べる	s.find(sub, start) == -1
文字列の開始位置以降に部分文字列がない	s.find(sub, start) == -1
文字列の開始位置以降に部分文字列が含まれない	s.find(sub, start) == -1
文字列の開始位置から先に部分文字列が含まれない	s.find(sub, start) == -1
文字列の開始位置より後に部分文字列がないかどうか調べる	s.find(sub, start) == -1
文字列の終了位置より前に部分文字列が含まれるか調べる	s.find(sub, 0, end) != -1
文字列の終了位置以前に部分文字列が含まれる	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が存在するか調べる	s.find(sub, 0, end) != -1
文字列の終了位置以前に部分文字列が存在するか	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が含まれるかどうか調べる	s.find(sub, 0, end) != -1
部分文字列が文字列の終了位置より前にあるかどうか	s.find(sub, 0, end) != -1
文字列の終了位置より前に部分文字列が含まれないか調べる	s.find(sub, 0, end) == -1
文字列の終了位置以前に部分文字列がない	s.find(sub, 0, end) == -1
文字列の終了位置以前に部分文字列が存在しない	s.find(sub, 0, end) == -1
文字列の終了位置より前に部分文字列が含まれないかどうか調べる	s.find(sub, 0, end) == -1
文字列の終了位置以前に部分文字列が存在しないかどうか調べる	s.find(sub, 0, end) == -1
文字列の終了位置以前に部分文字列が含まれないか調べる	s.find(sub, 0, end) == -1
文字列の開始位置と終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が存在するかどうか確認する	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が含まれる	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が含まれるかどうか調べる	s.find(sub, start, end) != -1
文字列の開始位置と終了位置の間に部分文字列が存在するか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列が含まれるか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の範囲に部分文字列がある	s.find(sub, start, end) != -1
部分文字列が文字列の開始位置からと終了位置の間にあるか	s.find(sub, start, end) != -1
部分文字列が文字列の開始位置からと終了位置の間にあるかどうか調べる	s.find(sub, start, end) != -1
文字列の開始位置からと終了位置の間に部分文字列があるかどうか調べる	s.find(sub, start, end) != -1
部分文字列が文字列の開始位置からと終了位置の間に存在するか確認する	s.find(sub, start, end) != -1
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないかどうか	s.find(sub, start, end) == -1
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれない	s.find(sub, start, end) == -1
文字列の開始位置番目と終了位置番目の間に部分文字列が含まれないかどうか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置までの間に部分文字列が含まれない	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置番目までの間に部分文字列が含まれないか調べる	s.find(sub, start, end) == -1
部分文字列が文字列の開始位置番目からと終了位置までの間に含まれないかテストする	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置番目までの間に部分文字列が含まれないか確認する	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置番目までの間に部分文字列が存在しないか調べる	s.find(sub, start, end) == -1
文字列の開始位置からと終了位置番目までの間に部分文字列がないか調べる	s.find(sub, start, end) == -1
文字列の開始位置から部分文字列を探す	s.find(sub, start)
文字列の終了位置まで部分文字列を探す	s.find(sub, 0, end)
部分文字列を範囲を指定して探す	s.find(sub, start, end)
文字列の開始位置から終了位置まで部分文字列を探す	s.find(sub, start, end)
文字列の末尾から部分文字列を探す	s.rfind(sub)
部分文字列を文字列の右端から見つける	s.rfind(sub)
文字列の右端から部分文字列を見つける	s.rfind(sub)
文字列の末尾から部分文字列を見つける	s.rfind(sub)
部分文字列を範囲を指定して探す	s.find(sub, start, end)
文字列の末尾から範囲を指定して部分文字列を探す	s.find(sub, start, end)
文字列リストを連結する	''.join(aStringList)
文字列リストを結合する	''.join(aStringList)
文字列リストを連結してひとつの文字列にする	''.join(aStringList)
文字列リストを一つにし、ひとつの文字列にする	''.join(aStringList)
文字列リストを一つにしてひとつの文字列にする	''.join(aStringList)
文字列リストを連結して一つの文字列にする	''.join(aStringList)
文字列リストを一つの文字列にする	''.join(aStringList)
文字列リストをsepを区切りとして連結する	sep.join(aStringList)
sepを区切りとして文字列リストを連結する	sep.join(aStringList)
文字列リストをsepを区切りとして一つにする	sep.join(aStringList)
文字列リストをsepを区切りにしてひとつの文字列にする	sep.join(aStringList)
sepを区切りにして文字列リストをひとつの文字列にする	sep.join(aStringList)
イテラブルを文字列に変換して連結する	''.join(map(str, iterable))
イテラブルを文字列に変換してつなげる	''.join(map(str, iterable))
列を文字列に変換して連結する	''.join(map(str, iterable))
シーケンスを文字列に変換して連結する	''.join(map(str, iterable))
文字列リストを連結してひとつの文字列にする	''.join(map(str, iterable))
文字列リストをひとつの文字列にする	''.join(map(str, iterable))
文字列リストを一つの文字列にする	''.join(map(str, iterable))
文字列リストを結合して一つの文字列にする	''.join(map(str, iterable))
文字列リストを連結し、ひとつの文字列にする	''.join(map(str, iterable))
イテラブルを文字列リストに変換して、空白で連結する	' '.join(map(str, iterable))
文字列リストにイテラブルを変換して、空白で連結する	' '.join(map(str, iterable))
文字列リストにイテラブルを変換して、空白によってつなげる	' '.join(map(str, iterable))
文字列リストにシーケンスを変換して空白で連結する	' '.join(map(str, iterable))
文字列にイテラブルを変換して、空白で連結する	' '.join(map(str, iterable))
シーケンスを文字列リストに変換して空白で連結する	' '.join(map(str, iterable))
文字列リストに列を変換して、空白を用いて連結する	' '.join(map(str, iterable))
イテラブルを文字列リストに変換して、カンマで連結する	','.join(map(str, iterable))
文字列リストにイテラブルを変換して、カンマを用いて結合する	','.join(map(str, iterable))
配列を文字列に変換して、カンマで連結する	','.join(map(str, iterable))
イテラブルを文字列に変換して、カンマで連結する	','.join(map(str, iterable))
文字列にイテラブルを変換して、カンマでつなげる	','.join(map(str, iterable))
タプルを文字列リストに変換してカンマによって連結する	','.join(map(str, iterable))
イテラブルを文字列リストに変換して、タブで連結する	'\t'.join(map(str, iterable))
文字列リストにイテラブルを変換して、タブで連結する	'\t'.join(map(str, iterable))
シーケンスを文字列リストに変換してタブで連結する	'\t'.join(map(str, iterable))
文字列にイテラブルを変換してタブによって結合する	'\t'.join(map(str, iterable))
列を文字列に変換して、タブを使って結合する	'\t'.join(map(str, iterable))
文字列リストに列を変換して、タブを用いて連結する	'\t'.join(map(str, iterable))
リストを文字列に変換して、タブで連結する	'\t'.join(map(str, iterable))
イテラブルを文字列リストに変換して、'改行で連結する	'\n'.join(map(str, iterable))
イテラブルを文字列リストに変換して'改行を用いて連結する	'\n'.join(map(str, iterable))
イテラブルを文字列リストに変換して、'改行で結合する	'\n'.join(map(str, iterable))
列を文字列リストに変換して、'改行によって連結する	'\n'.join(map(str, iterable))
文字列リストにイテラブルを変換して、'改行で連結する	'\n'.join(map(str, iterable))
イテラブルを文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
イテラブルを文字列に変換して、部分文字列によって結合する	sub.join(map(str, iterable))
シーケンスを文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
列を文字列リストに変換して、部分文字列で連結する	sub.join(map(str, iterable))
列を文字列に変換して、部分文字列を用いて連結する	sub.join(map(str, iterable))
文字列リストにイテラブルを変換して、部分文字列で連結する	sub.join(map(str, iterable))
文字列中の部分文字列の出現をカウントする	s.count(sub)
文字列中の部分文字列の登場	s.count(sub)
文字列中の部分文字列の出現回数をカウントする	s.count(sub)
文字列中の部分文字列の登場をカウントする	s.count(sub)
文字列中の部分文字列の出現回数	s.count(sub)
文字列中の部分文字列をカウントする	s.count(sub)
文字列中に部分文字列がいくつか含まれるか調べる	s.count(sub)
文字列の開始位置から終了位置までの範囲で部分文字列の出現をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列の登場	s.count(sub, start, end)
文字列の開始位置から終了位置の範囲で部分文字列の出現回数をカウントする	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列の出現を数える	s.count(sub, start, end)
文字列の開始位置から終了位置までの範囲で部分文字列をカウントする	s.count(sub, start, end)
文字列のの開始位置から終了位置までの間に部分文字列がいくつか含まれるか調べる	s.count(sub, start, end)
文字列のの開始位置から終了位置までの間に部分文字列がいくつかあるか調べる	s.count(sub, start, end)
文字列のの開始位置から終了位置までの間に部分文字列がいくつかあるか数える	s.count(sub, start, end)
部分文字列が部分文字列で始まるか調べる	s.startswith(sub)
部分文字列が部分文字列で始まる	s.startswith(sub)
部分文字列で部分文字列が始まる	s.startswith(sub)
部分文字列が部分文字列で始まるかどうか調べる	s.startswith(sub)
部分文字列が部分文字列で始まるか判定する	s.startswith(sub)
文字列の接頭辞が部分文字列か調べる	s.startswith(sub)
文字列の接頭辞は部分文字列かどうか確認する	s.startswith(sub)
文字列のプレフィックスは部分文字列	s.startswith(sub)
文字列の先頭が部分文字列	s.startswith(sub)
文字列の接頭辞が部分文字列	s.startswith(sub)
文字列の接頭辞は部分文字列	s.startswith(sub)
文字列の開始位置以降が部分文字列で始まるか調べる	s.startswith(sub, start)
部分文字列で文字列の開始位置以降が始まる	s.startswith(sub, start)
部分文字列で文字列の開始位置以降が始まるか調べる	s.startswith(sub, start)
文字列の開始位置以降が部分文字列で始まる	s.startswith(sub, start)
文字列が部分文字列で終わるか調べる	s.endswith(sub)
部分文字列で文字列が終了するかどうか調べる	s.endswith(sub)
部分文字列で文字列が終わるかどうか	s.endswith(sub)
文字列が部分文字列で終わるか	s.endswith(sub)
文字列が部分文字列で終わるかどうか調べる	s.endswith(sub)
文字列が部分文字列で終わるか確認する	s.endswith(sub)
文字列の接尾辞が部分文字列か調べる	s.endswith(sub)
文字列の接尾辞は部分文字列	s.endswith(sub)
文字列の接尾辞は部分文字列か調べる	s.endswith(sub)
文字列の末尾は部分文字列か判定する	s.endswith(sub)
文字列の末尾が部分文字列か	s.endswith(sub)
文字列の接尾辞が部分文字列かどうか	s.endswith(sub)
文字列の接頭辞から部分文字列を取り除く	s.removeprefix(sub)
安全に文字列の接頭辞から部分文字列を取り除く	s.removeprefix(sub)
部分文字列を文字列の接頭辞から取り除く	s.removeprefix(sub)
文字列の接頭辞から部分文字列を消す	s.removeprefix(sub)
文字列のプレフィックスから部分文字列を安全に除く	s.removeprefix(sub)
文字列の接尾辞から部分文字列を取り除く	s.removesuffix(sub)
文字列のサフィックスから部分文字列を取り除く	s.removesuffix(sub)
部分文字列を文字列の接尾辞から取り除く	s.removesuffix(sub)
ファイル名がCSVファイルか調べる	filename.endswith('.csv')
CSVファイルファイル名が	filename.endswith('.csv')
ファイル名がCSVファイルかどうか確認する	filename.endswith('.csv')
ファイル名がCSVファイル	filename.endswith('.csv')
ファイル名がCSVファイルかどうか調べる	filename.endswith('.csv')
ファイル名がテキストファイルか調べる	filename.endswith('.txt')
ファイル名がテキストファイルかどうか調べる	filename.endswith('.txt')
テキストファイルファイル名がかどうか調べる	filename.endswith('.txt')
ファイル名がTSVファイルか調べる	filename.endswith('.tsv')
ファイル名がTSVファイルか	filename.endswith('.tsv')
ファイル名がTSVファイルかどうか	filename.endswith('.tsv')
ファイル名がTSVファイル	filename.endswith('.tsv')
ファイル名がJSONファイルか調べる	filename.endswith('.json')
ファイル名がJSONファイルかどうか調べる	filename.endswith('.json')
文字列が全て大文字か調べる	s.isupper()
文字列が全て大文字	s.isupper()
文字列が大文字	s.isupper()
文字列が全て小文字か調べる	s.islower()
文字列が全て小文字かどうか調べる	s.islower()
文字列が小文字か	s.islower()
文字列が全て数字か調べる	s.isdigit()
文字列が数字	s.isdigit()
文字列が全て数字かどうか	s.isdigit()
文字列が全て数字	s.isdigit()
文字列が数字か調べる	s.isdigit()
文字列が数字かどうか確認する	s.isdigit()
文字列が全てアルファベットか調べる	s.isalpha()
文字列が全てアルファベット	s.isalpha()
文字列が全て英字かどうか調べる	s.isalpha()
文字列がアルファベットか調べる	s.isalpha()
文字列が全て英字	s.isalpha()
文字列が全てアルファベットかどうか調べる	s.isalpha()
文字列が全て英数字か調べる	s.isalnum()
文字列が全て英数字かどうか確認する	s.isalnum()
文字列が全て英数字かどうか	s.isalnum()
文字列が英数字か	s.isalnum()
文字列が全て英数字	s.isalnum()
文字列が英数字	s.isalnum()
文字列が全てアスキー文字か調べる	s.isascii()
文字列が全てアスキー文字か確認する	s.isascii()
文字列がアスキー文字	s.isascii()
文字列が全てアスキー文字か	s.isascii()
文字列が全て空白文字からなるか調べる	s.isspace()
文字列が全て空白文字からなる	s.isspace()
文字列が全て空白か調べる	s.isspace()
文字列が空白文字かどうか調べる	s.isspace()
文字列が全て空白文字からなるか確認する	s.isspace()
文字列が空白かどうか	s.isspace()
文字列が全て空白文字からなるかどうか	s.isspace()
文字列は全て十進数字か調べる	s.isdecimal()
文字列は全て十進数字	s.isdecimal()
文字列は全て数値か調べる	s.isnumeric()
文字列は全て数値か	s.isnumeric()
文字列が数値	s.isnumeric()
文字列が全て数値かどうか判定する	s.isnumeric()
文字列は数値か	s.isnumeric()
文字列は全て数値かどうか	s.isnumeric()
文字列内にひとつでも大文字が含まれるか調べる	any(c.isupper() for c in s)
ひとつでも大文字が文字列内に含まれるかどうか調べる	any(c.isupper() for c in s)
文字列内にひとつでも大文字が含まれる	any(c.isupper() for c in s)
文字列内に大文字が含まれるかどうか調べる	any(c.isupper() for c in s)
文字列内にひとつでも小文字が含まれるか調べる	any(c.islower() for c in s)
文字列内にひとつでも小文字が含まれる	any(c.islower() for c in s)
ひとつでも小文字が文字列内に含まれるか調べる	any(c.islower() for c in s)
文字列内にひとつでも数字が含まれるか調べる	any(c.isdigit() for c in s)
ひとつでも数字が文字列内に含まれる	any(c.isdigit() for c in s)
ひとつでも数字が文字列内に含まれるかどうか調べる	any(c.isdigit() for c in s)
文字列内に数字が含まれるかどうか調べる	any(c.isdigit() for c in s)
文字列内にひとつでも数字があるかどうかテストする	any(c.isdigit() for c in s)
数字が文字列内に含まれるかどうか確認する	any(c.isdigit() for c in s)
文字列内にひとつでもアルファベットが含まれるか調べる	any(c.isalpha() for c in s)
ひとつでもアルファベットが文字列内に含まれるか確認する	any(c.isalpha() for c in s)
文字列内にひとつでもアルファベットが含まれる	any(c.isalpha() for c in s)
文字列内にひとつでもアルファベットがあるか調べる	any(c.isalpha() for c in s)
ひとつでもアルファベットが文字列内に含まれる	any(c.isalpha() for c in s)
文字列内にひとつでも英数字が含まれるか調べる	any(c.isalnum() for c in s)
ひとつでも英数字が文字列内にあるか調べる	any(c.isalnum() for c in s)
文字列内に英数字がある	any(c.isalnum() for c in s)
英数字が文字列内にあるか	any(c.isalnum() for c in s)
英数字が文字列内に含まれるかどうか調べる	any(c.isalnum() for c in s)
文字列内にひとつでも空白が含まれるか調べる	any(c.isspace() for c in s)
文字列内にひとつでも空白が含まれる	any(c.isspace() for c in s)
文字列内に空白が含まれるかどうか調べる	any(c.isspace() for c in s)
文字列内にひとつでも空白があるか調べる	any(c.isspace() for c in s)
文字列内にひとつでも空白がある	any(c.isspace() for c in s)
文字列内にひとつでもアスキー文字が含まれるか調べる	any(c.isascii() for c in s)
文字列内にひとつでもASCII文字が含まれるかどうか	any(c.isascii() for c in s)
文字列内にひとつでもアスキー文字が含まれる	any(c.isascii() for c in s)
文字列内にひとつでもASCII文字が含まれるか調べる	any(c.isascii() for c in s)
文字列内にひとつでもアスキー文字があるかどうか	any(c.isascii() for c in s)
ひとつでもアスキー文字が文字列内に含まれるかどうか調べる	any(c.isascii() for c in s)
文字列中にひとつでも非大文字が含まれるか調べる	any(not c.isupper() for c in s)
文字列中にひとつでも非大文字が含まれる	any(not c.isupper() for c in s)
文字列中にひとつでも非大文字が含まれるか確認する	any(not c.isupper() for c in s)
文字列中にひとつでも非小文字が含まれるか調べる	any(not c.islower() for c in s)
文字列中にひとつでも非小文字がある	any(not c.islower() for c in s)
文字列中にひとつでも非小文字があるか	any(not c.islower() for c in s)
ひとつでも非小文字が文字列中にあるか調べる	any(not c.islower() for c in s)
文字列中に非小文字が含まれるか調べる	any(not c.islower() for c in s)
文字列中にひとつでも非数字が含まれるか調べる	any(not c.isdigit() for c in s)
文字列中にひとつでも非数字が含まれるかどうか	any(not c.isdigit() for c in s)
文字列中に非数字が含まれるかどうか調べる	any(not c.isdigit() for c in s)
文字列中にひとつでも非数字があるか調べる	any(not c.isdigit() for c in s)
ひとつでも非数字が文字列中に含まれるか調べる	any(not c.isdigit() for c in s)
文字列中に非数字がある	any(not c.isdigit() for c in s)
文字列中にひとつでも非アルファベットが含まれるか調べる	any(not c.isalpha() for c in s)
文字列中にひとつでも非アルファベットがある	any(not c.isalpha() for c in s)
文字列中にひとつでも非アルファベットが含まれるかどうか	any(not c.isalpha() for c in s)
文字列中にひとつでも非英字があるか調べる	any(not c.isalpha() for c in s)
文字列中にひとつでも非英字が含まれるかどうか確認する	any(not c.isalpha() for c in s)
ひとつでも非アルファベットが文字列中にあるか調べる	any(not c.isalpha() for c in s)
文字列中にひとつでも非英数字が含まれるか調べる	any(not c.isalnum() for c in s)
文字列中に非英数字が含まれる	any(not c.isalnum() for c in s)
ひとつでも非英数字が文字列中に含まれるかどうか	any(not c.isalnum() for c in s)
ひとつでも非英数字が文字列中に含まれるか	any(not c.isalnum() for c in s)
文字列中にひとつでも非英数字が含まれる	any(not c.isalnum() for c in s)
ひとつでも非英数字が文字列中にあるかどうか	any(not c.isalnum() for c in s)
文字列中にひとつでも非空白が含まれるか調べる	any(not c.isspace() for c in s)
文字列中にひとつでも非空白が含まれるか	any(not c.isspace() for c in s)
文字列中にひとつでも非空白があるか調べる	any(not c.isspace() for c in s)
文字列中に非空白が含まれるかどうか調べる	any(not c.isspace() for c in s)
文字列中にひとつでも非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
文字列中にひとつでも非アスキー文字があるか調べる	any(not c.isascii() for c in s)
文字列中に非アスキー文字が含まれるか調べる	any(not c.isascii() for c in s)
文字列は全て識別子名か調べる	s.isidentifier()
文字列は全て識別子名かどうか調べる	s.isidentifier()
文字列は全て識別子名か	s.isidentifier()
文字列は識別子名	s.isidentifier()
文字列は全て識別子名かどうか	s.isidentifier()
文字列が識別子名か	s.isidentifier()
文字列はPythonのキーワードか調べる	keyword.iskeyword(s)
文字列はPythonのキーワードかどうか調べる	keyword.iskeyword(s)
文字列はPythonのキーワードか確認する	keyword.iskeyword(s)
文字列はPythonのキーワードか	keyword.iskeyword(s)
文字列は全て印字できるか調べる	s.isprintable()
文字列が全て印字できる	s.isprintable()
文字列が印字できる	s.isprintable()
文字列は印字できるかどうか調べる	s.isprintable()
文字列は全て印字できるかどうか調べる	s.isprintable()
文字列はタイトルケースか調べる	s.istitle()
文字列はタイトルケースかどうか	s.istitle()
文字列はタイトルケースかどうか調べる	s.istitle()
文字列はタイトル大文字小文字	s.istitle()
文字列はタイトル大文字小文字か調べる	s.istitle()
文字列をUTF8でバイト列に変換する	s.encode(encoding='utf-8', errors='strict')
文字列をバイト列にする	s.encode(encoding='utf-8', errors='strict')
文字列をSJISでバイト列に変換する	s.encode(encoding='sjis', errors='ignore')
文字列を文字コードエスケープでバイト列に変換する	s.encode(encoding='unicode_escape')
ASCIIコードエスケープで文字列をバイト列に変換する	s.encode(encoding='unicode_escape')
文字列をASCIIコードエスケープでバイト列にする	s.encode(encoding='unicode_escape')
文字コードエスケープで文字列をバイト列に変換する	s.encode(encoding='unicode_escape')
文字列をエンコーディングでバイト列に変換する	s.encode(encoding=encoding)
文字列をエンコーディングによってバイト列に変換する	s.encode(encoding=encoding)
文字列をエンコーディングを使ってバイト列に変換する	s.encode(encoding=encoding)
文字列をエンコーディングでバイト列にする	s.encode(encoding=encoding)
エンコーディングを使って文字列をバイト列にする	s.encode(encoding=encoding)
エンコーディングで文字列をバイト列に変換する	s.encode(encoding=encoding)
エラーを無視して文字列をバイト列に変換する	s.encode(errors='ignore')
エラーを無視して文字列をバイト列にする	s.encode(errors='ignore')
書式をargsを引数としてフォーマットする	formatText.format(*args)
書式をargsを引数として文字列整形する	formatText.format(*args)
テンプレートを引数としてargsをフォーマットする	formatText.format(*args)
書式を引数としてargsをフォーマットする	formatText.format(*args)
書式を辞書でフォーマットする	formatText.format_map(aDict)
テンプレートを辞書でフォーマットする	formatText.format_map(aDict)
書式をマッピングでフォーマットする	formatText.format_map(aDict)
テンプレートを辞書で文字列整形する	formatText.format_map(aDict)
文字列の長さ	len(s)
文字列の大きさ	len(s)
文字列の先頭	s[0]
文字列の左側を使う	s[0]
文字列の左側	s[0]
文字列の先頭の文字	s[0]
文字列の末尾	s[-1]
文字列の最後	s[-1]
文字列の最後の文字	s[-1]
文字列の末尾の文字	s[-1]
文字列の後ろを使う	s[-1]
文字列のn番目	s[n]
文字列のn番目の文字	s[n]
二つの文字列は同じか調べる	s == s2
二つの文字列は同じかどうか調べる	s == s2
2つの文字列が等しいか調べる	s == s2
二つの文字列が同じかどうか調べる	s == s2
２つの文字列は同じか調べる	s == s2
2つの文字列は同じかどうか調べる	s == s2
2つの文字列は同じ	s == s2
二つの文字列は等しくないか調べる	s != s2
二つの文字列は等しくない	s != s2
2つの文字列は等しくないかテストする	s != s2
二つの文字列が等しくない	s != s2
二つの文字列が同じでないかどうか確認する	s != s2
二つの文字列を辞書順で比較する	s < s2
文字列が文字列より辞書順で前か調べる	s < s2
文字列が文字列より辞書順で前かどうか調べる	s < s2
文字列が文字列より辞書順で前か	s < s2
辞書順で文字列が文字列より前かどうか調べる	s < s2
辞書順で文字列は文字列より前かどうか	s < s2
文字列が文字列より辞書順で後か調べる	s > s2
文字列が文字列より辞書順で後か	s > s2
辞書順で文字列は文字列より後かどうか調べる	s > s2
文字列が文字列より辞書順で後かどうか調べる	s > s2
辞書順で文字列は文字列より後か調べる	s > s2
文字列は文字列より辞書順で後か確認する	s > s2
二つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
２つの文字列がケースを無視して同じか	s.casefold() == s2.casefold()
二つの文字列は大文字小文字を無視して同じか	s.casefold() == s2.casefold()
二つの文字列が大文字小文字を無視して同じか	s.casefold() == s2.casefold()
二つの文字列はケースを無視して同じか	s.casefold() == s2.casefold()
二つの文字列をケースを無視して比較する	s.casefold() < s2.casefold()
文字列が片仮名か調べる	('ァ' <= ch <= 'ン')
文字列が片仮名か	('ァ' <= ch <= 'ン')
文字列が片仮名	('ァ' <= ch <= 'ン')
文字列が平仮名か調べる	('ぁ' <= ch <= 'ん')
文字列は平仮名か調べる	('ぁ' <= ch <= 'ん')
文字列は平仮名か	('ぁ' <= ch <= 'ん')
文字列がひらがなか調べる	('ぁ' <= ch <= 'ん')
文字列は平仮名か確認する	('ぁ' <= ch <= 'ん')
文字列が漢字か調べる	('\u4E00' <= ch <= '\u9FD0')
文字列は漢字か	('\u4E00' <= ch <= '\u9FD0')
文字列が漢字かテストする	('\u4E00' <= ch <= '\u9FD0')
文字列が漢字かどうか調べる	('\u4E00' <= ch <= '\u9FD0')
文字列は漢字	('\u4E00' <= ch <= '\u9FD0')
文字列に漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列中に漢字が含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列に漢字が使われているかどうか確認する	re.search('[\u4E00-\u9FD0]', s)
漢字が文字列に含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
漢字が文字列中に含まれるか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列に漢字が使われているかどうか調べる	re.search('[\u4E00-\u9FD0]', s)
文字列に日本語が含まれるか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列に日本語が含まれる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列中に日本語が含まれる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列に日本語が使われているか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列内に日本語が含まれるか	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列中に日本語があるか調べる	re.search('[あ-んア-ン\u4E00-\u9FD0]', s)
文字列の片仮名を平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列の片仮名を平仮名にする	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列のカタカナを平仮名に変換する	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
文字列の平仮名を片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列のひらがなを片仮名に変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列の平仮名をカタカナに変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列の平仮名をカタカナにする	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
平仮名を片仮名にする	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
文字列の全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
全角数字を半角数字に変換する	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
代数計算を使う	import sympy
数式処理モジュールを使う	import sympy
シンボル計算を使う	import sympy
代数計算を用いる	import sympy
文字列をシンボルに変換する	sympy.Symbol(s)
文字列をシンボルにする	sympy.Symbol(s)
文字列を代数計算の変数に変換する	sympy.Symbol(s)
文字列の変数名を数式に変換する	sympy.Symbol(s)
文字列をシンボルにして、変数にする	z = sympy.Symbol(s)
文字列をシンボルにして、パラメータにする	z = sympy.Symbol(s)
文字列を変数にして変数にする	z = sympy.Symbol(s)
文字列をシンボルにして変数にする	z = sympy.Symbol(s)
文字列をシンボル化してパラメータにする	z = sympy.Symbol(s)
数式の変数にnを代入する	e.subs(z, n)
数式の変数に数式を代入する	e.subs(z, e2)
数値のパラメータに数式を代入する	e.subs(z, e2)
数式のパラメータに数式を代入する	e.subs(z, e2)
数式の変数を数式で置き換える	e.subs(z, e2)
数値の変数を数式で置き換える	e.subs(z, e2)
数式のパラメータを数式で置き換える	e.subs(z, e2)
数式を展開する	sympy.expand(e)
数式の展開を行う	sympy.expand(e)
数式を因数分解する	sympy.factor(e)
数式の因数分解を行う	sympy.factor(e)
数式を簡単にする	sympy.sympify(e)
数式を簡略にする	sympy.sympify(e)
数値を簡略にする	sympy.sympify(e)
数式の簡略化を行う	sympy.sympify(e)
数式の簡単化を行う	sympy.sympify(e)
数式を部分分数に展開する	sympy.apart(e)
数値を部分分数に展開する	sympy.apart(e)
数式の部分分数化を行う	sympy.apart(e)
数値の部分分数化を行う	sympy.apart(e)
数値の部分分数化する	sympy.apart(e)
数式を方程式として解く	sympy.solve(e)
方程式の解	sympy.solve(e)
方程式として数式の変数の解を求める	sympy.solve(e, z)
方程式として数値の変数の解を計算する	sympy.solve(e, z)
数値の変数の解を方程式として計算する	sympy.solve(e, z)
方程式として数式の変数の解を計算する	sympy.solve(e, z)
連立方程式の解を求める	sympy.solve([e, e2])
連立方程式の解を計算する	sympy.solve([e, e2])
連立方程式を解く	sympy.solve([e, e2])
変数が0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
変数が0に近づく際の数式の極限値を計算する	sympy.limit(e, z, 0)
変数が0に近づくときの数値の極限値を算出する	sympy.limit(e, z, 0)
変数が0に近づく時数式の極限値を計算する	sympy.limit(e, z, 0)
変数が0に近づくとき、数値の極限値を算出する	sympy.limit(e, z, 0)
変数が0に近づく時の数式の極限値を求める	sympy.limit(e, z, 0)
パラメータが0に近づくときの数式の極限値を求める	sympy.limit(e, z, 0)
変数が無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, oo)
変数が無限大に近づく際の数式の極限値を求める	sympy.limit(e, z, oo)
変数が無限大に近づくときの数式の極限値を計算する	sympy.limit(e, z, oo)
変数が無限大に近づくときの数値の極限値を求める	sympy.limit(e, z, oo)
変数がマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
変数がマイナス無限大に近づく時の数値の極限値を算出する	sympy.limit(e, z, -oo)
パラメータがマイナス無限大に近づくとき数式の極限値を計算する	sympy.limit(e, z, -oo)
変数がマイナス無限大に近づく時の数式の極限値を求める	sympy.limit(e, z, -oo)
パラメータがマイナス無限大に近づくときの数式の極限値を求める	sympy.limit(e, z, -oo)
数式を微分する	sympy.diff(e)
数式の微分を求める	sympy.diff(e)
数式の微分を計算する	sympy.diff(e)
数値の微分を算出する	sympy.diff(e)
数値の微分を求める	sympy.diff(e)
変数について数式の微分を行う	sympy.diff(e, z)
変数について数値の微分を算出する	sympy.diff(e, z)
変数について数式の微分を求める	sympy.diff(e, z)
変数について数式の微分を計算する	sympy.diff(e, z)
数式を変数について微分する	sympy.diff(e, z)
変数について数式を微分する	sympy.diff(e, z)
パラメータについて数式を微分する	sympy.diff(e, z)
数式をパラメータについて微分する	sympy.diff(e, z)
数式を変数についてn階微分する	sympy.diff(e, z, n)
数値をパラメータについてn階微分する	sympy.diff(e, z, n)
数値を変数についてn階微分する	sympy.diff(e, z, n)
数式の変数についてのn階微分を求める	sympy.diff(e, z, n)
数式のn階微分を求める	sympy.diff(e, z, n)
数式のパラメータについてのn階微分を行う	sympy.diff(e, z, n)
数式を積分する	sympy.integrate(e)
数式の積分を求める	sympy.integrate(e)
数式の積分を算出する	sympy.integrate(e)
数値のインテグラルを行う	sympy.integrate(e)
数式の積分を行う	sympy.integrate(e)
数値のインテグラルを求める	sympy.integrate(e)
変数について数式を積分する	sympy.integrate(e, z)
パラメータについて数式を積分する	sympy.integrate(e, z)
変数について数式の積分を求める	sympy.integrate(e, z)
パラメータについて数式の積分を求める	sympy.integrate(e, z)
変数について数値の積分を求める	sympy.integrate(e, z)
変数について数式の積分を行う	sympy.integrate(e, z)
変数について数値の積分を計算する	sympy.integrate(e, z)
数式の数値を求める	float(e)
数式の数値	float(e)
数値の数値を求める	float(e)
数式を数値計算する	float(e)
数式を数値に変換する	float(e)
数値を数値に変換する	float(e)
数式を数値にする	float(e)
数式の平方根を求める	sympy.sqrt(e)
数式の平方根を計算する	sympy.sqrt(e)
バイトオーダを知る	sys.byteorder
プラットホームのバイトオーダ	sys.byteorder
エンディアンを調べる	sys.byteorder
プラットホームのバイトオーダを使う	sys.byteorder
バイトオーダを調べる	sys.byteorder
エンコーディング	sys.getdefaultencoding()
エンコーディングを使う	sys.getdefaultencoding()
デフォルトのエンコーディング	sys.getdefaultencoding()
オブジェクトの参照カウント	sys.getrefcount(obj)
オブジェクトの参照カウントを見る	sys.getrefcount(obj)
オブジェクトのバイトサイズ	sys.getsizeof(obj)
オブジェクトのバイトサイズを確認する	sys.getsizeof(obj)
オブジェクトのバイトサイズを調べる	sys.getsizeof(obj)
オブジェクトのバイト長	sys.getsizeof(obj)
現在の再帰の最大回数	sys.getrecursionlimit()
何回まで再帰ができるかを	sys.getrecursionlimit()
何回まで再帰ができるかを知る	sys.getrecursionlimit()
何回まで再帰ができるか	sys.getrecursionlimit()
再帰が何回までできるかを	sys.getrecursionlimit()
再帰エラーを未然に防ぐ	sys.setrecursionlimit(1000000)
再帰の上限を上げる	sys.setrecursionlimit(1000000)
再帰の最大回数を増やす	sys.setrecursionlimit(1000000)
文字列を隔離する	sys.intern(s)
プラットフォームの符号付き整数の最大値	sys.maxsize
プラットフォームの符号付き整数の最大値を調べる	sys.maxsize
プラットフォームの符号付き整数の最大値を知る	sys.maxsize
プラットフォームの整数の最大値を知る	sys.maxsize
プラットフォームのコードポイントの最大値	sys.maxunicode
プラットフォームの文字コードの最大値	sys.maxunicode
コードポイントの最大値	sys.maxunicode
文字コードの最大値	sys.maxunicode
プラットフォームのコードポイントの最大値を調べる	sys.maxunicode
プラットホームの名前	sys.platform
実行環境の名前	sys.platform
環境の名前	sys.platform
プラットホーム名	sys.platform
プラットホームがMacOSか調べる	sys.platform.startswith('darwin')
プラットホームがMacOS	sys.platform.startswith('darwin')
OSがマックか判定する	sys.platform.startswith('darwin')
OSがMacOSか	sys.platform.startswith('darwin')
環境がMacOSか確認する	sys.platform.startswith('darwin')
プラットホームがLinuxか調べる	sys.platform.startswith('linux')
プラットホームがリナックス	sys.platform.startswith('linux')
プラットホームがLinuxか	sys.platform.startswith('linux')
プラットホームがLinux	sys.platform.startswith('linux')
プラットホームがリナックスか	sys.platform.startswith('linux')
環境はLinuxか調べる	sys.platform.startswith('linux')
プラットホームがWindowsか調べる	sys.platform.startswith('win32')
プラットホームはWindowsか	sys.platform.startswith('win32')
OSがウィンドウズか調べる	sys.platform.startswith('win32')
プラットホームがWindowsかどうか調べる	sys.platform.startswith('win32')
プラットホームがウィンドウズか調べる	sys.platform.startswith('win32')
プラットホームがWindowsかテストする	sys.platform.startswith('win32')
コマンドライン引数	sys.argv
スクリプトの名前	sys.argv[0]
スクリプト名	sys.argv[0]
プログラムのファイルの名前	sys.argv[0]
スクリプトのファイルの名前	sys.argv[0]
スクリプトのファイルの名前を調べる	sys.argv[0]
最初のコマンド引数	sys.argv[1]
第一コマンド引数	sys.argv[1]
コマンドの第一引数を知る	sys.argv[1]
コマンドの第一引数を調べる	sys.argv[1]
第一引数で指定されたファイルの名前	sys.argv[1]
第一引数で指定したファイルの名前	sys.argv[1]
第一引数のファイル名	sys.argv[1]
第一引数のファイルの名前	sys.argv[1]
第二コマンド引数	sys.argv[1]
第2コマンド引数を調べる	sys.argv[1]
第２コマンド引数を調べる	sys.argv[1]
第二コマンド引数を調べる	sys.argv[1]
第二コマンド引数を知る	sys.argv[1]
コマンドの第二引数を知る	sys.argv[1]
コマンドの第2引数を知る	sys.argv[1]
コマンドの第二引数を確める	sys.argv[1]
第二引数で指定されたファイルの名前	sys.argv[1]
第二引数のファイルの名前	sys.argv[1]
第2引数で指定されたファイルの名前	sys.argv[1]
第二引数で指定したファイル名	sys.argv[1]
コマンド引数の一覧	sys.argv[1:]
コマンド引数の一覧を得る	sys.argv[1:]
コマンド引数を列挙する	sys.argv[1:]
コマンドラインフラグの状態	sys.flags
コマンドラインフラグの状態を知る	sys.flags
コマンドフラグの状態を知る	sys.flags
モジュールを検索するパス	sys.path
Pythonパスの一覧	sys.path
Pythonパスの一覧を知る	sys.path
モジュールを検索するパスにディレクトリを追加する	sys.path.append(dir)
をモジュールを検索するパスに追加する	sys.path.append(dir)
Pythonパスにディレクトリを追加する	sys.path.append(dir)
ディレクトリをPythonパスに追加する	sys.path.append(dir)
Pythonパスにを追加する	sys.path.append(dir)
ディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.path.dirname(__file__), dir))
ロードされたモジュールの一覧	sys.modules
ロードされたモジュールの一覧を知る	sys.modules
既にロードされたモジュールを列挙する	sys.modules
既にロードされたモジュールの一覧	sys.modules
ロードされたモジュールの一覧を調べる	sys.modules
現在のモジュール	sys.modules[__name__]
自分自身をモジュールとして	sys.modules[__name__]
現在処理中の例外を情報	sys.exc_info()
処理中の例外を情報	sys.exc_info()
現在処理中の例外を情報を知る	sys.exc_info()
実行中の例外を情報	sys.exc_info()
実行時の標準出力の出力先がターミナルか調べる	sys.stdout.isatty()
標準出力の出力先がターミナルか調べる	sys.stdout.isatty()
実行時の標準出力の出力先がターミナルか	sys.stdout.isatty()
標準出力の出力先がターミナルか	sys.stdout.isatty()
実行時の標準出力の出力先がターミナルか調べる	os.isatty(sys.stdin.fileno())
実行時の標準出力の出力先がターミナルかどうか調べる	os.isatty(sys.stdin.fileno())
実行時に標準出力がパイプか調べる	not sys.stdout.isatty()
実行時に標準出力がパイプか	not sys.stdout.isatty()
実行時に標準出力がパイプ	not sys.stdout.isatty()
標準出力がパイプか調べる	not sys.stdout.isatty()
Pythonインタプリタの実行ファイルの絶対パス	sys.executable
標準入力を得る	sys.stdin
標準入力を	sys.stdin
標準入力を使う	sys.stdin
標準入力を用いる	sys.stdin
標準入力	sys.stdin
オプションで、出力先を標準出力に設定する	file = sys.stdout
オプションで、出力先を標準出力に指定する	file = sys.stdout
オプションで、標準出力に出力する	file = sys.stdout
オプションで、標準出力を使う	file = sys.stdout
オプションで、標準出力を用いる	file = sys.stdout
オプションで、標準出力を出力にする	file = sys.stdout
オプションで標準出力を出力先にする	file = sys.stdout
オプションで標準出力を出力にする	file = sys.stdout
オプションで、出力先を標準エラーに設定する	file = sys.stderr
オプションで、出力先を標準エラーに変更する	file = sys.stderr
オプションで、標準エラーに出力する	file = sys.stderr
オプションで、標準エラーを使う	file = sys.stderr
オプションで標準エラーを使う	file = sys.stderr
オプションで標準エラーを使用する	file = sys.stderr
オプションで、標準エラーを出力にする	file = sys.stderr
オプションで、標準エラーを出力先にする	file = sys.stderr
オプションで標準エラーを出力にする	file = sys.stderr
オプションで、出力先をファイルに設定する	file = sys.open(filename, 'w')
オプションで、出力先をファイルに指定する	file = sys.open(filename, 'w')
オプションで、ファイルに出力する	file = sys.open(filename, 'w')
オプションで、ファイルを使う	file = sys.open(filename, 'w')
オプションでファイルを使う	file = sys.open(filename, 'w')
オプションで、ファイルを出力にする	file = sys.open(filename, 'w')
オプションでファイルを出力にする	file = sys.open(filename, 'w')
標準出力を得る	sys.stdout
標準出力	sys.stdout
標準出力を使う	sys.stdout
標準出力を用いる	sys.stdout
標準エラーを得る	sys.stderr
標準エラー	sys.stderr
標準エラーを使う	sys.stderr
標準エラー	sys.stderr
エラーを出力する	sys.stderr
標準入力から1文字だけ読む	sys.stdin.read(1)
標準入力から1文字分読む	sys.stdin.read(1)
1文字だけ標準入力から読む	sys.stdin.read(1)
標準入力から1文字読む	sys.stdin.read(1)
標準入力から1行だけ読む	sys.stdin.readline()
標準入力から1行だけ読み込む	sys.stdin.readline()
1行分標準入力から読む	sys.stdin.readline()
標準入力から1行だけ改行なしで読む	sys.stdin.readline().rstrip()
1行だけ標準入力から改行なしに読む	sys.stdin.readline().rstrip()
標準入力から改行なしで1行だけ読む	sys.stdin.readline().rstrip()
1行改行なしに標準入力から読む	sys.stdin.readline().rstrip()
標準入力から1行改行なしで読む	sys.stdin.readline().rstrip()
改行なしで標準入力から1行だけ読む	sys.stdin.readline().rstrip()
標準入力から1行分改行なしで読む	sys.stdin.readline().rstrip()
標準入力から1行だけ読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
標準入力から1行読み込んで、改行を取り除く	sys.stdin.readline().rstrip()
標準入力から1行だけ読み込んで改行を取り除く	sys.stdin.readline().rstrip()
1行だけ標準入力から読み込んで改行を取り除く	sys.stdin.readline().rstrip()
標準出力のバッファをフラッシュする	sys.stdout.flush()
標準出力を即時表示する	sys.stdout.flush()
プログラムの実行を強制的に終了する	sys.exit()
プログラムの実行をここで終了する	sys.exit()
実行を強制的に終える	sys.exit()
プログラムの実行を強制的に止める	sys.exit()
プログラムの実行を強制的に終える	sys.exit()
プログラムの実行を正しく終了する	sys.exit(0)
実行を適切に止める	sys.exit(0)
プログラムの実行を正常に終了する	sys.exit(0)
プログラムを正しく終了する	sys.exit(0)
プログラムの実行を異常終了する	sys.exit(1)
プログラムを異常止める	sys.exit(1)
プログラムを異常終了する	sys.exit(1)
実行を異常終了する	sys.exit(1)
